{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Listing/StarRatingBar.jsx","webpack:///./source/src/app/components/Apis/Listing/Background.jsx","webpack:///./source/src/app/components/Apis/Listing/ImageGenerator.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx","webpack:///./source/src/app/components/Apis/Details/StarRatingSummary.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiThumb.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListingTags.jsx","webpack:///./source/src/app/components/Apis/Listing/NoApi.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Apis/Listing/TagCloudListing.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/SubscribeToApi.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiBreadcrumbs.jsx","webpack:///./source/src/app/components/Shared/withSettingsContext.jsx","webpack:///./source/src/app/components/Apis/Listing/DocThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTableView.jsx","webpack:///./source/src/app/components/Apis/Listing/APICategoryThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/CategoryListingCategories.jsx","webpack:///./source/src/app/components/Apis/Listing/ApiTagCloud.jsx","webpack:///./source/src/app/components/Apis/Listing/RecommendedApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/Recommendations.jsx","webpack:///./source/src/app/components/Apis/Listing/CommonListing.jsx","webpack:///./source/src/app/components/Apis/Details/Social/EmbadCode.jsx","webpack:///./source/src/app/components/Apis/Details/Social/Social.jsx","webpack:///./source/src/app/components/Apis/Details/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Labels.jsx","webpack:///./source/src/app/components/Apis/Details/InfoBar.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/ButtonPanel.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CreateAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/SubscribeToAppStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateKeysStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/GenerateAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/CopyAccessTokenStep.jsx","webpack:///./source/src/app/components/Apis/Details/Credentials/Wizard/Wizard.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx","webpack:///./source/src/app/components/Apis/Details/ApiContext.jsx","webpack:///./source/src/app/components/Shared/InlineMessage.jsx"],"names":["StarRatingBar","React","Component","constructor","props","super","this","state","avgRating","userRating","count","total","getApiRating","bind","removeUserRating","doRate","componentDidUpdate","prevProps","ratingUpdate","componentDidMount","apiId","setRatingUpdate","user","AuthManager","getUser","api","Api","getRatingFromUser","then","response","setState","body","pagination","rateIndex","ratingInfo","rating","addRating","catch","error","Alert","removeRatingOfUser","render","classes","isEditable","showSummary","apiRating","apiRatingNumber","parseFloat","Fragment","reviewCount","returnCount","className","map","i","key","starRate","noStarRate","onClick","removeRating","name","value","precision","readOnly","iconEmpty","iconFilled","defaultProps","propTypes","PropTypes","shape","isRequired","theme","string","bool","oneOfType","number","func","withStyles","fontSize","color","custom","infoBar","starColor","palette","grey","A200","getContrastText","thumbnail","contentBackgroundColor","background","display","justifyContent","alignItems","cursor","withTheme","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","colorPair","width","height","thumbnailBoxChild","rects","j","sub","toString","push","fill","fillOpacity","x","y","primeColor","prime","svgImage","objectFit","ImageGenerator","PureComponent","fixedIcon","category","backgroundIndex","randomBackgroundIndex","IconElement","str","colorPairs","backgrounds","type","document","icon","MaterialIcons","categories","icons","length","randomIconIndex","charCodeAt","id","iconWrapper","style","Icon","position","right","ViewToken","tokenCopied","that","elementName","setTimeout","getTokeScopesString","tokenScopes","join","token","consumerSecret","root","secretWrapper","secret","variant","component","isOauth","defaultMessage","epWrapper","for","prodLabel","defaultValue","accessToken","multiline","fullWidth","rows","InputProps","disableUnderline","bootstrapRoot","input","bootstrapInput","InputLabelProps","shrink","bootstrapFormLabel","title","placement","text","onCopy","aria-label","validityTime","array","padding","marginTop","spacing","flex","marginRight","borderRadius","backgroundColor","apiDetailPages","tokenTextBoxBackground","border","transition","transitions","create","fontFamily","borderColor","boxShadow","marginBottom","lineHeight","whiteSpace","contentWrapper","maxWidth","contentAreaWidth","leftMenu","paper","ViewSecret","secretCopied","common","white","ratingSummary","gutterBottom","align","windowURL","window","URL","webkitURL","ApiThumb","selectedIcon","imageObj","isHover","imageLoaded","toggleMouseOver","getAPIThumbnail","data","headers","iconJson","JSON","parse","size","url","createObjectURL","finally","componentWillUnmount","revokeObjectURL","getPathPrefix","event","path","isMonetizationEnabled","context","detailsLink","customWidth","customHeight","showInfo","social","showRating","version","provider","businessInformation","businessOwner","trim","lifeCycleStatus","status","imageWidth","imageHeight","defaultImage","defaultApiImage","ImageView","src","alt","media","iconColor","class","onMouseOver","onFocus","onMouseOut","onBlur","raised","classNames","card","textblock","monetizationLabel","to","aria-hidden","suppressLinkStyles","app","apiDetails","textWrapper","thumbHeader","handleRedirectToAPIOverview","row","thumbBy","thumbInfo","thumbLeft","thumbRight","contextBox","thumbLeftAction","ratingWrapper","chipWrapper","transportType","label","undefined","apiType","contextType","ApiContext","margin","contentPictureOverlap","top","textDecoration","disabled","thumbContent","alignSelf","flexDirection","overflow","textOverflow","parseInt","textAlign","thumbWrapper","paddingTop","deleteIcon","secondary","imageWrapper","imageOverlap","bottom","MenuProps","PaperProps","maxHeight","tokens","handleChange","field","accessTokenRequest","updateAccessTokenRequest","newRequest","target","currentTarget","scopesSelected","keyType","subscriptionScopes","FormControlOdd","htmlFor","quotaHelp","multiple","onChange","e","renderValue","selected","chips","chip","scope","contextTypes","intl","FormControl","flexWrap","ApiTagThumb","tag","mainPage","tagLink","tagWise","image","split","Typography","ListItem","button","ListItemIcon","ListItemText","primary","tagCloud","useStyles","makeStyles","mainTitle","mainTitleWrapper","flexGrow","listContentWrapper","linkTextWrapper","main","tagWiseThumbWrapper","filterTitle","fontWeight","paddingLeft","titleBackground","mainPageList","mainPageAllApis","TagCloudListingTags","useTheme","active","showAllApis","useHistory","allTags","apisTagCloudGroup","filter","item","List","Object","keys","Divider","messageWrapper","NoApi","container","xs","noApiImage","LeftMenuItem","setSelected","useState","history","route","submenu","open","routeToCheck","strokeColor","iconSize","ditectCurrentMenu","location","pathname","test1","RegExp","test2","match","useEffect","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","leftLInk","leftLink_IconLeft","cloneElement","leftLink_Icon","noIcon","iconText","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","element","withRouter","textTransform","LeftMenu","typography","left","paddingBottom","paddingRight","caption","appBar","borderBottom","mainIconWrapper","content","iconDefault","TagCloudListing","setAllTags","API","getAllTags","list","console","log","strokeColorMain","subscribeToApi","appSelected","setAppSelected","policySelected","setPolicySelected","applicationsList","setApplicationsList","throttlingPolicyList","applicationsAvailable","subscriptionRequest","updateSubscriptionRequest","renderSmall","tierName","applicationId","throttlingPolicy","subscribeRoot","subscribeRootSmall","md","smallDisplay","options","getOptionLabel","option","renderInput","params","smallDisplayFix","displayEmpty","selectEmpty","policy","appDropDown","tierPlan","selectMenuRoot","monetizationAttributes","pricePerRequest","currencyType","fixedPrice","billingCycle","index","arrayOf","titleBar","borderBottomWidth","borderBottomStyle","buttonLeft","buttonRight","marginLeft","buttonsWrapper","legend","inputText","buttonRightLink","link","linkNotActive","selectedTagText","textIndent","apiGroup","ApiBreadcrumbs","selectedTag","Paper","elevation","Breadcrumbs","Link","CustomIcon","withSettings","WrappedComponent","DocThumb","loading","overview_link","isRedirect","openMoreMenu","doc","sourceType","apiName","apiVersion","apiUUID","details_link","minHeight","ApiTableView","gridView","themeAdditions","muiTheme","overrides","MUIDataTable","tableRoot","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","MUIDataTableBodyCell","MUIDataTablePagination","default","MuiMenuItem","MUIDataTableToolbar","systemTheme","merge","DefaultConfigurations","Configurations","cloneDeep","dataTableTheme","createMuiTheme","xhrRequest","setTenantDomain","code","formatMessage","query","page","rowsPerPage","searchQuery","URLSearchParams","get","composeQuery","queryString","limit","offset","search","getAllAPIs","pageType","getData","columns","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","sort","apiNameLink","rowImageOverride","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","customRowRender","dataIndex","print","download","viewColumns","customToolbar","Loading","getMuiTheme","injectIntl","listViewIconSize","APICategoryThumb","categoryLink","CategoryListingCategories","allCategories","clickablePointer","ApiTagCloud","colorOptions","apisTagWithoutGroups","minSize","maxSize","tags","shuffle","tagSearchURL","handleOnClick","listType","RecommendedApiThumb","Card","CardMedia","CardContent","Chip","unit","Recommendations","assign","getApiRecommendations","rowsPerPageOptions","CommonListing","prevState","showLeftMenu","enabled","settings","monetizationEnabled","recommendationEnabled","isRecommendationEnabled","defaultApiView","showToggle","restApiClient","apiCategories","tagCloudActive","splits","splitTagArray","tagPaneVisible","categoryPaneVisible","sliderButton","toggleLeftMenu","LeftMenuForSlider","rotatedText","contentWithoutTags","contentWithTagsHidden","contentWithTags","IconButton","setListType","iconSelected","Provider","Settings","rightIcon","ListingWrapper","listGridSelectedColor","sliderWidth","overflowY","sliderBackground","transform","transformOrigin","recommendationsBar","getModalStyle","shadows","codeIcon","iconStyle","modalStyle","setOpen","codeCopied","setCodeCopied","searchParams","set","embadCode","Modal","onClose","aria-labelledby","aria-describedby","Tooltip","socialLink","oneFlex","socialLinkWrapper","divider","borderRight","useContext","apiUrl","encodeURI","github_repo","github","slack_url","slack","additionalProperties","showSharing","showFacebook","showReddit","showTwitter","showEmbad","showEmail","href","rel","Environments","urlCopied","apiClient","downloadWSDL","environmentName","getWsdlClient","downloadWSDLForEnvironment","done","Utils","downloadFile","process","downloadSwagger","environment","getSwaggerByAPIIdAndEnvironment","Grid","envRoot","endpointURLs","endpoint","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","iconAligner","environmentType","iconEven","iconTextWrapper","heading","ExpansionPanelDetails","URLs","http","https","ws","wss","TextField","defaultVersionURLs","Button","buttonIcon","ingressURLs","envType","clusterDetails","cluster","clusterName","clusterDisplayName","ingressURL","object","light","iconOdd","Labels","getSwaggerByAPIIdAndLabel","labels","accessUrls","InfoBar","showOverview","todo","applications","policies","dropDownApplications","dropDownPolicies","notFound","tabValue","comment","commentList","checked","getSchema","getProvider","getProviderMail","mail","businessOwnerEmail","getTechnical","owner","technicalOwner","getTechnicalMail","technicalOwnerEmail","getKeyManagers","keyManagers","newAPI","getGraphQLSchemaByAPIId","windowUrl","binary","Blob","anchor","createElement","click","ratings","prodUrlCopied","sandboxUrlCopied","epUrl","showThumbnail","apisTagsWithoutGroups","resourceNotFountMessage","ResourceNotFound","message","infoBarMain","linkTitle","VerticalDivider","advertiseInfo","advertised","StarRatingSummary","originalStoreUrl","viewInPubStoreLauncher","linkText","Collapse","in","infoContent","description","Table","table","TableBody","TableRow","TableCell","leftCol","apiOwner","contentToTop","infoContentBottom","expandWrapper","toggleOverview","buttonView","buttonOverviewText","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalRight","leftLInkMain","leftLInkMainText","detailsContent","contentLoader","contentLoaderRightMenu","mainBack","infoBarHeight","minWidth","backIcon","backText","zIndex","iconEvenColor","iconOddColor","verticlaAlign","tagChipBackground","styles","mt","mr","pl","ButtonPanel","currentStep","handleCurrentStep","handleReset","nextActive","updateSubscriptionData","Box","stepsLength","appCreateFormWrapper","warningIcon","APPLICATION_STATES","setThrottlingPolicyList","applicationRequest","setApplicationRequest","tokenType","groups","attributes","isNameValid","setIsNameValid","allAppAttributes","setAllAppAttributes","setNotFound","hasValidKM","setHasValidKM","setCreatedApp","incrementStep","setStepStatus","stepStatuses","apiObject","promiseTiers","getAllTiers","promisedAttributes","getAllApplicationAttributes","promisedKeyManagers","Promise","all","tierResponse","allAttributes","throttlingPolicyListLocal","allAppAttr","hidden","responseKeyManagerList","px","ApplicationCreateForm","updateApplicationRequest","validateName","resolve","reject","Error","handleAttributesChange","newApplicationRequest","isRequiredAttribute","attribute","required","getAttributeValue","handleDeleteChip","appGroups","values","v","handleAddChip","slice","createApplication","appCreated","PROCEED","BLOCKED","mb","ml","InlineMessage","SUBSCRIPTION_STATES","newApp","setNewApp","tiers","createdApp","newSubscriptionRequest","tierData","SubscribeToApi","subscribe","subscriptionId","info","keyConfigWrapper","radioWrapper","subTitle","tabPanel","hr","muiFormGroupRoot","node","any","generateKeysStep","useIntl","keyStates","selectedType","setSelectedType","setNextActive","isUserOwner","setIsUserOwner","keyManager","setKeyManager","selectedTab","setSelectedTab","keyRequest","setKeyRequest","supportedGrantTypes","callbackUrl","setCreatedKeyType","setCreatedSelectedTab","selectedKeyManager","responseKeyManagerList_default","newKeyRequest","availableGrantTypes","includes","lg","FormHelperText","displayName","tokenEndpoint","revokeEndpoint","userInfoEndpoint","gt","grantTypes","m","Application","application","generateKeys","keyState","tokenWrapper","setKeyType","setSubscriptionScopes","setAccessTokenRequest","timeout","setCreatedToken","createdKeyType","createdSelectedTab","getKeys","subscriptionScopesList","messages","defineMessages","dataInfo","Tokens","generateToken","stepComponents","CreateAppStep","SubscribeToAppStep","GenerateKeysStep","GenerateAccessTokenStep","createdToken","handleRedirectTest","my","mx","Wizard","stepStatus","steps","redirect","CurrentStepComponent","titleSub","py","Stepper","activeStep","Step","StepLabel","boxWrapper","handleNext","pt","toolbar","subscribeTitle","plainContent","instructions","wizardContent","ApiConsole","lazy","GraphQLConsole","Overview","Documents","Credentials","Comments","Sdk","LoadableSwitch","apiUuid","api_uuid","redirectURL","tryoutRoute","fallback","Progress","exact","from","Details","callback","existingSubscriptions","promisedApplications","restApi","getAPIById","user1","User","isSideBarOpen","getSubscriptions","subscriptionLimit","subscribeApplicationLimit","getAllApplications","subscriptions","obj","subscribedApplications","reduce","acc","cur","applicationInfo","subscribedAppIds","filteredApp","overviewHiden","xo","setDetailsAPI","handleDrawerClose","handleDrawerOpen","setUser","rootIconSize","rootIconTextVisible","rootIconVisible","showCredentials","showComments","showTryout","showDocuments","showSdks","prefix","sufix","globalStyle","pathPrefix","isWidget","Helmet","leftMenuVerticalLeftMinView","contentExpandView","innerRef","shiftToLeft","shiftToRight","shiftToLeftMinView","shiftToRightMinView","leftMenuPaddingLeft","backgroundImage","overflowX","rootBackground","shiftLeft","createContext","handleMenuSelect","expanded","messgeType","iconItem","children"],"mappings":"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","file":"Apis.85324101ced242017c16.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Cancel from '@material-ui/icons/Cancel';\nimport { StarRate } from '@material-ui/icons';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport Rating from '@material-ui/lab/Rating';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    starRate: {\n        fontSize: 30,\n        color: theme.custom.infoBar.starColor,\n    },\n    noStarRate: {\n        fontSize: 30,\n        color: theme.palette.grey.A200,\n    },\n    iconFilled: {\n        color: theme.custom.infoBar.starColor,\n    },\n    iconEmpty: {\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n    },\n    removeRating: {\n        fontSize: 20,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    userRating: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n});\n\n/**\n *\n *\n * @class StarRatingBar\n * @extends {React.Component}\n */\nclass StarRatingBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            avgRating: 0,\n            userRating: 0,\n            count: 0,\n            total: 0,\n        };\n        this.getApiRating = this.getApiRating.bind(this);\n        this.removeUserRating = this.removeUserRating.bind(this);\n        this.doRate = this.doRate.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.ratingUpdate !== prevProps.ratingUpdate) {\n            this.getApiRating();\n        }\n    }\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    componentDidMount() {\n        this.getApiRating();\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    getApiRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const user = AuthManager.getUser();\n        const api = new Api();\n        // get api rating\n        if (user != null) {\n            const promisedRating = api.getRatingFromUser(apiId, null);\n            promisedRating.then((response) => {\n                this.setState({\n                    avgRating: response.body.avgRating,\n                    userRating: response.body.userRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total,\n                });\n                if(setRatingUpdate) setRatingUpdate({\n                    avgRating: response.body.avgRating,\n                    count: response.body.count,\n                    total: response.body.pagination.total \n                });\n            });\n        }\n    }\n\n    /**\n     *\n     *\n     * @param {*} rateIndex\n     * @memberof StarRatingBar\n     */\n    doRate(rateIndex) {\n        const { apiId } = this.props;\n        const api = new Api();\n        const ratingInfo = { rating: rateIndex };\n        const promise = api.addRating(apiId, ratingInfo);\n        promise\n            .then(() => {\n                this.getApiRating();\n            })\n            .catch((error) => {\n                Alert.error('Error occurred while adding ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @memberof StarRatingBar\n     */\n    removeUserRating() {\n        const { apiId, setRatingUpdate } = this.props;\n        const api = new Api();\n        // remove user rating\n        api.removeRatingOfUser(apiId, null)\n            .then(() => {\n                this.getApiRating();\n                setRatingUpdate();\n            })\n            .catch((error) => {\n                Alert.error('Error occurred while removing ratings');\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof StarRatingBar\n     */\n    render() {\n        const {\n            avgRating, userRating, count, total,\n        } = this.state;\n        const {\n            classes, isEditable, showSummary, apiRating,\n        } = this.props;\n        const apiRatingNumber = parseFloat(apiRating);\n        return (\n            <React.Fragment>\n                {showSummary ? (\n                    <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n                ) : (\n                    <React.Fragment>\n                        {isEditable ? (\n                            <React.Fragment>\n                                <div className={classes.userRating}>\n                                    {[1, 2, 3, 4, 5].map(i => (\n                                            <StarRate\n                                                key={i}\n                                                className={userRating >= i ? classes.starRate : classes.noStarRate}\n                                                onClick={() => this.doRate(i)}\n                                            />\n                                    ))}\n                                        <Cancel\n                                            className={classes.removeRating}\n                                            onClick={() => this.removeUserRating()}\n                                        />\n                                </div>\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <Rating \n                                    name='half-rating' \n                                    value={apiRatingNumber} \n                                    precision={0.1} \n                                    readOnly \n                                    classes={{iconEmpty:classes.iconEmpty,iconFilled: classes.iconFilled}}\n                                />\n                            </React.Fragment>\n                        )}\n                    </React.Fragment>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nStarRatingBar.defaultProps = {\n    apiRating: 0,\n    ratingUpdate: 0,\n    setRatingUpdate: () => {},\n};\n\nStarRatingBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    isEditable: PropTypes.bool.isRequired,\n    showSummary: PropTypes.bool.isRequired,\n    apiRating: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.number\n    ]),\n    ratingUpdate: PropTypes.number,\n    setRatingUpdate: PropTypes.func,\n};\n\nexport default withStyles(styles, { withTheme: true })(StarRatingBar);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage}>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({ svgImage: PropTypes.string }).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from './Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        display: 'flex',\n        justifyContent: 'center',\n        '& span': {\n            position: 'absolute',\n            right: 'auto',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[0].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[0].icons[randomIconIndex].id;\n        }\n\n        // Obtain or generate background color pair\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (backgroundIndex && colorPairs.length > backgroundIndex) {\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height + 'px', color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    secretWrapper: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    },\n});\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            classes, token, consumerSecret,\n        } = this.props;\n        const { tokenCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{ consumerSecret }} />\n                    </div>\n                )}\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'Please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <label for='access-token' className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </label>\n                    <TextField\n                        defaultValue={token.accessToken}\n                        id='access-token'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={tokenCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={token.accessToken} onCopy={this.onCopy('tokenCopied')}>\n                            <IconButton aria-label='Copy to clipboard'>\n                                <FileCopy color='secondary'>file_copy</FileCopy>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of '\n                    />\n                    {token.validityTime}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage=' seconds'\n                    />\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage=' and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n.\n                </FormHelperText>\n            </div>\n        );\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default withStyles(styles)(ViewToken);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginBottom: 20,\n    },\n});\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const { classes, secret } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={secretCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={secret.consumerSecret} onCopy={this.onCopy('secretCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(ViewSecret);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { StarRate } from '@material-ui/icons';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(theme.custom.infoBar.background);\n    return {\n        starRate: {\n            color: starColor,\n            '&.material-icons': {\n                fontSize: 40,\n            },\n        },\n        userRating: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n    };\n};\n\nfunction StarRatingSummary(props) {\n    const {\n        classes, theme, avgRating, reviewCount, returnCount,\n    } = props;\n    return (\n        <React.Fragment>\n            {returnCount > 0 ? (\n                <React.Fragment>\n                    <Icon className={classes.starRate}>star_border</Icon>\n                    <div className={classes.ratingSummary}>\n                        <div className={classes.userRating}>\n                            <Typography variant='body1'>{avgRating}</Typography>\n                            <Typography variant='body1'>/5.0</Typography>\n                        </div>\n                        <Typography variant='body1' gutterBottom align='left'>\n                            {reviewCount}{' '}\n                            {reviewCount === 1 ? (\n                                <FormattedMessage defaultMessage='user' id='Apis.Listing.StarRatingBar.user' />\n                            ) : (\n                                <FormattedMessage defaultMessage='users' id='Apis.Listing.StarRatingBar.users' />\n                            )}\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <StarRate className={classes.starRate} style={{ color: theme.palette.grey.A200 }} />\n                    <div className={classes.ratingSummary}>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            <FormattedMessage defaultMessage='Not Rated' id='Apis.Listing.StarRatingBar.not.rated' />\n                        </Typography>\n                    </div>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n}\n\nexport default withStyles(styles, { withTheme: true })(StarRatingSummary);\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport { app } from 'Settings';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n        position: 'relative',\n    },\n    apiDetails: {\n        padding: theme.spacing(1),\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing(1),\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n        position: theme.custom.thumbnail.contentPictureOverlap ? 'absolute' : 'relative',\n        top: 0,\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbLeftAction: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '10px',\n    },\n    thumbRight: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        flexDirection: 'column',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    context: {\n        marginTop: 5,\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n    textblock: {\n        color: theme.palette.text.secondary,\n        position: 'absolute',\n        bottom: '35px',\n        right: '10px',\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        'padding-left': '10px',\n        'padding-right': '10px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass ApiThumb extends React.Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n            imageLoaded: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof ApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        }).finally(() => {\n            this.setState({ imageLoaded: true })\n        })\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof ApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover, imageLoaded,\n        } = this.state;\n        const path = this.getPathPrefix();\n        const { isMonetizationEnabled } = this.context;\n\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { custom: { thumbnail, social: { showRating } } } = theme;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        if (\n            api.businessInformation &&\n            api.businessInformation.businessOwner &&\n            api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (!imageLoaded) {\n            ImageView = (<div class=\"image-load-frame\">\n                <div class=\"image-load-animation1\"></div>\n                <div class=\"image-load-animation2\"></div>\n            </div>)\n        } else if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color: color || thumbnail.iconColor,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                {isMonetizationEnabled && (\n                    <div className={classes.textblock}>{api.monetizationLabel}</div>\n                )}\n                <CardMedia>\n                    <Link to={detailsLink} aria-hidden='true' className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={app.context + defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.row}>\n                            <Typography variant='caption' gutterBottom align='left' className={classes.thumbBy}>\n                                <FormattedMessage defaultMessage='By' id='Apis.Listing.ApiThumb.by' />\n                                <FormattedMessage defaultMessage=' : ' id='Apis.Listing.ApiThumb.by.colon' />\n                                {provider}\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.row}>\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='subtitle1'>{version}</Typography>\n                                    <Typography variant='caption' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                            <div className={classes.row}>\n                                <div className={classes.thumbRight}>\n                                    <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                        {context}\n                                    </Typography>\n                                    <Typography\n                                        variant='caption'\n                                        gutterBottom\n                                        align='right'\n                                        className={classes.context}\n                                        Component='div'\n                                    >\n                                        <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={classes.thumbInfo}>\n                            {showRating && <div className={classes.thumbLeftAction}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>}\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                    {(api.lifeCycleStatus === 'PROTOTYPED') && (\n                                        <Chip\n                                        label={api.apiType === 'APIProduct' ? api.state : api.lifeCycleStatus}\n                                        color='default'\n                                    />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nApiThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(ApiThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(0.25),\n    },\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 224,\n            width: 250,\n        },\n    },\n};\n\n/**\n * Used to display generate acctoken UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        classes, accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <>\n            <FormControl\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <InputLabel htmlFor='quota-helper' className={classes.quotaHelp}>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                        defaultMessage='Scopes'\n                    />\n\n                </InputLabel>\n                <Select\n                    name='scopesSelected'\n                    multiple\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={e => handleChange('scopesSelected', e)}\n                    input={<Input id='select-multiple-chip' />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {subscriptionScopes.map(scope => (\n                        <MenuItem\n                            key={scope}\n                            value={scope}\n                        >\n                            {scope}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default withStyles(styles)(tokens);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get ApiTagThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction ApiTagThumb(props) {\n    const {\n        tag, path, classes, theme, style, mainPage,\n    } = props;\n    const tagLink = path + ':' + tag.value;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n    const name = tag.value.split(theme.custom.tagWise.key)[0];\n    if (style === 'fixed-left' || !mainPage) {\n        return (\n            <Link to={tagLink} className={classes.textWrapper}>\n                <ListItem button>\n                    <ListItemIcon>\n                        <Icon>label</Icon>\n                    </ListItemIcon>\n                    <ListItemText primary={name} />\n                </ListItem>\n            </Link>\n        );\n    }\n\n    return (\n        <div className={classes.thumbWrapper}>\n            <Link to={tagLink} className={classes.imageWrapper}>\n                <img src={app.context + image} className={classes.image} alt='' />\n            </Link>\n            <div className={classNames(classes.thumbContent)}>\n                <Link to={tagLink} className={classes.textWrapper}>\n                    <Typography className={classes.thumbHeader} variant='h4' gutterBottom title={name}>\n                        {name}\n                    </Typography>\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nApiTagThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    tag: PropTypes.shape({\n        value: PropTypes.shape({\n            split: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ApiTagThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport ApiTagThumb from './ApiTagThumb';\nimport classNames from 'classnames';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    linkTextWrapper: {\n        color: theme.palette.primary.main,\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n    mainPageList: {\n        display: 'flex',\n    },\n    mainPageAllApis: {\n        width: '100%',\n    }\n}));\n\n/**\n * Shared listing page\n *\n * @class TagCloudListing\n * @extends {Component}\n */\nfunction TagCloudListingTags(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=tag';\n    const { allTags, mainPage } = props;\n    let apisTagCloudGroup = null;\n\n    if (allTags.count !== 0) {\n        if (allTags !== null) {\n            apisTagCloudGroup = allTags.filter(item => active === true && item.value.split(key).length > 1);\n        }\n        if (apisTagCloudGroup && apisTagCloudGroup.length > 0) {\n            // const tagLink = tagWiseURL + ':' + apisTagCloudGroup[0].value;\n            // if (style === 'fixed-left') history.push(tagLink);\n        }\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n    return apisTagCloudGroup && apisTagCloudGroup.length > 0 ? (\n        <>\n            {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n            </Typography>)}\n            <List component='nav' aria-label='main mailbox folders' className={classNames({ [classes.mainPageList]: mainPage })}>\n                {Object.keys(apisTagCloudGroup).map((key) => {\n                    return <ApiTagThumb key={key} tag={apisTagCloudGroup[key]} path={tagWiseURL} style={style} mainPage={mainPage} />;\n                })}\n            </List>\n            {showAllApis && (\n                <div className={classNames({ [classes.mainPageAllApis]: mainPage })}>\n                    <Divider />\n\n                    <Link to='apis/' className={classes.textWrapper}>\n                        <ListItem button>\n                            <ListItemIcon>\n                                <Icon>label</Icon>\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <FormattedMessage\n                                        defaultMessage='All Apis'\n                                        id='Apis.Listing.TagCloudListingTags.allApis'\n                                    />\n                                }\n                            />\n                        </ListItem>\n                    </Link>\n                </div>\n            )}\n        </>\n\n    ) : (\n            <>\n                {!mainPage && (<Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.TagCloudListingTags.title' />\n                </Typography>)}\n                <div className={classes.mainTitle}>\n                    <Typography variant='subtitle1' gutterBottom align='center'>\n                        <FormattedMessage\n                            defaultMessage='API groups cannot be found'\n                            id='Apis.Listing.TagCloudListingTags.tagsNotFound'\n                        />\n                    </Typography>\n                    <Link to='apis/' className={classes.linkTextWrapper}>\n                        <Typography variant='subtitle1' gutterBottom align='center'>\n                            <FormattedMessage\n                                defaultMessage='All Apis'\n                                id='Apis.Listing.TagCloudListingTags.allApis'\n                            />\n                        </Typography>\n                    </Link>\n                </div>\n            </>\n        );\n}\n\nTagCloudListingTags.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default TagCloudListingTags;\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    messageWrapper: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function NoApi() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img alt='API icon' src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from './CustomIcon';\n\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        paddingRight: 0,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        display: 'none',\n    },\n    submenu: {\n        paddingLeft: theme.spacing(4),\n    },\n});\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route, submenu, open\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if (!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n\n\n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if (selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if (selected && submenu) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    }\n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                    [classes.submenu]: submenu,\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: activeBackground }}\n        >\n            {!submenu && (\n                // If the icon pro ( which is comming from the React Material library )\n                // is coming we add css class and render.\n                // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                // allow customers theme\n                // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu.style === 'no icon',\n                                [classes.submenu]: submenu,\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                        // We can also add custom icons\n                        <CustomIcon\n                            strokeColor={strokeColor}\n                            width={iconSize}\n                            height={iconSize}\n                            icon={props.iconText}\n                            className={classNames(\n                                classes.leftLInk,\n                                {\n                                    [classes.noIcon]: leftMenu.style === 'no icon',\n                                },\n                                'leftLink_Icon',\n                            )}\n                        />\n                    ))}\n            {open && (\n                <Typography\n                    className={classNames(\n                        classes.leftLInkText,\n                        {\n                            [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                            [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                        },\n                        'leftLInkText',\n                    )}\n                >\n                    {props.text}\n                </Typography>\n            )}\n            {!open && (\n                <Typography\n                    className={classNames(\n                        {\n                            [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                        },\n                        'leftLInkText',\n                    )}\n                />\n            )}\n            \n\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CustomIcon from '../../Shared/CustomIcon';\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\nexport default function TagCloudListing() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [allTags, setAllTags] = useState(null);\n    useEffect(() => {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                setAllTags(response.body.list);\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    }, []);\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.appBar}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            defaultMessage='API Groups'\n                            id='Apis.Listing.TagCloudListing.apigroups.main'\n                        />\n                    </Typography>\n                </div>\n            </div>\n            <div className={classes.listContentWrapper}>\n                {allTags && <TagCloudListingTags allTags={allTags} mainPage={true} />}\n            </div>\n        </main>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Select from '@material-ui/core/Select';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    titleBar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        borderBottomWidth: '1px',\n        borderBottomStyle: 'solid',\n        borderColor: theme.palette.text.secondary,\n        marginBottom: 20,\n    },\n    buttonLeft: {\n        alignSelf: 'flex-start',\n        display: 'flex',\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n        marginLeft: 20,\n    },\n    title: {\n        display: 'inline-block',\n        marginLeft: 20,\n    },\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    legend: {\n        marginBottom: 0,\n        borderBottomStyle: 'none',\n        marginTop: 20,\n        fontSize: 12,\n    },\n    inputText: {\n        marginTop: 20,\n    },\n    buttonRightLink: {\n        textDecoration: 'none',\n    },\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    fullWidth: {\n        '& .MuiFormControl-root':{\n            width: '100%',\n        }\n    },\n    FormControlOdd: {\n        backgroundColor: theme.palette.background.paper,\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    subscribeRoot: {\n        paddingLeft: theme.spacing(2),\n    },\n    subscribeRootSmall: {\n        marginLeft: `-${theme.spacing(4)}px`,\n    },\n    smallDisplay: {\n        width: 240,\n        '& .MuiInput-formControl': {\n            marginTop: 0,\n        },\n    },\n    smallDisplayFix: {\n        '& .MuiSelect-selectMenu': {\n            padding: 0,\n        },\n    },\n    selectMenuRoot: {\n        margin: 0,\n        padding: 0,\n    },\n    appDropDown: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n});\n\nconst subscribeToApi = (props) => {\n    const [appSelected, setAppSelected] = useState('');\n    const [policySelected, setPolicySelected] = useState('');\n    const [applicationsList, setApplicationsList] = useState([]);\n    const {\n        classes,\n        throttlingPolicyList,\n        applicationsAvailable,\n        subscriptionRequest,\n        updateSubscriptionRequest,\n        renderSmall,\n    } = props;\n\n    useEffect(() => {\n        if (throttlingPolicyList && throttlingPolicyList[0]) {\n            setPolicySelected(throttlingPolicyList[0].tierName);\n        }\n    }, [throttlingPolicyList]);\n\n    useEffect(() => {\n        if (applicationsAvailable && applicationsAvailable[0]) {\n            setApplicationsList(applicationsAvailable);\n            setAppSelected(applicationsAvailable[0]);\n            const newRequest = { ...subscriptionRequest };\n            newRequest.applicationId = applicationsAvailable[0].value;\n        }\n    }, [applicationsAvailable]);\n\n    /**\n     * This method is used to handle the updating of subscription\n     * request object and selected fields.\n     * @param {*} field field that should be updated in subscription request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event,value = null) => {\n        const newRequest = { ...subscriptionRequest };\n        const { target } = event;\n        switch (field) {\n            case 'application':\n                newRequest.applicationId = value.value;\n                setAppSelected(value);\n                break;\n            case 'throttlingPolicy':\n                newRequest.throttlingPolicy = target.value;\n                setPolicySelected(target.value);\n                break;\n            default:\n                break;\n        }\n        updateSubscriptionRequest(newRequest);\n    };\n\n    return (\n        <Grid container className={classNames(classes.subscribeRoot, { [classes.subscribeRootSmall]: renderSmall })}>\n            <Grid item xs={12} md={renderSmall ? 12 : 6}>\n                {appSelected && (\n                    <FormControl className={classNames(classes.FormControl, { [classes.smallDisplay]: renderSmall })}>\n                        <InputLabel shrink for='application-subscribe' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.application'\n                                defaultMessage='Application'\n                            />\n                        </InputLabel>\n                        <Autocomplete\n                           id=\"application-subscribe\"\n                           options={applicationsList}\n                           value={(applicationsList.length !== 0 && appSelected === '') ?\n                                applicationsList[0] : appSelected}\n                           onChange={(e, value) => handleChange('application', e, value)}\n                           getOptionLabel={(option) => option.label}\n                           classes={{root:classes.fullWidth}}\n                           renderInput={(params) => <TextField {...params} />}\n                         />\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.select.an.application.to.subscribe'\n                                defaultMessage='Select an Application to subscribe'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                )}\n                {throttlingPolicyList && (\n                    <FormControl\n                        className={classNames(classes.FormControl, classes.smallDisplayFix, {\n                            [classes.smallDisplay]: renderSmall,\n                            [classes.FormControlOdd]: !renderSmall,\n                        })}\n                    >\n                        <InputLabel shrink htmlFor='policy-label-placeholder' className={classes.quotaHelp}>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.throttling.policy'\n                                defaultMessage='Throttling Policy'\n                            />\n                        </InputLabel>\n                        <Select\n                            value={policySelected}\n                            onChange={e => handleChange('throttlingPolicy', e)}\n                            input={<Input name='policySelected' id='policy-label-placeholder' />}\n                            displayEmpty\n                            name='policySelected'\n                            className={classes.selectEmpty}\n                        >\n                            {throttlingPolicyList.map(policy => (\n                                <MenuItem value={policy.tierName} key={policy.tierName}  className={classes.appDropDown}>\n                                    {policy.tierPlan === 'COMMERCIAL' ? (\n                                        <React.Fragment>\n                                            <ListItemText\n                                                classes={{ root: classes.selectMenuRoot }}\n                                                primary={policy.tierName}\n                                                secondary={\n                                                    policy.monetizationAttributes.pricePerRequest ? (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.pricePerRequest}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per Request'}\n                                                        </Typography>\n                                                    ) : (\n                                                        <Typography>\n                                                            {policy.monetizationAttributes.fixedPrice}{' '}\n                                                            {policy.monetizationAttributes.currencyType}\n                                                            {' per '}\n                                                            {policy.monetizationAttributes.billingCycle}\n                                                        </Typography>\n                                                    )\n                                                }\n                                            />\n                                        </React.Fragment>\n                                    ) : (\n                                        <ListItemText primary={policy.tierName} />\n                                    )}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.SubscribeToApi.available.policies'\n                                defaultMessage='Available Policies -'\n                            />{' '}\n                            {throttlingPolicyList.map((policy, index) => (\n                                <span key={policy.tierName}>\n                                    {policy.tierName}\n                                    {index !== throttlingPolicyList.length - 1 && <span>,</span>}\n                                </span>\n                            ))}\n                        </FormHelperText>\n                    </FormControl>\n                )}\n            </Grid>\n        </Grid>\n    );\n};\nsubscribeToApi.propTypes = {\n    classes: PropTypes.shape({\n        FormControl: PropTypes.string,\n        quotaHelp: PropTypes.string,\n        selectEmpty: PropTypes.string,\n        FormControlOdd: PropTypes.string,\n        subscribeRoot: PropTypes.string,\n        subscribeRootSmall: PropTypes.string,\n        smallDisplayFix: PropTypes.string,\n        selectMenuRoot: PropTypes.string,\n        smallDisplay: PropTypes.string,\n    }).isRequired,\n    applicationsAvailable: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        label: PropTypes.string,\n    })).isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    subscriptionRequest: PropTypes.shape({}).isRequired,\n    updateSubscriptionRequest: PropTypes.func.isRequired,\n    renderSmall: PropTypes.bool,\n};\nsubscribeToApi.defaultProps = {\n    renderSmall: false,\n};\n\nexport default withStyles(styles)(subscribeToApi);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\nimport { Link as RouterLink } from 'react-router-dom';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Icon from '@material-ui/core/Icon';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(1, 3),\n    },\n    link: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    linkNotActive: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'default',\n    },\n    icon: {\n        marginRight: theme.spacing(0.5),\n        width: 20,\n        height: 20,\n    },\n    selectedTagText: {\n        textIndent: 4,\n    },\n    apiGroup: {\n        color: theme.palette.grey[800],\n    },\n}));\n\nexport default function ApiBreadcrumbs(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { selectedTag } = props;\n    return (\n        <Paper elevation={0} className={classes.root}>\n            <Breadcrumbs aria-label='breadcrumb'>\n                <RouterLink\n                    to={theme.custom.tagWise.active && theme.custom.tagWise.style === 'page' ? '/api-groups' : '/apis'}\n                    className={classes.apiGroup}\n                >\n                    <Link color='inherit' className={classes.link}>\n                        <Icon className={classes.icon}>dynamic_feed</Icon>\n                        <FormattedMessage defaultMessage='API Groups' id='Apis.Listing.ApiBreadcrumbs.apigroups.main' />\n                    </Link>\n                </RouterLink>\n\n                {selectedTag && <Link color='inherit' className={classes.linkNotActive}>\n                    <CustomIcon width={16} height={16} icon='api' />\n                    <span className={classes.selectedTagText}>{selectedTag}</span>\n                </Link>}\n            </Breadcrumbs>\n        </Paper>\n    );\n}\n","import React from 'react';\nimport { SettingsConsumer } from './SettingsContext';\n\nconst withSettings = (WrappedComponent) => {\n    /**\n     * Higher order component with settings\n     * @param {*} props properties\n     * @returns {Context.Consumer}\n     */\n    function HOCWithSettings(props) {\n        return (\n            <SettingsConsumer>\n                {\n                    context => <WrappedComponent {...context} {...props} />\n                }\n            </SettingsConsumer>\n        );\n    }\n    return HOCWithSettings;\n};\n\nexport default withSettings;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport CONSTS from 'AppData/Constants';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        minHeight: 130,\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing(1)) / 2),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n/**\n *\n *\n * @class DocThumb\n * @extends {React.Component}\n */\nconst windowURL = window.URL || window.webkitURL;\n\nclass DocThumb extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            active: true,\n            loading: false,\n            open: false,\n            overview_link: '',\n            isRedirect: false,\n            openMoreMenu: false,\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n        };\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof DocThumb\n     */\n    render() {\n        const {\n            selectedIcon, color, backgroundIndex, category,\n        } = this.state;\n        const { doc, classes, theme } = this.props;\n        const { doc: {\n name, sourceType, apiName, apiVersion, id, apiUUID \n} } = this.props;\n        const details_link = '/apis/' + apiUUID + '/documents/' + id + '/details';\n        const { thumbnail } = theme.custom;\n        const imageWidth = thumbnail.width;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        const ImageView = (\n            <ImageGenerator\n                width={imageWidth}\n                height={140}\n                api={doc}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    doc,\n                }}\n            />\n        );\n\n        return (\n            <div className={classes.thumbWrapper}>\n                <Link to={details_link} className={classes.imageWrapper}>\n                    {!defaultImage && ImageView}\n                    {defaultImage && <img src={defaultImage} />}\n                </Link>\n\n                <div\n                    className={classNames(classes.thumbContent, {\n                        [classes.imageOverlap]: thumbnail.contentPictureOverlap,\n                    })}\n                >\n                    <Link to={details_link} className={classes.textWrapper}>\n                        <Typography\n                            className={classes.thumbHeader}\n                            variant='h4'\n                            gutterBottom\n                            onClick={this.handleRedirectToAPIOverview}\n                            title={name}\n                        >\n                            {name}\n                        </Typography>\n                    </Link>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage defaultMessage='Source Type:' id='Apis.Listing.DocThumb.sourceType' />\n                        {sourceType}\n                    </Typography>\n                    <div className={classes.thumbInfo}>\n                        <div className={classes.thumbLeft}>\n                            <Typography variant='subtitle1'>{apiName}</Typography>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                <FormattedMessage defaultMessage='Api Name' id='Apis.Listing.DocThumb.apiName' />\n                            </Typography>\n                        </div>\n                        <div className={classes.thumbRight}>\n                            <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                {apiVersion}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='right'>\n                                <FormattedMessage defaultMessage='API Version' id='Apis.Listing.DocThumb.apiVersion' />\n                            </Typography>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nDocThumb.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(DocThumb);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport merge from 'lodash.merge';\nimport cloneDeep from 'lodash.clonedeep';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Icon from '@material-ui/core/Icon';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport DefaultConfigurations from '../../../../defaultTheme';\nimport ImageGenerator from './ImageGenerator';\nimport ApiThumb from './ApiThumb';\nimport DocThumb from './DocThumb';\nimport { ApiContext } from '../Details/ApiContext';\nimport NoApi from './NoApi';\n\nconst styles = (theme) => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass ApiTableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = 10;\n        this.pageType = null;\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n                MUIDataTablePagination: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                        \n                    },\n                },\n                MuiMenuItem: {\n                    root: {\n                        color: theme.palette.getContrastText(theme.palette.background.default),\n                    }\n                },\n                MUIDataTableToolbar: {\n                    root: {\n                        '& svg': {\n                            color: theme.palette.getContrastText(theme.palette.background.default),\n                        }\n                    }\n                }\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            border: 'none',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                            '& tr:nth-child(odd),& tr:nth-child(even)': {\n                                display: 'block',\n                                marginRight: 5,\n                                marginBottom: 5,\n                                backgroundColor: 'transparent',\n                            },\n                            '& td': {\n                                display: 'block',\n                                backgroundColor: 'transparent',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        const systemTheme = merge({}, DefaultConfigurations, Configurations, {custom: cloneDeep(theme.custom)});\n        const dataTableTheme = merge({}, muiTheme, systemTheme, themeAdditions);\n        return createMuiTheme(dataTableTheme);\n    };\n\n    componentDidMount() {\n        this.apiType = this.context.apiType;\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            this.apiType !== this.context.apiType\n            || query !== prevProps.query\n            || prevProps.selectedTag !== selectedTag\n        ) {\n            this.apiType = this.context.apiType;\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.setState({loading: true})\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { query, selectedTag } = this.props;\n        const { page, rowsPerPage } = this;\n        const { apiType } = this.context;\n        const api = new API();\n        const searchParam = new URLSearchParams(query);\n        const searchQuery = searchParam.get('query');\n        if (query && searchQuery !== null) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return api.search(composeQuery);\n        }\n\n        if (selectedTag) {\n            return api.getAllAPIs({ query: 'tag:' + selectedTag, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: list,\n                });\n            })\n            .catch((e) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof ApiTableView\n     */\n    render() {\n        const { intl, gridView, theme } = this.props;\n        const { custom: { social: { showRating } } } = theme;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n\n                                            <span>\n                                                {' '}\n                                                <FormattedMessage\n                                                    id='Apis.Listing.TableView.TableView.doc.flag'\n                                                    defaultMessage='[Doc] '\n                                                />\n                                                {' '}\n                                                {apiName}\n                                            </span>\n                                        </Link>\n                                    );\n                                }\n                                const strokeColor = theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund);\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor={strokeColor} />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'type',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.type',\n                    defaultMessage: 'Type',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.rating',\n                    defaultMessage: 'Rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                    display: showRating ? 'true' : 'excluded',\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page, count } = this;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                this.getData();\n            },\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <tr key={rowIndex}><td><DocThumb doc={artifact} /></td></tr>;\n                    } else {\n                        return <tr key={rowIndex}><td><ApiThumb api={artifact} /></td></tr>;\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.filter = false;\n        }\n        if (page === 0 && this.count <= rowsPerPage && rowsPerPage === 10) {\n            options.pagination = false;\n        } else {\n            options.pagination = true;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nApiTableView.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(ApiTableView))));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { app } from 'Settings';\n\n/**\n * @inheritdoc\n * @param {*} theme theme object\n */\nconst styles = theme => ({\n    thumbContent: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.tagWise.thumbnail.width - theme.spacing(1),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        justifyContent: 'center',\n        margin: 0,\n    },\n    contextBox: {\n        // eslint-disable-next-line radix\n        width: parseInt(150 - theme.spacing(0.5)),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing(2),\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    image: {\n        width: theme.custom.tagWise.thumbnail.width,\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.tagWise.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n});\n\n/**\n * Get APICategoryThumb\n * @param {*} props properties\n * @returns {*}\n */\nfunction APICategoryThumb(props) {\n    const {\n        category, path, classes, theme,\n    } = props;\n    const categoryLink = path + ':' + category.name;\n    const {\n        tagWise: {\n            thumbnail: { image },\n        },\n    } = theme.custom;\n\n    return (\n        <Link to={categoryLink} className={classes.textWrapper}>\n            <ListItem button>\n                <ListItemIcon>\n                    <Icon>label</Icon>\n                </ListItemIcon>\n                <ListItemText primary={category.name} />\n            </ListItem>\n        </Link>\n    );\n\n}\n\nAPICategoryThumb.propTypes = {\n    classes: PropTypes.shape({\n        thumbWrapper: PropTypes.shape({}).isRequired,\n        imageWrapper: PropTypes.shape({}).isRequired,\n        thumbContent: PropTypes.shape({}).isRequired,\n        imageOverlap: PropTypes.shape({}).isRequired,\n        textWrapper: PropTypes.shape({}).isRequired,\n        thumbHeader: PropTypes.shape({}).isRequired,\n        image: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            tagWise: PropTypes.shape({}).isRequired,\n        }).isRequired,\n    }).isRequired,\n    category: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n    }).isRequired,\n    path: PropTypes.shape({}).isRequired,\n    style: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(APICategoryThumb);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport { Link, useHistory } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport APICategoryThumb from './APICategoryThumb';\n\nconst useStyles = makeStyles(theme => ({\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n    },\n    textWrapper: {\n        color: theme.custom.tagCloud.leftMenu.color,\n        '& .material-icons': {\n            color: theme.custom.tagCloud.leftMenu.color,\n        },\n    },\n    tagWiseThumbWrapper: {\n        display: 'flex',\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Shared listing page\n *\n * @class CategoryListingCategories\n * @extends {Component}\n */\nfunction CategoryListingCategories(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n    const {\n        custom: {\n            tagWise: {\n                key, active, style, showAllApis,\n            },\n        },\n    } = theme;\n\n\n    const tagWiseURL = '/apis?offset=0&query=api-category';\n    const { allCategories } = props;\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof TagCloudListing\n     */\n\n    return allCategories && allCategories.length > 0 ? (\n        (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='API Categories' id='Apis.Listing.CategoryListingCategories.title' />\n                </Typography>\n                <List component='nav' aria-label='main mailbox folders'>\n                    {Object.keys(allCategories).map((key) => {\n                        return <APICategoryThumb key={key} category={allCategories[key]} path={tagWiseURL} style={style} />;\n                    })}\n                </List>\n            </React.Fragment>\n        )\n    ) : (\n        <div className={classes.mainTitle}>\n            <Typography variant='subtitle1' gutterBottom align='center'>\n                <FormattedMessage\n                    defaultMessage='Categories cannot be found'\n                    id='Apis.Listing.CategoryListingCategories.categoriesNotFound'\n                />\n            </Typography>\n        </div>\n    );\n}\n\nCategoryListingCategories.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default CategoryListingCategories;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { useTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { TagCloud } from 'react-tagcloud';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    clickablePointer: {\n        cursor: 'pointer',\n        padding: theme.spacing(1),\n    },\n    filterTitle: {\n        fontWeight: 200,\n        paddingLeft: theme.spacing(2),\n        background: theme.custom.tagCloud.leftMenu.titleBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.titleBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n    },\n}));\n\n/**\n * Component used to handle API Tag Cloud\n * @class ApiTagCloud\n * @extends {React.Component}\n * @param {any} value @inheritDoc\n */\nfunction ApiTagCloud(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const {\n        custom: {\n            tagWise: { key, active },\n            tagCloud: { colorOptions },\n        },\n    } = theme;\n    const history = useHistory();\n\n    const { allTags } = props;\n    let apisTagWithoutGroups = null;\n    if (allTags.count !== 0) {\n        // Remve the tags with a sufix '-group' to ignore the\n        if (active) {\n            apisTagWithoutGroups = allTags.filter(item => item.value.search(key) === -1);\n        } else {\n            apisTagWithoutGroups = allTags;\n        }\n    }\n\n    /**\n     *\n     * @param {String} tag selected tag\n     * @memberof ApiTagCloud\n     */\n    const handleOnClick = (tag) => {\n        const tagSearchURL = `/apis?offset=0&query=tag:${tag.value}`;\n        history.push(tagSearchURL);\n    };\n\n    return (\n        apisTagWithoutGroups && (\n            <React.Fragment>\n                <Typography variant='h6' gutterBottom className={classes.filterTitle}>\n                    <FormattedMessage defaultMessage='Tags' id='Apis.Listing.ApiTagCloud.title' />\n                </Typography>\n                <TagCloud\n                    minSize={14}\n                    maxSize={25}\n                    colorOptions={colorOptions}\n                    tags={apisTagWithoutGroups}\n                    shuffle={false}\n                    className={classes.clickablePointer}\n                    onClick={tag => handleOnClick(tag)}\n                />\n            </React.Fragment>\n        )\n    );\n}\n\nApiTagCloud.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    tag: PropTypes.shape({}).isRequired,\n    listType: PropTypes.string.isRequired,\n    apiType: PropTypes.string.isRequired,\n    allTags: PropTypes.shape({}).isRequired,\n};\n\nexport default ApiTagCloud;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport MaterialIcons from 'MaterialIcons';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport ImageGenerator from './ImageGenerator';\nimport Api from '../../../data/api';\nimport { ApiContext } from '../Details/ApiContext';\nimport classNames from 'classnames';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    card: {\n        margin: theme.spacing.unit * (3 / 2),\n        maxWidth: theme.custom.thumbnail.width,\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    apiDetails: {\n        padding: theme.spacing.unit,\n        background: theme.custom.thumbnail.contentBackgroundColor,\n        padding: theme.spacing.unit,\n        color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        '& a': {\n            color: theme.palette.getContrastText(theme.custom.thumbnail.contentBackgroundColor),\n        },\n    },\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(2),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    thumbHeader: {\n        width: theme.custom.thumbnail.width - theme.spacing.unit,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    contextBox: {\n        width: parseInt((theme.custom.thumbnail.width - theme.spacing.unit) / 2, 10),\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    thumbWrapper: {\n        position: 'relative',\n        paddingTop: 20,\n        marginRight: theme.spacing.unit * 2,\n    },\n    deleteIcon: {\n        fill: 'red',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    imageWrapper: {\n        color: theme.custom.thumbnail.iconColor,\n        width: theme.custom.thumbnail.width,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n    },\n    chipWrapper: {\n        marginTop: '15px',\n    },\n    ratingWrapper: {\n        marginTop: '20px',\n    },\n});\n\nconst windowURL = window.URL || window.webkitURL;\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class RecommendedApiThumb\n * @extends {Component}\n */\nclass RecommendedApiThumb extends React.Component {\n    /**\n     *Creates an instance of RecommendedApiThumb.\n     * @param {*} props\n     * @memberof RecommendedApiThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            color: null,\n            backgroundIndex: null,\n            imageObj: null,\n            isHover: false,\n        };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof RecommendedApiThumb\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const restApi = new Api();\n\n        const promisedThumbnail = restApi.getAPIThumbnail(api.id);\n\n        promisedThumbnail.then((response) => {\n            if (response && response.data) {\n                if (response.headers['content-type'] === 'application/json') {\n                    const iconJson = JSON.parse(response.data);\n                    this.setState({\n                        selectedIcon: iconJson.key,\n                        category: iconJson.category,\n                        color: iconJson.color,\n                        backgroundIndex: iconJson.backgroundIndex,\n                    });\n                } else if (response && response.data.size > 0) {\n                    const url = windowURL.createObjectURL(response.data);\n                    this.setState({ imageObj: url });\n                }\n            }\n        });\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.imageObj);\n        }\n    }\n\n    /**\n     * Get Path Prefix depedning on the respective API Type being rendered\n     *\n     * @returns {String} path\n     * @memberof RecommendedApiThumb\n     */\n    getPathPrefix() {\n        const path = '/apis/';\n        return path;\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof RecommendedApiThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof RecommendedApiThumb\n     */\n    render() {\n        const {\n            imageObj, selectedIcon, color, backgroundIndex, category, isHover,\n        } = this.state;\n        const path = this.getPathPrefix();\n\n        // const detailsLink = path + this.props.api.id;\n        const detailsLink = path + this.props.api.id;\n        const {\n            api, classes, theme, customWidth, customHeight, showInfo,\n        } = this.props;\n        const { thumbnail } = theme.custom;\n        const { name, version, context } = api;\n\n        let { provider } = api;\n        // if (\n        //     api.businessInformation &&\n        //     api.businessInformation.businessOwner &&\n        //     api.businessInformation.businessOwner.trim() !== ''\n        // ) {\n        //     provider = api.businessInformation.businessOwner;\n        // }\n        // if (!api.lifeCycleStatus) {\n        //     api.lifeCycleStatus = api.status;\n        // }\n        const imageWidth = customWidth || thumbnail.width;\n        const imageHeight = customHeight || 140;\n        const defaultImage = thumbnail.defaultApiImage;\n\n        let ImageView;\n        if (imageObj) {\n            ImageView = (\n                <img\n                    height={imageHeight}\n                    width={imageWidth}\n                    src={imageObj}\n                    alt='API Thumbnail'\n                    className={classes.media}\n                />\n            );\n        } else {\n            ImageView = (\n                <ImageGenerator\n                    width={imageWidth}\n                    height={imageHeight}\n                    api={api}\n                    fixedIcon={{\n                        key: selectedIcon,\n                        color,\n                        backgroundIndex,\n                        category,\n                        api,\n                    }}\n                />\n            );\n        }\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classNames('image-thumbnail', classes.card)}\n            >\n                <CardMedia>\n                    <Link to={detailsLink} className={classes.suppressLinkStyles}>\n                        {!defaultImage && ImageView}\n                        {defaultImage && <img src={defaultImage} alt='img' />}\n                    </Link>\n                </CardMedia>\n                {showInfo && (\n                    <CardContent classes={{ root: classes.apiDetails }}>\n                        <Link to={detailsLink} className={classes.textWrapper}>\n                            <Typography\n                                className={classes.thumbHeader}\n                                variant='h5'\n                                gutterBottom\n                                onClick={this.handleRedirectToAPIOverview}\n                                title={name}\n                            >\n                                {name}\n                            </Typography>\n                        </Link>\n                        <div className={classes.thumbInfo}>\n                            <div className={classes.thumbLeft}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='left'\n                                    className={classNames('api-thumb-rating', classes.ratingWrapper)}\n                                >\n                                    <StarRatingBar\n                                        apiRating={api.avgRating}\n                                        apiId={api.id}\n                                        isEditable={false}\n                                        showSummary={false}\n                                    />\n                                </Typography>\n                            </div>\n                            <div className={classes.thumbRight}>\n                                <Typography\n                                    variant='subtitle1'\n                                    gutterBottom\n                                    align='right'\n                                    className={classes.chipWrapper}\n                                >\n                                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                                        <Chip\n                                            label={api.transportType === undefined ? api.type : api.transportType}\n                                            color='primary'\n                                        />\n                                    )}\n                                </Typography>\n                            </div>\n                        </div>\n                    </CardContent>\n                )}\n            </Card>\n        );\n    }\n}\nRecommendedApiThumb.defaultProps = {\n    customWidth: null,\n    customHeight: null,\n    showInfo: true,\n};\nRecommendedApiThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    customWidth: PropTypes.number,\n    customHeight: PropTypes.number,\n    showInfo: PropTypes.bool,\n};\n\nRecommendedApiThumb.contextType = ApiContext;\n \nexport default withStyles(styles, { withTheme: true })(RecommendedApiThumb);\n ","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { withTheme } from '@material-ui/styles';\nimport Configurations from 'Config';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport ImageGenerator from './ImageGenerator';\nimport RecommendedApiThumb from './RecommendedApiThumb';\nimport { ApiContext } from '../Details/ApiContext';\n\nconst styles = theme => ({\n    rowImageOverride: {\n        '& .material-icons': {\n            marginTop: 5,\n            color: `${theme.custom.thumbnail.iconColor} !important`,\n            fontSize: `${theme.custom.thumbnail.listViewIconSize}px !important`,\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n        color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n    },\n});\n/**\n * Table view for api listing\n *\n * @class Recommendations\n * @extends {React.Component}\n */\nclass Recommendations extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof Recommendations\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n    }\n\n    getMuiTheme = () => {\n        const { gridView, theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                        marginBottom: 20,\n                        width: '100%',\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                    tableRoot: {\n                        border: 'solid 1px #fff',\n                        '& a': {\n                            display: 'flex',\n                            alignItems: 'center',\n                        },\n                        '& a > div': {\n                            paddingRight: 10,\n                        },\n                        '& td': {\n                            whiteSpace: 'nowrap',\n                        },\n                        '& tr:nth-child(even)': {\n                            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n                            },\n                        },\n                        '& tr:nth-child(odd)': {\n                            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n                            '& td': {\n                                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n                            },\n                        },\n                        '& th': {\n                            backgroundColor: theme.custom.listView.tableHeadBackground,\n                            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        width: '100%',\n                    },\n                },\n            },\n        };\n        if (gridView) {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                marginLeft: 0,\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                        paper: {\n                            boxShadow: 'none',\n                            backgroundColor: 'transparent',\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(muiTheme, themeAdditions, Configurations);\n        return createMuiTheme(muiTheme);\n    };\n\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { query, selectedTag } = this.props;\n        if (\n            query !== prevProps.query ||\n            prevProps.selectedTag !== selectedTag\n        ) {\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({ data: list });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.Recommendations.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.Recommendations.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const api = new API();\n        return api.getApiRecommendations();\n    };\n\n    /**\n     * @inheritdoc\n     * @returns {Component}x\n     * @memberof Recommendations\n     */\n    render() {\n        const { intl, gridView } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            return <ImageGenerator api={artifact} width={30} height={30} />;\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.Recommendations.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (tableMeta, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[2];\n                            const apiId = tableMeta.rowData[0];\n                            const { classes } = this.props;\n\n                            if (artifact) {\n                                return (\n                                    <Link\n                                        to={'/apis/' + apiId + '/overview'}\n                                        className={classes.rowImageOverride}\n                                        className={classes.apiNameLink}\n                                    >\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'rating',\n                label: intl.formatMessage({\n                    defaultMessage: 'Rating',\n                    id: 'Apis.Listing.Recommendations.rating',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const artifact = tableViewObj.state.data[tableMeta.rowIndex];\n                            if (artifact) {\n                                if (artifact.type !== 'DOC') {\n                                    const apiId = tableMeta.rowData[0];\n                                    const avgRating = tableMeta.rowData[8];\n                                    return (\n                                        <StarRatingBar\n                                            apiRating={avgRating}\n                                            apiId={apiId}\n                                            isEditable={false}\n                                            showSummary={false}\n                                        />\n                                    );\n                                }\n                            }\n                        }\n                    },\n                    sort: false,\n                },\n            },\n            {\n                name: 'avgRating',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n        ];\n        const { data } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n        };\n        if (gridView) {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const artifact = tableViewObj.state.data[dataIndex];\n                if (artifact) {\n                    return <tr key={rowIndex}><td><RecommendedApiThumb api={artifact} /></td></tr>;\n                }\n                return <span />;\n            };\n            options.title = true;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n            options.rowsPerPageOptions = false;\n            options.pagination = false;\n        } else {\n            options.filter = false;\n        }\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return null;\n        }\n        return (\n            <MuiThemeProvider theme={this.getMuiTheme()}>\n                <MUIDataTable title='Recommended APIs for you' data={data} columns={columns} options={options} />\n            </MuiThemeProvider>\n        );\n    }\n}\n\nRecommendations.contextType = ApiContext;\n\nexport default withSettings(injectIntl(withTheme(withStyles(styles)(Recommendations))));\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport { withStyles } from '@material-ui/core/styles';\nimport classNames from 'classnames';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport Settings from 'AppComponents/Shared/SettingsContext';\nimport API from 'AppData/api';\nimport ApiBreadcrumbs from './ApiBreadcrumbs';\nimport ApiTableView from './ApiTableView';\nimport { ApiContext } from '../Details/ApiContext';\nimport TagCloudListingTags from './TagCloudListingTags';\nimport CategoryListingCategories from './CategoryListingCategories';\nimport ApiTagCloud from './ApiTagCloud';\nimport Recommendations from './Recommendations';\nimport AuthManager from '../../../data/AuthManager';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        alignSelf: 'flex-end',\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    appBar: {\n        height: 70,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 20,\n        paddingRight: 20,\n    },\n    mainTitle: {\n        paddingTop: 10,\n    },\n    mainTitleWrapper: {\n        flexGrow: 1,\n    },\n    listContentWrapper: {\n        padding: `0 ${theme.spacing(3)}px`,\n        display: 'flex',\n    },\n    iconDefault: {\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    iconSelected: {\n        color: theme.custom.infoBar.listGridSelectedColor,\n    },\n    content: {\n        flexGrow: 1,\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        paddingBottom: theme.spacing(3),\n    },\n    contentWithTags: {\n        marginLeft: theme.custom.tagCloud.leftMenu.width,\n    },\n    contentWithoutTags: {\n        marginLeft: -4,\n    },\n    contentWithTagsHidden: {\n        marginLeft: theme.custom.tagCloud.leftMenu.sliderWidth,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.width,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n    },\n    LeftMenuForSlider: {\n        backgroundColor: theme.custom.tagCloud.leftMenu.background,\n        color: theme.custom.tagCloud.leftMenu.color,\n        textAlign: 'left',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        paddingLeft: 0,\n        width: theme.custom.tagCloud.leftMenu.sliderWidth,\n        top: 0,\n        left: 0,\n        overflowY: 'auto',\n        display: 'flex',\n    },\n    sliderButton: {\n        fontWeight: 200,\n        background: theme.custom.tagCloud.leftMenu.sliderBackground,\n        color: theme.palette.getContrastText(theme.custom.tagCloud.leftMenu.sliderBackground),\n        height: theme.custom.infoBar.height,\n        alignItems: 'center',\n        display: 'flex',\n        position: 'absolute',\n        right: 0,\n        cursor: 'pointer',\n    },\n    rotatedText: {\n        transform: 'rotate(270deg)',\n        transformOrigin: 'left bottom 0',\n        position: 'absolute',\n        whiteSpace: 'nowrap',\n        top: theme.custom.infoBar.height * 4,\n        marginLeft: 23,\n        cursor: 'pointer',\n    },\n    recommendationsBar: {\n        height: 60,\n        background: theme.custom.infoBar.background,\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n\n/**\n * Shared listing page\n *\n * @class CommonListing\n * @extends {Component}\n */\nclass CommonListing extends React.Component {\n    static contextType = Settings;\n\n    /**\n     * Constructor\n     *\n     * @param {*} props Properties\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if(typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if(defaultApiView.length === 1) { // We will disable the other\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[0];\n        }\n        this.state = {\n            listType: defaultApiView,\n            allTags: null,\n            showLeftMenu: false,\n            isMonetizationEnabled: false,\n            isRecommendationEnabled: false,\n        };\n    }\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value view type\n     * @memberof CommonListing\n     */\n    setListType = (value) => {\n        this.setState({ listType: value });\n    };\n\n    /**\n     *\n     * Get all tags\n     * @memberof CommonListing\n     */\n    componentDidMount() {\n        const restApiClient = new API();\n        const promisedTags = restApiClient.getAllTags();\n        promisedTags\n            .then((response) => {\n                this.setState({ allTags: response.body.list });\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n        const promisedCategories = restApiClient.apiCategories();\n            promisedCategories\n                .then((response) => {\n                    this.setState({ allCategories: response.body.list });\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        this.isMonetizationEnabled();\n        this.isRecommendationEnabled();\n    }\n\n    toggleLeftMenu = () => {\n        this.setState((prevState) => ({ showLeftMenu: !prevState.showLeftMenu }));\n    };\n\n    /**\n     * retrieve Settings from the context and check the monetization enabled\n     */\n    isMonetizationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.monetizationEnabled;\n        this.setState({ isMonetizationEnabled: enabled });\n    }\n\n    /**\n     * retrieve Settings from the context and check whether recommendation is enabled\n     */\n    isRecommendationEnabled = () => {\n        const settingsContext = this.context;\n        const enabled = settingsContext.settings.recommendationEnabled;\n        this.setState({ isRecommendationEnabled: enabled });\n    }\n\n    /**\n     *\n     * @inheritdoctheme\n     * @returns {React.Component} @inheritdoc\n     * @memberof CommonListing\n     */\n    render() {\n        const {\n            theme,\n            classes,\n            location: { search },\n        } = this.props;\n        const user = AuthManager.getUser();\n        const {\n            custom: {\n                tagWise: { key, active, style },\n                tagCloud: { active: tagCloudActive },\n            },\n        } = theme;\n        const {\n            listType, allTags, showLeftMenu, isMonetizationEnabled, allCategories, isRecommendationEnabled\n        } = this.state;\n        const strokeColorMain = theme.palette.getContrastText(theme.custom.infoBar.background);\n        const searchParam = new URLSearchParams(search);\n        const searchQuery = searchParam.get('query');\n        let selectedTag = null;\n        if (search && searchQuery !== null) {\n            // For the tagWise search\n            if (active && key) {\n                const splits = searchQuery.split(':');\n                if (splits.length > 1 && splits[1].search(key) != -1) {\n                    const splitTagArray = splits[1].split(key);\n                    if (splitTagArray.length > 0) {\n                        selectedTag = splitTagArray[0];\n                    }\n                } else if (splits.length > 1 && splits[0] === 'tag') {\n                    selectedTag = splits[1];\n                }\n            }\n        }\n        const tagPaneVisible = allTags && allTags.length > 0 && (tagCloudActive || active);\n        const categoryPaneVisible = allCategories && allCategories.length > 0;\n        return (\n            <>\n                {(categoryPaneVisible || tagPaneVisible) && showLeftMenu && (\n                    <div className={classes.LeftMenu}>\n                        <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                            <Icon>keyboard_arrow_left</Icon>\n                        </div>\n                        {categoryPaneVisible && <CategoryListingCategories allCategories={allCategories} />}\n                        {tagPaneVisible && active && <TagCloudListingTags allTags={allTags} />}\n                        {tagPaneVisible && tagCloudActive && <ApiTagCloud allTags={allTags} />}\n                    </div>\n                )}\n                {(categoryPaneVisible || tagPaneVisible) && !showLeftMenu && (\n                    <div className={classes.LeftMenuForSlider}>\n                        <div className={classes.sliderButton} onClick={this.toggleLeftMenu}>\n                            <Icon>keyboard_arrow_right</Icon>\n                        </div>\n                        <div className={classes.rotatedText} onClick={this.toggleLeftMenu}>\n                            <FormattedMessage defaultMessage='Tags / API Categories' id='Apis.Listing.Listing.ApiTagCloud.title' />\n                        </div>\n                    </div>\n                )}\n\n                <main\n                    className={classNames(\n                        classes.content,\n                        { [classes.contentWithoutTags]: !(tagPaneVisible || categoryPaneVisible) || !showLeftMenu },\n                        { [classes.contentWithTagsHidden]: (tagPaneVisible || categoryPaneVisible) && !showLeftMenu },\n                        { [classes.contentWithTags]: (tagPaneVisible || categoryPaneVisible) && showLeftMenu },\n                    )}\n                    id='commonListing'\n                >\n                    <div className={classes.appBar} id='commonListingAppBar'>\n                        <div className={classes.mainIconWrapper}>\n                            <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                        </div>\n                        <div className={classes.mainTitleWrapper} id='mainTitleWrapper'>\n                            <Typography variant='h4' className={classes.mainTitle}>\n                                <FormattedMessage defaultMessage='APIs' id='Apis.Listing.Listing.apis.main' />\n                            </Typography>\n                        </div>\n                        {this.showToggle && (<div className={classes.buttonRight} id='listGridWrapper'>\n                            <IconButton\n                                aria-label='List View'\n                                className={classes.button}\n                                onClick={() => this.setListType('list')}\n                            >\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'list' },\n                                        { [classes.iconDefault]: listType === 'grid' },\n                                    )}\n                                >\n                                    list\n                                </Icon>\n                            </IconButton>\n                            <IconButton\n                                aria-label='Grid view'\n                                className={classes.button}\n                                onClick={() => this.setListType('grid')}\n                            >\n                                <Icon\n                                    className={classNames(\n                                        { [classes.iconSelected]: listType === 'grid' },\n                                        { [classes.iconDefault]: listType === 'list' },\n                                    )}\n                                >\n                                    grid_on\n                                </Icon>\n                            </IconButton>\n                        </div>)}\n                    </div>\n                    {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                    <div className={classes.listContentWrapper}>\n                        {listType === 'grid' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView query={search} />\n                            </ApiContext.Provider>\n                        )}\n                        {listType === 'list' && (\n                            <ApiContext.Provider value={{ isMonetizationEnabled }}>\n                                <ApiTableView gridView={false} query={search} />\n                            </ApiContext.Provider>\n                        )}\n                    </div>\n                    {isRecommendationEnabled && user &&\n                        <div>\n                            {active && allTags && allTags.length > 0 && <ApiBreadcrumbs selectedTag={selectedTag} />}\n                            <div className={classes.listContentWrapper}>\n                                {listType === 'grid' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                                {listType === 'list' && (\n                                    <ApiContext.Provider value={{ isRecommendationEnabled }}>\n                                        <Recommendations gridView query={search} />\n                                    </ApiContext.Provider>\n                                )}\n                            </div>\n                        </div>\n                    }\n                </main>\n            </>\n        );\n    }\n}\n\nCommonListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nCommonListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(CommonListing);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\n\n/**\n * Position the modal\n * @returns {JSON} css atrributes JSON.\n */\nfunction getModalStyle() {\n    const top = 50;\n    const left = 50;\n\n    return {\n        top: `${top}%`,\n        left: `${left}%`,\n        transform: `translate(-${top}%, -${left}%)`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n    code: {\n        background: '#efefef',\n        color: 'cc0000',\n        border: 'solid 1px #ccc',\n        padding: theme.spacing(1),\n    },\n    iconStyle: {\n        position: 'absolute',\n        top: 60,\n        right: 30,\n    },\n}));\n\n/**\n * Adds two numbers together.\n * @param {JSON} props props passed from parent\n * @returns {JSX} code in a modal\n */\nfunction EmbadCode(props) {\n    const { intl } = props;\n    const classes = useStyles();\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n    const [open, setOpen] = React.useState(false);\n    const [codeCopied, setCodeCopied] = React.useState(false);\n    const url = new URL(window.location);\n    url.searchParams.set('widget', true);\n\n    const onCopy = () => {\n        setCodeCopied(true);\n        setTimeout(() => setCodeCopied(false), 2000);\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    const embadCode = '<iframe width=\"450\" height=\"120\" src=\"'\n        + url + '\" frameBorder=\"0\" allowFullScreen title=\"Embad API\" />';\n\n    return (\n        <div>\n            <CodeIcon className={classes.codeIcon} onClick={handleOpen} />\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby='simple-modal-title'\n                aria-describedby='simple-modal-description'\n            >\n                <div style={modalStyle} className={classes.paper}>\n                    <h2 id='simple-modal-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Social.EmbadCode'\n                            defaultMessage='Embed'\n                        />\n                    </h2>\n                    <div className={classes.code}>\n                        <code>{embadCode}</code>\n                    </div>\n                    <Tooltip\n                        title={\n                            codeCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Apis.Details.Environments.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                        className={classes.iconStyle}\n                    >\n                        <CopyToClipboard\n                            text={embadCode}\n                            onCopy={onCopy}\n                        >\n                            <Icon color='secondary'>file_copy</Icon>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default injectIntl(EmbadCode);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport EmbadCode from 'AppComponents/Apis/Details/Social/EmbadCode';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\n\nconst useStyles = makeStyles((theme) => ({\n    socialLink: {\n        display: 'inline-block',\n        '& img': {\n            width: 32,\n            marginLeft: theme.spacing(1),\n        },\n    },\n    oneFlex: {\n        flex: 1,\n    },\n    socialLinkWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingRight: theme.spacing(2),\n        '& > div': {\n            display: 'inline-block',\n        },\n    },\n    divider: {\n        display: 'inline-block',\n        borderRight: 'solid 1px #ccc',\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        height: 30,\n    },\n    codeIcon: {\n        cursor: 'pointer',\n        color: theme.palette.getContrastText(theme.custom.infoBar.background),\n    },\n}));\n\n/**\n * Render the social icons\n * @param {int} num1 The first number.\n * @param {int} num2 The second number.\n * @returns {int} The sum of the two numbers.\n */\nfunction Social() {\n    const classes = useStyles();\n    const { api } = useContext(ApiContext);\n    const { name: apiName } = api;\n    const apiUrl = encodeURI(window.location);\n    const theme = useTheme();\n    const { github_repo: github, slack_url: slack } = api.additionalProperties;\n    const {\n        custom: {\n            social: {\n                showSharing: {\n                    active, showFacebook, showReddit, showTwitter, showEmbad, showEmail,\n                },\n            },\n        },\n    } = theme;\n    if (!active) {\n        return <span />;\n    }\n    return (\n        <>\n            <div className={classes.oneFlex} />\n            <div className={classes.socialLinkWrapper}>\n                {slack && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='Slack'\n                            href={slack}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='Slack'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/slack.png`}\n                                alt='Slack'\n                            />\n                        </a>\n                    </>\n                )}\n                {github && (\n                    <>\n                        <a\n                            className={classes.socialLink}\n                            id='github'\n                            href={github}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            title='GitHub'\n                        >\n                            <img\n                                src={`${app.context}/site/public/images/social/github.jpg`}\n                                alt='GitHub'\n                            />\n                        </a>\n                    </>\n                )}\n                {(slack || github) && (\n                    <div className={classes.divider} />\n                )}\n                {showFacebook && (\n                    <a\n                        className={classes.socialLink}\n                        id='facebook'\n                        href={`http://www.facebook.com/sharer.php?u=${apiUrl}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Facebook'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/facebook.png`}\n                            alt='Facebook'\n                        />\n                    </a>\n                )}\n                {/* Twitter */}\n                {showTwitter && (\n                    <a\n                        className={classes.socialLink}\n                        id='Twitter'\n                        href={`http://twitter.com/share?url=${apiUrl}&text=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Twitter'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/twitter.png`}\n                            alt='Twitter'\n                        />\n                    </a>\n                )}\n                {/* Reddit */}\n                {showReddit && (\n                    <a\n                        className={classes.socialLink}\n                        id='Reddit'\n                        href={`http://www.reddit.com/submit?url=${apiUrl}&title=${apiName}`}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        title='Reddit'\n                    >\n                        <img\n                            src={`${app.context}/site/public/images/social/reddit.png`}\n                            alt='Reddit'\n                        />\n                    </a>\n                )}\n                {showEmbad && (\n                    <>\n                        <div className={classes.divider} />\n                        {/* TODO: Fix spelling mistake ~tmkb */}\n                        <EmbadCode />\n                    </>\n                )}\n                {showEmail && (\n                    <>\n                        <div className={classes.divider} />\n                        <a href={`mailto:?Subject=${apiName}&body=Link+:+${apiUrl}\"`} className={classes.codeIcon}>\n                            <MailOutlineIcon />\n                        </a>\n                    </>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default injectIntl(Social);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = theme => ({\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.palette.secondary.main,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        margin: '-10px 0',\n    },\n    envRoot: {\n        '& span, & h5, & label, & td, & li': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        }\n    },\n});\n\n/**\n *  @inheritdoc\n */\nclass Environments extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n        this.downloadWSDL = this.downloadWSDL.bind(this);\n        this.onCopy = this.onCopy.bind(this);\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the WSDL of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environmentName name of the environment\n     */\n    downloadWSDL(apiId, environmentName) {\n        const { intl } = this.props;\n        const wsdlClient = this.apiClient.getWsdlClient();\n        const promisedGet = wsdlClient.downloadWSDLForEnvironment(apiId, environmentName);\n        promisedGet\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Environments.download.wsdl.error',\n                        defaultMessage: 'Error downloading the WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads the swagger of the api for the provided environment\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} environment name of the environment\n     */\n    downloadSwagger(apiId, environment) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndEnvironment(apiId, environment);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.swagger.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    /**\n     *  @inheritdoc\n     */\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n        // let kubernetes = 'kuberenetes'\n\n        // let kubernetes = [{\n        //     \"EnvName\" : \"Kubernetes\",\n        //     \"clusterDetails\" : [\n        //         {\n        //             \"clusterName\" : \"Docker-desktop\",\n        //             \"ingressURL\" : \"http://wso2.com:9443\"\n        //         },\n        //         {\n        //             \"clusterName\" : \"Minikube\",\n        //             \"ingressURL\" : \"http://wso2.system.com:9443\"\n        //         }\n        //     ]\n        // }]\n\n        let kubernetes = []\n\n        return (\n            <Grid container spacing={2} item xs={12} className={classes.envRoot}>\n                {api.endpointURLs.map((endpoint) => {\n                    return (\n                        <Grid key={endpoint} item xs={12} key={endpoint.environmentName}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        {endpoint.environmentType === 'hybrid' && (\n                                            <Icon className={classes.iconEven}>cloud</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'production' && (\n                                            <Icon className={classes.iconEven}>check_circle</Icon>\n                                        )}\n                                        {endpoint.environmentType === 'sandbox' && (\n                                            <Icon className={classes.iconEven}>Build</Icon>\n                                        )}\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {endpoint.environmentName}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        {(endpoint.URLs.http !== null\n                                            || endpoint.URLs.https !== null\n                                            || endpoint.URLs.ws !== null\n                                            || endpoint.URLs.wss !== null) && (\n                                                <Typography className={classes.heading}>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.InfoBar.gateway.urls'\n                                                        defaultMessage='Gateway URLs'\n                                                    />\n                                                </Typography>\n                                            )}\n                                        {endpoint.URLs.http !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.http}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.http}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy to clipboard'>\n                                                            <Icon color='secondary'>insert_drive_file</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.https !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.https}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.https}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy to clipboard'>\n                                                            <Icon color='secondary'>insert_drive_file</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.ws !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.ws}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.ws}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy to clipboard'>\n                                                            <Icon color='secondary'>insert_drive_file</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.URLs.wss !== null && (\n                                            <Grid item xs={12}>\n                                                <TextField\n                                                    defaultValue={endpoint.URLs.wss}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Environments.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={endpoint.URLs.wss}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <IconButton aria-label='Copy to clipboard'>\n                                                            <Icon color='secondary'>insert_drive_file</Icon>\n                                                        </IconButton>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            (endpoint.defaultVersionURLs.http !== null ||\n                                                endpoint.defaultVersionURLs.https !== null ||\n                                                endpoint.defaultVersionURLs.ws !== null ||\n                                                endpoint.defaultVersionURLs.wss !== null) && (\n                                                <Typography className={classes.heading}>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.InfoBar.default.gateway.urls'\n                                                        defaultMessage='Default Gateway URLs'\n                                                    />\n                                                </Typography>\n                                            )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.http !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={endpoint.defaultVersionURLs.http}\n                                                        id='bootstrap-input'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={endpoint.defaultVersionURLs.http}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.https !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={endpoint.defaultVersionURLs.https}\n                                                        id='bootstrap-input'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={endpoint.defaultVersionURLs.https}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.ws !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={endpoint.defaultVersionURLs.ws}\n                                                        id='bootstrap-input'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={endpoint.defaultVersionURLs.ws}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        {endpoint.defaultVersionURLs !== null &&\n                                            endpoint.defaultVersionURLs.wss !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={endpoint.defaultVersionURLs.wss}\n                                                        id='bootstrap-input'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={endpoint.defaultVersionURLs.wss}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>file_copy</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        {api.type === 'SOAP' && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadWSDL(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.wsdl'\n                                                    defaultMessage='WSDL'\n                                                />\n                                            </Button>\n                                        )}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={() => this.downloadSwagger(api.id, endpoint.environmentName)}\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n                {api.ingressURLs !== null && api.ingressURLs.filter((envType) => envType.clusterDetails.length > 0).map(\n                    (envType) => (\n                        envType.clusterDetails.map((cluster) => (\n                            <Grid key={cluster.clusterName} item xs={12} key={cluster.clusterName}>\n                                <ExpansionPanel>\n                                    <ExpansionPanelSummary\n                                        expandIcon={<Icon>expand_more</Icon>}\n                                        aria-controls='panel1a-content'\n                                        id='panel1a-header-cluster'\n                                    >\n                                        <div className={classes.iconAligner}>\n                                            <Icon className={classes.iconEven}>cloud</Icon>\n                                            <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {cluster.clusterDisplayName}\n                                            </Typography>\n                                        </span>\n                                        </div>\n                                    </ExpansionPanelSummary>\n                                    <ExpansionPanelDetails>\n                                        <Grid container item xs={12} spacing={2}>\n                                            {cluster.ingressURL !== null && (\n                                                <Typography className={classes.heading}>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.InfoBar.gateway.ingressUrls'\n                                                        defaultMessage='Cluster Ingress URLs'\n                                                    />\n                                                </Typography>\n                                            )}\n                                            {cluster.ingressURL !== null && (\n                                                <Grid item xs={12}>\n                                                    <TextField\n                                                        defaultValue={cluster.ingressURL}\n                                                        id='bootstrap-input'\n                                                        InputProps={{\n                                                            disableUnderline: true,\n                                                            readOnly: true,\n                                                            classes: {\n                                                                root: classes.bootstrapRoot,\n                                                                input: classes.bootstrapInput,\n                                                            },\n                                                        }}\n                                                        InputLabelProps={{\n                                                            shrink: true,\n                                                            className: classes.bootstrapFormLabel,\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        title={\n                                                            urlCopied\n                                                                ? intl.formatMessage({\n                                                                    defaultMessage: 'Copied',\n                                                                    id: 'Apis.Details.Environments.copied',\n                                                                })\n                                                                : intl.formatMessage({\n                                                                    defaultMessage: 'Copy to clipboard',\n                                                                    id: 'Apis.Details.Environments.copy.to.clipboard',\n                                                                })\n                                                        }\n                                                        placement='right'\n                                                        className={classes.iconStyle}\n                                                    >\n                                                        <CopyToClipboard\n                                                            text={cluster.ingressURL}\n                                                            onCopy={() => this.onCopy('urlCopied')}\n                                                        >\n                                                            <IconButton aria-label='Copy to clipboard'>\n                                                                <Icon color='secondary'>insert_drive_file</Icon>\n                                                            </IconButton>\n                                                        </CopyToClipboard>\n                                                    </Tooltip>\n                                                </Grid>\n                                            )}\n                                        </Grid>\n                                    </ExpansionPanelDetails>\n                                </ExpansionPanel>\n                            </Grid>\n                        ))\n                    ))\n                }\n            </Grid>\n        );\n    }\n}\n\nEnvironments.propTypes = {\n    classes: PropTypes.object.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\nEnvironments.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Environments));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Icon from '@material-ui/core/Icon';\nimport API from 'AppData/api';\nimport Utils from 'AppData/Utils';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { ApiContext } from './ApiContext';\n\nconst styles = (theme) => ({\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconEven: {\n        color: theme.palette.secondary.light,\n        width: theme.spacing(3),\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    iconStyle: {\n        cursor: 'grab',\n    },\n});\n\nclass Labels extends React.Component {\n    constructor(props) {\n        super(props);\n        this.apiClient = new API();\n        this.state = {\n            urlCopied: false,\n        };\n    }\n\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const caller = function () {\n            that.setState({ urlCopied: false });\n        };\n        setTimeout(caller, 2000);\n    }\n\n    /**\n     * Downloads the Swagger of the api for the provided label\n     *\n     * @param {string} apiId uuid of the API\n     * @param {string} label name of the environment\n     */\n    downloadSwagger(apiId, label) {\n        const promiseSwagger = this.apiClient.getSwaggerByAPIIdAndLabel(apiId, label);\n        promiseSwagger\n            .then((done) => {\n                Utils.downloadFile(done);\n            })\n            .catch((error) => {\n                console.log(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Environments.download.wsdl.error',\n                    defaultMessage: 'Error downloading the Swagger',\n                }));\n            });\n    }\n\n    render() {\n        const { api } = this.context;\n        const { classes, intl } = this.props;\n        const { urlCopied } = this.state;\n\n        return (\n            <Grid container spacing={2} item xs={12}>\n                {api.labels.map((label) => {\n                    return (\n                        <Grid key={label} item xs={12}>\n                            <ExpansionPanel>\n                                <ExpansionPanelSummary\n                                    expandIcon={<Icon>expand_more</Icon>}\n                                    aria-controls='panel1a-content'\n                                    id='panel1a-header'\n                                >\n                                    <div className={classes.iconAligner}>\n                                        <Icon className={classes.iconEven}>label</Icon>\n                                        <span className={classes.iconTextWrapper}>\n                                            <Typography className={classes.heading}>\n                                                {label.name}\n                                            </Typography>\n                                        </span>\n                                    </div>\n                                </ExpansionPanelSummary>\n                                <ExpansionPanelDetails>\n                                    <Grid container item xs={12} spacing={2}>\n                                        <Typography className={classes.heading}>\n                                            <FormattedMessage\n                                                id='Apis.Details.InfoBar.Gateway.urls'\n                                                defaultMessage='Gateway URLs'\n                                            />\n                                        </Typography>\n                                        {label.accessUrls.map((row) => (\n                                            <Grid item xs={12} key={row}>\n                                                <TextField\n                                                    defaultValue={row}\n                                                    id='bootstrap-input'\n                                                    InputProps={{\n                                                        disableUnderline: true,\n                                                        readOnly: true,\n                                                        classes: {\n                                                            root: classes.bootstrapRoot,\n                                                            input: classes.bootstrapInput,\n                                                        },\n                                                    }}\n                                                    InputLabelProps={{\n                                                        shrink: true,\n                                                        className: classes.bootstrapFormLabel,\n                                                    }}\n                                                />\n                                                <Tooltip\n                                                    title={\n                                                        urlCopied\n                                                            ? intl.formatMessage({\n                                                                defaultMessage: 'Copied',\n                                                                id: 'Apis.Details.Labels.copied',\n                                                            })\n                                                            : intl.formatMessage({\n                                                                defaultMessage: 'Copy to clipboard',\n                                                                id: 'Apis.Details.Labels.copy.to.clipboard',\n                                                            })\n                                                    }\n                                                    placement='right'\n                                                    className={classes.iconStyle}\n                                                >\n                                                    <CopyToClipboard\n                                                        text={row}\n                                                        onCopy={() => this.onCopy('urlCopied')}\n                                                    >\n                                                        <Icon color='secondary'>insert_drive_file</Icon>\n                                                    </CopyToClipboard>\n                                                </Tooltip>\n                                            </Grid>\n                                        ))}\n                                        {(api.type === 'HTTP' || api.type === 'SOAPTOREST') && (\n                                            <Button\n                                                size='small'\n                                                onClick={\n                                                    () => this.downloadSwagger(api.id, label.name)\n                                                }\n                                            >\n                                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                                <FormattedMessage\n                                                    id='Apis.Details.Environments.download.swagger'\n                                                    defaultMessage='Swagger'\n                                                />\n                                            </Button>\n                                        )}\n                                    </Grid>\n                                </ExpansionPanelDetails>\n                            </ExpansionPanel>\n                        </Grid>\n                    );\n                })}\n            </Grid>\n        );\n    }\n}\n\nLabels.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\nLabels.contextType = ApiContext;\n\nexport default injectIntl(withStyles(styles)(Labels));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport { Link, withRouter } from 'react-router-dom';\nimport Collapse from '@material-ui/core/Collapse';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Grade from '@material-ui/icons/Grade';\nimport Chip from '@material-ui/core/Chip';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport StarRatingBar from 'AppComponents/Apis/Listing/StarRatingBar';\nimport StarRatingSummary from 'AppComponents/Apis/Details/StarRatingSummary';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport Social from 'AppComponents/Apis/Details/Social/Social';\nimport VerticalDivider from '../../Shared/VerticalDivider';\nimport ApiThumb from '../Listing/ApiThumb';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport AuthManager from '../../../data/AuthManager';\nimport Environments from './Environments';\nimport Labels from './Labels';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    const infoBarHeight = theme.custom.infoBar.height || 70;\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(mainBack);\n\n    return {\n        table: {\n            minWidth: '100%',\n        },\n        root: {\n            height: infoBarHeight,\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            display: 'flex',\n            alignItems: 'center',\n            paddingLeft: theme.spacing(2),\n        },\n        backIcon: {\n            color: theme.palette.primary.main,\n            fontSize: 56,\n            cursor: 'pointer',\n        },\n        backText: {\n            color: theme.palette.primary.main,\n            cursor: 'pointer',\n            fontFamily: theme.typography.fontFamily,\n        },\n        starRate: {\n            fontSize: 40,\n            color: starColor,\n        },\n        infoContent: {\n            color: theme.palette.getContrastText(mainBack),\n            background: mainBack,\n            padding: theme.spacing(3),\n            '& td, & th': {\n                color: theme.palette.getContrastText(mainBack),\n            },\n        },\n        infoContentBottom: {\n            background: theme.custom.infoBar.sliderBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.sliderBackground),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        },\n        contentWrapper: {\n            maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n            alignItems: 'center',\n        },\n        infoBarMain: {\n            width: '100%',\n            zIndex: 100,\n        },\n        buttonView: {\n            textAlign: 'left',\n            justifyContent: 'left',\n            display: 'flex',\n            paddingLeft: theme.spacing(3),\n            cursor: 'pointer',\n        },\n        buttonOverviewText: {\n            display: 'inline-block',\n            paddingTop: 3,\n        },\n        paper: {\n            margin: theme.spacing(1),\n        },\n        leftCol: {\n            width: 200,\n        },\n        iconAligner: {\n            display: 'flex',\n            justifyContent: 'flex-start',\n            alignItems: 'center',\n        },\n        iconTextWrapper: {\n            display: 'inline-block',\n            paddingLeft: 20,\n        },\n        iconEven: {\n            color: theme.custom.infoBar.iconEvenColor,\n            width: theme.spacing(3),\n        },\n        iconOdd: {\n            color: theme.custom.infoBar.iconOddColor,\n            width: theme.spacing(3),\n        },\n        margin: {\n            marginLeft: 30,\n        },\n        contentToTop: {\n            verticlaAlign: 'top',\n        },\n        viewInPubStoreLauncher: {\n            display: 'flex',\n            flexDirection: 'column',\n            color: theme.palette.getContrastText(mainBack),\n            textAlign: 'center',\n            textDecoration: 'none',\n        },\n        linkText: {\n            fontSize: theme.typography.fontSize,\n        },\n        chip: {\n            background: theme.custom.infoBar.tagChipBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.tagChipBackground),\n            marginRight: theme.spacing(1),\n        },\n        expandWrapper: {\n            cursor: 'pointer',\n            display: 'block',\n        },\n        linkTitle: {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    };\n};\n\n/**\n *\n *\n * @class InfoBar\n * @extends {React.Component}\n */\nclass InfoBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            api: null,\n            applications: null,\n            policies: null,\n            dropDownApplications: null,\n            dropDownPolicies: null,\n            notFound: false,\n            tabValue: 'Social Sites',\n            comment: '',\n            commentList: null,\n            showOverview: true,\n            checked: false,\n            avgRating: 0,\n            total: 0,\n            count: 0,\n        };\n        this.getSchema = this.getSchema.bind(this);\n        this.getProvider = this.getProvider.bind(this);\n        this.setRatingUpdate = this.setRatingUpdate.bind(this);\n    }\n\n    ditectCurrentMenu = (location) => {\n        const routeToCheck = 'overview';\n        const { pathname } = location;\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            this.setState({ showOverview: true });\n        } else {\n            this.setState({ showOverview: false });\n        }\n    };\n\n    componentDidMount() {\n        const { history } = this.props;\n        this.ditectCurrentMenu(history.location);\n        history.listen((location) => {\n            this.ditectCurrentMenu(location);\n        });\n    }\n\n    /**\n     *\n     *\n     * @memberof InfoBar\n     */\n    toggleOverview = (todo) => {\n        if (typeof todo === 'boolean') {\n            this.setState({ showOverview: todo });\n        } else {\n            this.setState((state) => ({ showOverview: !state.showOverview }));\n        }\n    };\n\n    getProvider(api) {\n        let { provider } = api;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwner\n            && api.businessInformation.businessOwner.trim() !== ''\n        ) {\n            provider = api.businessInformation.businessOwner;\n        }\n        return provider;\n    }\n\n    getProviderMail(api) {\n        let mail;\n        if (\n            api.businessInformation\n            && api.businessInformation.businessOwnerEmail\n            && api.businessInformation.businessOwnerEmail.trim() !== ''\n        ) {\n            mail = '(' + api.businessInformation.businessOwnerEmail + ')';\n        }\n        return mail;\n    }\n\n    getTechnical(api) {\n        let owner;\n        if (\n            api.businessInformation\n            && api.businessInformation.technicalOwner\n            && api.businessInformation.technicalOwner.trim() !== ''\n        ) {\n            owner = api.businessInformation.technicalOwner;\n        }\n        return owner;\n    }\n\n    getTechnicalMail(api) {\n        let mail;\n        if (\n            api.businessInformation\n            && api.businessInformation.technicalOwnerEmail\n            && api.businessInformation.technicalOwnerEmail.trim() !== ''\n        ) {\n            mail = '(' + api.businessInformation.technicalOwnerEmail + ')';\n        }\n        return mail;\n    }\n\n    getKeyManagers(api) {\n        let keyManagers;\n        let response;\n        if (api.keyManagers) {\n            keyManagers = api.keyManagers;\n            keyManagers.map(name => {\n                if (name === 'all'){\n                    response = 'All Applicable';\n                } else {\n                    response = keyManagers.join();\n                }\n            });\n        }\n        return response;\n    }\n\n    getSchema() {\n        const newAPI = new API();\n        const { api } = this.context;\n        const promisedGraphQL = newAPI.getGraphQLSchemaByAPIId(api.id);\n        promisedGraphQL.then((response) => {\n            const windowUrl = window.URL || window.webkitURL;\n            const binary = new Blob([response.data]);\n            const url = windowUrl.createObjectURL(binary);\n            const anchor = document.createElement('a');\n            anchor.href = url;\n            anchor.download = this.getProvider(api) + '-' + api.name + '-' + api.version + '.graphql';\n            anchor.click();\n            windowUrl.revokeObjectURL(url);\n        });\n    }\n\n    setRatingUpdate(ratings) {\n        if (ratings) {\n            const { avgRating, total, count } = ratings;\n            this.setState({ avgRating, total, count });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof InfoBar\n     */\n    render() {\n        const { api } = this.context;\n\n        const { classes, theme, intl } = this.props;\n        const {\n            notFound, showOverview, prodUrlCopied, sandboxUrlCopied, epUrl, avgRating, total, count,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: { position },\n                infoBar: { showThumbnail, height },\n                tagWise: { key, active },\n                social: { showRating },\n            },\n        } = theme;\n\n        // Remve the tags with a sufix '-group' from tags\n        let apisTagsWithoutGroups = [];\n        if ( !active ){\n            apisTagsWithoutGroups = api.tags;\n        }\n        if (active && api.tags && api.tags.length > 0) {\n            for (let i = 0; i < api.tags.length; i++) {\n                if (api.tags[i].search(key) != -1 && api.tags[i].split(key).length > 0) {\n                    apisTagsWithoutGroups.push(api.tags[i].split(key)[0]);\n                } else {\n                    apisTagsWithoutGroups.push(api.tags[i]);\n                }\n            }\n        }\n\n        const { resourceNotFountMessage } = this.props;\n        const user = AuthManager.getUser();\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        return (\n            <div className={classes.infoBarMain} id='infoBar'>\n                <div className={classes.root}>\n                    {showThumbnail && (\n                        <ApiThumb api={api} customWidth={70} customHeight={50} showInfo={false} />\n                    )}\n                    <div style={{ marginLeft: theme.spacing(1) }}>\n                        <Link to={'/apis/' + api.id + '/overview'} className={classes.linkTitle}>\n                            <Typography variant='h4'>{api.name}</Typography>\n                        </Link>\n                        <Typography variant='caption' gutterBottom align='left'>\n                            {this.getProvider(api)}\n                        </Typography>\n                    </div>\n                    <VerticalDivider height={70} />\n                    {!api.advertiseInfo.advertised && user && showRating && (\n                        <StarRatingSummary avgRating={avgRating} reviewCount={total} returnCount={count} />\n\n                    )}\n                    {api.advertiseInfo.advertised && (\n                        <>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={api.advertiseInfo.originalStoreUrl}\n                                className={classes.viewInPubStoreLauncher}\n                            >\n                                <div>\n                                    <LaunchIcon />\n                                </div>\n                                <div className={classes.linkText}>Visit Publisher Dev Portal</div>\n                            </a>\n                            <VerticalDivider height={70} />\n                        </>\n                    )}\n                    <Social />\n                </div>\n                {position === 'horizontal' && <div style={{ height: 60 }} />}\n                {showOverview && (\n                    <Collapse in={showOverview}>\n                        <div className={classes.infoContent}>\n                            <div className={classes.contentWrapper}>\n                                <Typography>{api.description}</Typography>\n                                <Table className={classes.table}>\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>settings_input_component</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.version'\n                                                            defaultMessage='Version'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{api.version}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_balance_wallet</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.list.context'\n                                                            defaultMessage='Context'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{api.context}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.provider'\n                                                            defaultMessage='Provider'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getProvider(api)} {this.getProviderMail(api)}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>account_box</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.technical'\n                                                            defaultMessage='Technical Owner'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getTechnical(api)} {this.getTechnicalMail(api)}</TableCell>\n                                        </TableRow>\n                                        <TableRow>\n                                            <TableCell component='th' scope='row'>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classes.iconOdd}>vpn_key</Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.keyManagers'\n                                                            defaultMessage='Key Managers'\n                                                        />\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{this.getKeyManagers(api)}</TableCell>\n                                        </TableRow>\n                                        {/* <TableRow>\n                                                    <TableCell component='th' scope='row'>\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconEven}>update</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.last.updated'\n                                                                    defaultMessage='Last updated'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>21 May 2018</TableCell>\n                                                </TableRow> */}\n                                        {user && !api.advertiseInfo.advertised && showRating && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Grade className={classes.iconOdd} />\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.context.rating'\n                                                                defaultMessage='Rating'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <StarRatingBar\n                                                        apiId={api.id}\n                                                        isEditable\n                                                        showSummary={false}\n                                                        setRatingUpdate={this.setRatingUpdate}\n                                                    />\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {api.type === 'GRAPHQL' && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>cloud_download</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.download.Schema'\n                                                                defaultMessage='Download Schema'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Button\n                                                        onClick={this.getSchema}\n                                                        size='small'\n                                                        fontSize='small'\n                                                        variant='outlined'\n                                                    >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.InfoBar.graphQL.schema'\n                                                            defaultMessage='GraphQL Schema'\n                                                        />\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                        {!api.advertiseInfo.advertised ? (\n                                            <>\n                                                <TableRow>\n                                                    <TableCell\n                                                        component='th'\n                                                        scope='row'\n                                                        className={classes.contentToTop}\n                                                    >\n                                                        <div className={classes.iconAligner}>\n                                                            <Icon className={classes.iconOdd}>desktop_windows</Icon>\n                                                            <span className={classes.iconTextWrapper}>\n                                                                <FormattedMessage\n                                                                    id='Apis.Details.InfoBar.gateway.environments'\n                                                                    defaultMessage='Gateway Environments'\n                                                                />\n                                                            </span>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <Environments />\n                                                    </TableCell>\n                                                </TableRow>\n                                                {api.labels.length !== 0 && (\n                                                    <TableRow>\n                                                        <TableCell\n                                                            component='th'\n                                                            scope='row'\n                                                            className={classes.contentToTop}\n                                                        >\n                                                            <div className={classes.iconAligner}>\n                                                                <Icon className={classes.iconOdd}>games</Icon>\n                                                                <span className={classes.iconTextWrapper}>\n                                                                    <FormattedMessage\n                                                                        id='Apis.Details.InfoBar.available.gLabels'\n                                                                        defaultMessage='Available Gateways'\n                                                                    />\n                                                                </span>\n                                                            </div>\n                                                        </TableCell>\n                                                        <TableCell>\n                                                            <Labels />\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )}\n                                            </>\n                                        ) : (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>account_circle</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.owner'\n                                                                defaultMessage='Owner'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>{api.advertiseInfo.apiOwner}</TableCell>\n                                            </TableRow>\n                                        )}\n                                        {apisTagsWithoutGroups && apisTagsWithoutGroups.length > 0 && (\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>\n                                                    <div className={classes.iconAligner}>\n                                                        <Icon className={classes.iconOdd}>bookmark</Icon>\n                                                        <span className={classes.iconTextWrapper}>\n                                                            <FormattedMessage\n                                                                id='Apis.Details.InfoBar.list.tags'\n                                                                defaultMessage='Tags'\n                                                            />\n                                                        </span>\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    {apisTagsWithoutGroups.map((tag) => (\n                                                        <Chip label={tag} className={classes.chip} key={tag} />\n                                                    ))}\n                                                </TableCell>\n                                            </TableRow>\n                                        )}\n                                    </TableBody>\n                                </Table>\n                            </div>\n                        </div>\n                    </Collapse>\n                )}\n                <div className={classes.infoContentBottom}>\n                    <Button className={classes.expandWrapper} onClick={this.toggleOverview}>\n                        <div className={classes.buttonView}>\n                            {showOverview ? (\n                                <Typography className={classes.buttonOverviewText}>\n                                    <FormattedMessage id='Apis.Details.InfoBar.less' defaultMessage='LESS' />\n                                </Typography>\n                            ) : (\n                                <Typography className={classes.buttonOverviewText}>\n                                    <FormattedMessage id='Apis.Details.InfoBar.more' defaultMessage='MORE' />\n                                </Typography>\n                            )}\n                            {showOverview ? <Icon>arrow_drop_up</Icon> : <Icon>arrow_drop_down</Icon>}\n                        </div>\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\nInfoBar.defaultProps = {\n    classes: {\n        leftMenu: {},\n        leftMenuHorizontal: {},\n        leftMenuVerticalLeft: {},\n        leftMenuVerticalRight: {},\n        leftLInkMain: {},\n        leftLInkMainText: {},\n        detailsContent: {},\n        content: {},\n        contentLoader: {},\n        contentLoaderRightMenu: {},\n    },\n};\nInfoBar.propTypes = {\n    classes: PropTypes.shape({}),\n    theme: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nInfoBar.contextType = ApiContext;\n\nexport default injectIntl(withRouter(withStyles(styles, { withTheme: true })(InfoBar)));\n","import React, { useContext } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n    button: {\n        mt: 2,\n        mr: 1,\n    },\n    wizardButtons: {\n        pl: 2,\n    },\n};\n\nconst ButtonPanel = (props) => {\n    const {\n        currentStep, handleCurrentStep, handleReset, nextActive,\n    } = props;\n    const stepsLength = 5;\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const history = useHistory();\n\n    /**\n     * Redirect  to the API console page\n     */\n    const handleTest = () => {\n        history.push(`/apis/${api.id}/test`);\n    };\n\n    /**\n     * Redirect back to credentials page\n     */\n    const handleCancel = () => {\n        updateSubscriptionData(history.push('credentials'));\n    };\n\n    return (\n        <Box display='flex' {...styles.wizardButtons}>\n            {currentStep < stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleCancel}\n                        variant='text'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.Cancel'\n                            defaultMessage='CANCEL'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        onClick={handleTest}\n                        {...styles.button}\n                        variant='outlined'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.test'\n                            defaultMessage='Test'\n                        />\n                    </Button>\n                </Box>\n            )}\n            {currentStep >= stepsLength - 1 && (\n                <Box {...styles.button}>\n                    <Button\n                        variant='outlined'\n                        onClick={handleReset}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.Wizard.rest'\n                            defaultMessage='Reset'\n                        />\n                    </Button>\n                </Box>\n            )}\n            <Box {...styles.button}>\n                <Button\n                    variant='contained'\n                    color='primary'\n                    onClick={handleCurrentStep}\n                    disabled={!nextActive}\n                >\n                    {currentStep === stepsLength - 1\n                        ? (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.finish'\n                                defaultMessage='Finish'\n                            />\n                        )\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Credentials.Wizard.Wizard.next'\n                                defaultMessage='Next'\n                            />\n                        )}\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nButtonPanel.defaultProps = {\n    nextActive: true,\n};\n\nButtonPanel.propTypes = {\n    currentStep: PropTypes.func.isRequired,\n    handleCurrentStep: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    nextActive: PropTypes.bool,\n};\n\nexport default ButtonPanel;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport ApplicationCreateForm from 'AppComponents/Shared/AppsAndKeys/ApplicationCreateForm';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport cloneDeep from 'lodash.clonedeep';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage'\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    appCreateFormWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n    warningIcon: {\n        color: '#ff9a00',\n        fontSize: 43,\n        marginRight: 10,\n    },\n}));\n\nconst createAppStep = (props) => {\n    const APPLICATION_STATES = {\n        CREATED: 'CREATED',\n        APPROVED: 'APPROVED',\n        REJECTED: 'REJECTED',\n    };\n    const [throttlingPolicyList, setThrottlingPolicyList] = useState([]);\n    const [applicationRequest, setApplicationRequest] = useState({\n        name: '',\n        throttlingPolicy: '',\n        description: '',\n        tokenType: 'JWT',\n        groups: null,\n        attributes: {},\n    });\n    const [isNameValid, setIsNameValid] = useState(true);\n    const [allAppAttributes, setAllAppAttributes] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const [hasValidKM, setHasValidKM] = useState(null);\n    const {\n        currentStep, setCreatedApp, incrementStep, intl, setStepStatus, stepStatuses,\n    } = props;\n    const { api: apiObject } = useContext(ApiContext);\n\n    const validateName = (value) => {\n        if (!value || value.trim() === '') {\n            setIsNameValid({ isNameValid: false });\n            return Promise.reject(new Error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            })));\n        }\n        setIsNameValid({ isNameValid: true });\n        return Promise.resolve(true);\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const isRequiredAttribute = (name) => {\n        if (allAppAttributes) {\n            for (let i = 0; i < allAppAttributes.length; i++) {\n                if (allAppAttributes[i].attribute === name) {\n                    return allAppAttributes[i].required === 'true';\n                }\n            }\n        }\n        return false;\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {Object} attribute value\n     * @memberof ApplicationFormHandler\n     */\n    const getAttributeValue = (name) => {\n        return applicationRequest.attributes[name];\n    };\n\n    const createApplication = () => {\n        const api = new API();\n        if (!applicationRequest.name || applicationRequest.name.trim() === '') {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Application name is required',\n                id: 'Apis.Details.Credentials.Wizard.CreateAppStep.application.name.is.required',\n            }));\n            return;\n        }\n        api.createApplication(applicationRequest)\n            .then((response) => {\n                const data = response.body;\n                if (data.status === APPLICATION_STATES.APPROVED) {\n                    const appCreated = { value: data.applicationId, label: data.name };\n                    console.log('Application created successfully.');\n                    setCreatedApp(appCreated);\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response && response.body) {\n                    const message = response.body.description || intl.formatMessage({\n                        defaultMessage: 'Error while creating the application',\n                        id: 'Apis.Details.Credentials.Wizard.CreateAppStep.error.while.creating.the.application',\n                    });\n                    Alert.error(message);\n                } else {\n                    Alert.error(error.message);\n                }\n                console.error('Error while creating the application');\n            });\n    };\n\n    /**\n     * @param {object} name application attribute name\n     * @returns {void}\n     * @memberof ApplicationFormHandler\n     */\n    const handleAttributesChange = (name) => (event) => {\n        const newApplicationRequest = cloneDeep(applicationRequest);\n        newApplicationRequest.attributes[name] = event.target.value;\n        setApplicationRequest(newApplicationRequest);\n    };\n\n    /**\n     * add a new group function\n     * @param {*} chip newly added group\n     * @param {*} appGroups already existing groups\n     */\n    const handleAddChip = (chip, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.slice();\n        values.push(chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    /**\n     * remove a group from already existing groups function\n     * @param {*} chip selected group to be removed\n     * @param {*} index selected group index to be removed\n     * @param {*} appGroups already existing groups\n     */\n    const handleDeleteChip = (chip, index, appGroups) => {\n        const newRequest = { ...applicationRequest };\n        let values = appGroups || [];\n        values = values.filter((v) => v !== chip);\n        newRequest.groups = values;\n        setApplicationRequest(newRequest);\n    };\n\n    useEffect(() => {\n        // Get all the tiers to populate the drop down.\n        const api = new API();\n        const promiseTiers = api.getAllTiers('application');\n        const promisedAttributes = api.getAllApplicationAttributes();\n        const promisedKeyManagers = api.getKeyManagers();\n\n        Promise.all([promiseTiers, promisedAttributes, promisedKeyManagers])\n            .then((response) => {\n                const [tierResponse, allAttributes, keyManagers] = response;\n                const throttlingPolicyListLocal = tierResponse.body.list.map((item) => item.name);\n                const newRequest = { ...applicationRequest };\n                if (throttlingPolicyListLocal.length > 0) {\n                    [newRequest.throttlingPolicy] = throttlingPolicyListLocal;\n                }\n                const allAppAttr = [];\n                allAttributes.body.list.map((item) => allAppAttr.push(item));\n                if (allAttributes.length > 0) {\n                    newRequest.attributes = allAppAttr.filter((item) => !item.hidden);\n                }\n                // Selecting the resident key manager\n                const responseKeyManagerList = [];\n                keyManagers.body.list.map((item) => responseKeyManagerList.push(item));\n\n                let hasValidKM;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerList_default = responseKeyManagerList.filter(x => x.name === 'Resident Key Manager' && x.enabled);\n                    hasValidKM = responseKeyManagerList_default.length !== 0;\n                }\n                setHasValidKM(hasValidKM);\n                setApplicationRequest(newRequest);\n                setThrottlingPolicyList(throttlingPolicyListLocal);\n                setAllAppAttributes(allAppAttr);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const classes = useStyles();\n    if (!hasValidKM) {\n        return (\n            <Box mb={1} ml={4}>\n                <InlineMessage type='warn'>\n                        <FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.CreateAppStep.default.km.msg'\n                            defaultMessage={'Wizard is only accessible via the Resident Key Manager.'\n                                + 'But the Resident Key Manager is disabled at the moment.'}\n                        />\n                </InlineMessage>\n                <Box mt={2}>\n                    <Link to={`/apis/${apiObject.id}/credentials`}>\n                        <Button variant=\"contained\"><FormattedMessage\n                            id='Apis.Details.Credentials.Wizard.CreateAppStep.cancel'\n                            defaultMessage='Cancel'\n                        /></Button>\n                    </Link>\n                </Box>\n            </Box>);\n    }\n\n    return (\n        <div className={classes.appCreateFormWrapper}>\n            <Box px={2} display='flex' justifyContent='flex-start'>\n                <Grid item xs={10} md={6}>\n                    <ApplicationCreateForm\n                        throttlingPolicyList={throttlingPolicyList}\n                        applicationRequest={applicationRequest}\n                        updateApplicationRequest={setApplicationRequest}\n                        validateName={validateName}\n                        isNameValid={isNameValid}\n                        allAppAttributes={allAppAttributes}\n                        handleAttributesChange={handleAttributesChange}\n                        isRequiredAttribute={isRequiredAttribute}\n                        getAttributeValue={getAttributeValue}\n                        handleDeleteChip={handleDeleteChip}\n                        handleAddChip={handleAddChip}\n                    />\n                </Grid>\n            </Box>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={createApplication}\n            />\n        </div>\n    );\n};\n\nexport default injectIntl(createAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport SubscribeToApi from 'AppComponents/Shared/AppsAndKeys/SubscribeToApi';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport ButtonPanel from './ButtonPanel';\n\nconst subscribeToAppStep = (props) => {\n    const SUBSCRIPTION_STATES = {\n        ON_HOLD: 'ON_HOLD',\n        UNBLOCKED: 'UNBLOCKED',\n        REJECTED: 'REJECTED',\n    };\n    const [subscriptionRequest, setApplicationRequest] = useState({\n        applicationId: '',\n        apiId: '',\n        throttlingPolicy: '',\n    });\n    const { api: apiObject } = useContext(ApiContext);\n    const [newApp, setNewApp] = useState(null);\n    const [throttlingPolicyList] = useState(apiObject.tiers);\n    const {\n        currentStep, createdApp, incrementStep, intl, setStepStatus,\n        stepStatuses, classes,\n    } = props;\n    const subscribeToApplication = () => {\n        const api = new API();\n        api.subscribe(\n            subscriptionRequest.apiId, subscriptionRequest.applicationId,\n            subscriptionRequest.throttlingPolicy,\n        )\n            .then((response) => {\n                if (response.body.status === SUBSCRIPTION_STATES.UNBLOCKED) {\n                    console.log('Subscription created successfully with ID : ' + response.body.subscriptionId);\n                    Alert.info(intl.formatMessage({\n                        defaultMessage: 'Subscribed successfully',\n                        id: 'Apis.Details.Credentials.Wizard.SubscribeToAppStep.subscribed.successfully',\n                    }));\n                    incrementStep();\n                    setStepStatus(stepStatuses.PROCEED);\n                } else {\n                    setStepStatus(stepStatuses.BLOCKED);\n                }\n            })\n            .catch((error) => {\n                console.log('Error while creating the subscription.');\n                console.error(error);\n            });\n    };\n\n    useEffect(() => {\n        const newSubscriptionRequest = { ...subscriptionRequest, apiId: apiObject.id };\n        if (throttlingPolicyList) {\n            const [tierData] = throttlingPolicyList;\n            newSubscriptionRequest.throttlingPolicy = tierData.tierName;\n        }\n        if (createdApp) {\n            newSubscriptionRequest.applicationId = createdApp.value;\n        }\n        setApplicationRequest(newSubscriptionRequest);\n        setNewApp(createdApp);\n    }, [createdApp]);\n\n    return (\n        <>\n            <SubscribeToApi\n                throttlingPolicyList={throttlingPolicyList}\n                applicationsAvailable={[newApp]}\n                subscriptionRequest={subscriptionRequest}\n                updateSubscriptionRequest={setApplicationRequest}\n            />\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={subscribeToApplication}\n            />\n        </>\n    );\n};\n\nexport default injectIntl(subscribeToAppStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Application from 'AppData/Application';\nimport API from 'AppData/api';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport cloneDeep from 'lodash.clonedeep';\nimport ButtonPanel from './ButtonPanel';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Settings from 'Settings';\n\nconst useStyles = makeStyles((theme) => ({\n    keyConfigWrapper: {\n        paddingLeft: theme.spacing(4),\n        flexDirection: 'column',\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n    paper: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    subTitle: {\n        fontWeight: 400,\n    },\n    tabPanel: {\n        '& .MuiBox-root': {\n            padding: 0,\n        }\n    },\n    hr: {\n        border: 'solid 1px #efefef',\n    },\n    muiFormGroupRoot: {\n        flexDirection: 'row',\n    },\n    table: {\n        minWidth: '100%',\n        '& td, & th': {\n            padding: theme.spacing(),\n        }\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n}));\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <>{children}</>\n            )}\n        </div>\n    );\n};\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst generateKeysStep = (props) => {\n    const intl = useIntl();\n\n    const keyStates = {\n        COMPLETED: 'COMPLETED',\n        APPROVED: 'APPROVED',\n        CREATED: 'CREATED',\n        REJECTED: 'REJECTED',\n    };\n    const [selectedType, setSelectedType] = useState('PRODUCTION');\n    const [nextActive, setNextActive] = useState(true);\n    const [isUserOwner, setIsUserOwner] = useState(false);\n    const [keyManager, setKeyManager] = useState(null);\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n\n    const [keyRequest, setKeyRequest] = useState({\n        keyType: 'SANDBOX',\n        supportedGrantTypes: [],\n        callbackUrl: '',\n        additionalProperties: {},\n        keyManager: '',\n    });\n\n    const {\n        currentStep, createdApp, incrementStep, setCreatedKeyType,\n        setStepStatus, stepStatuses, setCreatedSelectedTab\n    } = props;\n\n    /**\n    * @param {*} event event\n    * @param {*} currentTab current tab\n    * @memberof Wizard\n    */\n    const handleRadioChange = (event) => {\n        const newKeyType = event.target.value;\n        setSelectedType(newKeyType);\n        const newKeyRequest = cloneDeep(keyRequest);\n        newKeyRequest.keyType = newKeyType;\n        setKeyRequest(newKeyRequest);\n    };\n\n    /**\n    * @param {*} event event\n    * @param {*} currentTab current tab\n    * @memberof Wizard\n    */\n    const handleTabChange = (event, newSelectedTab) => {\n        setSelectedTab(newSelectedTab);\n    };\n\n    useEffect(() => {\n        setIsUserOwner(true);\n        const api = new API();\n        const promisedKeyManagers = api.getKeyManagers();\n        promisedKeyManagers\n            .then((response) => {\n                const responseKeyManagerList = [];\n                response.body.list.map((item) => responseKeyManagerList.push(item));\n\n                // Selecting a key manager from the list of key managers.\n                let selectedKeyManager;\n                if (responseKeyManagerList.length > 0) {\n                    const responseKeyManagerList_default = responseKeyManagerList.filter(x => x.name === 'Resident Key Manager');\n                    selectedKeyManager = responseKeyManagerList_default.length > 0 ? responseKeyManagerList_default[0]\n                        : responseKeyManagerList[0];\n                }\n                setKeyManager(selectedKeyManager);\n\n                // Setting key request\n                try {\n                    const newKeyRequest = { ...keyRequest };\n                    newKeyRequest.keyManager = selectedKeyManager.name;\n                    newKeyRequest.supportedGrantTypes = selectedKeyManager.availableGrantTypes;\n                    if (selectedKeyManager.availableGrantTypes.includes('implicit')\n                        || selectedKeyManager.availableGrantTypes.includes('authorization_code')) {\n                        newKeyRequest.callbackUrl = 'http://localhost';\n                    }\n                    if (!selectedKeyManager.availableGrantTypes.includes('client_credentials')) {\n                        setNextActive(false);\n                    }\n                    setKeyRequest(newKeyRequest);\n                } catch (e) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Credentials.Wizard.GenerateKeysStep.error.keymanager',\n                        defaultMessage: 'Error while selecting the key manager',\n                    }));\n                }\n\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, []);\n\n    const generateKeys = () => {\n        Application.get(createdApp.value).then((application) => {\n            return application.generateKeys(\n                keyRequest.keyType, keyRequest.supportedGrantTypes,\n                keyRequest.callbackUrl,\n                keyRequest.additionalProperties, keyRequest.keyManager\n            );\n        }).then((response) => {\n            if (response.keyState === keyStates.CREATED || response.keyState === keyStates.REJECTED) {\n                setStepStatus(stepStatuses.BLOCKED);\n            } else {\n                incrementStep();\n                setCreatedKeyType(keyRequest.keyType);\n                setCreatedSelectedTab(selectedTab);\n                setStepStatus(stepStatuses.PROCEED);\n                console.log('Keys generated successfully with ID : ' + response);\n            }\n        }).catch((error) => {\n            if (process.env.NODE_ENV !== 'production') {\n                console.log(error);\n            }\n            const { status } = error;\n            if (status === 404) {\n                setNotFound(true);\n            }\n        });\n    };\n\n\n    const classes = useStyles();\n\n    return (\n        <>\n            <Box component='div' marginLeft={4}>\n                <Grid container spacing={2}>\n                    {keyManager && (<>\n                        <Grid item xs={12} md={12} lg={3}>\n                            <Typography color='inherit' variant='subtitle2' component='div'>\n                                <FormattedMessage\n                                    defaultMessage='Key Configuration'\n                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration'\n                                />\n                            </Typography>\n                            <Typography color='inherit' variant='caption' component='p'>\n                                <FormHelperText><FormattedMessage\n                                    defaultMessage={'These configurations are set for the purpose of the wizard.' +\n                                        'You have more control over them when you go to the application view. '}\n                                    id='Apis.Details.Credentials.Wizard.GenerateKeysStep.key.configuration.help'\n                                /></FormHelperText>\n\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12} md={12} lg={9}>\n                            <Table className={classes.table}>\n                                <TableBody>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.config.km.name'\n                                                defaultMessage='Key Manager'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <div>{keyManager.displayName || keyManager.name}</div>\n                                            <Typography variant=\"caption\" component='div'>{keyManager.description}</Typography>\n                                        </TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.environment'\n                                                defaultMessage='Environment'\n                                            />\n                                        </TableCell>\n                                        <TableCell>Sandbox</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.tokenEndpoint'\n                                                defaultMessage='Token Endpoint'\n                                            />\n                                        </TableCell>\n                                        <TableCell>{keyManager.tokenEndpoint}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.revokeEndpoint'\n                                                defaultMessage='Revoke Endpoint'\n                                            />\n                                        </TableCell>\n                                        <TableCell>{keyManager.revokeEndpoint}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.userInfoEndpoint'\n                                                defaultMessage='User Info Endpoint'\n                                            />\n                                        </TableCell>\n                                        <TableCell>{keyManager.userInfoEndpoint}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell component='th' scope='row' className={classes.leftCol}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Credentials.Wizard.GenerateKeysStep.list.grantTypes'\n                                                defaultMessage='Grant Types'\n                                            />\n                                        </TableCell>\n                                        <TableCell>{keyManager.availableGrantTypes.map(gt => (<span>{Settings.grantTypes[gt] || gt}, </span>))}</TableCell>\n                                    </TableRow>\n                                </TableBody>\n                            </Table>\n                        </Grid>\n                    </>)}\n                </Grid>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <Box component='span' m={1}>\n                            <ButtonPanel\n                                classes={classes}\n                                currentStep={currentStep}\n                                handleCurrentStep={generateKeys}\n                                nextActive={nextActive}\n                            />\n                        </Box>\n\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    );\n};\n\nexport default generateKeysStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport Tokens from 'AppComponents/Shared/AppsAndKeys/Tokens';\nimport Application from 'AppData/Application';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(7),\n    },\n    title: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst generateAccessTokenStep = (props) => {\n    const [keyType, setKeyType] = useState('PRODUCTION');\n    const [selectedTab, setSelectedTab] = useState('Resident Key Manager');\n    const [subscriptionScopes, setSubscriptionScopes] = useState([]);\n    const [notFound, setNotFound] = useState(false);\n\n    const [accessTokenRequest, setAccessTokenRequest] = useState({\n        timeout: 3600,\n        scopesSelected: [],\n        keyType: '',\n    });\n    const {\n        currentStep, createdApp, setCreatedToken, incrementStep, createdKeyType, intl, createdSelectedTab\n    } = props;\n\n    useEffect(() => {\n        const newRequest = { ...accessTokenRequest, keyType: createdKeyType };\n        setKeyType(createdKeyType);\n        setSelectedTab(createdSelectedTab);\n        setAccessTokenRequest(newRequest);\n    }, [createdKeyType,createdSelectedTab]);\n\n    useEffect(() => {\n        Application.get(createdApp.value)\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const subscriptionScopesList = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    setSubscriptionScopes(subscriptionScopesList);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    }, []);\n\n    const generateAccessToken = () => {\n        setSelectedTab(createdSelectedTab);\n        Application.get(createdApp.value)\n            .then((application) => {\n                return application.generateToken(\n                    selectedTab,\n                    accessTokenRequest.keyType,\n                    accessTokenRequest.timeout,\n                    accessTokenRequest.scopesSelected,\n                );\n            })\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                setCreatedToken(response);\n                incrementStep();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n    };\n    const classes = useStyles();\n    const messages = defineMessages({\n        dataInfo: {\n            id: 'Apis.Details.Credentials.Wizard.GenerateAccessTokenStep',\n            defaultMessage: 'Generate Access Token for {keyType} environment',\n        },\n    });\n\n    return (\n        <>\n            <div className={classes.tokenWrapper}>\n                <Typography variant='subtitle1' component='div' className={classes.title}>\n                    {intl.formatMessage(messages.dataInfo, { keyType })}\n                </Typography>\n                <Tokens\n                    updateAccessTokenRequest={setAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                    subscriptionScopes={subscriptionScopes}\n                />\n                <ButtonPanel\n                    classes={classes}\n                    currentStep={currentStep}\n                    handleCurrentStep={generateAccessToken}\n                />\n            </div>\n        </>\n    );\n};\n\nexport default injectIntl(generateAccessTokenStep);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport ViewToken from 'AppComponents/Shared/AppsAndKeys/ViewToken';\nimport { ApiContext } from 'AppComponents/Apis/Details/ApiContext';\nimport { Box } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ButtonPanel from './ButtonPanel';\n\nconst useStyles = makeStyles((theme) => ({\n    tokenWrapper: {\n        paddingLeft: theme.spacing(2),\n    },\n}));\n\nconst copyAccessTokenStep = (props) => {\n    const {\n        currentStep, createdToken, handleReset, handleRedirectTest,\n    } = props;\n    const history = useHistory();\n    const { api, updateSubscriptionData } = useContext(ApiContext);\n    const completeStep = () => {\n        updateSubscriptionData(history.push(`/apis/${api.id}/credentials`));\n    };\n    const classes = useStyles();\n\n    return (\n        <div className={classes.tokenWrapper}>\n            <Grid md={10}>\n                <Box my={1} mx={2}>\n                    <ViewToken token={{ ...createdToken, isOauth: true }} />\n                </Box>\n            </Grid>\n            <ButtonPanel\n                classes={classes}\n                currentStep={currentStep}\n                handleCurrentStep={completeStep}\n                handleReset={handleReset}\n            />\n        </div>\n    );\n};\n\nexport default copyAccessTokenStep;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Paper, Box } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport CreateAppStep from './CreateAppStep';\nimport SubscribeToAppStep from './SubscribeToAppStep';\nimport GenerateKeysStep from './GenerateKeysStep';\nimport GenerateAccessTokenStep from './GenerateAccessTokenStep';\nimport CopyAccessTokenStep from './CopyAccessTokenStep';\n\nconst styles = (theme) => ({\n    paper: {\n        marginLeft: theme.spacing(3),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    boxWrapper: {\n        '& h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& .MuiButton-containedPrimary span.MuiButton-label' : {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        }\n    }\n    \n});\n\nconst stepComponents = [CreateAppStep, SubscribeToAppStep, GenerateKeysStep,\n    GenerateAccessTokenStep, CopyAccessTokenStep];\n\n/**\n * Class used for wizard\n */\nclass Wizard extends Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { intl } = this.props;\n        this.steps = [\n            intl.formatMessage({\n                defaultMessage: 'Create application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.create',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Subscribe to new application',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.subscribe.to.new.application',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Keys',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.keys',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Generate Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.generate.access.token',\n            }),\n            intl.formatMessage({\n                defaultMessage: 'Copy Access Token',\n                id: 'Apis.Details.Credentials.Wizard.Wizard.copy.access.token',\n            }),\n        ];\n        this.stepStatuses = {\n            PROCEED: 'PROCEED',\n            BLOCKED: 'BLOCKED',\n        };\n        this.state = {\n            currentStep: 0,\n            createdApp: null,\n            createdToken: null,\n            redirect: false,\n            createdKeyType: '',\n            createdSelectedTab: '',\n            stepStatus: 'PROCEED',\n        };\n    }\n\n    /**\n     * Used to set the status retured after executing each step. Used in workflow\n     * scenario to evaluate wheather we can proceed to next step\n     * @param {*} stepStatus status\n     */\n    setStepStatus = (stepStatus) => {\n        this.setState({ stepStatus });\n    }\n\n    /**\n     * Set the created app from step 1\n     * @param {*} createdApp app created\n     */\n    setCreatedApp = (createdApp) => {\n        this.setState({ createdApp });\n    }\n\n    /**\n     * Set the created token from step 4\n     * @param {*} createdToken token created\n     */\n    setCreatedToken = (createdToken) => {\n        this.setState({ createdToken });\n    }\n\n    /**\n     * Set the created keytype from step 3\n     * @param {*} createdKeyType token created\n     */\n    setCreatedKeyType = (createdKeyType) => {\n        this.setState({ createdKeyType });\n    }\n\n    /**\n     * Set the created selectedTab from step 3\n     * @param {*} selectedTab token created\n     */\n    setCreatedSelectedTab = (createdSelectedTab) => {\n        this.setState({ createdSelectedTab });\n    }\n\n    /**\n     * Increment the current step or next step by 1\n     */\n    handleNext = () => {\n        this.setState(({ currentStep }) => {\n            return { currentStep: currentStep + 1 };\n        });\n    }\n\n    /**\n     * Rest the currentStep to 0 and bring wizard back to first step\n     * @memberof Wizard\n     */\n    handleReset = () => {\n        this.setState({\n            currentStep: 0,\n        });\n    };\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const { currentStep, stepStatus } = this.state;\n        const CurrentStepComponent = stepComponents[currentStep];\n        return (\n            <>\n                <Typography variant='h4' className={classes.titleSub}>\n                    <FormattedMessage\n                        id={'Apis.Details.Credentials.Credentials'\n                    + '.api.credentials.generate'}\n                        defaultMessage='Subscription &amp; Key Generation Wizard'\n                    />\n                </Typography>\n                <Paper elevation={0} className={classes.paper}>\n                    <Box py={1} mx='auto' display='flex' >\n                        <Grid item xs={12} md={12}>\n                            <Stepper activeStep={currentStep}>\n                                {this.steps.map((label) => {\n                                    return (\n                                        <Step key={label}>\n                                            <StepLabel>{label}</StepLabel>\n                                        </Step>\n                                    );\n                                })}\n                            </Stepper>\n                        </Grid>\n                    </Box>\n                    <Box py={1} mx='auto' display='block' className={classes.boxWrapper}>\n                        {stepStatus === this.stepStatuses.PROCEED && (\n                            <>\n                                <CurrentStepComponent\n                                    {...this.state}\n                                    incrementStep={this.handleNext}\n                                    setStepStatus={this.setStepStatus}\n                                    stepStatuses={this.stepStatuses}\n                                    classes={classes}\n                                    setCreatedApp={this.setCreatedApp}\n                                    setCreatedKeyType={this.setCreatedKeyType}\n                                    setCreatedSelectedTab={this.setCreatedSelectedTab}\n                                    setCreatedToken={this.setCreatedToken}\n                                    handleReset={this.handleReset}\n                                />\n                            </>\n                        )}\n                    </Box>\n                    <Box py={1} mb={1} mx='auto' display='flex' >\n                        {stepStatus === this.stepStatuses.BLOCKED && (\n                            <Box pt={2} px={3} display='flex' >\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Credentials.Wizard.Wizard.approval.request.'\n                                                + 'for.this.step.has'}\n                                        defaultMessage='A request to register this step has been sent.'\n                                    />\n                                </Typography>\n                            </Box>\n                        )}\n                    </Box>\n                </Paper>\n            </>\n        );\n    }\n}\n\nWizard.propTypes = {\n    classes: PropTypes.shape({\n        appBar: PropTypes.string,\n        toolbar: PropTypes.string,\n        subscribeTitle: PropTypes.string,\n        plainContent: PropTypes.string,\n        root: PropTypes.string,\n        instructions: PropTypes.string,\n        button: PropTypes.string,\n        wizardContent: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.func.isRequired,\n    throttlingPolicyList: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Wizard));\n","/* eslint-disable react/jsx-props-no-spreading */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport {\n    Route, Switch, Redirect, Link, withRouter,\n} from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Api from 'AppData/api';\nimport AuthManager from 'AppData/AuthManager';\nimport withSettings from 'AppComponents/Shared/withSettingsContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport { app } from 'Settings';\nimport CustomIcon from '../../Shared/CustomIcon';\nimport LeftMenuItem from '../../Shared/LeftMenuItem';\nimport { ResourceNotFound } from '../../Base/Errors/index';\nimport InfoBar from './InfoBar';\nimport { ApiContext } from './ApiContext';\nimport Progress from '../../Shared/Progress';\nimport Wizard from './Credentials/Wizard/Wizard';\nimport User from '../../../data/User';\n\n\nconst ApiConsole = lazy(() => import('./ApiConsole/ApiConsole' /* webpackChunkName: \"APIConsole\" */));\nconst GraphQLConsole = lazy(() => import('./GraphQLConsole/GraphQLConsole' /* webpackChunkName: \"GraphQLConsole\" */));\nconst Overview = lazy(() => import('./Overview' /* webpackChunkName: \"APIOverview\" */));\nconst Documents = lazy(() => import('./Documents/Documents' /* webpackChunkName: \"APIDocuments\" */));\nconst Credentials = lazy(() => import('./Credentials/Credentials' /* webpackChunkName: \"APICredentials\" */));\nconst Comments = lazy(() => import('./Comments/Comments' /* webpackChunkName: \"APIComments\" */));\nconst Sdk = lazy(() => import('./Sdk' /* webpackChunkName: \"APISdk\" */));\n\nconst LoadableSwitch = withRouter((props) => {\n    const { match, api } = props;\n    const apiUuid = match.params.api_uuid;\n    const path = '/apis/';\n    const { advertised } = api.advertiseInfo;\n    const redirectURL = path + apiUuid + '/overview';\n\n    let tryoutRoute;\n    if (api.type === 'GRAPHQL') {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={GraphQLConsole} />\n    }else {\n        tryoutRoute = <Route path='/apis/:apiUuid/test' component={ApiConsole} />\n    }\n\n    return (\n        <Suspense fallback={<Progress />}>\n            <Switch>\n                <Redirect exact from={`/apis/${apiUuid}`} to={redirectURL} />\n                <Route path='/apis/:apiUuid/overview' render={() => <Overview {...props} />} />\n                <Route path='/apis/:apiUuid/documents' component={Documents} />\n                <Route exact path='/apis/:apiUuid/credentials/wizard' component={Wizard} />\n                {!advertised && <Route path='/apis/:apiUuid/comments' component={Comments} />}\n                {!advertised && <Route path='/apis/:apiUuid/credentials' component={Credentials} />}\n                {!advertised && tryoutRoute}\n                {!advertised && <Route path='/apis/:apiUuid/sdk' component={Sdk} />}\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </Suspense>\n    );\n});\n\n/**\n *\n * @returns style object\n * @param {*} theme\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? width : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const shiftToLeftMinView = position === 'vertical-left' ? 45 : 0;\n    const shiftToRightMinView = position === 'vertical-right' ? 45 : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        leftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            left: 0,\n            overflowY: 'auto', \n        },\n        leftMenuVerticalLeftMinView: {\n            width: 45,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',  \n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            textDecoration: 'none',\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        contentExpandView: {\n            display: 'flex',\n            flex: 1,\n            flexGrow: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeftMinView,\n            marginRight: shiftToRightMinView,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden', \n            minHeight: 'calc(100vh - 114px)',\n        },\n        shiftLeft: {\n            marginLeft: 0,\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {React.Component}\n */\nclass Details extends React.Component {\n    /**\n     *Creates an instance of Details.\n     * @param {*} props\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        /**\n         *\n         *\n         * @memberof Details\n         */\n        this.updateSubscriptionData = (callback) => {\n            let existingSubscriptions = null;\n            let promisedApplications = null;\n\n            const restApi = new Api();\n\n            // const subscriptionClient = new Subscription();\n            const promisedAPI = restApi.getAPIById(this.api_uuid);\n\n            promisedAPI\n                .then((api) => {\n                    this.setState({ api: api.body });\n                })\n                .catch((error) => {\n                    const { status, response } = error;\n                    const { setTenantDomain, intl } = this.props;\n\n                    const message = intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Details.index.invalid.tenant.domain',\n                    });\n                    if (response && response.body.code === 901300) {\n                        setTenantDomain('INVALID');\n                        Alert.error(message);\n                    }\n                    console.error('Error when getting apis', error);\n                    if (status === 404 || status === 403) {\n                        this.setState({ notFound: true });\n                    }\n                });\n            const user = AuthManager.getUser();\n            if(user === null){\n                const user1 = new User();\n                this.setState({open:user1.isSideBarOpen});\n            }\n            if (user != null) {\n                this.setState({open:user.isSideBarOpen});\n                existingSubscriptions = restApi.getSubscriptions(this.api_uuid, null);\n                const subscriptionLimit = Settings.app.subscribeApplicationLimit || 5000;\n                promisedApplications = restApi.getAllApplications(null, subscriptionLimit);\n\n                Promise.all([existingSubscriptions, promisedApplications])\n                    .then((response) => {\n                        const [subscriptions, applications] = response.map((data) => data.obj);\n                        const appIdToNameMapping = applications.list.reduce((acc, cur) => {\n                            acc[cur.applicationId] = cur.name;\n                            return acc;\n                        }, {});\n                        // get the application IDs of existing subscriptions\n                        const subscribedApplications = subscriptions.list.map((element) => {\n                            return {\n                                value: element.applicationId,\n                                policy: element.throttlingPolicy,\n                                status: element.status,\n                                subscriptionId: element.subscriptionId,\n                                label: element.applicationInfo.name,\n                            };\n                        });\n\n                        // Removing subscribed applications from all the applications and get\n                        // the available applications to subscribe\n                        const subscribedAppIds = subscribedApplications.map((sub) => sub.value);\n                        const applicationsAvailable = applications.list\n                            .filter((app) => !subscribedAppIds.includes(app.applicationId) && app.status === 'APPROVED')\n                            .map((filteredApp) => {\n                                return {\n                                    value: filteredApp.applicationId,\n                                    label: filteredApp.name,\n                                };\n                            });\n                        this.setState({ subscribedApplications, applicationsAvailable }, () => {\n                            if (callback) {\n                                callback();\n                            }\n                        });\n                    })\n                    .catch((error) => {\n                        if (process.env.NODE_ENV !== 'production') {\n                            console.log(error);\n                        }\n                        const { status } = error;\n                        if (status === 404) {\n                            this.setState({ notFound: true });\n                        }\n                    });\n            }\n        };\n\n\n        this.state = {\n            active: 'overview',\n            overviewHiden: false,\n            updateSubscriptionData: this.updateSubscriptionData,\n            api: null,\n            applications: null,\n            subscribedApplications: [],\n            applicationsAvailable: [],\n            item: 1,\n            xo: null,\n        };\n        this.setDetailsAPI = this.setDetailsAPI.bind(this);\n        this.api_uuid = this.props.match.params.api_uuid;\n        this.handleDrawerClose = this.handleDrawerClose.bind(this);\n        this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    componentDidMount() {\n        this.updateSubscriptionData();\n    }\n\n    handleDrawerOpen() {\n        this.setState({ open: true });  \n        const user = AuthManager.getUser();\n        if(user != null){\n            user.isSideBarOpen = true;\n            AuthManager.setUser(user);\n        }\n    };\n\n    handleDrawerClose() {\n        this.setState({ open: false });\n        const user = AuthManager.getUser();\n        if(user != null){\n            user.isSideBarOpen = false;\n            AuthManager.setUser(user);\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} api\n     * @memberof Details\n     */\n    setDetailsAPI(api) {\n        this.setState({ api });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    render() {\n        const {\n            classes, theme, intl, match,\n        } = this.props;\n        const user = AuthManager.getUser();\n        const { apiUuid } = match.params;\n        const { api, notFound , open} = this.state;\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                apiDetailPages: {\n                    showCredentials, showComments, showTryout, showDocuments, showSdks,\n                },\n                title: {\n                    prefix, sufix,\n                }\n            },\n        } = theme;\n        const globalStyle = 'body{ font-family: ' + theme.typography.fontFamily + '}';\n        const pathPrefix = '/apis/' + this.api_uuid + '/';\n        if (!api && notFound) {\n            return <ResourceNotFound />;\n        }\n        // check for widget=true in the query params. If it's present we render without <Base> component.\n        const pageUrl = new URL(window.location);\n        const isWidget = pageUrl.searchParams.get('widget');\n\n        return api ? (\n            <ApiContext.Provider value={this.state}>\n                <Helmet>\n                    <title>{`${prefix} ${api.name}${sufix}`}</title>\n                </Helmet>\n                <style>{globalStyle}</style>\n                  {!isWidget && (\n                <div\n                    className={classNames(\n                        classes.leftMenu,\n                        {\n                            [classes.leftMenuHorizontal]: position === 'horizontal'\n                        },\n                        {\n                            [classes.leftMenuVerticalLeft]: position === 'vertical-left' && open,\n                            [classes.leftMenuVerticalLeftMinView]: position === 'vertical-left' && !open,\n\n                        },\n                        {\n                            [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                        },\n                        'left-menu',\n\n                    )}\n                >\n                    {rootIconVisible && (\n                        <Link to='/apis' className={classes.leftLInkMain}>\n                            <CustomIcon width={rootIconSize} height={rootIconSize} icon='api' />\n                            {rootIconTextVisible && (\n                                <Typography className={classes.leftLInkMainText}>\n                                    <FormattedMessage id='Apis.Details.index.all.apis' defaultMessage='ALL APIs' />\n                                </Typography>\n                            )}\n                        </Link>\n                    )}\n                    <LeftMenuItem\n                        text={<FormattedMessage id='Apis.Details.index.overview' defaultMessage='Overview' />}\n                        route='overview'\n                        iconText='overview'\n                        to={pathPrefix + 'overview'}\n                        open={open}\n                    />\n                    {!api.advertiseInfo.advertised && (\n                        <>\n                            {user && showCredentials && (\n                                <>\n                                   \n                                        <LeftMenuItem\n                                            text={\n                                                <FormattedMessage\n                                                    id='Apis.Details.index.subscriptions'\n                                                    defaultMessage='Subscriptions'\n                                                />\n                                            }\n                                            route='credentials'\n                                            iconText='credentials'\n                                            to={pathPrefix + 'credentials'}\n                                            open={open}\n                                        />\n                                    \n                                </>\n                            )}\n                            {api.type !== 'WS' && showTryout && (\n                               \n                                    <LeftMenuItem\n                                        text={<FormattedMessage id='Apis.Details.index.try.out'\n                                            defaultMessage='Try out' />}\n                                        route='test'\n                                        iconText='test'\n                                        to={pathPrefix + 'test'}\n                                        open={open}\n                                    />\n                                \n                            )}\n                            {showComments && (\n                                \n                                    <LeftMenuItem\n                                        text={\n                                            <FormattedMessage id='Apis.Details.index.comments'\n                                                defaultMessage='Comments' />\n                                        }\n                                        route='comments'\n                                        iconText='comments'\n                                        to={pathPrefix + 'comments'}\n                                        open={open}\n                                    />\n                               \n                            )}\n                        </>\n                    )}\n                    {showDocuments && (\n                       \n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.documentation'\n                                    defaultMessage='Documentation' />}\n                                route='documents'\n                                iconText='docs'\n                                to={pathPrefix + 'documents'}\n                                open={open}\n                            />\n                       \n                    )}\n                    {!api.advertiseInfo.advertised && api.type !== 'WS' && showSdks && (\n                        \n                            <LeftMenuItem\n                                text={<FormattedMessage id='Apis.Details.index.sdk' defaultMessage='SDKs' />}\n                                route='sdk'\n                                iconText='sdk'\n                                to={pathPrefix + 'sdk'}\n                                open={open}\n                            />\n                       \n                    )}\n                    {open ? (\n                        <div onClick={this.handleDrawerClose}\n                            style={{ width:100, paddingLeft: '15px', position: 'absolute',bottom: 0, cursor: 'pointer',}}\n                        >\n                            <ArrowBackIosIcon fontSize='medium' style={{ color: 'white' }} />\n                        </div>\n                    ) : (\n                        <div onClick={this.handleDrawerOpen}\n                            style={{ paddingLeft: '15px', position: 'absolute', bottom: 0, cursor: 'pointer',}}\n                        >\n                            <ArrowForwardIosIcon fontSize='medium' style={{ color: 'white' }} />\n                        </div>\n\n                    )}\n\n                </div>\n                )}\n\n                <div\n                    className={classNames(\n                        { [classes.content]: open },\n                        { [classes.contentExpandView]: !open },\n                    )}\n                >\n                    <InfoBar apiId={apiUuid} innerRef={(node) => (this.infoBar = node)} intl={intl} {...this.props} />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <LoadableSwitch \n                            api={api} \n                            updateSubscriptionData={this.updateSubscriptionData}\n                        />\n                    </div>\n                </div>\n            </ApiContext.Provider>\n        ) : (\n                <div className='apim-dual-ring' />\n            );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withSettings(injectIntl(withStyles(styles, { withTheme: true })(Details)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core';\nimport CommonListing from './Listing/CommonListing';\nimport TagCloudListing from './Listing/TagCloudListing';\nimport Details from './Details/index';\nimport { ResourceNotFound } from '../Base/Errors';\n\n/**\n * Default API Store overview page\n *\n * @returns {React.Component}\n */\nfunction Apis() {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/api-groups'\n                render={(props) => (\n                    <TagCloudListing {...props} />)}\n            />\n            <Route\n                exact\n                path='/apis'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/search'\n                render={(props) => (\n                    <CommonListing {...props} />)}\n            />\n            <Route\n                path='/apis/:api_uuid/'\n                render={(props) => (\n                    <Details {...props} />)}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n}\n\nexport default withStyles({}, { withTheme: true })(Apis);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nexport const ApiContext = React.createContext({\n    active: 'overview',\n    handleMenuSelect: () => {},\n    api: null,\n    applications: null,\n    subscribedApplications: [],\n    applicationsAvailable: [],\n    updateSubscriptionData: () => {},\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        minHeight: 100,\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        border: 'solid 1px #ddd',\n        '& span.material-icons': {\n            fontSize: 60,\n            color: theme.custom.info.color,\n        },\n        '& span, & h5, & label, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    iconItem: {\n        paddingRight: theme.spacing(2),\n        fontSize: 60,\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nclass InlineMessage extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    render() {\n        const { classes, type } = this.props;\n        const messgeType = type || 'info';\n        return (\n            <Paper className={classes.root} elevation={1}>\n                {messgeType === 'info' && <Icon className={classes.iconItem}>info</Icon>}\n                {messgeType === 'warn' && <Icon className={classes.iconItem}>warning</Icon>}\n                <VerticalDivider height={100} />\n                <div className={classes.content}>{this.props.children}</div>\n            </Paper>\n        );\n    }\n}\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(InlineMessage);\n"],"sourceRoot":""}