{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Create/Components/APICreateBase.jsx","webpack:///./source/src/app/components/Apis/Create/Components/DefaultAPIForm.jsx","webpack:///./source/src/app/components/Apis/Create/Default/APICreateDefault.jsx","webpack:///./source/src/app/components/Apis/Create/Components/APICreateProductBase.jsx","webpack:///./source/src/app/components/Apis/Create/APIProduct/APIProductCreateWrapper.jsx","webpack:///./source/src/app/components/Apis/Create/OpenAPI/ApiCreateOpenAPI.jsx","webpack:///./source/src/app/components/Apis/Create/WSDL/ApiCreateWSDL.jsx","webpack:///./source/src/app/components/Apis/Create/GraphQL/ApiCreateGraphQL.jsx","webpack:///./source/src/app/components/Apis/Create/WebSocket/ApiCreateWebSocket.jsx","webpack:///./source/src/app/components/Apis/Create/APICreateRoutes.jsx"],"names":["APICreateBase","props","title","children","react_default","a","createElement","Grid","container","spacing","item","xs","sm","md","Paper","elevation","propTypes","PropTypes","element","isRequired","useStyles","makeStyles","theme","mandatoryStar","color","palette","error","main","marginLeft","helperTextContext","& p","textOverflow","width","display","whiteSpace","overflow","endpointValidChip","border","endpointInvalidChip","endpointErrorChip","iconButton","padding","iconButtonValid","green","actualContext","_ref","context","version","initialContext","indexOf","replace","DefaultAPIForm","onChange","onValidate","api","isAPIProduct","isWebSocket","classes","validity","setValidity","useState","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isUpdating","setUpdating","isErrorCode","setIsErrorCode","useEffect","Boolean","name","policies","updateValidity","newState","isFormValid","Object","entries","length","map","_ref2","value","reduce","acc","cVal","policy","validate","field","nameValidity","APIValidation","apiName","required","abortEarly","apiParameter","then","result","body","list","toLowerCase","_objectSpread","details","message","contextValidity","apiContext","includes","contextVal","slice","lastIndexOf","checkContext","versionValidity","apiVersion","undefined","policyValidity","noValidate","autoComplete","TextField","autoFocus","fullWidth","id","label","Fragment","lib","defaultMessage","className","helperText","detail","index","style","marginTop","InputProps","onBlur","_ref3","target","margin","variant","_ref6","concat","_ref4","root","_ref5","endpoint","endpointURL","rel","href","endAdornment","InputAdornment","position","Chip","condition","otherwise","iff","IconButton","aria-label","onClick","API","testEndpoint","statusMessage","finally","disabled","CircularProgress","size","Icon","SelectPolicies","isValid","direction","justify","alignItems","Typography","gutterBottom","defaultProps","shape","func","APICreateDefault","history","intl","settings","useAppContext","pageError","setPageError","isCreating","setIsCreating","isPublishing","setIsPublishing","apiInputs","inputsDispatcher","useReducer","currentState","inputAction","action","APICreateDefault_objectSpread","[object Object]","formValidity","isPublishable","isAPICreateDisabled","createAPI","promisedCreatedAPI","apiData","endpointConfig","endpoint_type","sandbox_endpoints","url","production_endpoints","gatewayEnvironments","environment","env","type","APIProduct","saveProduct","apiProduct","Alert","info","push","catch","response","description","console","save","pageTitle","Banner","onClose","disableActions","dense","paperProps","event","Button","AuthManager","isNotPublisher","publish","workflowStatus","WORKFLOW_STATUS","CREATED","formatMessage","react_router_dom","to","withRouter","injectIntl","APICreateProductBase","height","saveButton","titleWrapper","flexDirection","paddingBottom","buttonWrapper","alternativeLabel","ApiProductCreateWrapper","wizardStep","setWizardStep","apiResources","setApiResources","APIProductCreateWrapper_objectSpread","inputValue","setCreating","steps","Box","Stepper","activeStep","Step","key","StepLabel","ProductResourcesEditWorkspace","isStateCreate","step","apis","transport","ApiCreateOpenAPI","ApiCreateOpenAPI_objectSpread","endpoints","inputType","handleOnValidate","ProvideOpenAPI","additionalProperties","Array","isArray","newAPI","importOpenAPIByFile","importOpenAPIByUrl","ApiCreateWSDL","ApiCreateWSDL_objectSpread","mode","ProvideWSDL","promisedWSDLImport","Wsdl","importByUrl","importByFileOrArchive","ApiCreateGraphQL","ApiCreateGraphQL_objectSpread","ProvideGraphQL","implementationType","graphQLInfo","operations","newApi","JSON","stringify","file","importGraphQL","uuid","obj","ApiCreateWebSocket","Default_APICreateDefault","APICreateRoutes","content","react_router","path","component","APIProductCreateWrapper","ApiCreateSwagger","ResourceNotFound","string","withStyles","flexGrow"],"mappings":"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","file":"APICreateRoutes.fefe2d54fc00c486e276.bundle.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={3} />\n            <Grid item sm={12} md={6}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item xs={12} md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\nAPICreateBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport { InputAdornment, IconButton, Icon } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport APIValidation from 'AppData/APIValidation';\nimport API from 'AppData/api';\n\nimport SelectPolicies from './SelectPolicies';\n\nconst useStyles = makeStyles((theme) => ({\n    mandatoryStar: {\n        color: theme.palette.error.main,\n        marginLeft: theme.spacing(0.1),\n    },\n    helperTextContext: {\n        '& p': {\n            textOverflow: 'ellipsis',\n            width: 400,\n            display: 'block',\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n        },\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n}));\n\n/**\n *\n * Return the actual API context that will be exposed in the gateway.\n * If the context value contains `{version}` placeholder text it will be replaced with the actual version value.\n * If there is no such placeholder text in the context, The version will be appended to the context\n * i:e /context/version\n * Parameter expect an object containing `context` and `version` properties.\n * @param {String} context API Context\n * @param {String} version API Version string\n * @returns {String} Derived actual context string\n */\nfunction actualContext({ context, version }) {\n    let initialContext = '{context}/{version}';\n    if (context) {\n        initialContext = context;\n        if (context.indexOf('{version}') < 0) {\n            initialContext = context + '/{version}';\n        }\n    }\n    if (version) {\n        initialContext = initialContext.replace('{version}', version);\n    }\n    return initialContext;\n}\n\n/**\n * This method used to  compare the context values\n * @param {*} value  input value\n * @param {*} result resulted value\n * @returns {Boolean} true or false\n */\nfunction checkContext(value, result) {\n    const contextVal = value.includes('/') ? value.toLowerCase() : '/' + value.toLowerCase();\n    if (contextVal === '/' + result.toLowerCase().slice(result.toLowerCase().lastIndexOf('/') + 1)\n     || contextVal === result.toLowerCase()) {\n        return true;\n    }\n    return false;\n}\n\n/**\n * Improved API create default form\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultAPIForm(props) {\n    const {\n        onChange, onValidate, api, isAPIProduct, isWebSocket,\n    } = props;\n    const classes = useStyles();\n    const [validity, setValidity] = useState({});\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    // Check the provided API validity on mount, TODO: Better to use Joi schema here ~tmkb\n    useEffect(() => {\n        onValidate(Boolean(api.name)\n                && (isAPIProduct || Boolean(api.version))\n                && Boolean(api.context)\n                && Boolean(api.policies));\n    }, []);\n\n    const updateValidity = (newState) => {\n        let isFormValid = Object.entries(newState).length > 0\n            && Object.entries(newState)\n                .map(([, value]) => value === null || value === undefined)\n                .reduce((acc, cVal) => acc && cVal); // Aggregate the individual validation states\n        // TODO: refactor following redundant validation.\n        // The valid state should available in the above reduced state ~tmkb\n        // if isAPIProduct gets true version validation has been skipped\n        isFormValid = isFormValid\n            && Boolean(api.name)\n            && (isAPIProduct || Boolean(api.version))\n            && Boolean(api.context)\n            && (!isAPIProduct || newState.policy === null);\n        onValidate(isFormValid, validity);\n        setValidity(newState);\n    };\n    /**\n     * Trigger the provided onValidate call back on each input validation run\n     * Do the validation state aggregation and call the onValidate method with aggregated value\n     * @param {string} field The input field.\n     * @param {string} value Validation state object\n     */\n    function validate(field, value) {\n        switch (field) {\n            case 'name': {\n                const nameValidity = APIValidation.apiName.required().validate(value, { abortEarly: false }).error;\n                if (nameValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + value).then((result) => {\n                        if (result.body.list.length > 0 && value.toLowerCase() === result.body.list[0]\n                            .name.toLowerCase()) {\n                            updateValidity({\n                                ...validity,\n                                name: { details: [{ message: 'Name ' + value + ' already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, name: nameValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, name: nameValidity });\n                }\n                break;\n            }\n            case 'context': {\n                const contextValidity = APIValidation.apiContext.required().validate(value, { abortEarly: false })\n                    .error;\n                const apiContext = value.includes('/') ? value : '/' + value;\n                if (contextValidity === null) {\n                    APIValidation.apiParameter.validate(field + ':' + apiContext).then((result) => {\n                        if (result.body.list.length > 0 && checkContext(value, result.body.list[0].context)) {\n                            updateValidity({\n                                ...validity,\n                                context: { details: [{ message: apiContext + ' context already exists' }] },\n                            });\n                        } else {\n                            updateValidity({ ...validity, context: contextValidity, version: null });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, context: contextValidity });\n                }\n                break;\n            }\n            case 'version': {\n                const versionValidity = APIValidation.apiVersion.required().validate(value).error;\n                if (versionValidity === null) {\n                    const apiVersion = api.context.includes('/') ? api.context + '/' + value : '/'\n                    + api.context + '/' + value;\n                    APIValidation.apiParameter.validate('context:' + api.context\n                    + ' version:' + value).then((result) => {\n                        // version of APIProduct equals to 1.0.0\n                        if (result.body.list.length > 0 && (\n                            (result.body.list[0].version !== undefined\n                            && (result.body.list[0].version.toLowerCase()\n                                === value.toLowerCase())) || value === '1.0.0')) {\n                            updateValidity({\n                                ...validity,\n                                version: { message: apiVersion + ' context with version already exists' },\n                            });\n                        } else {\n                            updateValidity({ ...validity, version: versionValidity });\n                        }\n                    });\n                } else {\n                    updateValidity({ ...validity, version: versionValidity });\n                }\n                break;\n            }\n            case 'policies': {\n                const policyValidity = value && value.length > 0;\n                updateValidity({\n                    ...validity,\n                    policy:\n                        policyValidity || !isAPIProduct\n                            ? null\n                            : { message: 'Need to select at least one policy to create an API Product' },\n                });\n                break;\n            }\n            default: {\n                break;\n            }\n        }\n    }\n\n    function testEndpoint(endpoint) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <Grid item md={11}>\n            <form noValidate autoComplete='off'>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    id='outlined-name'\n                    error={validity.name}\n                    label={(\n                        <>\n                            <FormattedMessage id='Apis.Create.Components.DefaultAPIForm.name' defaultMessage='Name' />\n                            <sup className={classes.mandatoryStar}>*</sup>\n                        </>\n                    )}\n                    helperText={\n                        validity.name\n                        && validity.name.details.map((detail, index) => {\n                            return <div style={{ marginTop: index !== 0 && '10px' }}>{detail.message}</div>;\n                        })\n                    }\n                    value={api.name}\n                    name='name'\n                    onChange={onChange}\n                    InputProps={{\n                        id: 'itest-id-apiname-input',\n                        onBlur: ({ target: { value } }) => {\n                            validate('name', value);\n                        },\n                    }}\n                    margin='normal'\n                    variant='outlined'\n                />\n                <Grid container spacing={2}>\n                    {!isAPIProduct ? (\n                        <>\n                            <Grid item md={8} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    id='outlined-name'\n                                    error={validity.context}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apicontext-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    classes={{ root: classes.helperTextContext }}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                            <Grid item md={4} xs={6}>\n                                <TextField\n                                    fullWidth\n                                    error={validity.version}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.version'\n                                                defaultMessage='Version'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='version'\n                                    value={api.version}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        id: 'itest-id-apiversion-input',\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('version', value);\n                                        },\n                                    }}\n                                    helperText={validity.version && validity.version.message}\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    ) : (\n                        <>\n                            <Grid item md={12}>\n                                <TextField\n                                    fullWidth\n                                    id='outlined-name'\n                                    error={validity.context}\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id='Apis.Create.Components.DefaultAPIForm.api.product.context'\n                                                defaultMessage='Context'\n                                            />\n                                            <sup className={classes.mandatoryStar}>*</sup>\n                                        </>\n                                    )}\n                                    name='context'\n                                    value={api.context}\n                                    onChange={onChange}\n                                    InputProps={{\n                                        onBlur: ({ target: { value } }) => {\n                                            validate('context', value);\n                                        },\n                                    }}\n                                    helperText={\n                                        (validity.context\n                                            && validity.context.details.map((detail, index) => {\n                                                return (\n                                                    <div style={{ marginTop: index !== 0 && '10px' }}>\n                                                        {detail.message}\n                                                    </div>\n                                                );\n                                            }))\n                                        || `API Product will be exposed in ${actualContext(api)} context at the gateway`\n                                    }\n                                    margin='normal'\n                                    variant='outlined'\n                                />\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n                {!isAPIProduct && (\n                    <TextField\n                        fullWidth\n                        id='itest-id-apiendpoint-input'\n                        label='Endpoint'\n                        name='endpoint'\n                        value={api.endpoint}\n                        onChange={onChange}\n                        helperText={\n                            validity.endpointURL && (\n                                <span>\n                                    Enter a valid\n                                    <a\n                                        rel='noopener noreferrer'\n                                        target='_blank'\n                                        href='http://tools.ietf.org/html/rfc3986'\n                                    >\n                                        RFC 3986\n                                    </a>\n                                    {' '}\n                                    URI\n                                </span>\n                            )\n                        }\n                        error={validity.endpointURL}\n                        margin='normal'\n                        variant='outlined'\n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment position='end'>\n                                    {statusCode && (\n                                        <Chip\n                                            label={statusCode}\n                                            className={isEndpointValid ? classes.endpointValidChip : iff(\n                                                isErrorCode,\n                                                classes.endpointErrorChip, classes.endpointInvalidChip,\n                                            )}\n                                            variant='outlined'\n                                        />\n                                    )}\n                                    {!isWebSocket && (\n                                        <IconButton\n                                            className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                            aria-label='TestEndpoint'\n                                            onClick={() => testEndpoint(api.endpoint)}\n                                            disabled={isUpdating}\n                                        >\n                                            {isUpdating\n                                                ? <CircularProgress size={20} />\n                                                : (\n                                                    <Icon>\n                                                check_circle\n                                                    </Icon>\n                                                )}\n                                        </IconButton>\n                                    )}\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                )}\n\n                <SelectPolicies\n                    policies={api.policies}\n                    isAPIProduct={isAPIProduct}\n                    onChange={onChange}\n                    validate={validate}\n                    isValid={validity.policies}\n                />\n            </form>\n            <Grid container direction='row' justify='flex-end' alignItems='center'>\n                <Grid item>\n                    <Typography variant='caption' display='block' gutterBottom>\n                        <sup style={{ color: 'red' }}>*</sup>\n                        {' '}\nMandatory fields\n                    </Typography>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultAPIForm.defaultProps = {\n    onValidate: () => {},\n    api: {}, // Uncontrolled component\n    isWebSocket: false,\n};\nDefaultAPIForm.propTypes = {\n    api: PropTypes.shape({}),\n    isAPIProduct: PropTypes.shape({}).isRequired,\n    isWebSocket: PropTypes.shape({}),\n    onChange: PropTypes.func.isRequired,\n    onValidate: PropTypes.func,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport API from 'AppData/api';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport Banner from 'AppComponents/Shared/Banner';\n\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APIProduct from 'AppData/APIProduct';\nimport AuthManager from 'AppData/AuthManager';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction APICreateDefault(props) {\n    const {\n        isWebSocket, isAPIProduct, history, intl,\n    } = props;\n    const { settings } = useAppContext();\n    const [pageError, setPageError] = useState(null);\n    const [isCreating, setIsCreating] = useState();\n    const [isPublishing, setIsPublishing] = useState(false);\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            default:\n                return currentState;\n        }\n    }\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        formValidity: false,\n    });\n    const isPublishable = apiInputs.endpoint && apiInputs.policies && apiInputs.policies.length !== 0;\n    const isAPICreateDisabled = !(apiInputs.name && apiInputs.version && apiInputs.context) || isCreating\n                                 || isPublishing;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setIsCreating(true);\n        const {\n            name, version, context, endpoint, policies,\n        } = apiInputs;\n        let promisedCreatedAPI;\n        const apiData = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            apiData.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        apiData.gatewayEnvironments = settings.environment.map((env) => env.name);\n        if (isWebSocket) {\n            apiData.type = 'WS';\n        }\n        if (isAPIProduct) {\n            const newAPIProduct = new APIProduct(apiData);\n            promisedCreatedAPI = newAPIProduct\n                .saveProduct(apiData)\n                .then((apiProduct) => {\n                    Alert.info('API Product created successfully');\n                    history.push(`/api-products/${apiProduct.id}/overview`);\n                    return apiProduct;\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        // TODO add i18n ~tmkb\n                        const message = 'Something went wrong while adding the API Product';\n                        Alert.error(message);\n                        setPageError(message);\n                    }\n                    console.error(error);\n                });\n        } else {\n            const newAPI = new API(apiData);\n            promisedCreatedAPI = newAPI\n                .save()\n                .then((api) => {\n                    Alert.info('API created successfully');\n                    return api;\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    } else {\n                        const message = 'Something went wrong while adding the API';\n                        Alert.error(message);\n                        setPageError(message);\n                    }\n                    console.error(error);\n                    setIsPublishing(false); // We don't publish if something when wrong\n                })\n                .finally(() => {\n                    setIsCreating(false);\n                });\n        }\n        return promisedCreatedAPI.finally(() => setIsCreating(false));\n    }\n\n    /**\n     *\n     *\n     */\n    function createAndPublish() {\n        setIsPublishing(true);\n        createAPI().then((api) => api\n            .publish()\n            .then((response) => {\n                const { workflowStatus } = response.body;\n                if (workflowStatus === APICreateDefault.WORKFLOW_STATUS.CREATED) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Create.Default.APICreateDefault.success.publishStatus',\n                        defaultMessage: 'Lifecycle state change request has been sent',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Create.Default.APICreateDefault.success.otherStatus',\n                        defaultMessage: 'API updated successfully',\n                    }));\n                }\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                } else {\n                    const message = 'Something went wrong while publishing the API';\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Create.Default.APICreateDefault.error.errorMessage',\n                        defaultMessage: message,\n                    }));\n                    setPageError(message);\n                }\n                console.error(error);\n            })\n            .finally(() => {\n                setIsPublishing(false);\n            }));\n    }\n\n    /**\n     *\n     *\n     */\n    function createAPIOnly() {\n        createAPI().then((api) => {\n            history.push(`/apis/${api.id}/overview`);\n        });\n    }\n    let pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.heading'\n                    defaultMessage='Create an API'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.Default.APICreateDefault.api.sub.heading'\n                    defaultMessage={\n                        'Create an API by providing a Name, a Version, a Context,'\n                        + ' Backend Endpoint(s) (optional), and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    if (isAPIProduct) {\n        pageTitle = (\n            <>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.heading'\n                        defaultMessage='Create an API Product'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.apiProduct.sub.heading'\n                        defaultMessage={\n                            'Create an API Product by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    } else if (isWebSocket) {\n        pageTitle = (\n            <>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.heading'\n                        defaultMessage='Create a WebSocket API'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Create.Default.APICreateDefault.webSocket.sub.heading'\n                        defaultMessage={\n                            'Create a WebSocket API by providing a Name, a Context,'\n                            + ' and Business Plans (optional).'\n                        }\n                    />\n                </Typography>\n            </>\n        );\n    }\n\n    return (\n        <APICreateBase title={pageTitle}>\n            <Grid container direction='row' justify='center' alignItems='center' spacing={3}>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n                <Grid item xs={12} />\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <DefaultAPIForm\n                        onValidate={handleOnValidate}\n                        onChange={handleOnChange}\n                        api={apiInputs}\n                        isAPIProduct={isAPIProduct}\n                        isWebSocket={isWebSocket}\n                    />\n                </Grid>\n                <Grid item md={1} xs={0} />\n                <Grid item md={11} xs={12}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                disabled={isAPICreateDisabled || !apiInputs.isFormValid}\n                                onClick={createAPIOnly}\n                            >\n                                Create\n                                {' '}\n                                {isCreating && !isPublishing && <CircularProgress size={24} />}\n                            </Button>\n                        </Grid>\n                        {!AuthManager.isNotPublisher() && (\n                            <Grid item>\n                                <Button\n                                    id='itest-id-apicreatedefault-createnpublish'\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!isPublishable || isAPICreateDisabled || !apiInputs.isFormValid}\n                                    onClick={createAndPublish}\n                                >\n                                    {!isPublishing && 'Create & Publish'}\n                                    {isPublishing && <CircularProgress size={24} />}\n                                    {isCreating && isPublishing && 'Creating API . . .'}\n                                    {!isCreating && isPublishing && 'Publishing API . . .'}\n                                </Button>\n                            </Grid>\n                        )}\n                        <Grid item>\n                            <Link to='/apis/'>\n                                <Button variant='text'>\n                                    <FormattedMessage\n                                        id='Apis.Create.Default.APICreateDefault.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\nAPICreateDefault.defaultProps = {\n    isWebSocket: false,\n    isAPIProduct: false,\n};\nAPICreateDefault.WORKFLOW_STATUS = {\n    CREATED: 'CREATED',\n};\nAPICreateDefault.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.shape({}),\n    isWebSocket: PropTypes.shape({}),\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(APICreateDefault));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\n\n/**\n * Base component for all API create forms\n *\n * @param {Object} props title and children components are expected\n * @returns {React.Component} Base element\n */\nexport default function APICreateProductBase(props) {\n    const { title, children } = props;\n    return (\n        <Grid container spacing={3}>\n            <Grid item sm={12} md={12} />\n            {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n            <Grid item sm={0} md={2} />\n            <Grid item sm={12} md={8}>\n                <Grid container spacing={5}>\n                    <Grid item md={12}>\n                        {title}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>{children}</Paper>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item sm={0} md={2} />\n        </Grid>\n    );\n}\nAPICreateProductBase.propTypes = {\n    title: PropTypes.element.isRequired,\n    children: PropTypes.element.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APICreateProductBase from 'AppComponents/Apis/Create/Components/APICreateProductBase';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport ProductResourcesEditWorkspace from 'AppComponents/Apis/Details/ProductResources/ProductResourcesEditWorkspace';\n\nconst useStyles = makeStyles((theme) => ({\n    Paper: {\n        height: '40px',\n    },\n    saveButton: {\n        padding: '0px 0px 0px 10px',\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n    alternativeLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiProductCreateWrapper(props) {\n    const { history } = props;\n    const [wizardStep, setWizardStep] = useState(0);\n    const [apiResources, setApiResources] = useState([]);\n    const { settings } = useAppContext();\n\n    const pageTitle = (\n        <>\n            <Typography variant='h5'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.heading'\n                    defaultMessage='Create an API Product'\n                />\n            </Typography>\n            <Typography variant='caption'>\n                <FormattedMessage\n                    id='Apis.Create.APIProduct.APIProductCreateWrapper.sub.heading'\n                    defaultMessage={\n                        'Create an API Product by providing a Name, a Context, Resources, '\n                        + 'and Business Plans (optional).'\n                    }\n                />\n            </Typography>\n        </>\n    );\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'name':\n            case 'context':\n            case 'version':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'apiResources':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiProductCreateWrapper',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n    function getSteps() {\n        return [\n            <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.defineProvide'\n                defaultMessage='Define API Product'\n            />, <FormattedMessage\n                variant='caption'\n                id='Apis.Create.APIProduct.APIProductCreateWrapper.resources'\n                defaultMessage='Add Resources'\n            />];\n    }\n\n    const [isCreating, setCreating] = useState();\n    const classes = useStyles();\n    const steps = getSteps();\n\n    const createAPIProduct = () => {\n        setCreating(true);\n        const {\n            name, context, policies,\n        } = apiInputs;\n        const apiData = {\n            name,\n            context,\n            policies,\n            apis: apiResources,\n        };\n        apiData.gatewayEnvironments = settings.environment.map((env) => env.name);\n        apiData.transport = ['http', 'https'];\n        const newAPIProduct = new APIProduct(apiData);\n        newAPIProduct\n            .saveProduct(apiData)\n            .then((apiProduct) => {\n                Alert.info('API Product created successfully');\n                history.push(`/api-products/${apiProduct.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API Product');\n                }\n            })\n            .finally(() => setCreating(false));\n    };\n\n    return (\n        <>\n            <APICreateProductBase\n                title={pageTitle}\n            >\n                <Box>\n                    {wizardStep === 0 && (\n                        <Stepper alternativeLabel activeStep={0}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel className={classes.alternativeLabel}>{label}</StepLabel>\n                                </Step>\n                            ))}\n\n                        </Stepper>\n                    )}\n                    {wizardStep === 1 && (\n                        <Stepper alternativeLabel activeStep={1}>\n                            {steps.map((label) => (\n                                <Step key={label}>\n                                    <StepLabel>{label}</StepLabel>\n                                </Step>\n                            ))}\n                        </Stepper>\n                    )}\n                </Box>\n                <Grid container spacing={2}>\n                    {wizardStep === 0 && <Grid item md={12} />}\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={wizardStep === 0 ? 11 : 12}>\n                        {wizardStep === 0 && (\n                            <DefaultAPIForm\n                                onValidate={handleOnValidate}\n                                onChange={handleOnChange}\n                                api={apiInputs}\n                                isAPIProduct\n                            />\n                        )}\n                        {wizardStep === 1 && (\n                            <ProductResourcesEditWorkspace\n                                apiResources={apiResources}\n                                setApiResources={setApiResources}\n                                isStateCreate\n                                api={apiInputs}\n                            />\n                        )}\n                    </Grid>\n                    {wizardStep === 0 && <Grid item md={1} />}\n                    <Grid item md={9}>\n                        <Grid\n                            className={wizardStep === 1 && classes.saveButton}\n                            container\n                            direction='row'\n                            justify='flex-start'\n                            alignItems='center'\n                            spacing={2}\n                        >\n                            <Grid item>\n                                {wizardStep === 1\n                                    && (\n                                        <Button\n                                            onClick={() => setWizardStep((step) => step - 1)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.back'\n                                                defaultMessage='Back'\n                                            />\n                                        </Button>\n                                    )}\n                                {wizardStep === 0 && (\n                                    <Link to='/apis/'>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Create.APIProduct.APIProductCreateWrapper.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                )}\n                            </Grid>\n                            <Grid item>\n                                {wizardStep === 1 && (\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid || isCreating || (apiResources.length === 0)}\n                                        onClick={createAPIProduct}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.publish'\n                                            defaultMessage='Publish'\n                                        />\n                                        {isCreating && <CircularProgress size={24} />}\n                                    </Button>\n                                )}\n                                {wizardStep === 0 && (\n                                    <Button\n                                        onClick={() => setWizardStep((step) => step + 1)}\n                                        variant='contained'\n                                        color='primary'\n                                        disabled={!apiInputs.isFormValid}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Create.APIProduct.APIProductCreateWrapper.next'\n                                            defaultMessage='Next'\n                                        />\n                                    </Button>\n                                )}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </APICreateProductBase>\n        </>\n\n    );\n}\n\nApiProductCreateWrapper.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nimport ProvideOpenAPI from './Steps/ProvideOpenAPI';\n\n/**\n * Handle API creation from OpenAPI Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateOpenAPI(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const { settings } = useAppContext();\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                    endpoint: value.endpoints[0],\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateOpenAPI',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, inputValue, inputType,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = Array.isArray(settings.environment)\n            && settings.environment.length > 0 ? [settings.environment[0].name] : [];\n        const newAPI = new API(additionalProperties);\n        const promisedResponse = inputType === 'file'\n            ? newAPI.importOpenAPIByFile(inputValue) : newAPI.importOpenAPIByUrl(inputValue);\n        promisedResponse\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.heading'\n                            defaultMessage='Create an API using an OpenAPI definition.'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.sub.heading'\n                            defaultMessage='Create an API using an existing OpenAPI definition file or URL.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={0}>\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.one'\n                                defaultMessage='Provide OpenAPI'\n                            />\n                        </StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>\n                            <FormattedMessage\n                                id='Apis.Create.OpenAPI.ApiCreateOpenAPI.wizard.two'\n                                defaultMessage='Create API'\n                            />\n                        </StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item xs={12} />\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    {wizardStep === 0 && (\n                        <ProvideOpenAPI\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item xs={1} />\n                <Grid item xs={11}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={() => setWizardStep((step) => step - 1)}>\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateOpenAPI.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport Wsdl from 'AppData/Wsdl';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nimport ProvideWSDL from './Steps/ProvideWSDL';\n\n/**\n * Handle API creation from WSDL.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateWSDL(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const { settings } = useAppContext();\n\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'SOAP',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'create',\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name, version, context, endpoint, policies, type,\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n        };\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: type === 'SOAPTOREST' ? 'address' : 'http',\n                sandbox_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    type: type === 'SOAPTOREST' ? 'address' : undefined,\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = settings.environment.map((env) => env.name);\n        let promisedWSDLImport;\n        if (apiInputs.inputType === 'url') {\n            promisedWSDLImport = Wsdl.importByUrl(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        } else {\n            promisedWSDLImport = Wsdl.importByFileOrArchive(apiInputs.inputValue, additionalProperties, apiInputs.type);\n        }\n        promisedWSDLImport\n            .then((api) => {\n                Alert.info('API created successfully');\n                history.push(`/apis/${api.id}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.heading'\n                            defaultMessage='Expose a SOAP Service as a REST API'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.WSDL.ApiCreateWSDL.sub.heading'\n                            defaultMessage={\n                                'Expose an existing SOAP service as a REST API by importing the WSDL of the '\n                                + 'SOAP service.'\n                            }\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                <Stepper alternativeLabel activeStep={wizardStep}>\n                    <Step>\n                        <StepLabel>Provide WSDL</StepLabel>\n                    </Step>\n\n                    <Step>\n                        <StepLabel>Create API</StepLabel>\n                    </Step>\n                </Stepper>\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideWSDL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    Back\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    Next\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    Create\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateWSDL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DefaultAPIForm from 'AppComponents/Apis/Create/Components/DefaultAPIForm';\nimport APICreateBase from 'AppComponents/Apis/Create/Components/APICreateBase';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\n\nimport ProvideGraphQL from './Steps/ProvideGraphQL';\n\n/**\n * Handle API creation from GraphQL Definition.\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApiCreateGraphQL(props) {\n    const [wizardStep, setWizardStep] = useState(0);\n    const { history } = props;\n    const { settings } = useAppContext();\n    /**\n     *\n     * Reduce the events triggered from API input fields to current state\n     * @param {*} currentState\n     * @param {*} inputAction\n     * @returns\n     */\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'type':\n            case 'inputValue':\n            case 'name':\n            case 'version':\n            case 'endpoint':\n            case 'context':\n            case 'policies':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'graphQLInfo':\n                return { ...currentState, [action]: value };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    name: value.name.replace(/[&/\\\\#,+()$~%.'\":*?<>{}\\s]/g, ''),\n                    version: value.version,\n                    context: value.context,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: 'ApiCreateGraphQL',\n        inputType: 'file',\n        inputValue: '',\n        formValidity: false,\n    });\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { name: action, value } = event.target;\n        inputsDispatcher({ action, value });\n    }\n\n    /**\n     *\n     * Set the validity of the API Inputs form\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    const [isCreating, setCreating] = useState();\n    /**\n     *\n     *\n     * @param {*} params\n     */\n    function createAPI() {\n        setCreating(true);\n        const {\n            name,\n            version,\n            context,\n            endpoint,\n            policies,\n            implementationType,\n            inputValue,\n            graphQLInfo: { operations },\n        } = apiInputs;\n        const additionalProperties = {\n            name,\n            version,\n            context,\n            policies,\n            operations,\n        };\n        const uploadMethod = 'file';\n        if (endpoint) {\n            additionalProperties.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: endpoint,\n                },\n                production_endpoints: {\n                    url: endpoint,\n                },\n            };\n        }\n        additionalProperties.gatewayEnvironments = Array.isArray(settings.environment)\n            && settings.environment.length > 0 ? [settings.environment[0].name] : [];\n        const newApi = new API(additionalProperties);\n        const apiData = {\n            additionalProperties: JSON.stringify(additionalProperties),\n            implementationType,\n            [uploadMethod]: uploadMethod,\n            file: inputValue,\n        };\n\n        newApi\n            .importGraphQL(apiData)\n            .then((response) => {\n                const uuid = response.obj.id;\n                Alert.info(`${name} API created successfully`);\n                history.push(`/apis/${uuid}/overview`);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while adding the API');\n                }\n                console.error(error);\n            })\n            .finally(() => setCreating(false));\n    }\n\n    return (\n        <APICreateBase\n            title={(\n                <>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.heading'\n                            defaultMessage='Create an API using a GraphQL SDL definition'\n                        />\n                    </Typography>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Create.GraphQL.ApiCreateGraphQL.sub.heading'\n                            defaultMessage='Create an API by importing an existing GraphQL SDL definition.'\n                        />\n                    </Typography>\n                </>\n            )}\n        >\n            <Box>\n                {wizardStep === 0 && (\n                    <Stepper alternativeLabel activeStep={0}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n                {wizardStep === 1 && (\n                    <Stepper alternativeLabel activeStep={1}>\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.one'\n                                    defaultMessage='Provide GraphQL'\n                                />\n                            </StepLabel>\n                        </Step>\n\n                        <Step>\n                            <StepLabel>\n                                <FormattedMessage\n                                    id='Apis.Create.GraphQL.ApiCreateGraphQL.wizard.two'\n                                    defaultMessage='Create API'\n                                />\n                            </StepLabel>\n                        </Step>\n                    </Stepper>\n                )}\n            </Box>\n\n            <Grid container spacing={3}>\n                <Grid item md={12} />\n                <Grid item md={1} />\n                <Grid item md={11}>\n                    {wizardStep === 0 && (\n                        <ProvideGraphQL\n                            onValidate={handleOnValidate}\n                            apiInputs={apiInputs}\n                            inputsDispatcher={inputsDispatcher}\n                        />\n                    )}\n                    {wizardStep === 1 && (\n                        <DefaultAPIForm\n                            onValidate={handleOnValidate}\n                            onChange={handleOnChange}\n                            api={apiInputs}\n                            isAPIProduct={false}\n                        />\n                    )}\n                </Grid>\n                <Grid item md={1} />\n                <Grid item md={9}>\n                    <Grid container direction='row' justify='flex-start' alignItems='center' spacing={2}>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Link to='/apis/'>\n                                    <Button>\n                                        <FormattedMessage\n                                            id='Apis.Create.OpenAPI.ApiCreateOpenAPI.cancel'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </Link>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button onClick={\n                                    () => setWizardStep((step) => step - 1)\n                                }\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.back'\n                                        defaultMessage='Back'\n                                    />\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            {wizardStep === 0 && (\n                                <Button\n                                    onClick={() => setWizardStep((step) => step + 1)}\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.next'\n                                        defaultMessage='Next'\n                                    />\n                                </Button>\n                            )}\n                            {wizardStep === 1 && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    disabled={!apiInputs.isFormValid || isCreating}\n                                    onClick={createAPI}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Create.GraphQL.ApiCreateGraphQL.create'\n                                        defaultMessage='Create'\n                                    />\n                                    {' '}\n                                    {isCreating && <CircularProgress size={24} />}\n                                </Button>\n                            )}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </APICreateBase>\n    );\n}\n\nApiCreateGraphQL.propTypes = {\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n};\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React from 'react';\nimport APICreateDefault from 'AppComponents/Apis/Create/Default/APICreateDefault';\n\nconst ApiCreateWebSocket = () => {\n    return (<APICreateDefault isWebSocket />);\n};\nexport default ApiCreateWebSocket;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport APICreateDefault from './Default/APICreateDefault';\nimport APIProductCreateWrapper from './APIProduct/APIProductCreateWrapper';\nimport ApiCreateSwagger from './OpenAPI/ApiCreateOpenAPI';\nimport ApiCreateWSDL from './WSDL/ApiCreateWSDL';\nimport ApiCreateGraphQL from './GraphQL/ApiCreateGraphQL';\nimport ApiCreateWebSocket from './WebSocket/ApiCreateWebSocket';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n\n\n/**\n *\n * Handle routing for all types of API create creations, If you want to add new API type create page,\n * Please use `APICreateBase` and `DefaultAPIForm` components to do so , Don't wrap `APICreateDefault` component\n * @param {*} props\n * @returns @inheritdoc\n */\nfunction APICreateRoutes(props) {\n    const { classes } = props;\n    return (\n        <main className={classes.content}>\n            <Switch>\n                <Route path='/apis/create/rest' component={APICreateDefault} />\n                <Route path='/api-products/create' component={APIProductCreateWrapper} />\n                <Route path='/apis/create/graphQL' component={ApiCreateGraphQL} />\n                <Route path='/apis/create/openapi' component={ApiCreateSwagger} />\n                <Route path='/apis/create/wsdl' component={ApiCreateWSDL} />\n                <Route path='/apis/create/ws' component={ApiCreateWebSocket} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </main>\n    );\n}\n\nAPICreateRoutes.propTypes = {\n    classes: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(APICreateRoutes);\n"],"sourceRoot":""}