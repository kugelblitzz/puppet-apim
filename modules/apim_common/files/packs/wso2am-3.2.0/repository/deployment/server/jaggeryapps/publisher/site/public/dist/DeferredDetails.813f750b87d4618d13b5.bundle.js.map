{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./source/src/app/components/Shared/testconsole.css?6ce1","webpack:///./source/src/app/components/Shared/testconsole.css","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Apis/Details/components/LastUpdatedTime.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/ProductResources.jsx","webpack:///./source/src/app/data/stringFormatter.js","webpack:///./source/src/app/components/Apis/Details/NewOverview/Policies.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Configuration.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/CustomizedStepper.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/MetaData.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/NewOverview/Overview.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ThumbnailView.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/DefaultVersion.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Description.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AccessControl.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/StoreVisibility.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Tags.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APICategories.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/DesignConfigurations.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/ResponseCaching.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/CORSConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/SchemaValidation.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/MaxBackendTps.jsx","webpack:///./source/src/app/components/Apis/Details/MediationPolicies/EditMediationPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Flow.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/apiSecurityConstants.js","webpack:///./source/src/app/components/Apis/Details/Configuration/components/AuthorizationHeader.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/KeyManager.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/ApplicationLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/SelectEndpoint.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/UploadCertificate.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/Certificates.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/Transports.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APISecurity/APISecurity.jsx","webpack:///./source/src/app/components/Apis/Details/QueryAnalysis/UpdateComplexity.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/QueryAnalysis.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/RuntimeConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/components/APILevelRateLimitingPolicies.jsx","webpack:///./source/src/app/components/Apis/Details/Configuration/RuntimeConfigurationWebSocket.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleImage.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/CheckboxLabels.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifecyclePending.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleUpdate.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycleHistory.jsx","webpack:///./source/src/app/components/Apis/Details/LifeCycle/LifeCycle.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/CreateEditForm.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/GoToEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Create.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/MarkdownEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Edit.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/DeleteMultiple.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Download.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/Listing.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/View.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/EditContent.jsx","webpack:///./source/src/app/components/Apis/Details/Documents/index.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/APIRateLimiting.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operation.jsx","webpack:///./source/src/app/components/Apis/Details/Operations/Operations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/DescriptionAndSummary.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/operationUtils.js","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/OperationGovernance.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/AWSLambdaSettings.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/parameterUtils.js","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/AddParameter.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/RequestBody.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/EditParameter.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/ListParameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/Parameters.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/CloseConfirmation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/PolicyEditor.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/operationComponents/SOAPToREST/SOAPToRESTListing.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/Operation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/GroupOfOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/SpecErrors.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/AddOperation.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/GoToDefinitionLink.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/OperationsSelector.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/components/SaveOperations.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/Resources.jsx","webpack:///./source/src/app/components/Apis/Details/Resources/APIOperations.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/APIProductOperations.jsx","webpack:///./source/src/app/components/Apis/Details/ProductResources/ProductResourcesEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/NewEndpointCreate.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/GenericResource.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Prototype/InlineEndpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/endpointUtils.js","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpoint.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GenericEndpointAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointListing.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/LoadBalanceConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/LoadbalanceFailoverConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/AdvancedConfig/AdvanceEndpointConfig.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/EditableParameterRow.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/GeneralConfiguration/EndpointSecurity.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/AWSLambda/Credentials.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/EndpointOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Endpoints/Endpoints.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/MicroGateway.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/Kubernetes.jsx","webpack:///./source/src/app/components/Apis/Details/Environments/Environments.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/Invoice.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionsTable.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionPoliciesManage.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/TenantAutocomplete.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/SubscriptionAvailability.jsx","webpack:///./source/src/app/components/Apis/Details/Subscriptions/Subscriptions.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentAdd.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentEdit.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentOptions.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/CommentReply.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comment.jsx","webpack:///./source/src/app/components/Apis/Details/Comments/Comments.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/CreateScope.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/EditScope.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Delete.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/Scopes.jsx","webpack:///./source/src/app/components/Apis/Details/Scopes/index.jsx","webpack:///./source/src/app/components/Apis/Details/Security/AddPolicy.jsx","webpack:///./source/src/app/components/Apis/Details/Security/SecurityOverview.jsx","webpack:///./source/src/app/components/Apis/Details/Security/index.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/APISecurityAudit.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/ImportDefinition.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/APIDefinition.jsx","webpack:///./source/src/app/components/Apis/Details/APIDefinition/WSDL.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/RouteMappings.jsx","webpack:///./source/src/app/components/Apis/Details/GoTo/GoTo.jsx","webpack:///./source/src/app/components/Apis/Details/components/CreateNewVersionButton.jsx","webpack:///./source/src/app/components/Apis/Details/components/APIDetailsTopMenu.jsx","webpack:///./source/src/app/components/Apis/Details/BusinessInformation/BusinessInformation.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/EditableRow.jsx","webpack:///./source/src/app/components/Apis/Details/Properties/Properties.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/BusinessPlans.jsx","webpack:///./source/src/app/components/Apis/Details/Monetization/index.jsx","webpack:///./source/src/app/components/Apis/Details/ExternalStores/ExternalStores.jsx","webpack:///./source/src/app/components/Apis/Details/NewVersion/NewVersion.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Shared/Progress.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Utils.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/User.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Constants.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/AuthManager.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/APIClient.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/APIClientFactory.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Resource.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Wsdl.js","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/api.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/data/Application.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/ApiConsole/SelectAppPanel.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/ApiConsole/TryOutController.jsx","webpack:////home/jenkins/workspace/platform-builds/carbon-apimgt_6.7.x/target/checkout/features/apimgt/org.wso2.carbon.apimgt.store.feature/src/main/resources/devportal/source/src/app/components/Apis/Details/ApiConsole/SwaggerUI.jsx","webpack:///./source/src/app/components/Apis/Details/TestConsole/TestConsole.jsx","webpack:///./source/src/app/components/Apis/Details/index.jsx"],"names":["map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","content","i","options","transform","locals","push","LeftMenuItem","props","selected","setSelected","useState","classes","theme","Icon","to","history","text","route","routeToCheck","leftMenu","custom","strokeColor","palette","getContrastText","background","iconSize","leftMenuIconSize","ditectCurrentMenu","location","pathname","test1","RegExp","test2","match","useEffect","listen","react_default","a","createElement","react_router_dom","className","classNames","leftLInk","[object Object]","leftLink_IconLeft","style","backgroundColor","appBarSelected","React","cloneElement","leftLink_Icon","noIcon","CustomIcon","width","height","icon","iconText","Typography","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","defaultProps","propTypes","PropTypes","shape","divider","string","isRequired","number","func","appBar","element","withRouter","withStyles","color","textTransform","leftMenuTextStyle","textAlign","overflow","textOverflow","whiteSpace","paddingLeft","LeftMenu","leftMenuWidth","fontFamily","typography","position","bottom","left","top","paddingTop","spacing","paddingBottom","paddingRight","fontSize","caption","cursor","textDecoration","display","alignItems","diplay","withTheme","LastUpdatedTime","lastUpdatedTime","float","Tooltip","title","moment","calendar","aria-label","variant","lib","defaultMessage","fromNow","RenderMethodBase","method","chipColor","resourceChipColors","chipTextColor","console","log","Chip","label","toUpperCase","marginRight","RenderMethod","Resources","Component","constructor","super","this","state","paths","restApi","Api","componentDidMount","api","getSwagger","then","response","undefined","obj","setState","catch","error","status","notFound","doRedirectToLogin","render","parentClasses","Fragment","titleWrapper","type","component","Box","p","contentWrapper","key","path","root","heading","innerKey","CONSTS","HTTP_METHODS","includes","subHeading","Launch_default","marginLeft","flexDirection","marginBottom","maxHeight","overflowY","methodLower","toLowerCase","operationChipColor","Operations","ApiContext","Consumer","_ref","Table","padding","operations","length","item","TableRow","borderStyle","TableCell","target","Operations_RenderMethod","verb","py","marginTop","ProductResources","PureComponent","apiResources","apis","margin","resource","name","version","operation","resourceRow","ProductResources_RenderMethod","capitalizeFirstLetter","charAt","slice","lowerCaseString","Policies","Grid","xs","md","lg","subtitle","policies","index","withAPI","HUMAN_READABLE_SCHEMES","oauth2","basic_auth","mutualssl","api_key","Configuration","useContext","APIContext","container","placement","tabIndex","tooltip","htmlTooltip","Button","helpButton","HelpOutline_default","helpIcon","transport","upperCaseString","notConfigured","securityScheme","filter","filteredItem","join","accessControl","accessControlRoles","workflowStatus","visibility","visibleRoles","NewOverview_Policies","apiType","API","APIProduct","tags","tag","font-size","useStyles","makeStyles","button","secondary","gridRequirements","justifyContent","gridSmall","gridEndpoint","iconTrue","green","iconFalse","grey","arrowIcon","right","default","zIndex","overviewArrow","flexBasis","maxWidth","stepper","box","borderRight","pointerStart","overviewStepper","backgrounds","completed","&:before","borderLeft","borderLeftColor","borderTop","borderBottom","pointerMiddle","active","&:after","wrapperBackground","pointerEnd","inactive","pointerMiddleCompleted","pointerEndActive","pointerEndCompleted","stepIcon","CustomizedSteppers","updateAPI","useAPI","settings","user","useAppContext","isEndpointAvailable","endpointConfig","isTierAvailable","isPrototypedAvailable","implementation_status","lifecycleState","setlifecycleState","isUpdating","setUpdating","tenantList","userNameSplit","split","tenantDomain","devportalUrl","concat","storeUrl","updateLCStateOfAPI","apiId","updateLcState","Alert","body","description","info","finally","errorResponse","JSON","stringify","message","getLcState","result","activeStep","step2Class","step3Class","Stepper","alternativeLabel","Step","StepLabel","StepIconProps","Check_default","Close_default","rel","href","viewInStoreLauncher","onClick","disabled","AuthManager","isNotPublisher","CircularProgress","size","finalLifecycleState","BusinessInformation","businessInformation","businessOwner","technicalOwner","contextType","MetaData","provider","context","createdTime","interactive","NewOverview_BusinessInformation","showEndpoint","getProductionEndpoint","getSandboxEndpoint","Endpoints","url","endpointSecurity","Overview","newApi","loadEndpoints","NewOverview_Endpoints","align","mainTitle","s","Paper","NewOverview_MetaData","NewOverview_Configuration","specialGap","NewOverview_Operations","NewOverview_ProductResources","NewOverview_Resources","getResourcesClassForAPIs","_objectSpread","mixins","gutters","buttonSuccess","&:hover","checkItem","chip","& span","imageContainer","imageWrapper","resourceTitle","ListRoot","flex","minWidth","pxToRem","border","& b","fontWeight","fontWeightMedium","lifecycleWrapper","lifecycleIcon","leftSideWrapper","windowURL","window","URL","webkitURL","dropzoneStyles","borderRadius","Transition","Slide","_extends","direction","ThumbnailView","ThumbnailView_defineProperty","action","intl","open","selectedTab","selectedIconUpdate","category","colorUpdate","backgroundIndexUpdate","file","fileObj","formatMessage","newIconJson","backgroundIndex","blob","Blob","File","uploadThumbnail","event","value","hex","thumbnail","MaterialIcons","categories","selectedIcon","uploading","handleClick","bind","handleClose","componentWillUnmount","revokeObjectURL","onDrop","acceptedFile","preview","cState","addAPIProductThumbnail","addAPIThumbnail","createObjectURL","saveDisableEnable","isEditable","colorPairs","BaseThumbnail","Dialog","TransitionComponent","aria-labelledby","disableBackdropClick","onClose","fullWidth","fullScreen","square","popupHeader","IconButton","Icon_Icon","RadioGroup","group","onChange","handleChange","FormControlLabel","control","Radio","DialogContent","src","Configurations","app","alt","es","multiple","accept","dropzone","activeClassName","acceptDrop","rejectClassName","rejectDrop","dropFile","getRootProps","getInputProps","dropZoneWrapper","dropIcon","imageGenWrapper","ImageGenerator","fixedIcon","subtitleWrapper","Select","native","handleSelectionChange","cat","icons","FindCategoryKeys","iconView","selectIcon","react_color_lib","onChangeComplete","handleChangeComplete","colorPair","backgroundSelection","selectBackground","onKeyDown","Background","DialogActions","actionBox","bool","injectIntl","primary","main","red","& > div","boxShadow","DefaultVersion","configDispatcher","apiFromContext","mt","FormControl","FormLabel","isDefaultVersion","isRestricted","Description","TextField","multiline","rows","AccessControl","roleValidity","setRoleValidity","userRoleValidity","setUserRoleValidity","isNone","invalidRoles","setInvalidRoles","otherValidSystemRoles","setOtherValidSystemRoles","every","val","select","SelectProps","MenuProps","menu","helperText","MenuItem","ChipInput_default","alwaysShowPlaceholder","placeholder","blurBehavior","InputProps","endAdornment","InputAdornment","Error_default","onAdd","role","systemRolePromise","APIValidation","validate","base64url","encode","userRolePromise","userRole","_toConsumableArray","handleRoleValidationFailure","chipRenderer","_ref2","onDelete","existingRole","handleRoleDeletion","StoreVisibility","roleExists","setRoleExists","isRestrictedByRoles","tenants","setTenants","getTenantsByState","TENANT_STATE_ACTIVE","count","StoreVisibility_toConsumableArray","Tags","isTagValid","setIsTagValid","invalidTags","setInvalidTags","regexPattern","test","Tags_toConsumableArray","substring","currentInvalidTags","existingTag","oldTag","APICategories","setCategories","apiCategories","list","dense","disableGutters","ListItemText","renderValue","Array","isArray","Checkbox","checked","paper","paperCenter","itemPadding","arrowForwardIcon","arrowBackIcon","expansionPanel","expansionPanelDetails","lineHeight","btnSpacing","copyAPIConfig","lifeCycleStatus","authorizationHeader","responseCachingEnabled","cacheTimeout","enableSchemaValidation","DesignConfigurations_toConsumableArray","maxTps","wsdlUrl","corsConfiguration","corsConfigurationEnabled","accessControlAllowCredentials","accessControlAllowOrigins","accessControlAllowHeaders","accessControlAllowMethods","DesignConfigurations","setIsUpdating","apiConfig","useReducer","configAction","nextState","DesignConfigurations_objectSpread","invalidTagsExist","find","Container","elevation","px","ImageGenerator_ThumbnailView","components_APICategories","pt","iconSpace","actionSpace","ResponseCaching","isResponseCachingEnabled","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","Switch","ExpansionPanelDetails","CORSConfiguration","isCorsEnabled","isAllowAllOrigins","accessControlAllowOrigin","CORSConfiguration_toConsumableArray","oldOrigin","accessControlAllowHeader","oldHeader","newValue","accessControlAllowMethod","oldMethod","_ref3","SchemaValidation","isOpen","setIsOpen","componentDidUpdate","prevProps","aria-describedby","DialogTitle","DialogContentText","gutterBottom","MaxBackendTps","defaultExpanded","production","sandbox","row","labelPlacement","Collapse","in","MaxBackendTps_objectSpread","FormHelperText","EditMediationPolicy","updateMediationPolicy","selectedMediationPolicy","setEditing","editing","globalMediationPolicies","setGlobalMediationPolicies","seqCustom","setSeqCustom","provideBy","setProvideBy","NONE","localSelectedPolicyFile","setLocalSelectedPolicyFile","updatePoliciesFromBE","globalPromise","getGlobalMediationPolicies","customPromise","getMediationPolicies","Promise","all","values","EditMediationPolicy_toConsumableArray","seq","process","setActivePolicy","policy","assign","shared","policyFile","newPolicy","addMediationPolicy","policyType","saveMediationPolicy","getAttribute","handleDownload","policyToDownload","getGlobalMediationPolicyContent","Utils","forceDownload","downloadGlobalMediationPolicyContent","getMediationPolicyContent","done","document","downloadCustomMediationPolicyContent","handleDelete","policyToDelete","deleteMediationPolicy","deleteCustomMediationPolicy","disableEscapeKeyDown","dividers","inputValue","radioWrapper","EditMediationPolicy_extends","radioGroup","inputProps","seq_id","seq_name","seq_type","formControl","InFlow","EditRounded_default","MediationPolicies_EditMediationPolicy","flexGrow","itemWrapper","subTitle","subTitleDescription","flowWrapper","wordBreak","textTrim","production_endpoints","isDynamicEndpoints","pb","m","DEFAULT_API_SECURITY_OAUTH2","API_SECURITY_BASIC_AUTH","API_SECURITY_API_KEY","API_SECURITY_MUTUAL_SSL","API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY","API_SECURITY_MUTUAL_SSL_MANDATORY","AuthorizationHeader","hasResourceWithSecurity","apiList","apiInProduct","prototype","hasOwnProperty","call","findIndex","op","authType","keyManagerSelect","KeyManager","keyManagersConfigured","setKeyManagersConfigured","keyManagers","newKeyManagers","KeyManager_toConsumableArray","indexOf","splice","ml","required","FormGroup","enabled","displayName","mb","bottomSpace","ApplicationLevel","haveMultiLevelSecurity","mandatoryValue","_ref4","arrayOf","SelectEndpoint","endpoint","isEndpointEmpty","endpoints","autoFocus","condition","otherwise","iff","ep","fileinput","& span.material-icons","uploadedFile","certificatesHeader","addCertificateBtn","borderColor","borderWidth","certificateList","certDetailsHeader","uploadCertDialogHeader","UploadCertificate","uploadCertificate","isMutualSSLEnabled","uploadCertificateOpen","setUploadCertificateOpen","aliasList","alias","setAlias","setPolicy","setEndpoint","isSaving","setSaving","certificate","setCertificate","setIsEndpointEmpty","isPoliciesEmpty","setPoliciesEmpty","aliasValidity","setAliasValidity","isRejected","setIsRejected","closeCertificateUpload","SelectPolicies","onBlur","aliasValidation","isValid","details","handleAliasOnBlur","getHelperText","maxLength","certificateFile","extension","InsertDriveFile_default","certificates","alertWrapper","warningIcon","warningColor","& .material-icons","deleteIcon","dark","deleteIconDisable","Certificates","deleteCertificate","setCertificateList","openCertificateDetails","setOpenCertificateDetails","anchor","certificateToDelete","setCertificateToDelete","isDeleting","setDeleting","List_List","ListItem","ListItemAvatar","cert","tier","ListItemSecondaryAction","edge","certAlias","getClientCertificateStatus","currentTarget","getCertificateStatus","err","showCertificateDetails","certificateAlias","deleteCertificateByAlias","subject","Transports","TransportLevel","clientCertificates","setClientCertificates","getAllClientCertificates","resp","GeneralConfiguration_Certificates","addClientCertificate","tmpCertificates","TransportLevel_toConsumableArray","deleteClientCertificate","APISecurity","apiContext","isAPIProduct","isPrototyped","components_TransportLevel","resourcesWithSecurity","searchWrapper","UpdateComplexity","filterKeyWord","setFilter","setList","typelist","setFilterByKeyWord","InputLabelProps","shrink","stickyHeader","TableHead","TableBody","typename","aria-controls","respond","field","complexityValue","newArr","UpdateComplexity_toConsumableArray","summation","editIcon","dialogPaper","minHeight","GraphQLQueryAnalysis","setUpdateComplexityList","setOpen","setTypeList","findSummation","List","QueryAnalysis_toConsumableArray","Set","array","ob","getGraphqlPoliciesComplexity","res","getGraphqlPoliciesComplexityTypes","typeList","fieldList","setInitialComplexity","Shared","fixed","saveButton","RuntimeConfiguration_toConsumableArray","RuntimeConfiguration","updateComplexityList","RuntimeConfiguration_objectSpread","schema","newState","noMandatoryOAuthBasicAuth","noMandatoryMutualSSL","mediationPolicies","cloneDeep","inPolicy","setInPolicy","outPolicy","setOutPolicy","faultPolicy","setFaultPolicy","useIntl","kmNameList","forEach","km","getMediationPoliciesToSave","newMediationPolicies","isEmpty","justify","components_SchemaValidation","Flow","ArrowForward_default","ArrowBack_default","components_Endpoints","updateGraphqlPoliciesComplexity","updateComplexity","APILevelRateLimitingPolicies","apiThrottlingPolicy","apiRateLimits","setApiRateLimits","rateLimit","boxFlex","flexWrap","RuntimeConfigurationWebSocket_toConsumableArray","RuntimeConfigurationWebSocket_objectSpread","pr","SettingsEthernet_default","LifeCycleImage","highLightMe","startsWith","opacity","xmlns","viewBox","d","isolation","mixBlendMode","fill","strokeWidth","strokeLinejoin","y","x","letterSpacing","wordSpacing","clipRule","fillRule","stroke","strokeLinecap","stateButton","iconWarn","yellow","grid","labelsGrid","CheckboxLabels","isCertAvailable","isAppLayerSecurityMandatory","isBusinessPlanAvailable","isEnvironmentAvailable","gatewayEnvironments","isContainerMngEnvironmentAvailable","deploymentEnvironments","some","env","clusterName","endpointImplementationType","WarningRounded_default","lifecyclePending","currentState","transition","cleanupPendingTask","LifeCycleUpdate","updateLifeCycleState","WORKFLOW_STATUS","CREATED","APPROVED","pageError","apiUUID","promisedUpdate","lifecycleChecklist","checkList","handleUpdate","enableStore","preventDefault","lcState","handleChangeCheckList","certList","lifecycleStates","LifeCycleUpdate_toConsumableArray","availableTransitions","isWorkflowPending","lcMap","Map","set","isPrototype","lifecycleButtons","LifeCycleUpdate_objectSpread","LifecyclePending","lifeCycleImage","LifeCycle_LifeCycleImage","ScopeValidation","resourcePath","API_CHANGE_LC","resourceMethod","POST","buttonsWrapper","transitionState","data-value","Banner","disableActions","paperProps","LifeCycleHistory","table","firstCol","lcHistory","reverse","entry","previousState","postState","scope","Avatar","avatar","Person_default","personIcon","previous","post","updatedTime","LifeCycle","updateData","promisedAPI","get","promisedLcState","promisedLcHistory","getLcHistory","promisedClientCerts","clientCerts","checkItems","privateJetModeEnabled","LifeCycle_toConsumableArray","LifeCycle_LifeCycleUpdate","historyHead","LifeCycle_LifeCycleHistory","contentAreaWidth","CreateEditForm","CreateEditForm_defineProperty","sourceType","summary","sourceUrl","otherTypeName","restAPI","docPromise","addDocument","inlineContent","docId","updateDocument","disableName","nameNotDuplicate","nameMaxLengthExceeds","invalidUrl","nameEmpty","summeryEmpty","urlEmpty","getDocument","doc","apiNotFound","arguments","apiDocument","isDocumentPresent","showNameHelper","getUrlHelperText","setSaveDisabled","settingsContext","addNewOther","FormControlOdd","onKeyUp","docVisibilityEnabled","formControlFirst","changeType","formControlLabel","typeTextWrapper","changeSource","setDisable","_ref5","_ref6","InlineMessage","AppContext","saveDisabled","oneOf","GoToEdit","urlPrefix","listingPath","displayAddContent","docContentEditPath","documentId","Create","newDoc","setNewDoc","createEditForm","useRef","sm","titleLink","Documents_CreateEditForm","innerRef","node","Divider","promiseWrapper","addFileToDocument","Documents_GoToEdit","addNewWrapper","addNewHeader","h6","MonacoEditor","lazy","t","ReactMarkdown","MarkdownEditor_extends","MarkdownEditor","showAtOnce","setCode","toggleOpen","updateDoc","getInlineContentOfDocument","docName","addInlineContentToDocument","splitWrapper","react","fallback","language","selectOnLineNumbers","newCode","editorDidMount","editor","monaco","focus","markdownViewWrapper","source","Edit_extends","Edit","getDocumentsList","Delete","runAction","deleteDoc","deleteDocument","apiName","DeleteMultiple","docsToDelete","docs","deleteDocs","docPromises","data","docIndexObj","instanceOf","Download","isFileAvailable","setIsFileAvailable","isSuccessful","setIsSuccessful","getFileForDocument","TextEditor","LinkGenerator","Listing","showAddDocs","toggleAddDocs","getDocuments","errorData","parse","messageTxt","oldState","setFoo","foo","_this","showActionsColumn","print","download","viewColumns","customToolbar","search","onRowsDelete","rowData","rowMeta","that","columns","customBodyRender","tableMeta","actionTable","Documents_MarkdownEditor","Documents_Edit","Documents_Delete","Documents_Download","Documents_DeleteMultiple","AddCircle_default","buttonIcon","Documents_Create","dist_default","head","actions","& td","& td:first-child","messageBox","& button","View","params","setDoc","loadContentForDoc","leftCell","View_ReactMarkdown","react_safe_html_lib_default","html","displayURL","displayURLLink","docTitle","docBadge","replace","EditContent_TextEditor","Documents","react_router","exact","EditContent","DocCreate","ResourceNotFound","RateLimitingLevels","RESOURCE","APIRateLimiting","operationRateLimits","currentApiThrottlingPolicy","setApiThrottlingPolicy","setIsSaving","isResourceLevel","rateLimitingLevel","operationRateLimitMessage","light","userSelection","pl","disabledAction","memo","Operation","isSecurity","handleScopeChange","handlePolicyChange","operationAction","defValue","newoperation","Operation_objectSpread","scopes","Operation_toConsumableArray","handleUpdateList","throttlingPolicy","apiPolicies","isOperationRateLimiting","sharedScopes","dropdownScopes","filteredApiScopes","sharedScope","chipActive","dropDown","fieldName","ListSubheader","apiScope","auth","textField","link","listItem","resourceRoot","deleteButton","pathDisplay","descriptionWrapper","scopeSelect","descriptionWrapperUp","addParamRow","propsForm","deleteLink","verticalAlign","operationCopy","Operations_toConsumableArray","sort","b","apiScopesByName","sharedScopesByName","handleApiThrottlePolicy","updateOperations","apiScopesByNameList","scopeObject","modifiedScope","getAllSharedScopes","getAllScopes","sharedScopesList","sharedScopesByNameList","newOperation","updatedList","selectedScope","updateApiScopes","apiOperations","isScopeExistsInOperation","resourceNotFoundMessage","components_APIRateLimiting","Operations_Operation","buttonMain","addResource","DescriptionAndSummary","operationsDispatcher","disableUpdate","spec","VERSIONS","V3","V2","getVersion","openapi","swagger","getOperationScopes","openAPIVersion","security","mapAPIOperations","temp","rest","_objectWithoutProperties","isRef","isReference","OperationGovernance","operationScopes","autoWidth","IconComponent","ArrowDropDownIcon","renderInput","ref","other","AWSLambdaSettings_objectWithoutProperties","AWSLambdaSettings_extends","AWSLambdaSettings_objectSpread","inputRef","inputRoot","input","inputInput","renderSuggestion","suggestionProps","suggestion","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","object","oneOfType","IntegrationDownshift","arns","timeout","setTimeout","downshift_esm","onSelect","changes","clearSelection","getItemProps","getLabelProps","getMenuProps","openMenu","_getInputProps","onFocus","showEmpty","deburr","trim","inputLength","keep","getSuggestions","min","max","step","Math","floor","milliSeconds","parseInt","newTimeout","handleTimeoutMin","handleTimeoutSec","supportedDataTypes","2.0","formData","query","header","3.x","cookie","matched","getSupportedDataTypes","specVersion","paramType","parameterContainer","checkBox","AddParameter","inputLabel","labelWidth","setLabelWidth","initParameter","getParameter","newParameter","newParameterDispatcher","AddParameter_objectSpread","current","offsetWidth","isParameterExist","isParameterExistValue","parameters","clearInputs","addNewParameter","InputLabel","htmlFor","getContentAnchorEl","anchorOrigin","vertical","horizontal","getParameterTypes","paramIn","onKeyPress","Clear_default","RequestBody","contentType","hideParameterEdit","requestBody","Edit_default","Delete_default","form","EditParameter","editingParameter","setEditingParameter","parameter","parameterActionDispatcher","currentParameter","paramAction","nextParameter","EditParameter_objectSpread","isEditing","disableTypography","dataType","format","getDataFormats","overflowX","ListParameters","resolvedSpec","isRefParam","paramCopy","entries","operationComponents_RequestBody","Parameters","haveParameters","operationComponents_AddParameter","CloseConfirmation","closeEditor","forwardRef","Fade","PolicyEditor_extends","PolicyEditor","prefersDarkMode","originalResourcePolicy","selectedPolicy","setPolicyContent","resourcePoliciesDispatcher","setPageError","openConfirmation","setOpenConfirmation","saving","editorOptions","readOnly","smoothScrolling","wordWrap","editorProps","AppBar","Toolbar","updateResourcePolicy","success","disableShrink","PolicyEditor_MonacoEditor","SOAPToRESTListing","resourcePolicy","resourcePolicyIn","setResourcePolicyIn","resourcePolicyOut","setResourcePolicyOut","out","useMediaQuery","openEditor","setOpenEditor","setTabIndex","Tabs","indicatorColor","textColor","tab","Tab","SOAPToRESTListing_MonacoEditor","SOAPToRESTListing_objectSpread","highlight","disableDelete","onMarkAsDelete","markAsDelete","hideParameters","isExpanded","setIsExpanded","customButton","paperStyles","customDivider","linearProgress","highlightSelected","hexToRGBA","contentNoMargin","overlayUnmarkDelete","operationDeleteUndo","apiOperation","isUsedInAPIProduct","usedProductIds","toggleDelete","stopPropagation","expanded","disableRipple","disableTouchRipple","Badge","invisible","disableFocusRipple","ReportProblemOutlined_default","Boolean","endpoint_type","resourcePolicies","x-wso2-new","GroupOfOperations","openAPI","children","currentTagInfo","tagInfo","SpecErrors","specErrors","ErrorOutline_default","primaryTypographyProps","inset","VerbElement","isButton","customMenu","useMenuStyles","SUPPORTED_VERBS","AddOperation","newOperations","newOperationsDispatcher","AddOperation_objectSpread","verbs","addOperation","operationTarget","operationVerbs","warning","remaining","verbElements","allSelected","Fab","Add_default","GoToDefinitionLink","OperationsSelector","selectedOperations","setSelectedOperation","isIndeterminate","mr","ClearAll_default","DeleteSweep_default","SaveOperations","updateOpenAPI","onBackdropClick","operationProps","disableRateLimiting","hideAPIDefinitionLink","disableMultiSelect","disableAddOperation","setOperationRateLimits","markedOperations","setSharedScopes","setSharedScopesByName","openAPISpec","setOpenAPISpec","securityDefScopes","setSecurityDefScopes","setArns","setResolvedSpec","errors","currentPolicies","policyAction","nextResourcePolicies","Resources_objectSpread","httpVerb","currentOperations","updatedOperation","addedOperations","bodyIndex","scopeDescription","para","paraObj","extractPathParameters","alreadyExistCount","currentVerb","warn","x-auth-type","responses","200","useCallback","currentSelections","nextSelectedOperations","localAPI","useMemo","resolveAndUpdateSpec","rawSpec","specCopy","SwaggerParser","components","securitySchemes","flows","implicit","securityDefinitions","setSecurityDefScopesFromSpec","updateSwagger","getAmznResourceNames","apitype","isSOAPToREST","promisedInPolicies","getResourcePolicies","promisedOutPolicies","inPolicies","outPolicies","mappedPolicies","components_AddOperation","verbObject","components_Operation","Resources_extends","copyOfOperations","isSelectAll","reject","verbInfo","secDef","setSpecScopesFromSecurityDefScopes","APIOperations","Resources_Resources_Resources","APIProductOperations","buttonWrapper","ProductResourcesEdit","apiCopy","setApiResources","updating","ProductResourcesEditWorkspace","NewEndpointCreate","generateEndpointConfig","endpointImplType","setImplType","endpointTypes","inlineMessageContainer","Card","endpointTypeCard","CardContent","cardContent","types","option","CardActions","cardActions","GenericResource","scriptContent","originalScript","setMockValueDetails","showReset","setShowReset","GenericResource_objectSpread","resourcePathContainer","prototypeResourceHeader","chipExpansionPanel","scriptResetButton","genericResourceContent","GenericResource_MonacoEditor","xMediationScriptProperty","defaultScript","InlineEndpoints","updatePaths","mockValueDetails","onScriptChange","tmpPaths","mockScripts","setMockScripts","getGeneratedMockScriptsOfAPI","mediationScript","script","getGeneratedMockScriptOfAPI","Prototype_GenericResource","getEndpointTypeProperty","endpointsToList","config","apply","endpointUtils_toConsumableArray","sandbox_endpoints","sandbox_failovers","production_failovers","createEndpointConfig","endpointType","tmpEndpointConfig","failOver","access_method","amznAccessKey","amznSecretKey","amznRegion","getEndpointTemplate","template_not_supported","GeneralConfiguration","epConfig","isConfigExpanded","setConfigExpand","endpointCertificates","setEndpointCertificates","setAliasList","getEndpointCertificates","aliases","filteredCertificates","generalConfigPanel","configHeaderContainer","secondaryHeading","hidden","generalConfigContent","endpointConfigSection","addCertificate","GeneralConfiguration_toConsumableArray","deleteEndpointCertificate","flexShrink","securityHeading","sandboxEndpointSwitch","GenericEndpoint","endpointURL","editEndpoint","setAdvancedConfigOpen","esCategory","setESConfigOpen","deleteEndpoint","serviceUrl","setServiceUrl","isEndpointValid","setIsEndpointValid","statusCode","setStatusCode","isErrorCode","setIsErrorCode","endpointInputWrapper","endpointValidChip","endpointErrorChip","endpointInvalidChip","isWebSocket","iconButtonValid","iconButton","apiID","testEndpoint","statusMessage","GenericEndpointAdd","addEndpoint","EndpointListing","apiEndpoints","epType","failOvers","addNewEndpoint","removeEndpoint","setEndpointType","setEndpoints","selectedRef","listingWrapper","Endpoints_GenericEndpointAdd","Endpoints_GenericEndpoint","epTypeWrapper","epTypeName","epInput","leftArrow","leftArrowLight","dialogHeader","listItemOdd","&:focus","algorithms","sessionManagementOps","defaultTemplateObj","algoClassName","algoCombo","sessionManagement","sessionTimeOut","LoadBalanceConfig","handleLBConfigChange","closeLBConfigDialog","lbConfig","setLbConfigObject","algoClassNameError","setAlgoClassNameError","tmpLBConfig","LoadBalanceConfig_objectSpread","handleFieldChange","algo","configButtonContainer","LoadbalanceFailoverConfig","endpointsDispatcher","toggleAdvanceConfig","globalEpType","handleEndpointCategorySelect","isLBConfigOpen","setLBConfigOpen","newURL","endpointConfigCopy","endpointTemplate","epConfigProperty","endpointList","endpointConfigProperty","indexToRemove","tmpEndpoints","LoadbalanceFailoverConfig_objectSpread","getEndpointTypeHeading","endpointsTypeSelectWrapper","endpointTypeSelect","lpConfigWrapper","lbConfigBtn","wrapper","endpointsWrapperLeft","endpointName","Endpoints_EndpointListing","endpointsWrapperRight","configDialogHeader","Endpoints_LoadBalanceConfig","endpointSecurityInfo","PaperProps","itemHeight","AdvanceEndpointConfig","advanceConfig","isSOAPEndpoint","onSaveAdvanceConfig","onCancel","advanceConfigObj","setAdvanceConfig","optimize","actionDuration","actionSelect","factor","retryDelay","retryErroCode","retryTimeOut","suspendDuration","suspendErrorCode","suspendMaxDuration","errorCodes","actionItems","messageTypes","optimizeOptions","AdvanceEndpointConfig_objectSpread","handleConfigFieldChange","di","configContainer","configSubContainer","Input","messageType","advanceDialogActions","EditableParameterRow","oldName","oldValue","newName","setName","setValue","editMode","setEditMode","validateEmpty","itemValue","saveRow","handleKeyDown","addProperty","Save_default","DeleteForever_default","EndpointSecurity","securityInfo","onChangeEndpointAuth","isProduction","saveEndpointSecurityConfig","closeEndpointSecurityConfig","setEndpointSecurityInfo","username","password","grantType","tokenUrl","clientId","clientSecret","customParameters","securityValidity","setSecurityValidity","showAddParameter","setShowAddParameter","clientSecretIsMasked","setClientSecretIsMasked","parameterName","setParameterName","parameterValue","setParameterValue","authTypes","grantTypes","tmpSecurity","EndpointSecurity_objectSpread","validateAndUpdateSecurityInfo","validity","validateTokenUrl","toggleAddParameter","handleParameterChange","handleAddToList","customParametersCopy","oldRow","newRow","RemoveRedEye","eye","addParameter","items","GeneralConfiguration_EditableParameterRow","EndpointSecurity_extends","renderCustomParameters","selectField","banner","Credentials","newEndpointConfig","Credentials_objectSpread","labelId","region","EndpointOverview","swaggerDef","saveAndRedirect","supportedEnpointTypes","setSupportedEndpointType","setEpConfig","advanceConfigOptions","setAdvancedConfigOptions","endpointSecurityConfig","setEndpointSecurityConfig","endpointCategory","setEndpointCategory","prod","typeChangeConfirmation","setTypeChangeConfirmation","openDialog","supportedTypeLists","apiObject","supportedEndpointTypes","getSupportedType","availableEndpoints","getEndpointType","endpoint_security","getEndpoints","handleOnChangeEndpointCategoryChange","endpointProp","modifiedEndpoint","endpointTypeProperty","changeEndpointType","selectedKey","tmpConfig","generatedEndpointConfig","EndpointOverview_objectSpread","handleEndpointTypeSelect","advanceEPConfig","endpointInfo","getAdvanceConfig","toggleEndpointSecurityConfig","handleEndpointSecurityChange","endpointSecurityObj","enType","overviewWrapper","Prototype_InlineEndpoints","endpointContainer","defaultEndpointWrapper","Endpoints_GeneralConfiguration","Endpoints_LoadbalanceFailoverConfig","AdvancedConfig_AdvanceEndpointConfig","selectedEndpoints","GeneralConfiguration_EndpointSecurity","endpointTypesWrapper","listing","sandboxHeading","borderRightStyle","borderRightWidth","endpointTypesSelectWrapper","addLabel","defaultSwagger","setSwagger","endpointValidity","setAPIEndpointsValid","apiDispatcher","initState","Endpoints_objectSpread","implementationType","generateMockScripts","isAddressEndpoint","currentEndpointConfig","getEndpointTemplateByType","toJSON","saveAPI","isRedirect","apiKey","apiSecret","isValidEndpoint","Endpoints_NewEndpointCreate","endpointsContainer","Endpoints_EndpointOverview","swaggerObj","onChangeAPI","errorMessageContainer","endpointValidityMessage","buttonSection","implSelectRadio","gatewayPaper","emptyBox","MicroGateway","selectedMgLabel","setSelectedMgLabel","mgLabels","setMgLabels","microgatewayLabelsGet","MicroGateway_toConsumableArray","access_urls","Kubernetes","clusters","selectedDeployments","setSelectedDeployments","handleOnChecked","clusterId","include","deploymentTypes","deployment","selectedClusters","cluster","generateElement","selectedDeploymentCopy","dep","clusterNameFound","handleEnvironmentsSelect","reduce","currentKey","elementToPush","generatePropertyData","properties","accessURL","Environments","setGatewayEnvironments","Environments_toConsumableArray","labels","allDeployments","setAllDeployments","getDeployments","environment","serverUrl","ws","wss","http","https","filterType","selectableRowsHeader","selectableRows","pagination","Invoice","subscriptionId","isMonetizedUsagePolicy","isNotAuthorized","showPopup","setShowPopup","showErrorPopup","setShowErrorPopup","invoice","setInvoice","handleAlertClose","getMonetizationInvoice","invoiceData","invoiceItem","insideArray","subscriptionStatus","BLOCKED","PROD_BLOCKED","SubscriptionTablePagination","page","rowsPerPage","onChangePage","FirstPage_default","KeyboardArrowLeft_default","ceil","KeyboardArrowRight_default","LastPage_default","SubscriptionsTable","subscriptions","totalSubscription","searchQuery","rowsPerPageOptions","emptyColumnHeight","subscriberClaims","formatSubscriptionStateString","blockSubscription","blockProductionOnly","unblockSubscription","handleChangePage","handleChangeRowsPerPage","filterSubscriptions","isMonetizedPolicy","renderClaims","isNotCreator","fetchSubscriptionData","getSubscriptionBlockingButtons","blockSubscriptions","messages","defineMessages","errorMessage","unblockSubscriptions","total","getSubscriberInfo","prevState","SubscriptionsTable_objectSpread","getMonetization","monetizationStatus","getSubscriptionPolicies","filteredPolicies","tierPlan","policyName","monetizationAttributes","pricePerRequest","claimsObject","claims","claim","hover","InfoToolTip","Info_default","BLOCK_SUBSCRIPTION","Subscriptions_Invoice","customFooter","TablePagination","colSpan","onChangeRowsPerPage","ActionsComponent","subMails","emails","v","email","URI","names","k","Tip","noDataMessage","headline","popupHeadline","& th","searchDiv","searchRoot","searchInput","searchIconButton","tableColumnSize","tableColumnSize2","dialogColumnSize","dialog","invoiceTable","uniqueCell","disableColor","subscriberHeader","SubscriptionPoliciesManage","subscriptionPolicies","setPolices","newSelectedPolicies","SubscriptionPoliciesManage_toConsumableArray","subscriptionPoliciesPaper","gridLabel","TenantAutocomplete_objectWithoutProperties","TenantAutocomplete_extends","TenantAutocomplete_objectSpread","DownshiftMultiple","setTenantList","suggestions","setInputValue","newSelectedItem","TenantAutocomplete_toConsumableArray","inputValue2","tenantList2","startAdornment","handleInputChange","setsuggestions","newSuggestions","tenant","domain","inputType","textControl","selectEmpty","subscriptionAvailabilityPaper","tenantsList","SimpleSelect","setAvailability","currentAvailability","subscriptionAvailability","setValues","availability","isSpecificTenants","isUIElementDisabled","subscriptionAvailableTenants","availabilityValue","SubscriptionAvailability_objectSpread","autoComplete","onSubmit","displayEmpty","TenantAutocomplete_IntegrationDownshift","Subscriptions","setSubscriptions","updateInProgress","setUpdateInProgress","Subscriptions_toConsumableArray","Subscriptions_SubscriptionPoliciesManage","crossTenantSubscriptionEnabled","Progress","Subscriptions_SubscriptionsTable","CommentAdd","commentText","currentLength","inputChange","handleClickAddComment","handleClickCancel","handleCategoryChange","filterCommentToAddReply","toggleShowReply","commentToFilter","parentCommentId","commentId","allComments","commentsUpdate","comment","addComment","newComment","addedComment","replies","cancelButton","zeroMinWidth","maxCommentLength","commentIcon","unig","CommentEdit","handleClickUpdateComment","filterCommentToUpdate","filterCommentToUpdateReply","toggleShowEdit","commentToEdit","updateComment","updatedComment","replyIndex","CommentOptions","showAddComment","showEditComment","handleClickOpen","editIndex","displayDate","timestamp","localDate","Date","toLocaleDateString","day","month","year","toLocaleTimeString","hour","minute","canDelete","createdBy","getUser","adminRole","canModify","entryPoint","Grid_default","verticalSpace","disable","VerticalDivider","time","overflowWrap","CommentReply","deleteComment","keyCount","getKey","handleClickDeleteComment","handleShowEdit","handleConfirmDialog","filterRemainingComments","filterCommentToDelete","commentIdOfCommentToDelete","parentCommentIdOfCommentToDelete","remainingComments","remainingReplies","comments","AccountBox_default","noWrap","Comments_CommentEdit","CommentReply_extends","Comments_CommentOptions","ConfirmDialog","labelCancel","labelOk","callback","Comment","handleShowReply","Comment_extends","Comments_CommentAdd","Comments_CommentReply","Comments","totalComments","startCommentsToDisplay","updateCommentList","handleExpandClick","handleLoadMoreComments","getAllComments","commentList","commentsLimit","newStart","difference","newTotal","ArrowDropDownCircleOutlined_default","aria-expanded","titleSub","unmountOnExit","Comments_Comment","loadMoreLink","ArrowDropDown_default","CreateScope","validRoles","invalidRolesArray","api_uuid","valid","invalid","apiScopes","scopeAddDisabled","addScope","validateScopeName","handleScopeNameInput","validateScopeDescription","handleRoleAddition","CreateScope_toConsumableArray","exist","bindings","aScope","promisedApiUpdate","redirectURL","titleGrid","descriptionForm","progress","helpText","hint","extraPadding"," & .MuiGrid-item","EditScope","EditScope_defineProperty","thisScope","scopeName","EditScope_objectSpread","updateScope","handleInputs","originalScope","scopeObj","EditScope_toConsumableArray","SvgIcon_default","confirm","ops","setOpenLocal","deleteScope","Scopes","api_data","editUrl","Scopes_Delete","scopesList","resources","buttonProgress","Scope","Scopes_CreateScope","Scopes_extends","Scopes_EditScope","additionalProperties","AddPolicy","AddPolicy_defineProperty","uuid","policyId","getThreatProtectionPolicy","formattedPolicy","getThreatProtectionPolicies","currentApi","handlePolicyAdd","addThreatProtectionPolicyToApi","n","addJsonContent","formatPolicy","toggleShowAddPolicy","SecurityOverview","SecurityOverview_defineProperty","showAddPolicy","updatePolicyData","policyIds","threatProtectionPolicies","updatedPolicies","deletePolicy","associatedApi","deleteThreatProtectionPolicyFromApi","Security_AddPolicy","tableLayout","Security","APISecurityAudit","APISecurityAudit_defineProperty","createMuiTheme","useNextVariants","overrides","MUIDataTableBodyCell","MUIDataTableSelectCell","MUIDataTableToolbarSelect","searchTerm","lastTerms","termObject","regexPatterns","appendedString","j","getModel","findNextMatch","lineNumber","range","endLineNumber","column","finalMatchIndex","revealLineInCenter","startLineNumber","deltaDecorations","Range","startColumn","endColumn","isWholeLine","inlineDecoration","glyphMarginClassName","contentLine","report","overallScore","numErrors","externalApiId","loading","apiDefinition","criticalityObject","1","2","3","4","5","getSecurityAuditReport","grade","redirectUrl","getRowData","issues","rowType","dataObject","rowObject","specificDescription","pointer","criticality","roundScore","score","tooManyImpacted","pointersAffected","tooManyError","getMoreDetailUrl","baseUrl","round","reportObject","linkToDetailedReport","errorColumns","glyphMargin","responsive","expandableRows","expandableRowsOnClick","renderExpandableRow","tableRow","columnOne","react_monaco_editor_lib_default","columnTwo","referenceErrorTypography","referenceTypography","subheadingTypography","paperDiv","rootPaper","sectionHeadingTypography","linkText","linkToDetailedReportText","afterLinkText","auditSummaryDiv","auditSummarySubDiv","index_esm","circularProgressBarScore","circularProgressBarScoreFooter","auditSummaryDivRight","overallScoreText","totalNumOfErrorsText","totalNumOfErrors","overallCriticalityText","overallCriticality","securitySummary","rc_progress_es","percent","dataValidationSummary","ThemeProvider","getMuiTheme","semanticErrors","getErrorMuiTheme","validationErrors","warnings","securityNumOfIssuesText","securityNumOfIssues","issueCounter","securityScoreText","securityScore","securityCriticalityText","securityCriticality","dataNumOfIssuesText","dataNumOfIssues","dataScoreText","dataScore","dataCriticalityText","dataCriticality","htmlToolTip","margin-left","background-color","importDefinitionDialogHeader","ImportDefinition","setSchemaDefinition","openAPIDefinitionImport","setOpenAPIDefinitionImport","isImporting","setIsImporting","isGraphQL","isGraphql","isSOAP","apiInputs","inputsDispatcher","inputAction","ImportDefinition_objectSpread","formValidity","mode","updateGraphQLSchema","validateGraphQLFile","graphQLInfo","graphQLSchema","updateGraphQLAPIDefinition","schemaDefinition","handleOnValidate","isFormValid","dialogTitle","dialogContent","ProvideOpenAPI","onValidate","btnText","ProvideGraphQL","ProvideWSDL","CloudUploadRounded_default","isFileInput","updateWSDLByFileOrArchive","updateWSDLByUrl","updateWSDL","reader","FileReader","onloadend","readAsText","newAPI","updateAPIDefinitionByFile","updateAPIDefinitionByUrl","updateOASDefinition","EditorDialog","APIDefinition","schemaContent","graphQL","swaggerModified","convertTo","getConvertToFormat","isAuditApiClicked","securityAuditProperties","isSwaggerValid","handleNo","handleOk","hasJsonStructure","onAuditApiClick","onChangeFormatClick","openUpdateConfirmation","updateSwaggerDefinition","onChangeSwaggerContent","promisedApi","getSchema","YAML","safeDump","safeLoad","formattedString","load","modifiedContent","definition","APIDefinition_extends","swaggerContent","specFormat","toFormat","parsedContent","resourceNotFountMessage","downloadLink","fileName","encodeURIComponent","topBar","CloudDownloadRounded_default","apiToken","collectionId","LockRounded_default","SwapHorizontalCircle_default","APIDefinition_APISecurityAudit","APIDefinition_MonacoEditor","progressLoader","onEditContent","converterWrapper","swaggerEditorWrapper","WSDL","isArchive","wsdl","loadWSDLInEditor","handleDownloadWSDLZip","getWSDLInfo","getWSDL","downloadWidget","downloadButtonContent","WSDL_MonacoEditor","cursorStyle","common","apiOnly","productOnly","graphqlOnly","goToSearch","linkButton","goToWrapper","downshiftWrapper","GoTo_objectWithoutProperties","GoTo_extends","GoTo_objectSpread","handleClickAway","aria-haspopup","GoTo","showSearch","setShowSearch","ClickAwayListener","onClickAway","GoTo_toConsumableArray","CreateNewVersionButton","API_COPY","createNewVersionWrapper","createNewVersion","LibraryAdd_default","A200","backLink","backIcon","backText","createNewVersionButtonColor","APIDetailsTopMenu","imageUpdate","isVisibleInStore","isDownlodable","infoItem","dateWrapper","GoTo_GoTo","components_CreateNewVersionButton","buttonClass","downloadApi","exportApi","zipFile","downloadApiFlex","DeleteApiButton","alignSelf","lastUpdatedTypography","BusinessInformation_defineProperty","isValidBusinessOwnerEmail","isValidTechnicalOwnerEmail","isFormUpdated","emailStatus","businessOwnerEmail","technicalOwnerEmail","handleSubmit","noValidate","paperRoot","EditableRow","oldKey","apiAdditionalProperties","newKey","setKey","Properties","additionalPropertiesTemp","setAdditionalProperties","showAddProperty","setShowAddProperty","propertyKey","setPropertyKey","propertyValue","setPropertyValue","isAdditionalPropertiesStale","setIsAdditionalPropertiesStale","isKeyWord","toggleAddProperty","additionalPropertiesCopy","Properties_EditableRow","Properties_extends","renderAdditionalProperties","BusinessPlans","monetizedPolices","monetizationQuery","policiesList","tableHeadCell","tableHeadTitle","stateWrapper","tableCel","rightDataColumn","Monetization","Monetization_defineProperty","monStatus","property","getMonetizationData","apiProduct","getSettings","configureMonetizationToApiProduct","configureMonetizationToApi","monetizationAttribute","Monetization_BusinessPlans","viewInExStoreLink","black","ExternalStores","allExternalStores","setAllExternalStores","publishedExternalStores","setPublishedExternalStores","externalStoresEnabled","resourceNotFoundMessageText","titleMessage","bodyMessage","getPublishedExternalStores","publishedStoreIds","store","reason","getAllExternalStores","ExternalStores_toConsumableArray","publishAPIToExternalStores","successfulStores","CreateNewVersion","NewVersion_defineProperty","newVersion","empty","alreadyExists","hasSpecialChars","isDefaultVersionBool","createNewAPIVersion","redirectToReferrer","handleVersionChange","handleDefaultVersionChange","transformOrigin","cookieName","environmentName","getEnvironment","pairs","pair","cookie_name","validityPeriod","secured","expiresDirective","securedDirective","date","setTime","getTime","toUTCString","_environment","environmentData","localStorage","getItem","CONST","LOCALSTORAGE_ENVIRONMENT","getDefaultEnvironment","LOCAL_STORAGE_ENVIRONMENT","host","loginTokenPath","refreshTokenPath","environments","setItem","Axios","getDCRappInfoRequestURL","PROTOCOL","DCR_APP_INFO","Settings","LOGOUT","LOGIN_TOKEN_PATH","LOGIN_SIGN_UP_PATH","SWAGGER_YAML","navigator","languages","userLanguage","contentDisposition","headers","matches","exec","msSaveBlob","downloadUrl","aTag","appendChild","click","LOGOUT_CALLBACK","User","id_token","remember","_userMap","_scopes","_idToken","_remember","_isSideBarOpen","newScopes","getPartialToken","getCookie","WSO2_AM_TOKEN_1","getRefreshPartialToken","WSO2_AM_REFRESH_TOKEN_1","setPartialToken","newToken","delete_cookie","setCookie","isSideBarOpen","checkPermission","toJson","idToken","userJson","_user","rememberMe","WSO2_AM_TOKEN_MSF4J","LOCALSTORAGE_USER","DEVPORTAL_CLIENT_ID","DEVPORTAL_SESSION_STATE","INSUFFICIENT_PREVILEGES","INVALID_TOKEN","ISLOGINPERMITTED","LOGINSTATUS","isLogged","error_response","noty","dismissQueue","modal","progressBar","layout","maxVisible","afterClose","loginPageUri","getCurrentEnvironment","userData","partialToken","refreshToken","deleteCookie","removeItem","fromJson","fetch","credentials","json","currentEnv","hasBasicLoginPermission","setUser","userScopes","APIClient","getScopeForResource","authenticateUser","grant_type","validity_period","promised_response","axios","getLoginTokenPath","qs","Authorization","Accept","Content-Type","withCredentials","previous_environment","setEnvironment","authUser","logout","authHeader","getAppLogoutURL","APIClientFactory","destroyAPIClient","refresh_token","USER_SCOPES","referrer","X-Alt-Referer","registerUser","getSignUpTokenPath","args","authorizations","OAuth2Security","token","access_token","SwaggerClient","promisedResolve","getSwaggerURL","requestInterceptor","request","_client","resolved","argsv","_fixSpec","_getRequestInterceptor","responseInterceptor","_getResponseInterceptor","unauthorizedErrorHandler","mutex","Mutex","client","sessionStorage","etag","addETag","getUserFromToken","queryString","existingToken","refToken","authorization","promise","acquire","release","refresh","getETag","_instance","_APIClientMap","getAPIClient","environmentLabel","api_Client","delete","Resource","requestContentType","Wsdl","apiClient","downloadWSDLForEnvironment","APIs","getWSDLOfAPI","wsdlClient","_requestMetaData","getAllAPIs","promiseGetAll","get_apis","getAPIById","promiseGet","get_apis__apiId_","api_id","payload","get_apis__apiId__documents__documentId__content","getDocumentsByAPIId","get_apis__apiId__documents","getDocumentByDocId","get_apis__apiId__documents__documentId_","getSwaggerByAPIId","get_apis__apiId__swagger","getGraphQLSchemaByAPIId","get_apis__apiId__graphql_schema","getSwaggerByAPIIdAndEnvironment","getSwaggerByAPIIdAndLabel","labelName","getSwaggerByAPIIdAndClusterName","getApplication","Applications","get_applications__applicationId_","applicationId","getAllApplications","limit","get_applications","getAllTiers","policyLevel","get_throttling_policies__policyLevel_","getAllApplicationAttributes","get_settings_application_attributes","createApplication","application","post_applications","updateApplication","put_applications__applicationId_","addCommentToAPI","getAllCommentsOfAPI","commentInfo","put_apis__apiId__comments__commentId_","getRatingFromUser","Ratings","get_apis__apiId__ratings","removeRatingOfUser","delete_apis__apiId__user_rating","addRating","ratingInfo","put_apis__apiId__user_rating","generateKeys","requestContent","post_applications__applicationId__generate_keys","generateToken","post_applications__applicationId__generate_token","getKeys","get_applications__applicationId__keys","generateApiKey","keyType","restrictions","post_applications__applicationId__api_keys__keyType__generate","getSubscriptions","promisedGet","get_subscriptions","subscribe","promiseCreateSubscription","subscriptionData","post_subscriptions","get_labels","getSdkLanguages","SDKs","get_sdk_gen_languages","getSdk","get_apis__apiId__sdks__language_","getTierByName","level","get_throttling_policies__policyLevel___policyId_","createUser","post_self_signup","getAllTags","get_tags","getAPIThumbnail","get_apis__apiId__thumbnail","get_search","getWsdlClient","get_settings","getKeyManagers","get_key_managers","getSupportedAlertTypes","Alerts","getStoreAlertTypes","getSubscribedAlertTypesByUser","getSubscribedAlertTypes","subscribeAlerts","alerts","subscribeToAlerts","unsubscribeAlerts","unsubscribeAllAlerts","getAlertConfigurations","alertType","getAllAlertConfigs","putAlertConfiguration","alertConfig","configId","addAlertConfig","configurationId","deleteAlertConfiguration","deleteAlertConfig","get_api_categories","getApiRecommendations","Recommendations","get_recommendations","get_apis__apiId__graphql_policies_complexity","get_apis__apiId__graphql_policies_complexity_types","changePassword","currentPwd","newPwd","promiseChangePassword","currentPassword","newPassword","Users","changeUserPassword","Application","throttlingTier","kwargs","productionKeys","sandboxKeys","productionTokens","sandboxTokens","_setKeys","keyObj","keyManager","_setTokens","get_applications__applicationId__oauth_keys","keysResponse","selectedScopes","keyMappingId","accessToken","consumerSecret","revokeToken","post_applications__applicationId__oauth_keys__keyMappingId__generate_token","tokenResponse","supportedGrantTypes","callbackUrl","grantTypesToBeSupported","validityTime","cleanUpKeys","post_applications__applicationId__oauth_keys__keyMappingId__clean_up","ok","updateKeys","tokenType","consumerKey","put_applications__applicationId__oauth_keys__keyMappingId_","regenerateSecret","post_applications__applicationId__oauth_keys__keyMappingId__regenerate_secret","secretResponse","secret","provideKeys","post_applications__applicationId__map_keys","appJson","offset","sortOrder","sortBy","delete_applications__applicationId_","KEY_TYPES","PRODUCTION","SANDBOX","TOKEN_TYPES","JWT","OAUTH","centerItems","tryoutHeading","menuItem","selectedApplication","selectedKeyType","handleChanges","handleSelectPanelChange","esm_Grid_Grid","TextField_TextField","react_intl_lib","sub","MenuItem_MenuItem","applicationInfo","Typography_Typography","FormControl_FormControl","RadioGroup_RadioGroup","FormControlLabel_FormControlLabel","Radio_Radio","styles","& .MuiButton-contained.Mui-disabled span.MuiButton-label","genKeyButton","gatewayEnvironment","categoryHeading","TryOutController","securitySchemeType","selectedEnvironment","containerMngEnvironments","productionAccessToken","sandboxAccessToken","setKeys","setSelectedKeyType","setSelectedKeyManager","setSelectedEnvironment","setProductionAccessToken","setSandboxAccessToken","setSecurityScheme","setUsername","setPassword","setProductionApiKey","setSandboxApiKey","productionApiKey","sandboxApiKey","environmentObject","setURLs","selectedKeyManager","showToken","setShowToken","setNotFound","setSelectedApplication","setKeyManagers","selectedKMObject","setSelectedKMObject","ksGenerated","setKSGenerated","urls","elm","URLs","subscriptionsList","newSelectedApplication","selectedKeyTypes","subscriptionsResponse","appKeys","responseKeyManagerList","filteredKMs","selectedKeys","Shared_Progress","isApiKeyEnabled","isBasicAuthEnabled","isOAuthEnabled","isTestKeyEnabled","prefix","isPrototypedAPI","showSecurityType","tokenValue","containerMngEnvMenuItems","envType","clusterDetails","deploymentEnvironmentName","clusterDisplayName","locale","Box_Box","Warning_default","ApiConsole_SelectAppPanel","what","sdefaultMessage","InputAdornment_InputAdornment","IconButton_IconButton","esm_Icon_Icon","Button_Button","apikey","CircularProgress_CircularProgress","Tooltip_Tooltip","icons_HelpOutline_default","inputAdornmentStart","disableAuthorizeAndInfoPlugin","wrapComponents","authorizeBtn","SwaggerUI","accessTokenProvider","componentProps","validatorUrl","defaultModelsExpandDepth","docExpansion","patternToCheck","endsWith","splitTokens","defaultModelExpandDepth","plugins","swagger_ui_react_default","TestConsole","TestConsole_defineProperty","apiObj","getResponse","apiData","testKey","updateAccessToken","httpVal","httpsVal","basePath","apiResponse","securtySchemas","shift","endpointURLs","scopeList","swaggerResponse","serverError","settingPromise","newServer","settingsNew","isUpdateToken","promiseSwagger","btoa","servers","schemes","isProtoTyped","enableForTest","ApiConsole_TryOutController","ApiConsole_SwaggerUI","userNotificationPaper","& span, & h5, & label, & td, & li, & div, & input","swaggerUIPaper","showTryout","swaggerUIBackground","documentBackground","tokenTextBoxBackground","Details","subPathKey","subPath","subPaths","matchPath","setAPI","setAPIProduct","setImageUpdate","isValidURL","apiProdUUID","getLeftMenuItemForDefinitionByType","pathPrefix","apiDefinitionMenuItem","Shared_LeftMenuItem","Code_default","getLeftMenuItemForResourcesByType","VerticalSplit_default","_updatedProperties","updatedProperties","update","updatedAPI","pageLocation","leftMenuIconMainSize","leftLInkMain","Dashboard_default","Build_default","Settings_default","GamesOutlined_default","RssFeed_default","Autorenew_default","PersonPinCircleOutlined_default","VpnKey_default","Business_default","List_default","LibraryBooks_default","LocalAtm_default","Store_default","components_APIDetailsTopMenu","contentInside","components_LastUpdatedTime","from","BASE","OVERVIEW_PRODUCT","NewOverview_Overview","OVERVIEW","API_DEFINITION","Details_APIDefinition_APIDefinition","APIDefinition_WSDL","API_DEFINITION_PRODUCT","SCHEMA_DEFINITION","LIFE_CYCLE","Details_LifeCycle_LifeCycle","CONFIGURATION","RUNTIME_CONFIGURATION","RUNTIME_CONFIGURATION_WEBSOCKET","RuntimeConfigurationWebSocket_RuntimeConfiguration","CONFIGURATION_PRODUCT","RUNTIME_CONFIGURATION_PRODUCT","ENDPOINTS","Details_Endpoints_Endpoints","ENVIRONMENTS","OPERATIONS","Details_Operations_Operations","RESOURCES_PRODUCT","RESOURCES_PRODUCT_EDIT","RESOURCES","SCOPES","Details_Scopes","DOCUMENTS","Details_Documents","DOCUMENTS_PRODUCT","SUBSCRIPTIONS","Subscriptions_Subscriptions","SUBSCRIPTIONS_PRODUCT","SECURITY","Details_Security","COMMENTS","Details_Comments_Comments","BUSINESS_INFO","Details_BusinessInformation_BusinessInformation","BUSINESS_INFO_PRODUCT","PROPERTIES","Properties_Properties","PROPERTIES_PRODUCT","NEW_VERSION","NewVersion","MONETIZATION","Details_Monetization","MONETIZATION_PRODUCT","TRYOUT","Details_TestConsole_TestConsole","EXTERNAL_STORES","BASE_PRODUCT","QUERYANALYSIS","freeze","leftMenuActive","detailsContent"],"mappings":"8EAAA,IAAAA,EAAA,CACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,gBAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,UAAA,KACAC,aAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,aAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,YAAA,KACAC,eAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,OAAA,KACAC,UAAA,KACAC,QAAA,KACAC,WAAA,KACAC,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","file":"DeferredDetails.813f750b87d4618d13b5.bundle.js","sourcesContent":["var map = {\n\t\"./af\": 1513,\n\t\"./af.js\": 1513,\n\t\"./ar\": 1514,\n\t\"./ar-dz\": 1515,\n\t\"./ar-dz.js\": 1515,\n\t\"./ar-kw\": 1516,\n\t\"./ar-kw.js\": 1516,\n\t\"./ar-ly\": 1517,\n\t\"./ar-ly.js\": 1517,\n\t\"./ar-ma\": 1518,\n\t\"./ar-ma.js\": 1518,\n\t\"./ar-sa\": 1519,\n\t\"./ar-sa.js\": 1519,\n\t\"./ar-tn\": 1520,\n\t\"./ar-tn.js\": 1520,\n\t\"./ar.js\": 1514,\n\t\"./az\": 1521,\n\t\"./az.js\": 1521,\n\t\"./be\": 1522,\n\t\"./be.js\": 1522,\n\t\"./bg\": 1523,\n\t\"./bg.js\": 1523,\n\t\"./bm\": 1524,\n\t\"./bm.js\": 1524,\n\t\"./bn\": 1525,\n\t\"./bn.js\": 1525,\n\t\"./bo\": 1526,\n\t\"./bo.js\": 1526,\n\t\"./br\": 1527,\n\t\"./br.js\": 1527,\n\t\"./bs\": 1528,\n\t\"./bs.js\": 1528,\n\t\"./ca\": 1529,\n\t\"./ca.js\": 1529,\n\t\"./cs\": 1530,\n\t\"./cs.js\": 1530,\n\t\"./cv\": 1531,\n\t\"./cv.js\": 1531,\n\t\"./cy\": 1532,\n\t\"./cy.js\": 1532,\n\t\"./da\": 1533,\n\t\"./da.js\": 1533,\n\t\"./de\": 1534,\n\t\"./de-at\": 1535,\n\t\"./de-at.js\": 1535,\n\t\"./de-ch\": 1536,\n\t\"./de-ch.js\": 1536,\n\t\"./de.js\": 1534,\n\t\"./dv\": 1537,\n\t\"./dv.js\": 1537,\n\t\"./el\": 1538,\n\t\"./el.js\": 1538,\n\t\"./en-SG\": 1539,\n\t\"./en-SG.js\": 1539,\n\t\"./en-au\": 1540,\n\t\"./en-au.js\": 1540,\n\t\"./en-ca\": 1541,\n\t\"./en-ca.js\": 1541,\n\t\"./en-gb\": 1542,\n\t\"./en-gb.js\": 1542,\n\t\"./en-ie\": 1543,\n\t\"./en-ie.js\": 1543,\n\t\"./en-il\": 1544,\n\t\"./en-il.js\": 1544,\n\t\"./en-nz\": 1545,\n\t\"./en-nz.js\": 1545,\n\t\"./eo\": 1546,\n\t\"./eo.js\": 1546,\n\t\"./es\": 1547,\n\t\"./es-do\": 1548,\n\t\"./es-do.js\": 1548,\n\t\"./es-us\": 1549,\n\t\"./es-us.js\": 1549,\n\t\"./es.js\": 1547,\n\t\"./et\": 1550,\n\t\"./et.js\": 1550,\n\t\"./eu\": 1551,\n\t\"./eu.js\": 1551,\n\t\"./fa\": 1552,\n\t\"./fa.js\": 1552,\n\t\"./fi\": 1553,\n\t\"./fi.js\": 1553,\n\t\"./fo\": 1554,\n\t\"./fo.js\": 1554,\n\t\"./fr\": 1555,\n\t\"./fr-ca\": 1556,\n\t\"./fr-ca.js\": 1556,\n\t\"./fr-ch\": 1557,\n\t\"./fr-ch.js\": 1557,\n\t\"./fr.js\": 1555,\n\t\"./fy\": 1558,\n\t\"./fy.js\": 1558,\n\t\"./ga\": 1559,\n\t\"./ga.js\": 1559,\n\t\"./gd\": 1560,\n\t\"./gd.js\": 1560,\n\t\"./gl\": 1561,\n\t\"./gl.js\": 1561,\n\t\"./gom-latn\": 1562,\n\t\"./gom-latn.js\": 1562,\n\t\"./gu\": 1563,\n\t\"./gu.js\": 1563,\n\t\"./he\": 1564,\n\t\"./he.js\": 1564,\n\t\"./hi\": 1565,\n\t\"./hi.js\": 1565,\n\t\"./hr\": 1566,\n\t\"./hr.js\": 1566,\n\t\"./hu\": 1567,\n\t\"./hu.js\": 1567,\n\t\"./hy-am\": 1568,\n\t\"./hy-am.js\": 1568,\n\t\"./id\": 1569,\n\t\"./id.js\": 1569,\n\t\"./is\": 1570,\n\t\"./is.js\": 1570,\n\t\"./it\": 1571,\n\t\"./it-ch\": 1572,\n\t\"./it-ch.js\": 1572,\n\t\"./it.js\": 1571,\n\t\"./ja\": 1573,\n\t\"./ja.js\": 1573,\n\t\"./jv\": 1574,\n\t\"./jv.js\": 1574,\n\t\"./ka\": 1575,\n\t\"./ka.js\": 1575,\n\t\"./kk\": 1576,\n\t\"./kk.js\": 1576,\n\t\"./km\": 1577,\n\t\"./km.js\": 1577,\n\t\"./kn\": 1578,\n\t\"./kn.js\": 1578,\n\t\"./ko\": 1579,\n\t\"./ko.js\": 1579,\n\t\"./ku\": 1580,\n\t\"./ku.js\": 1580,\n\t\"./ky\": 1581,\n\t\"./ky.js\": 1581,\n\t\"./lb\": 1582,\n\t\"./lb.js\": 1582,\n\t\"./lo\": 1583,\n\t\"./lo.js\": 1583,\n\t\"./lt\": 1584,\n\t\"./lt.js\": 1584,\n\t\"./lv\": 1585,\n\t\"./lv.js\": 1585,\n\t\"./me\": 1586,\n\t\"./me.js\": 1586,\n\t\"./mi\": 1587,\n\t\"./mi.js\": 1587,\n\t\"./mk\": 1588,\n\t\"./mk.js\": 1588,\n\t\"./ml\": 1589,\n\t\"./ml.js\": 1589,\n\t\"./mn\": 1590,\n\t\"./mn.js\": 1590,\n\t\"./mr\": 1591,\n\t\"./mr.js\": 1591,\n\t\"./ms\": 1592,\n\t\"./ms-my\": 1593,\n\t\"./ms-my.js\": 1593,\n\t\"./ms.js\": 1592,\n\t\"./mt\": 1594,\n\t\"./mt.js\": 1594,\n\t\"./my\": 1595,\n\t\"./my.js\": 1595,\n\t\"./nb\": 1596,\n\t\"./nb.js\": 1596,\n\t\"./ne\": 1597,\n\t\"./ne.js\": 1597,\n\t\"./nl\": 1598,\n\t\"./nl-be\": 1599,\n\t\"./nl-be.js\": 1599,\n\t\"./nl.js\": 1598,\n\t\"./nn\": 1600,\n\t\"./nn.js\": 1600,\n\t\"./pa-in\": 1601,\n\t\"./pa-in.js\": 1601,\n\t\"./pl\": 1602,\n\t\"./pl.js\": 1602,\n\t\"./pt\": 1603,\n\t\"./pt-br\": 1604,\n\t\"./pt-br.js\": 1604,\n\t\"./pt.js\": 1603,\n\t\"./ro\": 1605,\n\t\"./ro.js\": 1605,\n\t\"./ru\": 1606,\n\t\"./ru.js\": 1606,\n\t\"./sd\": 1607,\n\t\"./sd.js\": 1607,\n\t\"./se\": 1608,\n\t\"./se.js\": 1608,\n\t\"./si\": 1609,\n\t\"./si.js\": 1609,\n\t\"./sk\": 1610,\n\t\"./sk.js\": 1610,\n\t\"./sl\": 1611,\n\t\"./sl.js\": 1611,\n\t\"./sq\": 1612,\n\t\"./sq.js\": 1612,\n\t\"./sr\": 1613,\n\t\"./sr-cyrl\": 1614,\n\t\"./sr-cyrl.js\": 1614,\n\t\"./sr.js\": 1613,\n\t\"./ss\": 1615,\n\t\"./ss.js\": 1615,\n\t\"./sv\": 1616,\n\t\"./sv.js\": 1616,\n\t\"./sw\": 1617,\n\t\"./sw.js\": 1617,\n\t\"./ta\": 1618,\n\t\"./ta.js\": 1618,\n\t\"./te\": 1619,\n\t\"./te.js\": 1619,\n\t\"./tet\": 1620,\n\t\"./tet.js\": 1620,\n\t\"./tg\": 1621,\n\t\"./tg.js\": 1621,\n\t\"./th\": 1622,\n\t\"./th.js\": 1622,\n\t\"./tl-ph\": 1623,\n\t\"./tl-ph.js\": 1623,\n\t\"./tlh\": 1624,\n\t\"./tlh.js\": 1624,\n\t\"./tr\": 1625,\n\t\"./tr.js\": 1625,\n\t\"./tzl\": 1626,\n\t\"./tzl.js\": 1626,\n\t\"./tzm\": 1627,\n\t\"./tzm-latn\": 1628,\n\t\"./tzm-latn.js\": 1628,\n\t\"./tzm.js\": 1627,\n\t\"./ug-cn\": 1629,\n\t\"./ug-cn.js\": 1629,\n\t\"./uk\": 1630,\n\t\"./uk.js\": 1630,\n\t\"./ur\": 1631,\n\t\"./ur.js\": 1631,\n\t\"./uz\": 1632,\n\t\"./uz-latn\": 1633,\n\t\"./uz-latn.js\": 1633,\n\t\"./uz.js\": 1632,\n\t\"./vi\": 1634,\n\t\"./vi.js\": 1634,\n\t\"./x-pseudo\": 1635,\n\t\"./x-pseudo.js\": 1635,\n\t\"./yo\": 1636,\n\t\"./yo.js\": 1636,\n\t\"./zh-cn\": 1637,\n\t\"./zh-cn.js\": 1637,\n\t\"./zh-hk\": 1638,\n\t\"./zh-hk.js\": 1638,\n\t\"./zh-tw\": 1639,\n\t\"./zh-tw.js\": 1639\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2378;","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/css-loader/index.js!./testconsole.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../../node_modules/css-loader/index.js!./testconsole.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../../node_modules/css-loader/index.js!./testconsole.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".MuiTypography-caption,.MuiTypography-h4{font-family:Open Sans,Helvetica,Arial,sans-serif!important}.MuiTypography-h4{font-size:1.3rem!important;font-weight:400!important;line-height:1.17!important}.MuiSvgIcon-root{width:1em!important;height:1em!important;display:inline-block!important;font-size:1.5rem!important;transition:fill .2s cubic-bezier(.4,0,.2,1) 0ms!important;flex-shrink:0!important;user-select:none!important}.MuiTypography-body1{font-size:.8571428571428571rem!important;font-family:Open Sans,Helvetica,Arial,sans-serif!important;font-weight:400!important;line-height:1.5!important}.MuiTypography-caption{font-size:.6428571428571428rem!important;font-family:Roboto,Helvetica,Arial,sans-serif!important;font-weight:400!important;line-height:1.66!important;letter-spacing:.03333em!important}.MuiListItemIcon-root svg{font-size:20px!important}.MuiTypography-subtitle1{font-size:.8571428571428571rem!important;font-family:Open Sans,Helvetica,Arial,sans-serif!important;font-weight:400!important;line-height:1.75!important}.jss4039{margin:5!important;padding:20px!important}\", \"\"]);\n\n// exports\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\n\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        textTransform: theme.custom.leftMenuTextStyle,\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.palette.background.leftMenu),\n        fontSize: theme.custom.leftMenuIconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        diplay: 'none',\n    },\n});\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route,\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(theme.palette.background.leftMenu);\n    const iconSize = theme.custom.leftMenuIconSize;\n    const ditectCurrentMenu = (location) => {\n        const { pathname } = location;\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n    };\n    useEffect(() => {\n        const { location } = history;\n        ditectCurrentMenu(location);\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n\n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: selected ? theme.palette.background.appBarSelected : '' }}\n        >\n            {// If the icon pro ( which is comming from the React Material library )\n            // is coming we add css class and render.\n            // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n            // allow customers theme\n            // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                // We can also add custom icons\n                    <CustomIcon\n                        strokeColor={strokeColor}\n                        width={iconSize}\n                        height={iconSize}\n                        icon={props.iconText}\n                        className={classNames(\n                            classes.leftLInk,\n                            {\n                                [classes.noIcon]: leftMenu === 'no icon',\n                            },\n                            'leftLink_Icon',\n                        )}\n                    />\n                )\n            }\n            <Typography\n                className={classNames(\n                    classes.leftLInkText,\n                    {\n                        [classes.leftLInkText_IconLeft]: leftMenu === 'icon left',\n                        [classes.leftLInkText_NoText]: leftMenu === 'no text',\n                    },\n                    'leftLInkText',\n                )}\n            >\n                {text}\n            </Typography>\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({\n        divider: PropTypes.string,\n        leftLInk: PropTypes.string,\n        leftLink_IconLeft: PropTypes.string,\n        noIcon: PropTypes.string,\n        leftLink_Icon: PropTypes.string,\n        leftLInkText: PropTypes.string,\n        leftLInkText_IconLeft: PropTypes.string,\n        leftLInkText_NoText: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenu: PropTypes.string,\n            leftMenuIconSize: PropTypes.number,\n        }),\n        palette: PropTypes.shape({\n            getContrastText: PropTypes.func,\n            background: PropTypes.shape({\n                leftMenu: PropTypes.string,\n                appBar: PropTypes.string,\n            }),\n            leftMenu: PropTypes.string,\n        }),\n    }).isRequired,\n    Icon: PropTypes.element.isRequired,\n    text: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    history: PropTypes.shape({\n        listen: PropTypes.func.isRequired,\n        location: PropTypes.string.isRequired,\n    }).isRequired,\n    iconText: PropTypes.string,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Typography, Tooltip } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * API/Product last updated time.\n * @param {Parameter} props last updated time.\n * @returns {Property} The sum of the two numbers.\n */\nfunction LastUpdatedTime(props) {\n    const { lastUpdatedTime } = props;\n    return (\n        <div style={{ float: 'right' }}>\n            <Tooltip\n                title={moment(lastUpdatedTime).calendar()}\n                aria-label='add'\n            >\n                <Typography variant='caption' display='block'>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.last.updated.time'\n                        defaultMessage='Last updated:'\n                    />\n                    {' '}\n                    {moment(lastUpdatedTime).fromNow()}\n                </Typography>\n            </Tooltip>\n        </div>\n    );\n}\n\nLastUpdatedTime.propTypes = {\n    lastUpdatedTime: PropTypes.shape({ content: PropTypes.string }).isRequired,\n};\n\nexport default (LastUpdatedTime);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nimport Typography from '@material-ui/core/Typography';\nimport Api from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\n\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[method] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[method]);\n    }\n    return (\n        <Chip\n            label={method.toUpperCase()}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, marginRight: 5,\n            }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    heading: {\n        marginRight: 20,\n    },\n    contentWrapper: {\n        maxHeight: '125px',\n        overflowY: 'auto',\n    },\n};\n\nclass Resources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            paths: null,\n        };\n        this.restApi = new Api();\n    }\n\n    componentDidMount() {\n        const { id } = this.props.api;\n        const promisedAPI = this.restApi.getSwagger(id);\n        promisedAPI\n            .then((response) => {\n                if (response.obj.paths !== undefined) {\n                    this.setState({ paths: response.obj.paths });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n    render() {\n        const { paths } = this.state;\n        if (this.state.notFound) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.resource.not.found'\n                        defaultMessage='resource not found...'\n                    />\n                </div>\n            );\n        }\n        if (!paths) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Resources.loading'\n                        defaultMessage='loading...'\n                    />\n                </div>\n            );\n        }\n        const { classes, parentClasses, api } = this.props;\n        return (\n            <>\n                <div className={parentClasses.titleWrapper}>\n                    { api.type === 'GraphQL' ? (\n                        <Typography variant='h5' component='h3' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operations'\n                                defaultMessage='Operation'\n                            />\n                        </Typography>\n                    )\n                        : (\n                            <Typography variant='h5' component='h3' className={parentClasses.title}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Resources.resources'\n                                    defaultMessage='Resources'\n                                />\n                            </Typography>\n                        )}\n                </div>\n                <Box p={1}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(paths).map((key) => {\n                            const path = paths[key];\n                            return (\n                                <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {key}\n                                    </Typography>\n                                    {Object.keys(path).map((innerKey) => {\n                                        return CONSTS.HTTP_METHODS.includes(innerKey)\n                                            ? <RenderMethod method={innerKey} /> : null;\n                                    })}\n                                </div>\n                            );\n                        })}\n                    </div>\n                    <Link to={'/apis/' + api.id + '/resources'}>\n                        <Typography\n                            className={classes.subHeading}\n                            color='primary'\n                            display='inline'\n                            variant='caption'\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.ShowMore'\n                                defaultMessage='Show More'\n                            />\n                            <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                        </Typography>\n                    </Link>\n                </Box>\n            </>\n        );\n    }\n}\nResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(Resources);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Box from '@material-ui/core/Box';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Typography from '@material-ui/core/Typography';\nimport ApiContext from '../components/ApiContext';\n\nconst styles = (theme) => ({\n    contentWrapper: {\n        marginTop: theme.spacing(2),\n        maxHeight: '250px',\n        overflowY: 'auto',\n    },\n});\n\n/**\n *\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    const methodLower = method.toLowerCase();\n    let chipColor = theme.custom.operationChipColor\n        ? theme.custom.operationChipColor[methodLower]\n        : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.operationChipColor[methodLower]);\n    }\n    return (\n        <Chip\n            label={method}\n            style={{\n                backgroundColor: chipColor, color: chipTextColor, height: 20, fontSize: 9, width: 95,\n            }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n/**\n *\n * @param {*} props\n */\nfunction Operations(props) {\n    const { classes, parentClasses } = props;\n    return (\n        <ApiContext.Consumer>\n            {({ api }) => (\n                <>\n                    <div className={parentClasses.titleWrapper}>\n                        <Typography variant='h5' component='h3' className={parentClasses.title}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Operations.operation'\n                                defaultMessage='Operations'\n                            />\n                        </Typography>\n                    </div>\n                    <div>\n                        <div className={classes.contentWrapper}>\n                            <Table style={{ padding: 20 }}>\n                                {api.operations\n                            && api.operations.length !== 0\n                            && api.operations.map((item) => (\n                                <TableRow style={{ borderStyle: 'hidden' }}>\n                                    <TableCell style={{ padding: 8 }}>\n                                        <Typography className={parentClasses.heading} component='p' variant='body1'>\n                                            {item.target}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell style={{ padding: 8 }}>\n                                        <RenderMethod method={item.verb} />\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                            </Table>\n                        </div>\n                        <Box py={2}>\n                            <Link to={'/apis/' + api.id + '/operations'}>\n                                <Typography\n                                    className={classes.subHeading}\n                                    color='primary'\n                                    display='inline'\n                                    variant='caption'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Operations.ShowMore'\n                                        defaultMessage='Show More'\n                                    />\n                                    <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                                </Typography>\n                            </Link>\n                        </Box>\n                    </div>\n                </>\n            )}\n        </ApiContext.Consumer>\n    );\n}\n\nOperations.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(Operations);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withStyles, withTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Chip from '@material-ui/core/Chip';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Render method base.\n * @param {*} props\n */\nfunction RenderMethodBase(props) {\n    const { theme, method } = props;\n    const methodLower = method.toLowerCase();\n    let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[methodLower] : null;\n    let chipTextColor = '#000000';\n    if (!chipColor) {\n        console.log('Check the theme settings. The resourceChipColors is not populated properly');\n        chipColor = '#cccccc';\n    } else {\n        chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[methodLower]);\n    }\n    return (\n        <Chip\n            label={method.toUpperCase()}\n            style={{ backgroundColor: chipColor, color: chipTextColor, height: 20 }}\n        />\n    );\n}\n\nRenderMethodBase.propTypes = {\n    method: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nconst RenderMethod = withTheme(RenderMethodBase);\n\nconst styles = {\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'left',\n        marginBottom: 10,\n        padding: 5,\n    },\n    heading: {\n        marginRight: 20,\n        paddingBottom: 10,\n    },\n    resourceRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: 10,\n    },\n};\n\n/**\n * Component to show api product resources in overview tab\n */\nclass ProductResources extends React.PureComponent {\n    /**\n     * @inheritDoc\n     */\n    render() {\n        const { classes, parentClasses, api } = this.props;\n        const apiResources = api.apis;\n        return (\n            <>\n                <div className={parentClasses.titleWrapper} style={{ margin: '20px 0 0' }}>\n                    <Typography variant='h5' component='h3' className={parentClasses.title}>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.ProductResources.resources'\n                            defaultMessage='Resources'\n                        />\n                    </Typography>\n                </div>\n                <div className={classes.root}>\n                    <div className={classes.contentWrapper}>\n                        {Object.keys(apiResources).map((key) => {\n                            const resource = apiResources[key];\n                            return (\n                                <div className={classes.root}>\n                                    <Typography className={classes.heading} variant='body1'>\n                                        {resource.name + ' : ' + resource.version}\n                                    </Typography>\n                                    {Object.keys(resource.operations).map((innerKey) => {\n                                        const operation = (resource.operations)[innerKey];\n                                        return (\n                                            <div className={classes.resourceRow}>\n                                                <Typography className={classes.heading} variant='body1'>\n                                                    {operation.target}\n                                                </Typography>\n                                                <RenderMethod method={operation.verb} />\n\n                                            </div>\n                                        );\n                                    })}\n\n                                </div>\n                            );\n                        })}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\nProductResources.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.shape({}),\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.shape({}),\n    }).isRequired,\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n};\n\nexport default withStyles(styles)(ProductResources);\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n\n/**\n * Capitalize the first letter of a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction capitalizeFirstLetter(string) {\n    return string && string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Lowercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction lowerCaseString(string) {\n    return string.toLowerCase();\n}\n\n/**\n * Uppercase all letters in a string\n * @param {string} string string to be formatted\n * @return {string} formatted string\n */\nfunction upperCaseString(string) {\n    return string.toUpperCase();\n}\n\nexport { capitalizeFirstLetter, lowerCaseString, upperCaseString };\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Policies(props) {\n    const { parentClasses, api } = props;\n    return (\n        <>\n            <Grid item xs={12} md={6} lg={4}>\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Policies.business.plans'\n                        defaultMessage='Business Plans:'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                {/* Throttling Policies */}\n                <Typography component='p' variant='body1'>\n                    {api.policies\n                    && api.policies.length !== 0\n                    && api.policies.map((item, index) => (\n                        <span>\n                            {item}\n                            {api.policies.length !== index + 1 && ', '}\n                            {' '}\n                        </span>\n                    ))}\n                </Typography>\n            </Grid>\n        </>\n    );\n}\n\nPolicies.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Policies);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Chip from '@material-ui/core/Chip';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Box from '@material-ui/core/Box';\nimport API from 'AppData/api';\nimport { capitalizeFirstLetter, upperCaseString, lowerCaseString } from 'AppData/stringFormatter';\nimport APIContext from '../components/ApiContext';\nimport Policies from './Policies';\n\nconst HUMAN_READABLE_SCHEMES = {\n    oauth2: 'OAuth2',\n    basic_auth: 'Basic Auth',\n    mutualssl: 'Mutual TLS',\n    api_key: 'API Key',\n};\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Configuration(props) {\n    const { parentClasses } = props;\n    const { api } = useContext(APIContext);\n\n    return (\n        <>\n            <div>\n                <Typography variant='h5' component='h3' className={parentClasses.title}>\n                    <FormattedMessage id='Apis.Details.NewOverview.MetaData.config' defaultMessage='Configuration' />\n                </Typography>\n            </div>\n            <Box p={1}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Transports */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.transports'\n                                defaultMessage='Transports'\n                            />\n                            <Tooltip\n                                placement='top'\n                                tabIndex='-1'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.transport.tooltip'\n                                            defaultMessage={\n                                                'HTTP is less secure than HTTPS and '\n                                                + 'makes your API vulnerable to security threats.'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.transport && api.transport.length !== 0 && (\n                                <>\n                                    {api.transport.map((item, index) => (\n                                        <span>\n                                            {upperCaseString(item)}\n                                            {api.transport.length !== index + 1 && ', '}\n                                        </span>\n                                    ))}\n                                </>\n                            )}\n                            {!api.transport && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.transports.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* API Security */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.securityScheme'\n                                defaultMessage='API Security'\n                            />\n                            <Tooltip\n                                placement='top'\n                                tabIndex='-1'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.securityScheme.tooltip'\n                                            defaultMessage='OAuth2 is used as the default security schema.'\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.securityScheme && api.securityScheme.length !== 0 && (\n                                <>\n                                    {api.securityScheme\n                                        .filter((item) => !item.includes('mandatory'))\n                                        .map((filteredItem) => HUMAN_READABLE_SCHEMES[filteredItem])\n                                        .join(' , ')}\n                                </>\n                            )}\n                            {!api.securityScheme && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.securityScheme.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Access Control */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.access.control'\n                                defaultMessage='Access Control'\n                            />\n                            <Tooltip\n                                placement='top'\n                                tabIndex='-1'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.access.control.all.tooltip'\n                                            defaultMessage={\n                                                'All : The API is viewable, '\n                                                + 'modifiable by all the publishers and creators.'\n                                            }\n                                        />\n                                        <br />\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.access.control.tooltip'\n                                            defaultMessage={\n                                                'Restricted by roles : The API can be viewable and'\n                                                + ' modifiable by only specific publishers and creators '\n                                                + 'with the roles that you specify'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.accessControl && (\n                                <>\n                                    {capitalizeFirstLetter(lowerCaseString(api.accessControl))}\n                                </>\n                            )}\n                            {api.accessControl === 'RESTRICTED' && ' ( Visible to '}\n                            {api.accessControl === 'RESTRICTED' && api.accessControlRoles.join()}\n                            {api.accessControl === 'RESTRICTED' && ' ) '}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* workflowStatus */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.workflow.status'\n                                defaultMessage='Workflow Status'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.workflowStatus && <>{api.workflowStatus}</>}\n                            {!api.workflowStatus && (\n                                <>\n                                    <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.workflowStatus.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </Typography>\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Visibility */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.visibility.store'\n                                defaultMessage='Visibility on Developer Portal'\n                            />\n                            <Tooltip\n                                placement='top'\n                                tabIndex='-1'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={(\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.visibility.store.all.tooltip'\n                                            defaultMessage={\n                                                'Public: The API is accessible to everyone and can be advertised '\n                                                + 'in multiple developer portals - a central developer portal '\n                                                + 'and/or non-WSO2 developer portals.'\n                                            }\n                                        />\n                                        <br />\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.visibility.store.res.tooltip'\n                                            defaultMessage={\n                                                'Restricted by roles: The API is visible only to '\n                                                + 'specific user roles in the tenant Developer Portal that you specify.'\n                                            }\n                                        />\n                                    </>\n                                )}\n                            >\n                                <Button className={parentClasses.helpButton}>\n                                    <HelpOutline className={parentClasses.helpIcon} />\n                                </Button>\n                            </Tooltip>\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {(api.visibility && api.visibility === 'PRIVATE')\n                                ? (\n                                    <>\n                                    Visible to my domain\n                                    </>\n                                )\n                                : (\n                                    <>\n                                        {capitalizeFirstLetter(lowerCaseString(api.visibility))}\n                                    </>\n                                )}\n                            {api.visibility === 'RESTRICTED' && ' ( Visible to '}\n                            {api.visibility === 'RESTRICTED' && api.visibleRoles.join()}\n                            {api.visibility === 'RESTRICTED' && ' ) '}\n                        </Typography>\n                    </Grid>\n                    <Policies parentClasses={parentClasses} />\n                    {api.apiType === API.CONSTS.APIProduct ? null : (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.tags'\n                                        defaultMessage='Tags'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                {api.tags\n                                    && api.tags.map((tag) => (\n                                        <Chip\n                                            key={tag}\n                                            label={tag}\n                                            style={{\n                                                'font-size': 13,\n                                                height: 20,\n                                                marginRight: 5,\n                                            }}\n                                        />\n                                    ))}\n                                {api.tags.length === 0 && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.tags.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                            </Grid>\n                        </>\n                    )}\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nConfiguration.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default Configuration;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport Grid from '@material-ui/core/Grid';\nimport green from '@material-ui/core/colors/green';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport ApiContext, { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport AuthManager from 'AppData/AuthManager';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '90%',\n    },\n    button: {\n        color: theme.palette.secondary,\n        marginRight: theme.spacing(1),\n    },\n    gridRequirements: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: theme.spacing(2),\n    },\n    gridSmall: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 0,\n        marginTop: theme.spacing(1),\n    },\n    gridEndpoint: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 0,\n        marginRight: theme.spacing(4.2),\n        marginTop: theme.spacing(0.5),\n    },\n    iconTrue: {\n        color: green[500],\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginRight: theme.spacing(1),\n    },\n    iconFalse: {\n        color: theme.palette.grey[500],\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n        marginRight: theme.spacing(1),\n    },\n    arrowIcon: {\n        position: 'absolute',\n        top: '16px',\n        right: '-76px',\n        fontSize: '7.9461rem',\n        color: theme.palette.background.default,\n        zIndex: theme.zIndex.overviewArrow,\n    },\n    label: {\n        paddingLeft: '0',\n        paddingRight: '0',\n        flexBasis: '33.3333%',\n        maxWidth: '33.3333%',\n    },\n    stepper: {\n        background: 'transparent',\n        marginLeft: theme.spacing(10),\n    },\n    box: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: 'transparent',\n        padding: '2px',\n        height: '82px',\n        borderRight: '0',\n        marginRight: '0',\n    },\n    pointerStart: {\n        height: 82,\n        position: 'relative',\n        background: theme.custom.overviewStepper.backgrounds.completed,\n        marginRight: '21px',\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            right: '-41px',\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.overviewStepper.backgrounds.completed,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n    },\n    pointerMiddle: {\n        height: 82,\n        position: 'relative',\n        background: theme.custom.overviewStepper.backgrounds.active,\n        margin: '0 20px',\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            right: '-41px',\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.overviewStepper.backgrounds.active,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.wrapperBackground,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n    },\n    pointerEnd: {\n        height: 82,\n        position: 'relative',\n        background: theme.custom.overviewStepper.backgrounds.inactive,\n        marginLeft: '21px',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            left: 0,\n            bottom: 0,\n            width: 0,\n            height: 0,\n            borderLeft: '41px solid',\n            borderLeftColor: theme.custom.wrapperBackground,\n            borderTop: '41px solid transparent',\n            borderBottom: '41px solid transparent',\n        },\n    },\n    pointerMiddleCompleted: {\n        background: theme.custom.overviewStepper.backgrounds.completed,\n        '&:before': {\n            borderLeftColor: theme.custom.overviewStepper.backgrounds.completed,\n        },\n    },\n    pointerEndActive: {\n        background: theme.custom.overviewStepper.backgrounds.active,\n    },\n    pointerEndCompleted: {\n        background: theme.custom.overviewStepper.backgrounds.completed,\n    },\n    stepIcon: {\n        fontSize: theme.custom.overviewStepper.iconSize,\n    },\n}));\n\n/**\n * This component renders the API steps\n *\n */\nexport default function CustomizedSteppers() {\n    const [api, updateAPI] = useAPI();\n    const classes = useStyles();\n    const { settings, user } = useAppContext();\n    const isEndpointAvailable = api.endpointConfig !== null;\n    const isTierAvailable = api.policies.length !== 0;\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n    const [lifecycleState, setlifecycleState] = useState([]);\n    const [isUpdating, setUpdating] = useState(false);\n    const { tenantList } = useContext(ApiContext);\n    const userNameSplit = user.name.split('@');\n    const tenantDomain = userNameSplit[userNameSplit.length - 1];\n    let devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview`;\n    if (tenantList && tenantList.length > 0) {\n        devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview?tenant=${tenantDomain}`;\n    }\n\n    useEffect(() => {\n        api.getLcState(api.id)\n            .then((result) => {\n                setlifecycleState(result.body.state);\n            });\n    }, []);\n\n    /**\n * Update the LifeCycle state of the API\n *\n */\n    function updateLCStateOfAPI(apiId, state) {\n        setUpdating(true);\n        const promisedUpdate = api.updateLcState(apiId, state);\n        promisedUpdate\n            .then(() => {\n                updateAPI()\n                    .then()\n                    .catch((error) => {\n                        if (error.response) {\n                            Alert.error(error.response.body.description);\n                        } else {\n                            Alert.error('Something went wrong while updating the API');\n                        }\n                        console.error(error);\n                    });\n                Alert.info('Lifecycle state updated successfully');\n            })\n            .finally(() => setUpdating(false))\n            .catch((errorResponse) => {\n                console.log(errorResponse);\n                Alert.error(JSON.stringify(errorResponse.message));\n            });\n    }\n\n    /**\n * This function renders the final lifecycle state\n * @param {*} state\n */\n    function finalLifecycleState(state) {\n        switch (state) {\n            case 'Published':\n                return (\n                    <Grid xs={12} display='block'>\n                        <Grid xs={12}>\n                            <Typography variant='h5'>\n                                <FormattedMessage\n                                    id='Apis.Details.Overview.CustomizedStepper.published'\n                                    defaultMessage='Published'\n                                />\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12}>\n                            <a\n                                target='_blank'\n                                rel='noopener noreferrer'\n                                href={devportalUrl}\n                                className={classes.viewInStoreLauncher}\n                            >\n                                <Typography\n                                    variant='h6'\n                                    color='primary'\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.components.APIDetailsTopMenu.view.in.portal'\n                                        defaultMessage='View in Dev Portal'\n                                    />\n                                    <LaunchIcon style={{ marginLeft: '5px' }} fontSize='small' />\n                                </Typography>\n                            </a>\n                        </Grid>\n                    </Grid>\n                );\n            case 'Prototyped':\n                return (\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.prototyped'\n                            defaultMessage='Prototyped'\n                        />\n                    </Typography>\n                );\n            case 'Blocked':\n                return (\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.blocked'\n                            defaultMessage='Blocked'\n                        />\n                    </Typography>\n                );\n            case 'Deprecated':\n                return (\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.deprecated'\n                            defaultMessage='Deprecated'\n                        />\n                    </Typography>\n                );\n            case 'Retired':\n                return (\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Overview.CustomizedStepper.retired'\n                            defaultMessage='Retired'\n                        />\n                    </Typography>\n                );\n            default:\n                return (\n                    <Grid xs={12} display='block'>\n                        <Grid xs={12}>\n                            {isPrototypedAvailable ? (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => updateLCStateOfAPI(api.id, 'Deploy as a Prototype')}\n                                    disabled={api.workflowStatus === 'CREATED' || AuthManager.isNotPublisher()}\n                                >\n                                        Deploy as a prototype\n                                    {isUpdating && <CircularProgress size={20} />}\n                                </Button>\n\n                            ) : (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => updateLCStateOfAPI(api.id, 'Publish')}\n                                    disabled={(!isEndpointAvailable || !isTierAvailable)\n                                        || AuthManager.isNotPublisher() || api.workflowStatus === 'CREATED'}\n                                >\n                                        Publish\n                                    {isUpdating && <CircularProgress size={20} />}\n                                </Button>\n                            )}\n                        </Grid>\n                        {api.workflowStatus === 'CREATED' && (\n                            <Grid xs={12}>\n                                <Typography variant='caption' color='error'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.CustomizedStepper.pending'\n                                        defaultMessage='The request is pending'\n                                    />\n                                </Typography>\n                            </Grid>\n                        )}\n                    </Grid>\n                );\n        }\n    }\n\n\n    let activeStep = 0;\n    if (lifecycleState === 'Created' && ((isEndpointAvailable && isTierAvailable) || isPrototypedAvailable)) {\n        activeStep = 2;\n    } else if (lifecycleState === 'Created') {\n        activeStep = 1;\n    } else if (lifecycleState !== 'Created') {\n        activeStep = 3;\n    }\n\n    const step2Class = activeStep > 1 ? classes.pointerMiddleCompleted : '';\n    let step3Class;\n    if (activeStep === 2) {\n        step3Class = classes.pointerEndActive;\n    } else if (activeStep === 3) {\n        step3Class = classes.pointerEndCompleted;\n    } else {\n        step3Class = '';\n    }\n\n    return (\n        <div className={classes.root}>\n            <Stepper alternativeLabel activeStep={activeStep} className={classes.stepper}>\n                <Step className={classes.label}>\n                    <StepLabel style={{ position: 'relative' }} StepIconProps={{ classes: { root: classes.stepIcon } }}>\n                        <div className={classes.pointerStart}>\n                            <Box className={classes.box}>\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Overview.CustomizedStepper.create'\n                                        defaultMessage='Created'\n                                    />\n                                </Typography>\n                            </Box>\n                        </div>\n                    </StepLabel>\n                </Step>\n                <Step className={classes.label}>\n                    <StepLabel style={{ position: 'relative' }} StepIconProps={{ classes: { root: classes.stepIcon } }}>\n                        <div className={`${classes.pointerMiddle} ${step2Class}`}>\n                            <Box p={2} borderLeft='0' borderRight='0'>\n                                <Tooltip\n                                    title={isEndpointAvailable ? '' : 'You have to specify an endpoint for the API'}\n                                    placement='top'\n                                >\n                                    <Grid className={classes.gridEndpoint}>\n                                        {isEndpointAvailable ? (\n                                            <CheckIcon className={classes.iconTrue} />\n                                        ) : (\n                                            <CloseIcon className={classes.iconFalse} />\n                                        )}\n                                        <Typography variant='h7'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.CustomizedStepper.business.plan.endpoint'\n                                                defaultMessage='Endpoint'\n                                            />\n                                        </Typography>\n                                        <Link to={'/apis/' + api.id + '/endpoints'}>\n                                            <LaunchIcon\n                                                style={{ marginLeft: '5px' }}\n                                                color='primary'\n                                                fontSize='small'\n                                            />\n                                        </Link>\n                                    </Grid>\n                                </Tooltip>\n                                <Tooltip\n                                    title={isTierAvailable ? '' : 'You have to select the business plan for the API'}\n                                    placement='bottom'\n                                >\n                                    <Grid xs={12} className={classes.gridSmall}>\n                                        {isTierAvailable ? (\n                                            <CheckIcon className={classes.iconTrue} />\n                                        ) : (\n                                            <CloseIcon className={classes.iconFalse} />\n                                        )}\n                                        <Typography variant='h7'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Overview.CustomizedStepper.business.plan.businessPlans'\n                                                defaultMessage=' Business plans'\n                                            />\n                                        </Typography>\n                                        <Link to={'/apis/' + api.id + '/subscriptions'}>\n                                            <LaunchIcon\n                                                style={{ marginLeft: '5px' }}\n                                                color='primary'\n                                                fontSize='small'\n                                            />\n                                        </Link>\n                                    </Grid>\n                                </Tooltip>\n                            </Box>\n                        </div>\n                    </StepLabel>\n                </Step>\n                <Step className={classes.label}>\n                    <StepLabel style={{ position: 'relative' }} StepIconProps={{ classes: { root: classes.stepIcon } }}>\n                        <div className={`${classes.pointerEnd} ${step3Class}`}>\n                            <Box className={classes.box}>\n                                {finalLifecycleState(lifecycleState)}\n                            </Box>\n                        </div>\n                    </StepLabel>\n                </Step>\n            </Stepper>\n        </div>\n    );\n}\n\nCustomizedSteppers.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n};\n\nCustomizedSteppers.contextType = ApiContext;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction BusinessInformation(props) {\n    const { parentClasses, api } = props;\n    return (\n        <>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Business Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.business.owner'\n                        defaultMessage='Business Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.businessOwner && (\n                        <>{api.businessInformation.businessOwner}</>\n                    )}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.businessOwner && (\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.business.owner.not.set'\n                                defaultMessage='-'\n                            />\n                        </>\n                    )}\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={4}>\n                {/* Technical Owner */}\n                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.BusinessInformation.technical.owner'\n                        defaultMessage='Technical Owner'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item xs={12} md={6} lg={8}>\n                <Typography component='p' variant='body1'>\n                    {api.businessInformation.technicalOwner\n                        && <>{api.businessInformation.technicalOwner}</>}\n                </Typography>\n                <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                    {!api.businessInformation.technicalOwner && (\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.BusinessInformation.technical.owner.not.set'\n                                defaultMessage='-'\n                            />\n                        </>\n                    )}\n                </Typography>\n            </Grid>\n        </>\n    );\n}\n\nBusinessInformation.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(BusinessInformation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport API from 'AppData/api';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport BusinessInformation from './BusinessInformation';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction MetaData(props) {\n    const { parentClasses } = props;\n    const [api] = useAPI();\n\n    return (\n        <>\n            <Typography variant='h5' component='h3' className={parentClasses.title}>\n                <FormattedMessage\n                    id='Apis.Details.NewOverview.MetaData.metadata'\n                    defaultMessage='Metadata'\n                />\n            </Typography>\n            <Box p={1}>\n                <Grid container spacing={1}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.description'\n                                defaultMessage='Description'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.description\n                            && (\n                                <>\n                                    {capitalizeFirstLetter(api.description)}\n                                </>\n                            )}\n                        </Typography>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!api.description\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.description.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Provider */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.provider'\n                                defaultMessage='Provider'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.provider && <>{api.provider}</>}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.context:'\n                                defaultMessage='Context:'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.context && <>{api.context}</>}\n                        </Typography>\n                    </Grid>\n                    {/* Version */}\n                    {api.apiType === API.CONSTS.API && (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.MetaData.version'\n                                        defaultMessage='Version'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.version && <>{api.version}</>}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                    {/* Type */}\n                    {api.apiType === API.CONSTS.APIProduct ? null : (\n                        <>\n                            <Grid item xs={12} md={6} lg={4}>\n                                <>\n                                    <Typography\n                                        component='p'\n                                        variant='subtitle2'\n                                        className={parentClasses.subtitle}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.MetaData.type:'\n                                            defaultMessage='Type:'\n                                        />\n                                    </Typography>\n                                </>\n                            </Grid>\n                            <Grid item xs={12} md={6} lg={8}>\n                                <Typography component='p' variant='body1'>\n                                    {api.type && <>{api.type}</>}\n                                    {!api.type\n                                        && (\n                                            <>\n                                                <Typography\n                                                    component='p'\n                                                    variant='body1'\n                                                    className={parentClasses.notConfigured}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewOverview.MetaData.type.not.set'\n                                                        defaultMessage='-'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        )}\n                                </Typography>\n                            </Grid>\n                        </>\n                    )}\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Created Time */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.created.time'\n                                defaultMessage='Created Time'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.createdTime\n                            && (\n                                <>\n                                    <Tooltip\n                                        title={moment(api.createdTime).calendar()}\n                                        aria-label='add'\n                                        interactive\n                                        placement='top-start'\n                                        tabIndex='-1'\n                                    >\n                                        <Typography variant='body1' display='block'>\n                                            {capitalizeFirstLetter(moment(api.createdTime).fromNow())}\n                                        </Typography>\n                                    </Tooltip>\n                                </>\n                            )}\n                            {!api.createdTime\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.createdTime.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Last Updated Time */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.MetaData.last.updated.time'\n                                defaultMessage='Last Updated Time'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.lastUpdatedTime\n                            && (\n                                <>\n                                    <Tooltip\n                                        title={moment(api.lastUpdatedTime).calendar()}\n                                        aria-label='add'\n                                        interactive\n                                        placement='top-start'\n                                        tabIndex='-1'\n                                    >\n                                        <Typography variant='body1' display='block'>\n                                            {capitalizeFirstLetter(moment(api.lastUpdatedTime).fromNow())}\n                                        </Typography>\n                                    </Tooltip>\n                                </>\n                            )}\n                            {!api.lastUpdatedTime\n                                && (\n                                    <>\n                                        <Typography\n                                            component='p'\n                                            variant='body1'\n                                            className={parentClasses.notConfigured}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.NewOverview.MetaData.lastUpdatedTime.not.set'\n                                                defaultMessage='-'\n                                            />\n                                        </Typography>\n                                    </>\n                                )}\n                        </Typography>\n                    </Grid>\n                    <BusinessInformation parentClasses={parentClasses} />\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nMetaData.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n};\n\nexport default MetaData;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst showEndpoint = (api, type) => {\n    if (api.endpointConfig) {\n        if (type === 'prod') {\n            return api.getProductionEndpoint();\n        }\n        if (type === 'sand') {\n            return api.getSandboxEndpoint();\n        }\n    }\n    return null;\n};\n\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction Endpoints(props) {\n    const { parentClasses, api } = props;\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n\n    return (\n        <>\n            <div>\n                <Typography variant='h5' component='h3' className={parentClasses.title}>\n                    <FormattedMessage\n                        id='Apis.Details.NewOverview.Endpoints.endpoints'\n                        defaultMessage='Endpoints'\n                    />\n                </Typography>\n            </div>\n            <Box p={1}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Production Endpoint (TODO) fix the endpoint\n                                            info when it's available with the api object */}\n                        { !isPrototypedAvailable ? (\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.production.endpoint'\n                                    defaultMessage='Production Endpoint'\n                                />\n                            </Typography>\n                        )\n                            : (\n                                <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.prototype.endpoint'\n                                        defaultMessage='Prototype Endpoint'\n                                    />\n                                </Typography>\n                            )}\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Tooltip\n                            placement='top'\n                            classes={{\n                                tooltip: parentClasses.htmlTooltip,\n                            }}\n                            title={\n                                showEndpoint(api, 'prod')\n                                && <>{showEndpoint(api, 'prod')}</>\n                            }\n                        >\n                            <Typography component='p' variant='body1' className={parentClasses.url}>\n                                {showEndpoint(api, 'prod')\n                                && <>{showEndpoint(api, 'prod')}</>}\n                            </Typography>\n                        </Tooltip>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!showEndpoint(api, 'prod') && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.not.set'\n                                        defaultMessage='-'\n                                    />\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                    {!isPrototypedAvailable && (\n                        <Grid item xs={12} md={6} lg={4}>\n                            {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                                it's available with the api object */}\n                            <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                                <FormattedMessage\n                                    id='Apis.Details.NewOverview.Endpoints.sandbox.endpoint'\n                                    defaultMessage='Sandbox Endpoint'\n                                />\n                            </Typography>\n                        </Grid>\n                    )}\n\n                    {!isPrototypedAvailable && (\n                        <Grid item xs={12} md={6} lg={8}>\n                            <Tooltip\n                                placement='top'\n                                classes={{\n                                    tooltip: parentClasses.htmlTooltip,\n                                }}\n                                title={\n                                    showEndpoint(api, 'sand')\n                                    && <>{showEndpoint(api, 'sand')}</>\n                                }\n                            >\n                                <Typography component='p' variant='body1' className={parentClasses.url}>\n                                    {showEndpoint(api, 'sand')\n                                    && <>{showEndpoint(api, 'sand')}</>}\n                                </Typography>\n                            </Tooltip>\n                            <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                                {!showEndpoint(api, 'sand') && (\n                                    <>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewOverview.Endpoints.sandbox.not.set'\n                                            defaultMessage='-'\n                                        />\n                                    </>\n                                )}\n                            </Typography>\n                        </Grid>\n                    )}\n                    <Grid item xs={12} md={6} lg={4}>\n                        {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                            it's available with the api object */}\n                        <Typography component='p' variant='subtitle2' className={parentClasses.subtitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewOverview.Endpoints.endpoint.security'\n                                defaultMessage='Endpoint Security'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12} md={6} lg={8}>\n                        <Typography component='p' variant='body1'>\n                            {api.endpointSecurity && <>{api.endpointSecurity.type}</>}\n                        </Typography>\n                        <Typography component='p' variant='body1' className={parentClasses.notConfigured}>\n                            {!api.endpointSecurity\n                            && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Details.NewOverview.Endpoints.security.not.set'\n                                        defaultMessage='-'\n                                    />\n                                </>\n                            )}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Box>\n        </>\n    );\n}\n\nEndpoints.propTypes = {\n    parentClasses: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Endpoints);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport API from 'AppData/api';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Resources from './Resources';\nimport Operations from './Operations';\nimport ProductResources from './ProductResources';\nimport Configuration from './Configuration';\nimport CustomizedStepper from './CustomizedStepper';\nimport MetaData from './MetaData';\nimport Endpoints from './Endpoints';\n\nconst styles = (theme) => ({\n    root: {\n        ...theme.mixins.gutters(),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    contentWrapper: {\n        marginTop: theme.spacing(2),\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n            backgroundColor: green[700],\n        },\n    },\n    checkItem: {\n        textAlign: 'center',\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n        padding: 0,\n        height: 'auto',\n        '& span': {\n            padding: '0 5px',\n        },\n    },\n    imageContainer: {\n        display: 'flex',\n    },\n    imageWrapper: {\n        marginRight: theme.spacing(3),\n    },\n    subtitle: {\n        marginTop: theme.spacing(0),\n    },\n    specialGap: {\n        marginTop: theme.spacing(3),\n    },\n    resourceTitle: {\n        marginBottom: theme.spacing(3),\n    },\n    ListRoot: {\n        padding: 0,\n        margin: 0,\n    },\n    titleWrapper: {\n        display: 'flex',\n    },\n    title: {\n        flex: 1,\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n    lifecycleWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    lifecycleIcon: {\n        fontSize: 36,\n        color: 'green',\n        marginRight: theme.spacing(1),\n    },\n    leftSideWrapper: {\n        paddingRight: theme.spacing(2),\n    },\n    notConfigured: {\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    url: {\n        maxWidth: '100%',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\n\n/**\n * API Overview page\n *\n * @param {*} props\n * @returns\n */\nfunction Overview(props) {\n    const { classes, api: newApi } = props;\n    const { api } = useContext(ApiContext);\n    let loadEndpoints;\n\n    if (api.apiType === API.CONSTS.API) {\n        loadEndpoints = <Endpoints parentClasses={classes} api={api} />;\n    }\n    function getResourcesClassForAPIs(apiType) {\n        switch (apiType) {\n            case 'GRAPHQL':\n                return <Operations parentClasses={classes} api={api} />;\n            case 'APIProduct':\n                return <ProductResources parentClasses={classes} api={api} />;\n            case 'WS':\n                return '';\n            default:\n                return <Resources parentClasses={classes} api={api} />;\n        }\n    }\n\n    if (newApi.apiType === API.CONSTS.APIProduct) {\n        api.type = API.CONSTS.APIProduct;\n    }\n    return (\n        <>\n            <Typography variant='h4' align='left' className={classes.mainTitle}>\n                <FormattedMessage\n                    id='Apis.Details.Overview.Overview.topic.header'\n                    defaultMessage='Overview'\n                />\n            </Typography>\n            {api.type !== API.CONSTS.APIProduct && (\n                <Grid container spacing={12}>\n                    <Grid item xs={12} s={12} md={12} lg={12}>\n                        <CustomizedStepper />\n                    </Grid>\n                </Grid>\n            )}\n            <div className={classes.contentWrapper}>\n                <Paper className={classes.root}>\n                    <Grid container spacing={24}>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <Grid container spacing={24}>\n                                <Grid item xs={12} md={6} lg={6}>\n                                    <MetaData parentClasses={classes} />\n                                </Grid>\n                                <Grid item xs={12} md={6} lg={6}>\n                                    <Configuration parentClasses={classes} />\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12} md={12} lg={12}>\n                            <div className={classes.specialGap}>\n                                <Grid container spacing={24}>\n                                    <Grid item xs={12} md={6} lg={6}>\n                                        <Grid item xs={12} md={8} lg={8}>\n                                            {getResourcesClassForAPIs(api.type)}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12} md={6} lg={6}>\n                                        {loadEndpoints}\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </div>\n        </>\n    );\n}\n\nOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(Overview);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\nimport red from '@material-ui/core/colors/red';\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport Slide from '@material-ui/core/Slide';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport Dropzone from 'react-dropzone';\nimport { SketchPicker } from 'react-color';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport MaterialIcons from 'MaterialIcons';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Configurations from 'Config';\n\nimport ImageGenerator from './ImageGenerator';\nimport Background from './Background';\nimport BaseThumbnail from './BaseThumbnail';\n\nconst windowURL = window.URL || window.webkitURL;\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = (theme) => ({\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 10em)',\n        padding: `${theme.spacing(2)}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span': {\n            fontSize: 100,\n            color: theme.palette.primary.main,\n        },\n    },\n    preview: {\n        height: theme.spacing(25),\n    },\n    rejectDrop: {\n        backgroundColor: red[50],\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: '0 0 0 20px',\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    iconView: {\n        width: 30,\n        margin: 10,\n        cursor: 'pointer',\n    },\n    subtitle: {\n        marginRight: 20,\n    },\n    subtitleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 10,\n    },\n    body: {\n        marginBottom: 10,\n    },\n    imageGenWrapper: {\n        '& > div': {\n            position: 'fixed',\n            marginTop: 20,\n        },\n    },\n    backgroundSelection: {\n        cursor: 'pointer',\n        marginRight: 10,\n        display: 'inline-block',\n        border: 'solid 1px #ccc',\n    },\n    actionBox: {\n        boxShadow:\n            '0px 1px 5px 0px rgba(0,0,0,0.2), 0px 2px 2px 0px rgba(0,0,0,0.14), 0px 3px 1px -2px rgba(0,0,0,0.12)',\n        justifyContent: 'flex-start',\n        padding: '10px 0 10px 10px',\n    },\n    imageContainer: {\n        paddingTop: 10,\n    },\n});\n\n/**\n * Give the icons array from category name\n *\n * @param {*} category\n * @param {*} allKeys\n * @returns\n */\nfunction FindCategoryKeys(category) {\n    for (let i = 0; i < MaterialIcons.categories.length; i++) {\n        if (MaterialIcons.categories[i].name === category) {\n            return MaterialIcons.categories[i].icons;\n        }\n    }\n}\n/**\n * Slide up transition for modal\n *\n * @param {any} props Properties\n * @returns {Slide} Slide up transition\n */\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n/**\n * Provides a view for the API Thumbnail image.\n * This can be either user defined image uploaded earlier or a generated Image.\n */\nclass ThumbnailView extends Component {\n    /**\n     * Initializes the ThumbnailView Component\n     *\n     * @param {any} props Component properties\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            file: null,\n            thumbnail: null,\n            selectedTab: 'design',\n            category: MaterialIcons.categories[0].name,\n            selectedIcon: null,\n            selectedIconUpdate: null,\n            color: null,\n            colorUpdate: null,\n            backgroundIndex: null,\n            backgroundIndexUpdate: null,\n            uploading: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     * Clean up resource\n     */\n    componentWillUnmount() {\n        if (this.state.thumbnail) {\n            windowURL.revokeObjectURL(this.state.thumbnail);\n        }\n    }\n\n    /**\n     * Event listener for file drop on the dropzone\n     *\n     * @param {File} acceptedFile dropped file\n     */\n    onDrop(acceptedFile) {\n        this.setState({ file: acceptedFile });\n    }\n\n\n    /**\n     * @param {SyntheticEvent} e React event object\n     */\n    handleClick = (action, intl) => () => {\n        if (action === 'btnEditAPIThumb') {\n            this.setState({ open: true });\n        } else if (action === 'btnUploadAPIThumb') {\n            const { api } = this.props;\n            const {\n                selectedTab, selectedIconUpdate, category, colorUpdate, backgroundIndexUpdate, file,\n            } = this.state;\n            let fileObj;\n            if (selectedTab === 'upload') {\n                if (!api.id && !file) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.validation.error',\n                        defaultMessage: 'Invalid file or API information is not set correctly.',\n                    }));\n                    return;\n                }\n                /* eslint prefer-destructuring: [\"error\", {VariableDeclarator: {object: true}}] */\n                fileObj = file[0];\n            } else {\n                if (!selectedIconUpdate && !colorUpdate && !backgroundIndexUpdate) {\n                    Alert.error(intl.formatMessage({\n                        id: 'the.icon.is.not.modified',\n                        defaultMessage: 'The icon is not modified',\n                    }));\n                    return;\n                }\n                const newIconJson = {\n                    key: selectedIconUpdate,\n                    category,\n                    color: colorUpdate,\n                    backgroundIndex: backgroundIndexUpdate,\n                };\n                const blob = new Blob([JSON.stringify(newIconJson)], { type: 'application/json' });\n                fileObj = new File([blob], 'FileName.json', { type: 'application/json' });\n            }\n\n            this.uploadThumbnail(selectedTab, api.id, fileObj, intl);\n        }\n    };\n\n\n    handleChange = (event, selectedTab) => {\n        this.setState({ selectedTab });\n    };\n\n    handleSelectionChange = (name) => (event) => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    selectIcon = (selectedIconUpdate) => {\n        this.setState({ selectedIconUpdate });\n    };\n\n    handleChangeComplete = (colorUpdate) => {\n        this.setState({ colorUpdate: colorUpdate.hex });\n    };\n\n    selectBackground = (backgroundIndexUpdate) => {\n        this.setState({ backgroundIndexUpdate });\n    };\n\n\n    /**\n     * Handle modal close event\n     */\n    handleClose() {\n        const { file, preview } = this.state;\n        if (file) {\n            windowURL.revokeObjectURL(preview);\n        }\n        this.setState((cState) => ({\n            open: false,\n            file: null,\n            colorUpdate: cState.color,\n            backgroundIndexUpdate: cState.background,\n            selectedIconUpdate: cState.selectedIcon,\n        }));\n    }\n\n    /**\n     * Add new thumbnail image to an API\n     *\n     * @param {String} apiId ID of the API to be updated\n     * @param {File} file new thumbnail image file\n     */\n    uploadThumbnail(selectedTab, apiId, file, intl) {\n        this.setState({ uploading: true });\n        const {\n            api: { apiType, id },\n        } = this.props;\n        const promisedThumbnail = apiType === Api.CONSTS.APIProduct\n            ? new APIProduct().addAPIProductThumbnail(id, file)\n            : new Api().addAPIThumbnail(id, file);\n\n        promisedThumbnail\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.success',\n                    defaultMessage: 'Thumbnail uploaded successfully',\n                }));\n                if (selectedTab === 'upload') {\n                    this.setState({ open: false, thumbnail: windowURL.createObjectURL(file) });\n                } else {\n                    this.setState((cState) => ({\n                        open: false,\n                        thumbnail: file.preview,\n                        selectedIcon: cState.selectedIconUpdate,\n                        color: cState.colorUpdate,\n                        backgroundIndex: cState.backgroundIndexUpdate,\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Listing.components.ImageGenerator.ThumbnailView.thumbnail.upload.error',\n                    defaultMessage: 'Error occurred while uploading new thumbnail. Please try again.',\n                }));\n            })\n            .finally(() => {\n                this.setState({ uploading: false });\n            });\n    }\n\n    saveDisableEnable() {\n        const {\n            file, selectedTab, selectedIconUpdate, colorUpdate, backgroundIndexUpdate, uploading,\n        } = this.state;\n        if (selectedTab === 'upload') {\n            return !(file && file[0]) || uploading; // If no files is uploaded retrun true\n        } else {\n            // If one of them is selected we return false\n            return !(selectedIconUpdate || backgroundIndexUpdate || colorUpdate) || uploading;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            api, classes, width, height, isEditable, theme, intl,\n        } = this.props;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n        const {\n            file,\n            thumbnail,\n            selectedTab,\n            selectedIcon,\n            selectedIconUpdate,\n            color,\n            colorUpdate,\n            backgroundIndex,\n            backgroundIndexUpdate,\n            uploading,\n        } = this.state;\n        let { category } = this.state;\n        if (!category) category = MaterialIcons.categories[0].name;\n\n        return (\n            <>\n                <BaseThumbnail\n                    isEditable={isEditable}\n                    onClick={this.handleClick('btnEditAPIThumb', intl)}\n                    thumbnail={thumbnail}\n                    selectedIcon={selectedIcon}\n                    color={color}\n                    backgroundIndex={backgroundIndex}\n                    category={category}\n                    api={api}\n                    width={width}\n                    height={height}\n                />\n\n                <Dialog\n                    TransitionComponent={Transition}\n                    aria-labelledby='thumb-dialog-title'\n                    disableBackdropClick\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    fullWidth='true'\n                    maxWidth='lg'\n                    fullScreen\n                >\n                    <Paper square className={classes.popupHeader}>\n                        <IconButton color='inherit' onClick={this.handleClose} aria-label='Close'>\n                            <Icon>close</Icon>\n                        </IconButton>\n                        <RadioGroup\n                            aria-label='APIThumbnail'\n                            name='apiThumbnail'\n                            className={classes.group}\n                            value={this.state.selectedTab}\n                            onChange={this.handleChange}\n                        >\n                            <FormControlLabel\n                                value='design'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.design'\n                                        defaultMessage='Design'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                value='upload'\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload'\n                                        defaultMessage='Upload'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </Paper>\n\n                    <DialogContent>\n                        {selectedTab === 'upload' && (\n                            <Grid container spacing={4}>\n                                <Grid item xs={3}>\n                                    <div className={classes.imageContainer}>\n                                        <img\n                                            className={classes.preview}\n                                            src={\n                                                file && file.length > 0\n                                                    ? windowURL.createObjectURL(file[0])\n                                                    : Configurations.app.context\n                                                      + '/site/public/images/api/api-default.png'\n                                            }\n                                            alt='Thumbnail Preview'\n                                        />\n                                    </div>\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <Dropzone\n                                        multiple={false}\n                                        accept='image/*'\n                                        className={classes.dropzone}\n                                        activeClassName={classes.acceptDrop}\n                                        rejectClassName={classes.rejectDrop}\n                                        onDrop={(dropFile) => {\n                                            this.onDrop(dropFile);\n                                        }}\n                                    >\n                                        {({ getRootProps, getInputProps }) => (\n                                            <div {...getRootProps({ style: dropzoneStyles })}>\n                                                <input {...getInputProps()} />\n                                                <div className={classes.dropZoneWrapper}>\n                                                    <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                                    <Typography>\n                                                        <FormattedMessage\n                                                            id='upload.image'\n                                                            defaultMessage='Click or drag the image to upload.'\n                                                        />\n                                                    </Typography>\n                                                </div>\n                                            </div>\n                                        )}\n                                    </Dropzone>\n                                </Grid>\n                            </Grid>\n                        )}\n                        {selectedTab === 'design' && (\n                            <Grid container spacing={4}>\n                                <Grid item xs={3} className={classes.imageGenWrapper}>\n                                    <ImageGenerator\n                                        width={width}\n                                        height={height}\n                                        api={api}\n                                        fixedIcon={{\n                                            key: selectedIconUpdate,\n                                            color: colorUpdate,\n                                            backgroundIndex: backgroundIndexUpdate,\n                                            category,\n                                            api,\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item xs={9}>\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Listing.components'\n                                                    + '.ImageGenerator.ThumbnailView.select.category'\n                                                }\n                                                defaultMessage='Select Category'\n                                            />\n                                        </Typography>\n                                        <Select\n                                            native\n                                            value={this.state.category}\n                                            onChange={this.handleSelectionChange('category')}\n                                        >\n                                            {MaterialIcons.categories.map((cat) => (\n                                                <option value={cat.name}>{cat.name}</option>\n                                            ))}\n                                        </Select>\n                                    </div>\n                                    <Typography component='p' variant='body1' className={classes.body}>\n                                        <FormattedMessage\n                                            id='Apis.Listing.components.ImageGenerator.ThumbnailView.select.an.icon'\n                                            defaultMessage='Select an icon from the Material Icons for your API.'\n                                        />\n                                    </Typography>\n                                    <div style={{ background: '#efefef', maxHeight: 180, overflow: 'scroll' }}>\n                                        {FindCategoryKeys(category).map((icon) => (\n                                            <Icon className={classes.iconView} onClick={() => this.selectIcon(icon.id)}>\n                                                {icon.id}\n                                            </Icon>\n                                        ))}\n                                    </div>\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Listing.components.ImageGenerator.ThumbnailView.select.'\n                                                    + 'color.for.the.icon'\n                                                }\n                                                defaultMessage='Select a color for the icon'\n                                            />\n                                        </Typography>\n                                    </div>\n                                    <SketchPicker\n                                        color={this.state.color || '#ffffff'}\n                                        onChangeComplete={this.handleChangeComplete}\n                                    />\n                                    <div className={classes.subtitleWrapper}>\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Listing.components.ImageGenerator.'\n                                                    + 'ThumbnailView.select.background'\n                                                }\n                                                defaultMessage='Select a Background'\n                                            />\n                                        </Typography>\n                                    </div>\n                                    {colorPairs.map((colorPair, index) => (\n                                        <div\n                                            className={classes.backgroundSelection}\n                                            onClick={() => this.selectBackground(index)}\n                                            onKeyDown={() => { }}\n                                        >\n                                            <Background width={100} height={100} colorPair={colorPair} />\n                                        </div>\n                                    ))}\n                                </Grid>\n                            </Grid>\n                        )}\n                    </DialogContent>\n                    <DialogActions className={classes.actionBox}>\n                        <Button\n                            disabled={this.saveDisableEnable()}\n                            variant='contained'\n                            color='primary'\n                            size='small'\n                            onClick={this.handleClick('btnUploadAPIThumb', intl)}\n                        >\n                            {selectedTab === 'design' && uploading && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.saving.btn'\n                                        defaultMessage='Saving'\n                                    />\n                                    <CircularProgress size={16} />\n                                </>\n                            )}\n                            {selectedTab === 'design' && !uploading && (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.save.btn'\n                                    defaultMessage='Save'\n                                />\n                            )}\n\n                            {selectedTab !== 'design' && uploading && (\n                                <>\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.ImageGenerator.ThumbnailView.uploading.btn'\n                                        defaultMessage='Uploading'\n                                    />\n                                    <CircularProgress size={16} />\n                                </>\n                            )}\n                            {selectedTab !== 'design' && !uploading && (\n                                <FormattedMessage\n                                    id='Apis.Listing.components.ImageGenerator.ThumbnailView.upload.btn'\n                                    defaultMessage='Upload'\n                                />\n                            )}\n                        </Button>\n\n                        <Button variant='contained' size='small' onClick={this.handleClose}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.ThumbnailView.cancel.btn'\n                                defaultMessage='CANCEL'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nThumbnailView.defaultProps = {\n    height: 190,\n    width: 250,\n    isEditable: false,\n};\n\nThumbnailView.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    isEditable: PropTypes.bool,\n    intl: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles, { withTheme: true })(ThumbnailView)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Radio from '@material-ui/core/Radio';\nimport Box from '@material-ui/core/Box';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DefaultVersion(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    return (\n        <Grid container spacing={1} alignItems='flex-start' xs={11}>\n            <Grid item>\n                <Box mt={4}>\n                    <FormControl component='fieldset' style={{ display: 'flex' }}>\n                        <FormLabel component='legend'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.isdefault.label'\n                                defaultMessage='Make this the default version'\n                            />\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='Make this the default version'\n                            value={api.isDefaultVersion}\n                            onChange={({\n                                target: { value },\n                            }) => configDispatcher({\n                                action: 'isDefaultVersion', value: value === 'true',\n                            })}\n                            style={{ display: 'flow-root' }}\n                        >\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                value\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.isdefault.yes'\n                                        defaultMessage='Yes'\n                                    />\n                                )}\n                            />\n                            <FormControlLabel\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                value={false}\n                                control={<Radio color='primary' />}\n                                label={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.isdefault.no'\n                                        defaultMessage='No'\n                                    />\n                                )}\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Box>\n            </Grid>\n            <Grid item xs={1}>\n                <Box mt={3}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.defaultversion.tooltip'\n                                defaultMessage={\n                                    'Indicates if this is the default version of the API. If an '\n                                    + 'API is invoked without specifying a version, the API Gateway will '\n                                    + 'route the request to the default version of the API.'\n                                }\n                            />\n                        )}\n                        aria-label='add'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nDefaultVersion.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Description(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n\n    return (\n        <TextField\n            id='outlined-multiline-static'\n            label='Description'\n            multiline\n            rows='4'\n            value={api.description}\n            margin='0'\n            fullWidth\n            variant='outlined'\n            onChange={(e) => configDispatcher({ action: 'description', value: e.target.value })}\n            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n        />\n    );\n}\n\nDescription.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function AccessControl(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const [userRoleValidity, setUserRoleValidity] = useState(true);\n    const { api, configDispatcher } = props;\n    const isNone = api.accessControl === 'NONE';\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    const [otherValidSystemRoles, setOtherValidSystemRoles] = useState([]);\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n        }\n    }, [invalidRoles]);\n    useEffect(() => {\n        if (otherValidSystemRoles.length === api.accessControlRoles.length && otherValidSystemRoles.length !== 0\n            && (otherValidSystemRoles.every((val) => api.accessControlRoles.includes(val)))) {\n            setUserRoleValidity(false);\n        } else {\n            setUserRoleValidity(true);\n        }\n    }, [otherValidSystemRoles]);\n    const handleRoleAddition = (role) => {\n        const systemRolePromise = APIValidation.role.validate(base64url.encode(role));\n        const userRolePromise = APIValidation.userRole.validate(base64url.encode(role));\n        systemRolePromise.then(() => {\n            setRoleValidity(true);\n            userRolePromise.then(() => {\n                setUserRoleValidity(true);\n                configDispatcher({\n                    action: 'accessControlRoles',\n                    value: [...api.accessControlRoles, role],\n                });\n            }).catch((error) => {\n                if (error.status === 404) {\n                    configDispatcher({\n                        action: 'accessControlRoles',\n                        value: [...api.accessControlRoles, role],\n                    });\n                    setOtherValidSystemRoles([...otherValidSystemRoles, role]);\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating user roles ' + error);\n                }\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        setOtherValidSystemRoles(otherValidSystemRoles.filter((existingRole) => existingRole !== role));\n        setInvalidRoles(invalidRoles.filter((existingRole) => existingRole !== role));\n        configDispatcher({\n            action: 'accessControlRoles',\n            value: api.accessControlRoles.filter((existingRole) => existingRole !== role),\n        });\n    };\n\n    const handleRoleValidationFailure = () => {\n        if (!roleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.Invalid'\n                    defaultMessage='Role is invalid'\n                />\n            );\n        } else if (!userRoleValidity) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.Roles.User.Invalid'\n                    defaultMessage='At least one role must be associated with the API creator'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                    defaultMessage='Enter valid role and press enter'\n                />\n            );\n        }\n    };\n\n    return (\n        <>\n            <Box style={{ position: 'relative', marginBottom: -12 }}>\n                <TextField\n                    fullWidth\n                    id='accessControl-selector'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.head.topic'\n                            defaultMessage='Publisher Access Control'\n                        />\n                    )}\n                    value={api.accessControl}\n                    name='accessControl'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'accessControl', value })}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    helperText={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.form.helper.text'\n                            defaultMessage='There are no access restrictions by default'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                >\n                    <MenuItem value='NONE'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.dropdown.none'\n                            defaultMessage='All'\n                        />\n                    </MenuItem>\n                    <MenuItem value='RESTRICTED'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.AccessControl.dropdown.restricted'\n                            defaultMessage='Restrict by role(s)'\n                        />\n                    </MenuItem>\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.all'\n                                        defaultMessage='All :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.all.desc'\n                                    defaultMessage='The API is viewable, modifiable by all the publishers and creators.'\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict'\n                                        defaultMessage='Restricted by roles :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.AccessControl.tooltip.restrict.\n                                    desc'\n                                    defaultMessage={'The API can be viewed and modified only by specific'\n                                    + ' publishers and creators with the roles that you specify'}\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='Publisher Access Control'\n                    placement='right-end'\n                    interactive\n                    className={classes.tooltip}\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n            {!isNone && (\n                <Box py={1} style={{ marginTop: 10 }}>\n                    <ChipInput\n                        fullWidth\n                        variant='outlined'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.AccessControl.roles'\n                                defaultMessage='Roles'\n                            />\n                        )}\n                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                        value={api.accessControlRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: (!roleValidity || !userRoleValidity) && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' style={{ paddingBottom: 8 }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity || !userRoleValidity}\n                        helperText={handleRoleValidationFailure()}\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                size='small'\n                                label={value}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '0 8px 12px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Box>\n            )}\n        </>\n    );\n}\n\nAccessControl.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport CONSTS from 'AppData/Constants';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * api.accessControl possible values are `NONE` and `RESTRICTED`\n * @export\n * @param {*} props\n * @returns\n */\nexport default function StoreVisibility(props) {\n    const [roleValidity, setRoleValidity] = useState(true);\n    const [roleExists, setRoleExists] = useState(true);\n    const { api, configDispatcher } = props;\n    const [invalidRoles, setInvalidRoles] = useState([]);\n    const isRestrictedByRoles = api.visibility === 'RESTRICTED';\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const restApi = new API();\n    const [tenants, setTenants] = useState([]);\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                setTenants(result.body.count);\n            });\n    }, []);\n\n    useEffect(() => {\n        if (invalidRoles.length === 0) {\n            setRoleValidity(true);\n        }\n        if (api.visibility === 'RESTRICTED' && api.visibleRoles.length !== 0) {\n            setRoleExists(true);\n        }\n    }, [invalidRoles]);\n    const handleRoleAddition = (role) => {\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise.then(() => {\n            setRoleExists(true);\n            setRoleValidity(true);\n            configDispatcher({\n                action: 'visibleRoles',\n                value: [...api.visibleRoles, role],\n            });\n        }).catch((error) => {\n            if (error.status === 404) {\n                setRoleValidity(false);\n                setInvalidRoles([...invalidRoles, role]);\n            } else {\n                Alert.error('Error when validating role: ' + role);\n                console.error('Error when validating roles ' + error);\n            }\n        });\n    };\n\n    const handleRoleDeletion = (role) => {\n        if (invalidRoles.includes(role)) {\n            setInvalidRoles(invalidRoles.filter((existingRole) => existingRole !== role));\n        }\n        if (api.visibility === 'RESTRICTED' && api.visibleRoles.length > 1) {\n            setRoleExists(true);\n        } else {\n            setRoleExists(false);\n        }\n        configDispatcher({\n            action: 'visibleRoles',\n            value: api.visibleRoles.filter((existingRole) => existingRole !== role),\n        });\n    };\n\n    return (\n        <>\n            <Box style={{ position: 'relative' }}>\n                <TextField\n                    fullWidth\n                    id='storeVisibility-selector'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.head.topic'\n                            defaultMessage='Developer Portal Visibility'\n                        />\n                    )}\n                    value={api.visibility}\n                    name='storeVisibility'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'visibility', value })}\n                    SelectProps={{\n                        MenuProps: {\n                            className: classes.menu,\n                        },\n                    }}\n                    helperText={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.form.helper.text'\n                            defaultMessage='By default API is visible to all developer portal users'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                >\n                    <MenuItem value='PUBLIC'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.StoreVisibility.dropdown.public'\n                            defaultMessage='Public'\n                        />\n                    </MenuItem>\n                    <MenuItem value='RESTRICTED'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.storeVisibility.dropdown.restrict'\n                            defaultMessage='Restrict by role(s)'\n                        />\n                    </MenuItem>\n                    {tenants !== 0\n                        && (\n                            <MenuItem value='PRIVATE'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.dropdown.private'\n                                    defaultMessage='Visible to my domain'\n                                />\n                            </MenuItem>\n                        )}\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.public'\n                                        defaultMessage='Public :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.public.desc'\n                                    defaultMessage={\n                                        'The API is accessible to everyone and can be advertised '\n                                        + 'in multiple developer portals - a central developer portal '\n                                        + 'and/or non-WSO2 developer portals.'\n                                    }\n                                />\n                                <br />\n                                <br />\n                                <strong>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict'\n                                        defaultMessage='Restricted by roles(s) :'\n                                    />\n                                </strong>\n                                {'  '}\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.storeVisibility.tooltip.restrict.desc'\n                                    defaultMessage={\n                                        'The API is visible only to specific user'\n                                        + ' roles in the tenant developer portal that you specify.'\n                                    }\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='Store Visibility'\n                    placement='right-end'\n                    className={classes.tooltip}\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n            {isRestrictedByRoles && (\n                <Box py={2} style={{ marginTop: -10, marginBottom: 10 }}>\n                    <ChipInput\n                        fullWidth\n                        variant='outlined'\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.storeVisibility.roles'\n                                defaultMessage='Roles'\n                            />\n                        )}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                        value={api.visibleRoles.concat(invalidRoles)}\n                        alwaysShowPlaceholder={false}\n                        placeholder='Enter roles and press Enter'\n                        blurBehavior='clear'\n                        InputProps={{\n                            endAdornment: !roleValidity && (\n                                <InputAdornment position='end'>\n                                    <Error color='error' style={{ paddingBottom: 8 }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                        onAdd={handleRoleAddition}\n                        error={!roleValidity || !roleExists}\n                        helperText={\n                            roleValidity ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                                    defaultMessage='Enter valid role and press enter'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                    defaultMessage='Role is invalid'\n                                />\n                            )\n                        }\n                        chipRenderer={({ value }, key) => (\n                            <Chip\n                                key={key}\n                                size='small'\n                                label={value}\n                                onDelete={() => {\n                                    handleRoleDeletion(value);\n                                }}\n                                style={{\n                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                    margin: '0 8px 12px 0',\n                                    float: 'left',\n                                }}\n                            />\n                        )}\n                    />\n                </Box>\n            )}\n        </>\n    );\n}\n\nStoreVisibility.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ChipInput from 'material-ui-chip-input';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Tags(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    const [isTagValid, setIsTagValid] = useState(true);\n    const [invalidTags, setInvalidTags] = useState([]);\n    const regexPattern = /([~!@#;%^&*+=|\\\\<>\"'/,])/;\n    return (\n        <React.Fragment style={{ marginTop: 10 }}>\n            <ChipInput\n                fullWidth\n                variant='outlined'\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Tags.title'\n                        defaultMessage='Tags'\n                    />\n                )}\n                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                value={api.tags}\n                error={!isTagValid}\n                helperText={isTagValid ? (\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Tags.helper'\n                        defaultMessage='Press `Enter` after typing the tag name to add a new tag'\n                    />\n                ) : (\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.Tags.error'\n                        defaultMessage={\n                            'The tag contains one or more illegal characters '\n                            + '( ~ ! @ # ; % ^ & * + = { } | < > , \\' \" \\\\\\\\ / ) .'\n                        }\n                    />\n                )}\n                onAdd={(tag) => {\n                    if (regexPattern.test(tag)) {\n                        setIsTagValid(false);\n                        setInvalidTags([...invalidTags, tag]);\n                    }\n                    configDispatcher({\n                        action: 'tags',\n                        value: [...api.tags, tag.length > 30 ? tag.substring(0, 30) : tag],\n                    });\n                }}\n                chipRenderer={({ value }, key) => (\n                    <Chip\n                        key={key}\n                        size='small'\n                        label={value}\n                        onDelete={() => {\n                            if (invalidTags.includes(value)) {\n                                const currentInvalidTags = invalidTags.filter((existingTag) => existingTag !== value);\n                                setInvalidTags(currentInvalidTags);\n                                if (currentInvalidTags.length === 0) {\n                                    setIsTagValid(true);\n                                }\n                            }\n                            configDispatcher({ action: 'tags', value: api.tags.filter((oldTag) => oldTag !== value) });\n                        }}\n                        style={{\n                            backgroundColor: regexPattern.test(value) ? red[300] : null,\n                            margin: '0 8px 12px 0',\n                            float: 'left',\n                        }}\n                    />\n                )}\n                style={{ display: 'flex' }}\n            />\n        </React.Fragment>\n    );\n}\n\nTags.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport API from 'AppData/api';\nimport { withAPI, useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    tooltip: {\n        position: 'absolute',\n        right: theme.spacing(-4),\n        top: theme.spacing(1),\n    },\n}));\n/**\n * Render the categories drop down.\n * @param {JSON} props props passed from it's parents.\n * @returns {JSX} Render the categories drop down.\n */\nfunction APICategories(props) {\n    const [categories, setCategories] = useState({});\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n    useEffect(() => {\n        API.apiCategories().then((response) => setCategories(response.body));\n    }, []);\n\n    if (!categories.list) {\n        return null;\n    } else if (categories.list.length === 0) {\n        return (\n            <Box style={{ position: 'relative', marginTop: 10 }}>\n                <TextField\n                    fullWidth\n                    select\n                    label={(\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories'\n                                defaultMessage='API Categories'\n                            />\n                        </>\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                    disabled\n                    value='emptyMessage'\n                >\n                    <MenuItem\n                        dense\n                        disableGutters\n                        value='emptyMessage'\n                    >\n                        <ListItemText primary={(\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories.empty'\n                                defaultMessage='No API Categories defined yet. Please create an API Category first.'\n                            />\n                        )}\n                        />\n                    </MenuItem>\n                </TextField>\n            </Box>\n        );\n    } else {\n        return (\n            <Box style={{ position: 'relative', marginTop: 10 }}>\n                <TextField\n                    fullWidth\n                    select\n                    label={(\n                        <>\n                            <FormattedMessage\n                                id='Apis.Details.Configurations.api.categories'\n                                defaultMessage='API Categories'\n                            />\n                        </>\n                    )}\n                    name='categories'\n                    margin='normal'\n                    variant='outlined'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], apiFromContext)}\n                    value={api.categories}\n                    SelectProps={{\n                        multiple: true,\n                        renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                    }}\n                    onChange={(e) => configDispatcher({ action: 'categories', value: e.target.value })}\n                    InputProps={{\n                        id: 'itest-id-categories-input',\n                    }}\n                    helperText='Select API Categories for the API'\n                >\n                    { categories.list.map((category) => (\n                        <MenuItem\n                            dense\n                            disableGutters\n                            id={category.id}\n                            key={category.name}\n                            value={category.name}\n                        >\n                            <Checkbox color='primary' checked={api.categories.includes(category.name)} />\n                            <ListItemText primary={category.name} secondary={category.description} />\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <Tooltip\n                    title={(\n                        <>\n                            <p>\n                                <FormattedMessage\n                                    id='Api.category.dropdown.tooltip'\n                                    defaultMessage={'API categories can be added via the Admin portal UI or the'\n                                        + ' Admin REST API. There has to be pre-defined API categories in the'\n                                        + ' environment in order to be attached to an API.'}\n                                />\n                            </p>\n                        </>\n                    )}\n                    aria-label='API Categories'\n                    placement='right-end'\n                    interactive\n                    className={classes.tooltip}\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Box>\n        );\n    }\n}\n\nAPICategories.defaultProps = {\n    categories: [],\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n\nexport default withAPI(APICategories);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\n\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport { isRestricted } from 'AppData/AuthManager';\nimport API from 'AppData/api.js';\nimport DefaultVersion from './components/DefaultVersion';\nimport Description from './components/Description';\nimport AccessControl from './components/AccessControl';\nimport StoreVisibility from './components/StoreVisibility';\nimport Tags from './components/Tags';\nimport APICategories from './components/APICategories';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(0),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 90,\n        right: -43,\n    },\n    arrowBackIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 30,\n        right: -71,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    btnSpacing: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    return {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        transport: [...api.transport],\n        wsdlUrl: api.wsdlUrl,\n        securityScheme: [...api.securityScheme],\n        categories: [...api.categories],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n    };\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DesignConfigurations() {\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value } = configAction;\n        const nextState = copyAPIConfig(state);\n        switch (action) {\n            case 'description':\n            case 'isDefaultVersion':\n            case 'authorizationHeader':\n            case 'responseCachingEnabled':\n            case 'cacheTimeout':\n            case 'enableSchemaValidation':\n            case 'visibility':\n            case 'maxTps':\n            case 'categories':\n            case 'tags':\n                nextState[action] = value;\n                return nextState;\n            case 'accessControl':\n                nextState[action] = value;\n                if (value === 'NONE') {\n                    nextState.accessControlRoles = [];\n                }\n                return nextState;\n            case 'accessControlRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'visibleRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n\n    const invalidTagsExist = apiConfig.tags.find((tag) => {\n        return (/([~!@#;%^&*+=|\\\\<>\"'/,])/.test(tag));\n    });\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        setIsUpdating(true);\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    return (\n        <>\n            <Container maxWidth='md'>\n                <Grid container spacing={2}>\n                    <Grid item md={12}>\n                        <Typography variant='h5'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.Design.topic.header'\n                                defaultMessage='Design Configurations'\n                            />\n                        </Typography>\n                        {api.apiType === API.CONSTS.APIProduct\n                            ? (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.Design.APIProduct.sub.heading'\n                                        defaultMessage='Configure API Product visibility.'\n                                    />\n                                </Typography>\n                            )\n                            : (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.Design.sub.heading'\n                                        defaultMessage='Configure API visibility.'\n                                    />\n                                </Typography>\n                            )}\n                    </Grid>\n                    <Grid item md={12}>\n                        <Paper elevation={0}>\n                            <div>\n                                <Box px={8} py={5}>\n                                    <Box py={1}>\n                                        <Grid container spacing={0}>\n                                            <Grid item xs={12} md={2}>\n                                                <ThumbnailView\n                                                    api={api}\n                                                    width={100}\n                                                    height={100}\n                                                    isEditable={!isRestricted(['apim:api_publish',\n                                                        'apim:api_create'], api)}\n                                                />\n                                            </Grid>\n                                            <Grid item xs={12} md={10}>\n                                                <Description api={apiConfig} configDispatcher={configDispatcher} />\n                                            </Grid>\n                                        </Grid>\n                                    </Box>\n                                    <Box py={1}>\n                                        <AccessControl api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <StoreVisibility api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <Tags api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Box>\n                                    <Box py={1}>\n                                        <APICategories\n                                            api={apiConfig}\n                                            configDispatcher={configDispatcher}\n                                            categories={api.categories}\n                                        />\n                                    </Box>\n                                    <Box py={1}>\n                                        {api.apiType !== 'APIProduct' && (\n                                            <DefaultVersion api={apiConfig} configDispatcher={configDispatcher} />\n                                        )}\n                                    </Box>\n                                    <Box pt={2}>\n                                        <Button\n                                            disabled={\n                                                isUpdating || invalidTagsExist\n                                                || (apiConfig.visibility === 'RESTRICTED'\n                                                    && apiConfig.visibleRoles.length === 0)\n                                            }\n                                            type='submit'\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.btnSpacing}\n                                            onClick={handleSave}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.Configuration.save'\n                                                defaultMessage='Save'\n                                            />\n                                            {isUpdating && <CircularProgress size={15} />}\n                                        </Button>\n                                        <Link to={'/apis/' + api.id + '/overview'}>\n                                            <Button>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Configuration.Configuration.cancel'\n                                                    defaultMessage='Cancel'\n                                                />\n                                            </Button>\n                                        </Link>\n                                    </Box>\n                                    {isRestricted(['apim:api_create'], api) && (\n                                        <Box py={1}>\n                                            <Typography variant='body2' color='primary'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Configuration.Configuration.update.not.allowed'\n                                                    defaultMessage={\n                                                        '* You are not authorized to update particular fields of'\n                                                        + ' the API due to insufficient permissions'\n                                                    }\n                                                />\n                                            </Typography>\n                                        </Box>\n                                    )}\n                                </Box>\n                            </div>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    paper: {\n        padding: theme.spacing(0, 3),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ResponseCaching(props) {\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n    const isResponseCachingEnabled = api.responseCachingEnabled;\n\n    return (\n        <>\n            <ExpansionPanel className={classes.expansionPanel}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.subHeading} variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.response.caching'\n                            defaultMessage='Response Caching'\n                        />\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.ResponseCaching.tooltip'\n                                    defaultMessage={\n                                        'If enabled, the API response will be cached at the gateway level'\n                                        + ' to improve the response time and minimize the backend load'\n                                    }\n                                />\n                            )}\n                            aria-label='Response cache'\n                            placement='right-end'\n                            interactive\n                        >\n                            <HelpOutline className={classes.iconSpace} />\n                        </Tooltip>\n                    </Typography>\n                    <FormControlLabel\n                        className={classes.actionSpace}\n                        control={(\n                            <Switch\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                checked={api.responseCachingEnabled}\n                                onChange={({ target: { checked } }) => configDispatcher({\n                                    action: 'responseCachingEnabled',\n                                    value: checked,\n                                })}\n                                color='primary'\n                            />\n                        )}\n                    />\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                    <Grid container spacing={1} alignItems='flex-start'>\n                        <Grid item>\n                            {isResponseCachingEnabled && (\n                                <TextField\n                                    value={api.cacheTimeout}\n                                    onChange={({ target: { value } }) => configDispatcher({\n                                        action: 'cacheTimeout',\n                                        value,\n                                    })}\n                                    margin='normal'\n                                    helperText={(\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.cache.timeout'\n                                            defaultMessage='Cache Timeout (seconds)'\n                                        />\n                                    )}\n                                />\n                            )}\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nResponseCaching.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChipInput from 'material-ui-chip-input';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n * api.corsConfiguration possible values true and false\n * @export\n * @param {*} props\n * @returns\n */\nexport default function CORSConfiguration(props) {\n    const [apiFromContext] = useAPI();\n    const {\n        configDispatcher,\n        api: { corsConfiguration },\n    } = props;\n    const isCorsEnabled = corsConfiguration.corsConfigurationEnabled;\n    const isAllowAllOrigins = corsConfiguration.accessControlAllowOrigins[0] === '*'\n        && corsConfiguration.accessControlAllowOrigins.length === 1;\n    const classes = useStyles();\n\n    return (\n        <ExpansionPanel className={classes.expansionPanel}>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.subHeading} variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.CORSConfiguration.cors.configuration'\n                        defaultMessage='CORS Configuration'\n                    />\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.CORSConfiguration.tooltip'\n                                defaultMessage='If enabled, the CORS configuration for the API will be enabled.'\n                            />\n                        )}\n                        aria-label='Response cache'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline className={classes.iconSpace} />\n                    </Tooltip>\n                </Typography>\n                <FormControlLabel\n                    className={classes.actionSpace}\n                    control={(\n                        <Switch\n                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                            checked={corsConfiguration.corsConfigurationEnabled}\n                            onChange={({ target: { checked } }) => configDispatcher({\n                                action: 'corsConfigurationEnabled',\n                                value: checked,\n                            })}\n                            color='primary'\n                        />\n                    )}\n                />\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                <Grid container>\n                    <Grid item md={12}>\n                        {isCorsEnabled && (\n                            <Grid container>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    origins'\n                                            defaultMessage='Access Control Allow Origins'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Grid container>\n                                        <Grid item md={12}>\n                                            <FormControlLabel\n                                                style={{ display: 'flex' }}\n                                                control={(\n                                                    <Checkbox\n                                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                                        checked={isAllowAllOrigins}\n                                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: { checked, value },\n                                                        })}\n                                                        value='*'\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label='Allow All Origins'\n                                            />\n                                        </Grid>\n                                        {!isAllowAllOrigins && (\n                                            <Grid item md={12}>\n                                                <ChipInput\n                                                    style={{ marginBottom: 40, display: 'flex' }}\n                                                    value={corsConfiguration.accessControlAllowOrigins}\n                                                    helperText={(\n                                                        <FormattedMessage\n                                                            id={\n                                                                'Apis.Details.Configuration.components'\n                                                                + '.CORSConfigurations.origin.helper'\n                                                            }\n                                                            defaultMessage={\n                                                                'Press `Enter` after typing the origin name,'\n                                                                + 'to add a new origin'\n                                                            }\n                                                        />\n                                                    )}\n                                                    onAdd={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: [\n                                                                    ...corsConfiguration.accessControlAllowOrigins,\n                                                                    accessControlAllowOrigin,\n                                                                ],\n                                                            },\n                                                        });\n                                                    }}\n                                                    onDelete={(accessControlAllowOrigin) => {\n                                                        configDispatcher({\n                                                            action: 'accessControlAllowOrigins',\n                                                            event: {\n                                                                value: corsConfiguration\n                                                                    .accessControlAllowOrigins\n                                                                    .filter(\n                                                                        (oldOrigin) => (\n                                                                            oldOrigin !== accessControlAllowOrigin),\n                                                                    ),\n                                                            },\n                                                        });\n                                                    }}\n                                                />\n                                            </Grid>\n                                        )}\n                                    </Grid>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    headers'\n                                            defaultMessage='Access Control Allow Headers'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40, display: 'flex' }}\n                                        value={corsConfiguration.accessControlAllowHeaders}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        helperText={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components.'\n                                                    + 'CORSConfigurations.header.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `Enter` after typing the header name, '\n                                                    + 'to add a new header'\n                                                }\n                                            />\n                                        )}\n                                        onAdd={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: [\n                                                    ...corsConfiguration.accessControlAllowHeaders,\n                                                    accessControlAllowHeader,\n                                                ],\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowHeader) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowHeaders',\n                                                value: corsConfiguration.accessControlAllowHeaders\n                                                    .filter((oldHeader) => oldHeader !== accessControlAllowHeader),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item md={12}>\n                                    <Typography variant='subtitle1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.components.CORSConfiguration.allow.\n                                                    methods'\n                                            defaultMessage='Access Control Allow Methods'\n                                        />\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={12}>\n                                    <ChipInput\n                                        style={{ marginBottom: 40, display: 'flex' }}\n                                        value={corsConfiguration.accessControlAllowMethods}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                        helperText={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components'\n                                                    + '.CORSConfigurations.method.helper'\n                                                }\n                                                defaultMessage={\n                                                    'Press `Enter` after typing the method name,'\n                                                    + ' to add a new method'\n                                                }\n                                            />\n                                        )}\n                                        onAdd={(newValue) => {\n                                            let value = [...corsConfiguration.accessControlAllowMethods,\n                                                newValue.toUpperCase()];\n                                            if (\n                                                corsConfiguration\n                                                    .accessControlAllowMethods\n                                                    .find((method) => method === newValue.toUpperCase())\n                                            ) {\n                                                value = [...corsConfiguration.accessControlAllowMethods];\n                                            }\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value,\n                                            });\n                                        }}\n                                        onDelete={(accessControlAllowMethod) => {\n                                            configDispatcher({\n                                                action: 'accessControlAllowMethods',\n                                                value: corsConfiguration\n                                                    .accessControlAllowMethods\n                                                    .filter((oldMethod) => oldMethod !== accessControlAllowMethod),\n                                            });\n                                        }}\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <FormControlLabel\n                                        control={(\n                                            <Checkbox\n                                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                                checked={corsConfiguration.accessControlAllowCredentials}\n                                                onChange={({ target: { checked } }) => configDispatcher({\n                                                    action: 'accessControlAllowCredentials',\n                                                    value: checked,\n                                                })}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label={(\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.Configuration.components'\n                                                    + '.CORSConfiguration.allow.credentials'\n                                                }\n                                                defaultMessage='Access Control Allow Credentials'\n                                            />\n                                        )}\n                                    />\n                                </Grid>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nCORSConfiguration.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Paper from '@material-ui/core/Paper';\n\nconst styles = (theme) => ({\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 2.5,\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: theme.spacing(0, -1),\n        float: 'right',\n    },\n    paper: {\n        padding: theme.spacing(0, 3),\n        marginBottom: theme.spacing(3),\n    },\n});\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nclass SchemaValidation extends React.Component {\n    /**\n     *Creates an instance of SchemaValidation.\n     * @param {*} props\n     * @memberof SchemaValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false };\n        this.setIsOpen = this.setIsOpen.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {Object} prevProps\n     * @param {Object} prevState\n     * @memberof SchemaValidation\n     */\n    componentDidUpdate(prevProps) {\n        const { api } = this.props;\n        /*\n        This could have been done using hooks too, But at the moment it requires `useRef` hook to get the previous props\n        Hence using class component and its `componentDidUpdate` life cycle method to open the caution dialog box\n        For more info: https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n         */\n        if (!prevProps.api.enableSchemaValidation && api.enableSchemaValidation) {\n            this.setIsOpen(true);\n        }\n    }\n\n    /**\n     *\n     * Set isOpen state of the dialog box which shows the caution message when enabling schema validation\n     * @param {Boolean} isOpen Should dialog box is open or not\n     * @memberof SchemaValidation\n     */\n    setIsOpen(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @param {*} props\n     * @returns\n     * @memberof SchemaValidation\n     */\n    render() {\n        const { api, configDispatcher, classes } = this.props;\n        const { isOpen } = this.state;\n        const { api: apiFromContext } = this.context;\n\n        return (\n            <Paper className={classes.paper}>\n                <Grid container spacing={1} alignItems='flex-start'>\n                    <Grid item md={12}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.schema.validation'\n                                defaultMessage='Schema Validation'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.schema.validation.tooltip'\n                                        defaultMessage={'Enable the request and response '\n                                        + 'validation against the OpenAPI definition'}\n                                    />\n                                )}\n                                aria-label='Schema Validation'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                        <FormControlLabel\n                            className={classes.actionSpace}\n                            control={(\n                                <Switch\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={\n                                        api.enableSchemaValidation === undefined ? false : api.enableSchemaValidation\n                                    }\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'enableSchemaValidation',\n                                        value: checked,\n                                    })}\n                                    color='primary'\n                                />\n                            )}\n                        />\n                    </Grid>\n                </Grid>\n                <Dialog\n                    open={isOpen}\n                    onClose={() => this.setIsOpen(false)}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.SchemaValidation.title'\n                            defaultMessage='Caution!'\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <Typography variant='subtitle1' display='block' gutterBottom>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.SchemaValidation.description'\n                                    defaultMessage={\n                                        'Enabling JSON schema validation will cause to build the'\n                                        + ' payload in every request and response. This will impact'\n                                        + ' the round trip time of an API request!'\n                                    }\n                                />\n                            </Typography>\n                            <Typography variant='subtitle2' display='block' gutterBottom>\n                                <b>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Configuration.components.SchemaValidation'\n                                        + '.description.question'}\n                                        defaultMessage='Do you want to enable schema validation?'\n                                    />\n                                </b>\n                            </Typography>\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' variant='contained' onClick={() => this.setIsOpen(false)}>\n                            Yes\n                        </Button>\n                        <Button\n                            onClick={() => {\n                                this.setIsOpen(false);\n                                configDispatcher({\n                                    action: 'enableSchemaValidation',\n                                    value: false,\n                                });\n                            }}\n                            color='primary'\n                        >\n                            No\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </Paper>\n        );\n    }\n}\n\nSchemaValidation.propTypes = {\n    api: PropTypes.shape({ enableSchemaValidation: PropTypes.bool }).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nSchemaValidation.contextType = ApiContext;\n\nexport default withStyles(styles)(SchemaValidation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Collapse } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1), // TODO: replace with <Box /> element `mb`\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function MaxBackendTps(props) {\n    const { api, configDispatcher } = props;\n    const classes = useStyles();\n\n    return (\n        <>\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.expansionPanel} defaultExpanded>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.MaxBackendTps.maximum.backend.throughput'\n                                defaultMessage='Backend Throughput'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.MaxBackendTps.tooltip'\n                                        defaultMessage={'Limits the total number of calls the API Manager is allowed'\n                                        + ' to make to the backend'}\n                                    />\n                                )}\n                                aria-label='APISecurity'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <FormControl component='fieldset'>\n                            <FormLabel component='legend'>Maximum Throughput</FormLabel>\n                            <RadioGroup\n                                aria-label='change-max-TPS'\n                                value={api.maxTps === null ? 'unlimited' : 'specify'}\n                                onChange={(event) => {\n                                    configDispatcher({\n                                        action: 'maxTps',\n                                        value:\n                                            event.target.value === 'specify' ? { production: null, sandbox: null }\n                                                : null,\n                                    });\n                                }}\n                                row\n                            >\n                                <FormControlLabel\n                                    value='unlimited'\n                                    control={(\n                                        <Radio\n                                            color='primary'\n                                            disabled={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    label='Unlimited'\n                                    labelPlacement='end'\n\n                                />\n                                <FormControlLabel\n                                    value='specify'\n                                    control={(\n                                        <Radio\n                                            color='primary'\n                                            disabled={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    label='Specify'\n                                    labelPlacement='end'\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                        <Collapse in={api.maxTps !== null}>\n                            <Grid item xs={12} style={{ marginBottom: 10, position: 'relative' }}>\n                                <TextField\n                                    label='Max Production TPS'\n                                    margin='normal'\n                                    variant='outlined'\n                                    onChange={(event) => {\n                                        configDispatcher({\n                                            action: 'maxTps',\n                                            value: { ...api.maxTps, production: event.target.value },\n                                        });\n                                    }}\n                                    value={api.maxTps !== null ? api.maxTps.production : ''}\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position='end'>TPS</InputAdornment>,\n                                    }}\n                                />\n                            </Grid>\n                            <Grid item xs={12} style={{ marginBottom: 10, position: 'relative' }}>\n                                <TextField\n                                    label='Max Sandbox TPS'\n                                    margin='normal'\n                                    variant='outlined'\n                                    onChange={(event) => {\n                                        configDispatcher({\n                                            action: 'maxTps',\n                                            value: { ...api.maxTps, sandbox: event.target.value },\n                                        });\n                                    }}\n                                    value={api.maxTps !== null ? api.maxTps.sandbox : ''}\n                                    disabled={isRestricted(['apim:api_create'], api)}\n                                    InputProps={{\n                                        endAdornment: <InputAdornment position='end'>TPS</InputAdornment>,\n                                    }}\n                                />\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.MaxBackendTps.formattedMessage'\n                                        defaultMessage='Maximum backend transactions per second in integers'\n                                    />\n                                </FormHelperText>\n                            </Grid>\n                        </Collapse>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nMaxBackendTps.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dropzone from 'react-dropzone';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Utils from 'AppData/Utils';\nimport API from 'AppData/api.js';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst dropzoneStyles = {\n    border: '1px dashed ',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\nconst styles = (theme) => ({\n    formControl: {\n        display: 'flex',\n        flexDirection: 'row',\n        padding: `${theme.spacing(2)}px 2px`,\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 'calc(100vh - 50em)',\n        padding: `${theme.spacing(2)}px ${theme.spacing(2)}px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        '& span': {\n            fontSize: 64,\n            color: theme.palette.primary.main,\n        },\n    },\n    radioWrapper: {\n        flexDirection: 'row',\n    },\n});\n/**\n * The component to manage IN mediation policies.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction EditMediationPolicy(props) {\n    const {\n        classes, updateMediationPolicy, selectedMediationPolicy, setEditing, editing, type, intl,\n    } = props;\n    const { api } = useContext(ApiContext);\n\n    const [globalMediationPolicies, setGlobalMediationPolicies] = useState(null);\n    // user uploaded api specific mediation policies\n    const [seqCustom, setSeqCustom] = useState(null);\n    const [provideBy, setProvideBy] = useState();\n    const { id: apiId } = api;\n    const NONE = 'none';\n    const [localSelectedPolicyFile, setLocalSelectedPolicyFile] = useState(selectedMediationPolicy);\n    function updatePoliciesFromBE() {\n        const globalPromise = API.getGlobalMediationPolicies();\n        const customPromise = API.getMediationPolicies(apiId);\n        Promise.all([globalPromise, customPromise])\n            .then((values) => {\n                setGlobalMediationPolicies([...values[0].obj.list.filter((seq) => seq.type === type)]);\n                setSeqCustom([...values[1].obj.list.filter((seq) => seq.type === type)]);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.MediationPolicies.Edit.EditMediationPolicy.error',\n                        defaultMessage: 'Error retrieving mediation policies',\n                    }));\n                }\n            });\n    }\n    function setActivePolicy(policy) {\n        if (policy.name !== NONE) {\n            Object.assign(policy, { content: '' });\n            setLocalSelectedPolicyFile(policy);\n            // updateMediationPolicy(policy);\n        } else {\n            Object.assign(policy, { content: '', id: NONE });\n            setLocalSelectedPolicyFile(policy);\n            // updateMediationPolicy(policy);\n        }\n    }\n    useEffect(() => {\n        if (selectedMediationPolicy) {\n            const { shared } = selectedMediationPolicy;\n            if (shared) {\n                setProvideBy('global');\n            } else if (selectedMediationPolicy.name === NONE) {\n                setProvideBy('none');\n            } else {\n                setProvideBy('custom');\n            }\n        } else {\n            setProvideBy('none');\n        }\n    }, [selectedMediationPolicy]);\n    useEffect(() => {\n        updatePoliciesFromBE();\n    }, []);\n\n    useEffect(() => {\n        if (provideBy === 'custom' && seqCustom && seqCustom.length > 0) {\n            setActivePolicy(seqCustom[0]);\n        } else if (provideBy === 'global' && globalMediationPolicies && globalMediationPolicies.length > 0) {\n            setActivePolicy(globalMediationPolicies[0]);\n        }\n    }, [provideBy]);\n\n    // useEffect(() => {\n    //     if (globalInMediationPolicies && globalInMediationPolicies.length > 0) {\n    //         setProvideBy('global');\n    //     } else if (inSeqCustom && inSeqCustom.length > 0) {\n    //         setProvideBy('custom');\n    //     } else {\n    //         setProvideBy('none');\n    //     }\n    // }, [globalInMediationPolicies, inSeqCustom]);\n    const saveMediationPolicy = (newPolicy) => {\n        const promisedApi = API.addMediationPolicy(newPolicy, apiId, type);\n        promisedApi\n            .then((response) => {\n                const {\n                    body: { id, type: policyType, name },\n                } = response;\n                updatePoliciesFromBE();\n                setLocalSelectedPolicyFile({\n                    id,\n                    type: policyType,\n                    name,\n                    shared: false,\n                    content: '',\n                });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.MediationPolicies.Edit.EditMediationPolicy.success',\n                    defaultMessage: 'Mediation policy added successfully',\n                }));\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                if (errorResponse.response.body.description !== null) {\n                    Alert.error(errorResponse.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.MediationPolicies.Edit.AddMediationPolicy.error',\n                        defaultMessage: 'Error while adding mediation policy',\n                    }));\n                }\n            });\n    };\n    /**\n     * Handled the file upload action of the dropzone.\n     * @param {file} policy The accepted file list by the dropzone.\n     * */\n    const onDrop = (policy) => {\n        const policyFile = policy[0];\n        if (policyFile) {\n            saveMediationPolicy(policyFile);\n        }\n    };\n    /**\n     * Handles the mediation policy select event.\n     * @param {any} event The event pass to the layout\n     */\n    function handleChange(event) {\n        const policy = {\n            name: event.target.getAttribute('seq_name'),\n            id: event.target.getAttribute('seq_id'),\n            type: event.target.getAttribute('seq_type'),\n        };\n        setActivePolicy(policy);\n    }\n    /**\n     * Handles the Global mediation policy download.\n     * @param {any} policyToDownload policy file id that is to be downloaded.\n     */\n    function downloadGlobalMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getGlobalMediationPolicyContent(policyToDownload);\n        promisedGetContent\n            .then((response) => {\n                Utils.forceDownload(response);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n\n    /**\n     * Handles the custom mediation policy download.\n     * @param {any} policyToDownload policy file id that is to be downloaded.\n     */\n    function downloadCustomMediationPolicyContent(policyToDownload) {\n        const promisedGetContent = API.getMediationPolicyContent(policyToDownload, apiId);\n        promisedGetContent\n            .then((done) => {\n                Utils.forceDownload(done, document);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.download.error'\n                        defaultMessage='Error downloading the file'\n                    />);\n                }\n            });\n    }\n    /**\n     * Handles the custom mediation policy delete.\n     * @param {any} policyToDelete policy file id that is to be deleted.\n     */\n    function deleteCustomMediationPolicy(policyToDelete) {\n        const promisedGetContent = API.deleteMediationPolicy(policyToDelete, api.id);\n        promisedGetContent\n            .then(() => {\n                setSeqCustom(seqCustom.filter((seq) => seq.id !== policyToDelete));\n                Alert.info(<FormattedMessage\n                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.delete.success'\n                    defaultMessage='Mediation policy deleted successfully.'\n                />);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(<FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.delete.error'\n                        defaultMessage='Error deleting the file'\n                    />);\n                }\n            });\n    }\n    const handleDownload = (policyToDownload) => {\n        const isGlobalMediationPolicy = globalMediationPolicies.filter(\n            (policy) => policy.id === policyToDownload,\n        ).length > 0;\n        if (isGlobalMediationPolicy) {\n            downloadGlobalMediationPolicyContent(policyToDownload);\n        } else {\n            downloadCustomMediationPolicyContent(policyToDownload);\n        }\n    };\n    const handleDelete = (policyToDelete) => {\n        const isGlobalMediationPolicy = globalMediationPolicies.filter(\n            (policy) => policy.id === policyToDelete,\n        ).length > 0;\n        if (isGlobalMediationPolicy) {\n            Alert.error(<FormattedMessage\n                id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.global.delete'\n                defaultMessage='Cannot delete Global mediation policies.'\n            />);\n        } else {\n            deleteCustomMediationPolicy(policyToDelete);\n        }\n    };\n    function cancelEditing() {\n        setEditing(false);\n    }\n    function doneEditing() {\n        updateMediationPolicy(localSelectedPolicyFile);\n        setEditing(false);\n    }\n    function handleChangeProvideBy(event) {\n        const inputValue = event.target.value;\n        setProvideBy(inputValue);\n        setActivePolicy({});\n    }\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth='sm'\n            fullWidth\n            aria-labelledby='confirmation-dialog-title'\n            open={editing}\n        >\n            <DialogTitle id='confirmation-dialog-title'>\n                <FormattedMessage\n                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.select.policy'\n                    defaultMessage='Select a Mediation Policy'\n                />\n            </DialogTitle>\n            {globalMediationPolicies && seqCustom && (\n                <DialogContent dividers>\n                    <RadioGroup value={provideBy} onChange={handleChangeProvideBy} className={classes.radioWrapper}>\n                        <FormControlLabel\n                            value='none'\n                            control={<Radio color='primary' />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.none'\n                                    defaultMessage='None'\n                                />\n                            )}\n                        />\n                        <FormControlLabel\n                            value='global'\n                            control={<Radio color='primary' />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.common.policies'\n                                    defaultMessage='Common Policies'\n                                />\n                            )}\n                        />\n                        <FormControlLabel\n                            value='custom'\n                            control={<Radio color='primary' />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.custom.policies'\n                                    defaultMessage='Custom Policies'\n                                />\n                            )}\n                        />\n                    </RadioGroup>\n                    {provideBy === 'custom' && (\n                        <>\n                            <Dropzone\n                                multiple={false}\n                                className={classes.dropzone}\n                                activeClassName={classes.acceptDrop}\n                                rejectClassName={classes.rejectDrop}\n                                onDrop={(dropFile) => {\n                                    onDrop(dropFile);\n                                }}\n                            >\n                                {({ getRootProps, getInputProps }) => (\n                                    <div {...getRootProps({ style: dropzoneStyles })}>\n                                        <input {...getInputProps()} accept='application/xml,text/xml' />\n                                        <div className={classes.dropZoneWrapper}>\n                                            <Icon className={classes.dropIcon}>cloud_upload</Icon>\n                                            <Typography>\n                                                <FormattedMessage\n                                                    id={\n                                                        'Apis.Details.MediationPolicies.Edit.EditMediationPolicy.'\n                                                        + 'click.or.drop.to.upload.file'\n                                                    }\n                                                    defaultMessage='Click or drag the mediation file to upload.'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    </div>\n                                )}\n                            </Dropzone>\n                            <RadioGroup\n                                aria-label='inflow'\n                                name='inflow'\n                                className={classes.radioGroup}\n                                value={localSelectedPolicyFile.name}\n                                onChange={handleChange}\n                            >\n                                <FormLabel component='customPolicies'>\n                                    <FormattedMessage\n                                        id={\n                                            'Apis.Details.Edit.MediationPolicies.'\n                                            + 'EditMediationPolicies.custom.mediation.policies'\n                                        }\n                                        defaultMessage='Custom Mediation Policies'\n                                    />\n                                </FormLabel>\n                                {seqCustom.map((seq) => (\n                                    <div>\n                                        <IconButton onClick={() => handleDelete(seq.id)}>\n                                            <Icon>delete</Icon>\n                                        </IconButton>\n                                        <Button onClick={() => handleDownload(seq.id)}>\n                                            <Icon>arrow_downward</Icon>\n                                        </Button>\n                                        <FormControlLabel\n                                            control={(\n                                                <Radio\n                                                    inputProps={{\n                                                        seq_id: seq.id,\n                                                        seq_name: seq.name,\n                                                        seq_type: seq.type,\n                                                    }}\n                                                    color='primary'\n                                                />\n                                            )}\n                                            label={seq.name}\n                                            value={seq.name}\n                                            checked={localSelectedPolicyFile.name === seq.name}\n                                        />\n                                    </div>\n                                ))}\n                            </RadioGroup>\n                        </>\n                    )}\n                    {provideBy === 'global' && (\n                        <RadioGroup\n                            aria-label='inflow'\n                            name='inflow'\n                            className={classes.radioGroup}\n                            value={localSelectedPolicyFile.name}\n                            onChange={handleChange}\n                        >\n                            {globalMediationPolicies.map((seq) => (\n                                <div>\n                                    <Button onClick={() => handleDownload(seq.id)}>\n                                        <Icon>arrow_downward</Icon>\n                                    </Button>\n                                    <FormControlLabel\n                                        control={(\n                                            <Radio\n                                                inputProps={{\n                                                    seq_id: seq.id,\n                                                    seq_name: seq.name,\n                                                    seq_type: seq.type,\n                                                }}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label={seq.name}\n                                        value={seq.name}\n                                        checked={localSelectedPolicyFile.name === seq.name}\n                                    />\n                                </div>\n                            ))}\n                        </RadioGroup>\n                    )}\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={cancelEditing} color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.cancel.btn'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button\n                    onClick={doneEditing}\n                    color='primary'\n                    variant='contained'\n                    disabled={provideBy === 'custom' && seqCustom && seqCustom.length === 0}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.MediationPolicies.Edit.EditMediationPolicy.select.btn'\n                        defaultMessage='Select'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nEditMediationPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    selectedMediationPolicy: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n    setEditing: PropTypes.func.isRequired,\n    editing: PropTypes.bool.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EditMediationPolicy));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, withStyles } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport EditMediationPolicy from 'AppComponents/Apis/Details/MediationPolicies/EditMediationPolicy';\nimport EditRounded from '@material-ui/icons/EditRounded';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n    itemWrapper: {\n        width: 'auto',\n        display: 'flex',\n    },\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    subTitle: {\n        marginTop: 20,\n    },\n    subTitleDescription: {\n        marginBottom: 10,\n    },\n    flowWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    heading: {\n        margin: 'auto',\n        color: 'rgba(0, 0, 0, 0.40)',\n        wordBreak: 'break-all',\n        whiteSpace: 'normal',\n    },\n    paper: {\n        padding: '10px 24px',\n        width: 'auto',\n    },\n};\n\n/**\n * The base component of the IN mediation policy.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction InFlow(props) {\n    const {\n        classes, updateMediationPolicy, selectedMediationPolicy, type, isRestricted,\n    } = props;\n    const [editing, setEditing] = useState(false);\n\n    function startEditing() {\n        setEditing(true);\n    }\n    return (\n        <>\n            <Paper className={classes.paper}>\n                <Grid container spacing={2} alignItems='flex-start'>\n                    <Grid item md={12} style={{ position: 'relative', display: 'inline-flex' }}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.MediationPolicies.Mediation'\n                                defaultMessage='Message Mediation'\n                            />\n                        </Typography>\n                        <Typography className={classes.heading}>\n                            {selectedMediationPolicy && selectedMediationPolicy.name ? (\n                                <span>{selectedMediationPolicy.name}</span>\n                            ) : (\n                                <span>none</span>\n                            )}\n                        </Typography>\n                        <Button\n                            size='small'\n                            onClick={startEditing}\n                            disabled={isRestricted}\n                        >\n                            <EditRounded />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            <EditMediationPolicy\n                setEditing={setEditing}\n                editing={editing}\n                updateMediationPolicy={updateMediationPolicy}\n                selectedMediationPolicy={selectedMediationPolicy}\n                type={type}\n            />\n        </>\n    );\n}\n\nInFlow.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    updateMediationPolicy: PropTypes.func.isRequired,\n    selectedMediationPolicy: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(InFlow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Box from '@material-ui/core/Box';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst showEndpoint = function (api, type) {\n    if (api.endpointConfig) {\n        if (type === 'prod') {\n            return api.getProductionEndpoint();\n        }\n        if (type === 'sand') {\n            return api.getSandboxEndpoint();\n        }\n    }\n    return null;\n};\n\nconst useStyles = makeStyles((theme) => ({\n    subtitle: {\n        marginTop: theme.spacing(0),\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    notConfigured: {\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    textTrim: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\n\n/**\n *\n *X\n * @param {*} props\n * @returns\n */\nfunction Endpoints(props) {\n    const { api } = props;\n    const classes = useStyles();\n    const isPrototypedAvailable = api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped';\n\n    /**\n     * Check whether the endpoint configuration is dynamic\n     *\n     * @param {object} endpointConfig The endpoint configuration of the api.\n     * @return {boolean} True if the endpoint config is dynamic.\n     * */\n    const isDynamicEndpoints = (endpointConfig) => {\n        if (!endpointConfig) {\n            return false;\n        }\n        if (endpointConfig.production_endpoints && !Array.isArray(endpointConfig.production_endpoints)) {\n            return endpointConfig.production_endpoints.url === 'default';\n        }\n        return false;\n    };\n\n    return (\n        <>\n            <ExpansionPanel className={classes.expansionPanel} defaultExpanded>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography className={classes.subHeading} variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Endpoints.endpoints'\n                            defaultMessage='Endpoints'\n                        />\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                    {isDynamicEndpoints(api.endpointConfig)\n                        ? (\n                            <Box pb={2}>\n                                <Typography component='p' variant='body1' className={classes.subtitle}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.Endpoints.dynamic'\n                                        defaultMessage='Dynamic'\n                                    />\n                                </Typography>\n                            </Box>\n                        )\n                        : (\n                            <>\n                                <Box pb={2}>\n                                    {/* Production Endpoint (TODO) fix the endpoint\n                                                    info when it's available with the api object */}\n\n                                    { !isPrototypedAvailable ? (\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.production'\n                                                defaultMessage='Production'\n                                            />\n                                        </Typography>\n                                    ) : (\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.prototype'\n                                                defaultMessage='Prototype'\n                                            />\n                                        </Typography>\n                                    )}\n                                    {showEndpoint(api, 'prod')\n                                && (\n                                    <Tooltip\n                                        title={showEndpoint(api, 'prod')}\n                                        interactive\n                                    >\n                                        <Typography component='p' variant='body1' className={classes.textTrim}>\n                                            <>\n                                                {showEndpoint(api, 'prod')}\n                                            </>\n                                        </Typography>\n                                    </Tooltip>\n                                )}\n                                    <Typography component='p' variant='body1' className={classes.notConfigured}>\n                                        {!showEndpoint(api, 'prod') && (\n                                            <>\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Configuration.'\n                                                    + 'components.Endpoints.not.set'}\n                                                    defaultMessage='-'\n                                                />\n                                            </>\n                                        )}\n                                    </Typography>\n                                </Box>\n                                {!isPrototypedAvailable && (\n                                    <Box pb={2}>\n                                        {/* Sandbox Endpoint (TODO) fix the endpoint info when\n                                                it's available with the api object */}\n                                        <Typography component='p' variant='subtitle2' className={classes.subtitle}>\n                                            <FormattedMessage\n                                                id='Apis.Details.Configuration.components.Endpoints.sandbox'\n                                                defaultMessage='Sandbox'\n                                            />\n                                        </Typography>\n                                        {showEndpoint(api, 'sand')\n                                    && (\n                                        <Tooltip\n                                            title={showEndpoint(api, 'sand')}\n                                            interactive\n                                        >\n                                            <Typography component='p' variant='body1' className={classes.textTrim}>\n                                                <>\n                                                    {showEndpoint(api, 'sand')}\n                                                </>\n                                            </Typography>\n                                        </Tooltip>\n                                    )}\n                                        <Typography component='p' variant='body1' className={classes.notConfigured}>\n                                            {!showEndpoint(api, 'sand') && (\n                                                <>\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Configuration.components.Endpoints.sandbox.'\n                                                        + 'not.set'}\n                                                        defaultMessage='-'\n                                                    />\n                                                </>\n                                            )}\n                                        </Typography>\n                                    </Box>\n                                )}\n                            </>\n                        )}\n                    <Box width='100%' textAlign='right' m={1}>\n                        <Link to={'/apis/' + api.id + '/endpoints'}>\n                            <Typography style={{ marginLeft: '10px' }} color='primary' variant='caption'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.Endpoints.edit.api.endpoints'\n                                    defaultMessage='Edit API Endpoints'\n                                />\n                                <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                            </Typography>\n                        </Link>\n                    </Box>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nEndpoints.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default withAPI(Endpoints);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// Check this file for more info  <CARBON_APIMGT>/components/apimgt/org.wso2.carbon.apimgt.impl\n// /src/main/java/org/wso2/carbon/apimgt/impl/APIConstants.java\n\nconst DEFAULT_API_SECURITY_OAUTH2 = 'oauth2';\nconst API_SECURITY_BASIC_AUTH = 'basic_auth';\nconst API_SECURITY_API_KEY = 'api_key';\nconst API_SECURITY_MUTUAL_SSL = 'mutualssl';\nconst API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY = 'oauth_basic_auth_api_key_mandatory';\nconst API_SECURITY_MUTUAL_SSL_MANDATORY = 'mutualssl_mandatory';\n\nexport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function AuthorizationHeader(props) {\n    const { api, configDispatcher } = props;\n    const [apiFromContext] = useAPI();\n    let hasResourceWithSecurity;\n    if (apiFromContext.apiType === 'APIProduct') {\n        const apiList = apiFromContext.apis;\n        for (const apiInProduct in apiList) {\n            if (Object.prototype.hasOwnProperty.call(apiList, apiInProduct)) {\n                hasResourceWithSecurity = apiList[apiInProduct].operations.findIndex(\n                    (op) => op.authType !== 'None',\n                ) > -1;\n                if (hasResourceWithSecurity) {\n                    break;\n                }\n            }\n        }\n    } else {\n        hasResourceWithSecurity = apiFromContext.operations.findIndex((op) => op.authType !== 'None') > -1;\n    }\n    if (!hasResourceWithSecurity && api.authorizationHeader !== '') {\n        configDispatcher({ action: 'authorizationHeader', value: '' });\n    }\n\n    return (\n        <Grid container spacing={1} alignItems='center'>\n            <Grid item xs={11}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], apiFromContext) || !hasResourceWithSecurity}\n                    id='outlined-name'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.auth.header.label'\n                            defaultMessage='Authorization Header'\n                        />\n                    )}\n                    value={hasResourceWithSecurity ? (api.authorizationHeader || ' ') : ''}\n                    margin='normal'\n                    variant='outlined'\n                    onChange={({ target: { value } }) => configDispatcher({ action: 'authorizationHeader', value })}\n                    style={{ display: 'flex' }}\n                />\n            </Grid>\n            <Grid item xs={1}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.AuthHeader.tooltip'\n                            defaultMessage={\n                                ' The header name that is used to send the authorization '\n                                + 'information. \"Authorization\" is the default header.'\n                            }\n                        />\n                    )}\n                    aria-label='Auth Header'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n        </Grid>\n    );\n}\n\nAuthorizationHeader.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport API from 'AppData/api';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    keyManagerSelect: {\n        minWidth: 180,\n    },\n}));\n\n/**\n *\n * KeyManager configuration\n * @param {*} props\n * @returns\n */\nexport default function KeyManager(props) {\n    const [keyManagersConfigured, setKeyManagersConfigured] = useState([]);\n    const {\n        configDispatcher,\n        api: { keyManagers, securityScheme },\n    } = props;\n    const classes = useStyles();\n    const handleChange = (event) => {\n        const newKeyManagers = [...keyManagers];\n        const { target: { checked, name } } = event;\n        if (newKeyManagers.indexOf(name) === -1 && checked) {\n            newKeyManagers.push(name);\n        } else if (newKeyManagers.indexOf(name) !== -1 && !checked) {\n            newKeyManagers.splice(newKeyManagers.indexOf(name), 1);\n        }\n        configDispatcher({\n            action: 'keymanagers',\n            value: newKeyManagers,\n        });\n    };\n    useEffect(() => {\n        API.keyManagers().then((response) => setKeyManagersConfigured(response.body.list));\n    }, []);\n    if (!securityScheme.includes('oauth2')) {\n        return (\n            <>\n                <Typography className={classes.subHeading} variant='subtitle2'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.KeyManager.configuration'\n                        defaultMessage='Key Manager Configuration'\n                    />\n                </Typography>\n                <Box ml={1} mb={2}>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.oauth.disabled'\n                            defaultMessage='Key Manager configuration only valid when OAuth2 security is enabled.'\n                        />\n                    </Typography>\n                </Box>\n            </>\n        );\n    }\n    return (\n        <>\n            <Typography className={classes.subHeading} variant='subtitle2'>\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.KeyManager.configuration'\n                    defaultMessage='Key Manager Configuration'\n                />\n            </Typography>\n            <Box ml={1}>\n                <RadioGroup\n                    value={keyManagers.includes('all') ? 'all' : 'selected'}\n                    onChange={({ target: { value } }) => configDispatcher({\n                        action: 'allKeyManagersEnabled',\n                        value: value === 'all',\n                    })}\n                    style={{ flexDirection: 'row' }}\n                >\n                    <FormControlLabel\n                        value='all'\n                        control={<Radio />}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.KeyManager.allow.all'\n                                defaultMessage='Allow all'\n                            />\n                        )}\n                    />\n                    <FormControlLabel\n                        value='selected'\n                        control={<Radio />}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.components.KeyManager.allow.selected'\n                                defaultMessage='Allow selected'\n                            />\n                        )}\n                    />\n                </RadioGroup>\n                {!keyManagers.includes('all') && (\n                    <Box display='flex' flexDirection='column' m={2}>\n                        <FormControl\n                            required\n                            error={!keyManagers || (keyManagers && keyManagers.length === 0)}\n                            component='fieldset'\n                            className={classes.formControl}\n                        >\n                            <FormLabel component='legend'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.KeyManager.more.than.one.info'\n                                    defaultMessage='Select one or more Key Managers'\n                                />\n                            </FormLabel>\n                            <FormGroup\n                                style={{ flexDirection: 'row' }}\n\n                            >\n                                {keyManagersConfigured.map((key) => (\n                                    <FormControlLabel\n                                        control={(\n                                            <Checkbox\n                                                color='primary'\n                                                checked={keyManagers.includes(key.name)}\n                                                disabled={!key.enabled}\n                                                onChange={handleChange}\n                                                name={key.name}\n                                            />\n                                        )}\n                                        label={key.displayName || key.name}\n                                    />\n                                ))}\n                            </FormGroup>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.KeyManager.more.than.one.error'\n                                    defaultMessage='Select at least one Key Manager'\n                                />\n                            </FormHelperText>\n\n                        </FormControl>\n                    </Box>\n                )}\n            </Box>\n        </>\n    );\n}\n\nKeyManager.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AuthorizationHeader from 'AppComponents/Apis/Details/Configuration/components/AuthorizationHeader.jsx';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport KeyManager from 'AppComponents/Apis/Details/Configuration/components/KeyManager';\nimport API from 'AppData/api';\n\nimport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ApplicationLevel(props) {\n    const {\n        haveMultiLevelSecurity, securityScheme, configDispatcher, api,\n    } = props;\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    let mandatoryValue = null;\n    let hasResourceWithSecurity;\n    if (apiFromContext.apiType === 'APIProduct') {\n        const apiList = apiFromContext.apis;\n        for (const apiInProduct in apiList) {\n            if (Object.prototype.hasOwnProperty.call(apiList, apiInProduct)) {\n                hasResourceWithSecurity = apiList[apiInProduct].operations.findIndex(\n                    (op) => op.authType !== 'None',\n                ) > -1;\n                if (hasResourceWithSecurity) {\n                    break;\n                }\n            }\n        }\n    } else {\n        hasResourceWithSecurity = apiFromContext.operations.findIndex((op) => op.authType !== 'None') > -1;\n    }\n    if (hasResourceWithSecurity) {\n        mandatoryValue = 'optional';\n        // If not Oauth2, Basic auth or ApiKey security is selected, no mandatory values should be pre-selected\n        if (!(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH)\n            || securityScheme.includes(API_SECURITY_API_KEY))) {\n            mandatoryValue = null;\n        } else if (!securityScheme.includes(API_SECURITY_MUTUAL_SSL)) {\n            mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY;\n        } else if (securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY)) {\n            mandatoryValue = API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY;\n        }\n    } else if (securityScheme.length > 0) {\n        configDispatcher({\n            action: 'securityScheme',\n            event: { checked: false, value: DEFAULT_API_SECURITY_OAUTH2 },\n        });\n    }\n    return (\n        <>\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.expansionPanel}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.APISecurity.Components.\n                                    ApplicationLevel.http'\n                                defaultMessage='Application Level Security'\n                            />\n                            <Tooltip\n                                title={(\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.tooltip'\n                                        defaultMessage={\n                                            'This option determines the type of security'\n                                            + ' that will be used to secure this API. An API can be secured '\n                                            + 'with either OAuth2/Basic/ApiKey or it can be secured with all of them. '\n                                            + 'If OAuth2 option is selected, relevant API will require a valid '\n                                            + 'OAuth2 token for successful invocation.'\n                                        }\n                                    />\n                                )}\n                                aria-label='APISecurity'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline className={classes.iconSpace} />\n                            </Tooltip>\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <FormGroup style={{ display: 'flow-root' }}>\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)\n                                        || !hasResourceWithSecurity}\n                                        checked={securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={DEFAULT_API_SECURITY_OAUTH2}\n                                        color='primary'\n                                    />\n                                )}\n                                label='OAuth2'\n                            />\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)\n                                        || !hasResourceWithSecurity}\n                                        checked={securityScheme.includes(API_SECURITY_BASIC_AUTH)}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={API_SECURITY_BASIC_AUTH}\n                                        color='primary'\n                                    />\n                                )}\n                                label='Basic'\n                            />\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        checked={securityScheme.includes(API_SECURITY_API_KEY)}\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)\n                                        || !hasResourceWithSecurity}\n                                        onChange={({ target: { checked, value } }) => configDispatcher({\n                                            action: 'securityScheme',\n                                            event: { checked, value },\n                                        })}\n                                        value={API_SECURITY_API_KEY}\n                                        color='primary'\n                                    />\n                                )}\n                                label='Api Key'\n                            />\n                        </FormGroup>\n                        <FormControl className={classes.bottomSpace} component='fieldset'>\n                            <RadioGroup\n                                aria-label='HTTP security HTTP mandatory selection'\n                                name={API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY}\n                                value={mandatoryValue}\n                                onChange={({ target: { name, value } }) => configDispatcher({\n                                    action: 'securityScheme',\n                                    event: { name, value },\n                                })}\n                                row\n                            >\n                                <FormControlLabel\n                                    value={API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY}\n                                    control={(\n                                        <Radio\n                                            disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label='Mandatory'\n                                    labelPlacement='end'\n                                />\n                                <FormControlLabel\n                                    value='optional'\n                                    control={(\n                                        <Radio\n                                            disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label='Optional'\n                                    labelPlacement='end'\n                                />\n                            </RadioGroup>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.components.APISecurity.application.mandatory'\n                                    defaultMessage='Choose whether Application level security is mandatory or optional'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                        {(apiFromContext.apiType === API.CONSTS.API) && (\n                            <KeyManager\n                                api={api}\n                                configDispatcher={configDispatcher}\n                            />\n                        )}\n                        <AuthorizationHeader api={api} configDispatcher={configDispatcher} />\n                        <FormControl>\n                            {!hasResourceWithSecurity\n                            && (\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.api.unsecured'\n                                        defaultMessage='Application level security is not required since API\n                                        has no secured resources'\n                                    />\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nApplicationLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport { MenuItem, TextField } from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nexport default function SelectEndpoint(props) {\n    const {\n        onChange,\n        endpoint,\n        isEndpointEmpty,\n        endpoints,\n    } = props;\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n    return (\n        <TextField\n            autoFocus\n            error={isEndpointEmpty || endpoints.length === 0}\n            helperText={endpoints.length === 0 ? (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.empty.error'\n                    defaultMessage='Save endpoints before adding the Certificate'\n                />\n            ) : iff(isEndpointEmpty, <FormattedMessage\n                id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.error'\n                defaultMessage='Endpoint should not be empty'\n            />, <FormattedMessage\n                id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint.helpertext'\n                defaultMessage='Endpoint for the Certificate'\n            />)}\n            required\n            id='certificateEndpoint'\n            label={(\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.endpoint'\n                    defaultMessage='Endpoint'\n                />\n            )}\n            value={endpoint}\n            placeholder='Endpoint'\n            onChange={(event) => onChange(event.target.value)}\n            margin='normal'\n            variant='outlined'\n            fullWidth\n            select\n        >\n            {endpoints !== null && endpoints.map((ep) => {\n                if (ep) {\n                    return (<MenuItem value={ep.url}>{ep.url}</MenuItem>);\n                }\n                return null;\n            })}\n        </TextField>\n    );\n}\n\nSelectEndpoint.propTypes = {\n    endpoints: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    endpoint: PropTypes.string.isRequired,\n    isEndpointEmpty: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Icon,\n    TextField,\n    Typography,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport Dropzone from 'react-dropzone';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport APIValidation from 'AppData/APIValidation';\nimport SelectEndpoint from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/SelectEndpoint';\nimport SelectPolicies from '../../../Create/Components/SelectPolicies';\n\nconst dropzoneStyles = {\n    border: '1px dashed #c4c4c4',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    height: 75,\n    padding: '8px 0px',\n    position: 'relative',\n    textAlign: 'center',\n    width: '100%',\n    margin: '10px 0',\n};\n\nconst useStyles = makeStyles((theme) => ({\n    fileinput: {\n        display: 'none',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n    certificatesHeader: {\n        fontWeight: 600,\n        marginTop: 20,\n    },\n    addCertificateBtn: {\n        borderColor: '#c4c4c4',\n        borderRadius: '8px',\n        borderStyle: 'dashed',\n        borderWidth: 'thin',\n    },\n    certificateList: {\n        maxHeight: '250px',\n        overflow: 'scroll',\n    },\n    certDetailsHeader: {\n        fontWeight: '600',\n    },\n    uploadCertDialogHeader: {\n        fontWeight: '600',\n    },\n}));\n\n/**\n * This component is used to upload the certificates\n * @param {any} props The input props.\n * @returns {any} The HTML representation of the Certificates.\n */\nexport default function UploadCertificate(props) {\n    const {\n        endpoints,\n        uploadCertificate,\n        isMutualSSLEnabled,\n        uploadCertificateOpen,\n        setUploadCertificateOpen,\n        aliasList,\n    } = props;\n    const [alias, setAlias] = useState('');\n    const [policy, setPolicy] = useState('');\n    const [endpoint, setEndpoint] = useState('');\n    const [isSaving, setSaving] = useState(false);\n    const [certificate, setCertificate] = useState({ name: '', content: {} });\n    const [isEndpointEmpty, setIsEndpointEmpty] = useState(false);\n    const [isPoliciesEmpty, setPoliciesEmpty] = useState(false);\n    const [aliasValidity, setAliasValidity] = useState();\n    const classes = useStyles();\n    const [isRejected, setIsRejected] = useState(false);\n\n    const closeCertificateUpload = () => {\n        setUploadCertificateOpen(false);\n        setAliasValidity();\n        setCertificate({ name: '', content: '' });\n        setAlias('');\n        setEndpoint('');\n        setPolicy('');\n    };\n\n    /**\n     * On change functionality to handle the policy dropdown\n     *\n     * @param {*} event\n     */\n    function handleOnChange(event) {\n        const { value } = event.target;\n        setPolicy(value);\n    }\n\n    /**\n     * Method to validate the policies.\n     * @param {string} value selected policy.\n     * */\n    const onValidate = (value) => {\n        setPoliciesEmpty(value === '');\n    };\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = () => {\n        setSaving(true);\n        if (isMutualSSLEnabled) {\n            uploadCertificate(certificate.content, policy, alias)\n                .then(closeCertificateUpload)\n                .finally(() => setSaving(false));\n        } else {\n            uploadCertificate(certificate.content, endpoint, alias)\n                .then(closeCertificateUpload)\n                .finally(() => setSaving(false));\n        }\n    };\n\n    /**\n     * Handled the file upload action of the dropzone.\n     *\n     * @param {array} file The accepted file list by the dropzone.\n     * */\n    const onDrop = (file) => {\n        const certificateFile = file[0];\n        const rejectedFiles = ['pem', 'txt', 'jks', 'key', 'ca-bundle'];\n        const extension = certificateFile.name.split('.');\n        if (rejectedFiles.includes(extension[1])) {\n            setIsRejected(true);\n        } else {\n            setIsRejected(false);\n        }\n        if (certificateFile) {\n            setCertificate({ name: certificateFile.name, content: certificateFile });\n        }\n    };\n\n    const handleEndpointOnChange = (value) => {\n        setEndpoint(value);\n        if (value) {\n            setIsEndpointEmpty(false);\n        } else {\n            setIsEndpointEmpty(true);\n        }\n    };\n\n    const handleAliasOnBlur = () => {\n        const aliasValidation = APIValidation.alias.required().validate(alias).error;\n        if (aliasValidation) {\n            setAliasValidity({ isValid: false, message: aliasValidation.details[0].message });\n        } else {\n            setAliasValidity({ isValid: true, message: '' });\n        }\n    };\n\n    const getHelperText = () => {\n        if (aliasValidity && !aliasValidity.isValid) {\n            return (aliasValidity.message);\n        } else if (aliasList && aliasList.includes(alias)) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias.exist.error'\n                    defaultMessage='Alias already exists'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias.default.message'\n                    defaultMessage='Alias for the Certificate'\n                />\n            );\n        }\n    };\n\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n    return (\n        <Dialog open={uploadCertificateOpen}>\n            <DialogTitle>\n                <Typography className={classes.uploadCertDialogHeader}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.uploadCertificate'\n                        defaultMessage='Upload Certificate'\n                    />\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid>\n                    <div>\n                        {isMutualSSLEnabled ? (\n                            <SelectPolicies\n                                multiple={false}\n                                policies={policy}\n                                helperText='Select a throttling policy for the certificate'\n                                onChange={handleOnChange}\n                                required\n                                validate={onValidate}\n                            />\n                        )\n                            : (\n                                <SelectEndpoint\n                                    endpoints={endpoints}\n                                    onChange={handleEndpointOnChange}\n                                    endpoint={endpoint}\n                                    isEndpointEmpty={isEndpointEmpty}\n                                    required\n                                />\n                            )}\n                        <TextField\n                            required\n                            id='certificateAlias'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.alias'\n                                    defaultMessage='Alias'\n                                />\n                            )}\n                            value={alias}\n                            placeholder='My Alias'\n                            onChange={(event) => setAlias(event.target.value)}\n                            onBlur={() => handleAliasOnBlur()}\n                            margin='normal'\n                            variant='outlined'\n                            error={\n                                (aliasValidity && !aliasValidity.isValid) || (aliasList && aliasList.includes(alias))\n                            }\n                            helperText={getHelperText()}\n                            fullWidth\n                            inputProps={{ maxLength: 45 }}\n                        />\n                        <Dropzone\n                            multiple={false}\n                            accept={\n                                'application/pkcs8,'\n                                    + 'application/pkcs10, application/pkix-crl,'\n                                    + 'application/pkcs7-mime,'\n                                    + 'application/x-x509-ca-cert,'\n                                    + 'application/x-x509-user-cert,'\n                                    + 'application/x-pkcs7-crl,'\n                                    + 'application/x-pkcs12,'\n                                    + 'application/x-pkcs7-certificates,'\n                                    + 'application/x-pkcs7-certreqresp,'\n                                    + '.p8, .p10, .cer, .cert, .p7c, .crt, .der, .p12, .pfx, .p7b, .spc, .p7r'\n                            }\n                            className={classes.dropzone}\n                            activeClassName={classes.acceptDrop}\n                            rejectClassName={classes.rejectDrop}\n                            onDrop={(dropFile) => {\n                                onDrop(dropFile);\n                            }}\n                        >\n                            {({ getRootProps, getInputProps }) => (\n                                <div {...getRootProps({ style: dropzoneStyles })}>\n                                    <input {...getInputProps()} />\n                                    <div className={classes.dropZoneWrapper}>\n                                        {certificate.name === '' ? (\n                                            <div>\n                                                <Icon style={{ fontSize: 56 }}>cloud_upload</Icon>\n                                                <Typography>\n                                                    <FormattedMessage\n                                                        id={\n                                                            'Apis.Details.Endpoints.GeneralConfiguration'\n                                                                + '.UploadCertificate.click.or.drop.to.upload.file'\n                                                        }\n                                                        defaultMessage={\n                                                            'Click or drag the certificate'\n                                                                + ' file to upload.'\n                                                        }\n                                                    />\n                                                </Typography>\n                                            </div>\n                                        ) : iff(\n                                            isRejected,\n                                            <div classNames={classes.uploadedFile}>\n                                                <InsertDriveFileIcon color='error' fontSize='large' />\n                                                <Box fontSize='h6.fontSize' color='error' fontWeight='fontWeightLight'>\n                                                    <Grid xs={12}>\n                                                        {certificate.name}\n                                                    </Grid>\n                                                    <Grid xs={12}>\n                                                        <Typography variant='caption' color='error'>\n                                                            <FormattedMessage\n                                                                id={\n                                                                    'Apis.Details.Endpoints.GeneralConfiguration'\n                                                            + '.UploadCertificate.invalid.file'\n                                                                }\n                                                                defaultMessage='Invalid file type'\n                                                            />\n                                                        </Typography>\n                                                    </Grid>\n                                                </Box>\n                                            </div>,\n                                            <div className={classes.uploadedFile}>\n                                                <InsertDriveFileIcon color='primary' fontSize='large' />\n                                                <Box fontSize='h6.fontSize' fontWeight='fontWeightLight'>\n                                                    <Typography>\n                                                        {certificate.name}\n                                                    </Typography>\n                                                </Box>\n                                            </div>,\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n                        </Dropzone>\n                    </div>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={closeCertificateUpload}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button\n                    onClick={saveCertificate}\n                    variant='contained'\n                    color='primary'\n                    autoFocus\n                    disabled={\n                        alias === '' || (aliasValidity && !aliasValidity.isValid)\n                            || (!isMutualSSLEnabled && endpoint === '')\n                            || certificate.name === ''\n                            || (isMutualSSLEnabled && isPoliciesEmpty)\n                            || isSaving || (aliasList && aliasList.includes(alias)) || isRejected\n                    }\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.UploadCertificate.config.save.button'\n                        defaultMessage='Save'\n                    />\n                    {isSaving && <CircularProgress size={24} />}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nUploadCertificate.defaultProps = {\n    isMutualSSLEnabled: false,\n    endpoints: [],\n};\n\nUploadCertificate.propTypes = {\n    certificates: PropTypes.shape({}).isRequired,\n    uploadCertificate: PropTypes.func.isRequired,\n    isMutualSSLEnabled: PropTypes.bool,\n    setUploadCertificateOpen: PropTypes.func.isRequired,\n    uploadCertificateOpen: PropTypes.bool.isRequired,\n    endpoints: PropTypes.shape([]),\n    aliasList: PropTypes.shape([]).isRequired,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Grid,\n    Icon,\n    IconButton,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Typography,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport UploadCertificate from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/UploadCertificate';\nimport API from '../../../../../data/api';\n\nconst useStyles = makeStyles((theme) => ({\n    fileinput: {\n        display: 'none',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n    certificatesHeader: {\n        fontWeight: 600,\n        marginTop: theme.spacing(1),\n    },\n    addCertificateBtn: {\n        borderColor: '#c4c4c4',\n        borderRadius: '8px',\n        borderStyle: 'dashed',\n        borderWidth: 'thin',\n    },\n    certificateList: {\n        maxHeight: '250px',\n        overflow: 'auto',\n    },\n    certDetailsHeader: {\n        fontWeight: '600',\n    },\n    uploadCertDialogHeader: {\n        fontWeight: '600',\n    },\n    alertWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    warningIcon: {\n        marginRight: 13,\n        color: theme.custom.warningColor,\n        '& .material-icons': {\n            fontSize: 30,\n        },\n    },\n    deleteIcon: {\n        color: theme.palette.error.dark,\n        cursor: 'pointer',\n    },\n    deleteIconDisable: {\n        color: theme.palette.disabled,\n    },\n}));\n/**\n * TODO: Generalize this component to work in Configuration page , upload mutual SSL certificates action\n * in source/src/app/components/Apis/Details/Configuration/components/APISecurity/components/TransportLevel.jsx ~tmkb\n * The base component for advanced endpoint configurations.\n * @param {any} props The input props.\n * @returns {any} The HTML representation of the Certificates.\n */\nfunction Certificates(props) {\n    const {\n        certificates, uploadCertificate, deleteCertificate, isMutualSSLEnabled, apiId, endpoints, aliasList,\n    } = props;\n    const [certificateList, setCertificateList] = useState([]);\n    const [openCertificateDetails, setOpenCertificateDetails] = useState({ open: false, anchor: null, details: {} });\n    const [certificateToDelete, setCertificateToDelete] = useState({ open: false, alias: '' });\n    const [isDeleting, setDeleting] = useState(false);\n    const [uploadCertificateOpen, setUploadCertificateOpen] = useState(false);\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n\n    /**\n     * Show the selected certificate details in a popover.\n     *\n     * @param {any} event The button click event.\n     * @param {string} certAlias  The alias of the certificate which information is required.\n     * */\n    const showCertificateDetails = (event, certAlias) => {\n        if (!isMutualSSLEnabled) {\n            API.getCertificateStatus(certAlias)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((err) => {\n                    console.error(err);\n                });\n        } else {\n            API.getClientCertificateStatus(certAlias, apiId)\n                .then((response) => {\n                    setOpenCertificateDetails({\n                        details: response.body,\n                        open: true,\n                        alias: certAlias,\n                        anchor: event.currentTarget,\n                    });\n                })\n                .catch((error) => {\n                    console.error(error);\n                });\n        }\n    };\n\n    /**\n     * Delete certificate represented by the alias.\n     *\n     * @param {string} certificateAlias The alias of the certificate that is needed to be deleted.\n     * */\n    const deleteCertificateByAlias = (certificateAlias) => {\n        setDeleting(true);\n        deleteCertificate(certificateAlias)\n            .then(() => setCertificateToDelete({ open: false, alias: '' }))\n            .finally(() => setDeleting(false));\n    };\n\n    useEffect(() => {\n        setCertificateList(certificates);\n    }, [certificates]);\n\n    return (\n        <Grid container direction='column'>\n            {/* TODO: Add list of existing certificates */}\n            <Grid>\n                <Typography className={classes.certificatesHeader}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificates'\n                        defaultMessage='Certificates'\n                    />\n                </Typography>\n            </Grid>\n            <Grid item>\n                <List>\n                    <ListItem\n                        button\n                        disabled={(isRestricted(['apim:api_create'], apiFromContext))}\n                        className={classes.addCertificateBtn}\n                        onClick={() => setUploadCertificateOpen(true)}\n                    >\n                        <ListItemAvatar>\n                            <IconButton>\n                                <Icon>add</Icon>\n                            </IconButton>\n                        </ListItemAvatar>\n                        <ListItemText primary='Add Certificate' />\n                    </ListItem>\n                </List>\n                <List className={classes.certificateList}>\n                    {certificateList.length > 0 ? (\n                        certificateList.map((cert) => {\n                            return (\n                                <ListItem>\n                                    <ListItemAvatar>\n                                        <Icon>lock</Icon>\n                                    </ListItemAvatar>\n                                    {isMutualSSLEnabled\n                                        ? (<ListItemText primary={cert.alias} secondary={cert.tier} />)\n                                        : <ListItemText primary={cert.alias} secondary={cert.endpoint} />}\n\n                                    <ListItemSecondaryAction>\n                                        <IconButton\n                                            edge='end'\n                                            onClick={(event) => showCertificateDetails(event, cert.alias)}\n                                        >\n                                            <Icon>info</Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                            onClick={() => setCertificateToDelete({ open: true, alias: cert.alias })}\n                                        >\n                                            <Icon className={isRestricted(['apim:api_create'], apiFromContext)\n                                                ? classes.deleteIconDisable : classes.deleteIcon}\n                                            >\n                                                {' '}\ndelete\n                                            </Icon>\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            );\n                        })\n                    ) : (\n                        <ListItem>\n                            <ListItemAvatar>\n                                <Icon color='primary'>info</Icon>\n                            </ListItemAvatar>\n                            <ListItemText>You do not have any certificates uploaded</ListItemText>\n                        </ListItem>\n                    )}\n                </List>\n            </Grid>\n            <Dialog open={certificateToDelete.open}>\n                <DialogTitle>\n                    <Typography className={classes.uploadCertDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.deleteCertificate'\n                            defaultMessage='Delete Certificate'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent className={classes.alertWrapper}>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.confirm.certificate.delete'\n                            defaultMessage='Do you want to delete '\n                        />\n                        {' '}\n                        { certificateToDelete.alias + '?'}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => deleteCertificateByAlias(certificateToDelete.alias)}\n                        variant='contained'\n                        color='primary'\n                        disabled={isDeleting}\n                        autoFocus\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.ok.button'\n                            defaultMessage='OK'\n                        />\n                        {isDeleting && <CircularProgress size={24} />}\n\n                    </Button>\n                    <Button onClick={() => setCertificateToDelete({ open: false, alias: '' })}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.delete.cancel.button'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Dialog open={openCertificateDetails.open}>\n                <DialogTitle>\n                    <Typography className={classes.certDetailsHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.details.of'\n                            defaultMessage='Details of'\n                        />\n                        {' ' + openCertificateDetails.alias}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.status'\n                            defaultMessage='Status'\n                        />\n                        {' : ' + openCertificateDetails.details.status}\n                    </Typography>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.subject'\n                            defaultMessage='Subject'\n                        />\n                        {' : ' + openCertificateDetails.details.subject}\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => setOpenCertificateDetails({ open: false, anchor: null, details: {} })}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.Certificates.details.close.button'\n                            defaultMessage='Close'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <UploadCertificate\n                endpoints={endpoints}\n                certificates={certificates}\n                uploadCertificate={uploadCertificate}\n                isMutualSSLEnabled={isMutualSSLEnabled}\n                setUploadCertificateOpen={setUploadCertificateOpen}\n                uploadCertificateOpen={uploadCertificateOpen}\n                aliasList={aliasList}\n            />\n        </Grid>\n    );\n}\n\nCertificates.defaultProps = {\n    isMutualSSLEnabled: false,\n    apiId: '',\n};\n\nCertificates.propTypes = {\n    classes: PropTypes.shape({\n        fileinput: PropTypes.shape({}),\n        button: PropTypes.shape({}),\n    }).isRequired,\n    certificates: PropTypes.shape({}).isRequired,\n    uploadCertificate: PropTypes.func.isRequired,\n    deleteCertificate: PropTypes.func.isRequired,\n    apiId: PropTypes.string,\n    isMutualSSLEnabled: PropTypes.bool,\n    endpoints: PropTypes.shape([]).isRequired,\n    aliasList: PropTypes.shape([]).isRequired,\n};\nexport default injectIntl((Certificates));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Typography from '@material-ui/core/Typography';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { API_SECURITY_MUTUAL_SSL } from './APISecurity/components/apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n}));\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Transports(props) {\n    const { api, configDispatcher, securityScheme } = props;\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const isMutualSSLEnabled = securityScheme.includes(API_SECURITY_MUTUAL_SSL);\n    const Validate = () => {\n        if (api.transport && api.transport.length === 0) {\n            return (\n                <Typography>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.transport.empty'\n                        defaultMessage='Please select at least one transport!'\n                    />\n                </Typography>\n            );\n        } else if (isMutualSSLEnabled && !api.transport.includes('https')) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Configuration.components.transport.sslHttps'\n                    defaultMessage='Please select Https as transport with mutual SSL!'\n                />\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <Grid container spacing={1} alignItems='flex-start'>\n            <Grid item>\n                <FormControl component='fieldset'>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.Configuration.transports'\n                            defaultMessage='Transports'\n                        />\n                    </FormLabel>\n                    <FormGroup style={{ display: 'flow-root' }}>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={api.transport\n                                        ? api.transport.includes('http') : null}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'http' },\n                                    })}\n                                    value='http'\n                                    color='primary'\n                                />\n                            )}\n                            label='HTTP'\n                        />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={api.transport\n                                        ? api.transport.includes('https') : null}\n                                    onChange={({ target: { checked } }) => configDispatcher({\n                                        action: 'transport',\n                                        event: { checked, value: 'https' },\n                                    })}\n                                    value='https'\n                                    color='primary'\n                                />\n                            )}\n                            label='HTTPS'\n                        />\n                    </FormGroup>\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Configuration.components.Transports.tooltip'\n                            defaultMessage={\n                                'API will be exposed in selected transport(s) in the gateway(s)'\n                                + ' If Mutual SSL option is selected, a trusted client'\n                                + ' certificate should be presented to access the API'\n                            }\n                        />\n                    )}\n                    aria-label='Transports'\n                    placement='right-end'\n                    interactive\n                >\n                    <HelpOutline />\n                </Tooltip>\n            </Grid>\n            <Grid item>\n                <span className={classes.error}>\n                    <Validate />\n                </span>\n            </Grid>\n        </Grid>\n    );\n}\n\n\nTransports.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Certificates from 'AppComponents/Apis/Details/Endpoints/GeneralConfiguration/Certificates';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Transports from 'AppComponents/Apis/Details/Configuration/components/Transports.jsx';\n\nimport {\n    API_SECURITY_MUTUAL_SSL,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n} from './apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction TransportLevel(props) {\n    const {\n        haveMultiLevelSecurity, securityScheme, configDispatcher, intl, id, api,\n    } = props;\n    const isMutualSSLEnabled = securityScheme.includes(API_SECURITY_MUTUAL_SSL);\n    const [apiFromContext] = useAPI();\n    const [clientCertificates, setClientCertificates] = useState([]);\n    const classes = useStyles();\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     *\n     * @param {string} certificate The certificate needs to be associated with the API\n     * @param {string} policy The tier to be used for the certificate.\n     * @param {string} alias The alias of the certificate to be deleted.\n     *\n     * */\n    const saveClientCertificate = (certificate, policy, alias) => {\n        return API.addClientCertificate(id, certificate, policy, alias).then((resp) => {\n            if (resp.status === 201) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.add.success',\n                    defaultMessage: 'Certificate added successfully',\n                }));\n                const tmpCertificates = [...clientCertificates];\n                tmpCertificates.push({\n                    apiId: resp.obj.apiId,\n                    alias: resp.obj.alias,\n                    tier: resp.obj.tier,\n                });\n                setClientCertificates(tmpCertificates);\n            }\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.alias.error',\n                    defaultMessage: 'Something went wrong while adding the API certificate',\n                }));\n            }\n        });\n    };\n\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteClientCertificate = (alias) => {\n        return API.deleteClientCertificate(alias, id).then((resp) => {\n            setClientCertificates(() => {\n                if (resp.status === 200) {\n                    return clientCertificates.filter((cert) => {\n                        return cert.alias !== alias;\n                    });\n                } else {\n                    return -1;\n                }\n            });\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.success',\n                defaultMessage: 'Certificate Deleted Successfully',\n            }));\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Configuration.components.APISecurity.TranportLevel.certificate.delete.error',\n                    defaultMessage: 'Error while deleting certificate',\n                }));\n            }\n        });\n    };\n\n    // Get the client certificates from backend.\n    useEffect(() => {\n        API.getAllClientCertificates(id).then((resp) => {\n            const { certificates } = resp.obj;\n            setClientCertificates(certificates);\n        }).catch((err) => {\n            console.error(err);\n            setClientCertificates([]);\n        });\n    }, []);\n\n    let mandatoryValue = 'optional';\n    // If not mutual ssl security is selected, no mandatory values should be pre-selected\n    if (!isMutualSSLEnabled) {\n        mandatoryValue = 'null';\n    } else if (\n        !(securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2) || securityScheme.includes(API_SECURITY_BASIC_AUTH)\n            || securityScheme.includes(API_SECURITY_API_KEY))\n    ) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    } else if (securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY)) {\n        mandatoryValue = API_SECURITY_MUTUAL_SSL_MANDATORY;\n    }\n    return (\n        <>\n            <Grid item xs={12}>\n                <ExpansionPanel className={classes.expansionPanel}>\n                    <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Components.APISecurity.Components.\n                                    TransportLevel.transport.level.security'\n                                defaultMessage='Transport Level Security'\n                            />\n                        </Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                        <Transports api={api} configDispatcher={configDispatcher} securityScheme={securityScheme} />\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    checked={isMutualSSLEnabled}\n                                    onChange={({ target: { checked, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { checked, value },\n                                    })}\n                                    value={API_SECURITY_MUTUAL_SSL}\n                                    color='primary'\n                                />\n                            )}\n                            label='Mutual SSL'\n                        />\n                        {isMutualSSLEnabled && (\n                            <FormControl component='fieldset'>\n                                <RadioGroup\n                                    aria-label='HTTP security SSL mandatory selection'\n                                    name={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                                    value={mandatoryValue}\n                                    onChange={({ target: { name, value } }) => configDispatcher({\n                                        action: 'securityScheme',\n                                        event: { name, value },\n                                    })}\n                                    row\n                                >\n                                    <FormControlLabel\n                                        value={API_SECURITY_MUTUAL_SSL_MANDATORY}\n                                        control={(\n                                            <Radio\n                                                disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label='Mandatory'\n                                        labelPlacement='end'\n                                    />\n                                    <FormControlLabel\n                                        value='optional'\n                                        control={(\n                                            <Radio\n                                                disabled={!haveMultiLevelSecurity\n                                                || isRestricted(['apim:api_create'], apiFromContext)}\n                                                color='primary'\n                                            />\n                                        )}\n                                        label='Optional'\n                                        labelPlacement='end'\n                                    />\n                                </RadioGroup>\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.components.APISecurity.http.mandatory'\n                                        defaultMessage='Choose whether Transport level security is mandatory or\n                                        optional'\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        )}\n                        {isMutualSSLEnabled && (\n                            // TODO:\n                            // This is half baked!!!\n                            // Refactor the Certificate component to share its capabilities in here and\n                            // endpoints page ~tmkb\n                            <Certificates\n                                isMutualSSLEnabled={isMutualSSLEnabled}\n                                certificates={clientCertificates}\n                                uploadCertificate={saveClientCertificate}\n                                deleteCertificate={deleteClientCertificate}\n                                apiId={id}\n                            />\n                        )}\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n            </Grid>\n        </>\n    );\n}\n\nTransportLevel.propTypes = {\n    configDispatcher: PropTypes.func.isRequired,\n    haveMultiLevelSecurity: PropTypes.bool.isRequired,\n    securityScheme: PropTypes.arrayOf(PropTypes.string).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    id: PropTypes.string.isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl((TransportLevel));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ApiContext, { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nimport {\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './components/apiSecurityConstants';\nimport ApplicationLevel from './components/ApplicationLevel';\nimport TransportLevel from './components/TransportLevel';\n\n\nconst useStyles = makeStyles((theme) => ({\n    error: {\n        color: theme.palette.error.main,\n    },\n    bottomSpace: {\n        marginBottom: theme.spacing(4),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APISecurity(props) {\n    const {\n        api: { securityScheme, id },\n        configDispatcher,\n        api,\n    } = props;\n    const apiContext = useContext(ApiContext);\n    const isAPIProduct = apiContext.api.apiType === 'APIProduct';\n    let isEndpointAvailable;\n    let isPrototyped;\n    if (isAPIProduct) {\n        isEndpointAvailable = false;\n        isPrototyped = false;\n    } else {\n        isEndpointAvailable = apiContext.api.endpointConfig !== null;\n        isPrototyped = apiContext.api.endpointConfig !== null\n             && apiContext.api.endpointConfig.implementation_status === 'prototyped';\n    }\n\n\n    const haveMultiLevelSecurity = securityScheme.includes(API_SECURITY_MUTUAL_SSL)\n        && (securityScheme.includes(API_SECURITY_BASIC_AUTH)\n        || securityScheme.includes(\n            DEFAULT_API_SECURITY_OAUTH2,\n        ) || securityScheme.includes(API_SECURITY_API_KEY));\n    const classes = useStyles();\n    const [apiFromContext] = useAPI();\n\n    // Check the validation conditions and return an error message\n    const Validate = () => {\n        let resourcesWithSecurity;\n        if (apiFromContext.apiType === 'APIProduct') {\n            const apiList = apiFromContext.apis;\n            for (const apiInProduct in apiList) {\n                if (Object.prototype.hasOwnProperty.call(apiList, apiInProduct)) {\n                    resourcesWithSecurity = apiList[apiInProduct].operations.findIndex(\n                        (op) => op.authType !== 'None',\n                    ) > -1;\n                    if (resourcesWithSecurity) {\n                        break;\n                    }\n                }\n            }\n        } else {\n            resourcesWithSecurity = apiFromContext.operations.findIndex((op) => op.authType !== 'None') > -1;\n        }\n\n        if (\n            !securityScheme.includes(API_SECURITY_MUTUAL_SSL)\n            && !securityScheme.includes(API_SECURITY_BASIC_AUTH)\n            && !securityScheme.includes(DEFAULT_API_SECURITY_OAUTH2)\n            && !securityScheme.includes(API_SECURITY_API_KEY)\n            && resourcesWithSecurity\n        ) {\n            return (\n                <Typography className={classes.bottomSpace}>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APISecurity.emptySchemas'\n                        defaultMessage='Please select at least one API security method!'\n                    />\n                </Typography>\n            );\n        } else if (\n            // User has enabled both security levels and set both levels as optional\n            haveMultiLevelSecurity\n            && !(\n                securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY)\n                || securityScheme.includes(API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY)\n            )\n        ) {\n            return (\n                <Typography className={classes.bottomSpace}>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APISecurity.allOptional'\n                        defaultMessage=\"Please select at least one API security level as 'Mandatory'!\"\n                    />\n                </Typography>\n            );\n        }\n        return null; // No errors :-)\n    };\n    return (\n        <>\n            <Grid container spacing={2} alignItems='flex-start'>\n                {(isAPIProduct || (!isEndpointAvailable || (isEndpointAvailable && !isPrototyped)))\n                && (\n                    <>\n                        <TransportLevel\n                            haveMultiLevelSecurity={haveMultiLevelSecurity}\n                            securityScheme={securityScheme}\n                            configDispatcher={configDispatcher}\n                            api={api}\n                            id={id}\n                        />\n                        <ApplicationLevel\n                            haveMultiLevelSecurity={haveMultiLevelSecurity}\n                            securityScheme={securityScheme}\n                            api={api}\n                            configDispatcher={configDispatcher}\n                            id={id}\n                        />\n                        <Grid item>\n                            <span className={classes.error}>\n                                <Validate />\n                            </span>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </>\n    );\n}\n\nAPISecurity.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TextField from '@material-ui/core/TextField';\nimport TableCell from '@material-ui/core/TableCell';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport Box from '@material-ui/core/Box';\n\n\nconst useStyles = makeStyles((theme) => ({\n    searchWrapper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n}));\n\n/**\n *\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nexport default function UpdateComplexity(props) {\n    const classes = useStyles();\n    const [filterKeyWord, setFilter] = useState('');\n    const {\n        setList, typelist, list,\n    } = props;\n\n    /**\n     * Filter the information by Types.\n     */\n\n    const setFilterByKeyWord = (event) => {\n        setFilter(event.target.value.toLowerCase());\n    };\n\n    return (\n        <>\n            <Grid item md={2}>\n                <Box mt={4} pb={2}>\n                    <div className={classes.searchWrapper}>\n                        <TextField\n                            id='outlined-full-width'\n                            label='Type'\n                            placeholder='Search By Types'\n                            onChange={(e) => setFilterByKeyWord(e, typelist)}\n                            fullWidth\n                            variant='outlined'\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </div>\n                </Box>\n            </Grid>\n            <Grid item md={12}>\n                <Table stickyHeader>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.QueryAnalysis.UpdateComplexity.typeName'\n                                        defaultMessage='Type'\n                                    />\n                                </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.QueryAnalysis.UpdateComplexity.fieldcomplexity'\n                                        defaultMessage='Fields'\n                                    />\n                                </Typography>\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.QueryAnalysis.UpdateComplexity.fieldcomplexitysum'\n                                        defaultMessage='Sum of the Complexity'\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {typelist.filter(\n                            (item) => item.type.toLowerCase().includes(filterKeyWord),\n                        ).map((typename) => {\n                            return (\n                                <TableRow style={{ borderStyle: 'hidden' }}>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            {typename.type}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <ExpansionPanel>\n                                            <ExpansionPanelSummary\n                                                expandIcon={<ExpandMoreIcon />}\n                                                aria-controls='panel1a-content'\n                                                id='panel1a-header'\n                                            />\n                                            <ExpansionPanelDetails>\n                                                <Grid item md={12}>\n                                                    <Table>\n                                                        <TableRow>\n                                                            <TableCell>\n                                                                <b>Field</b>\n                                                            </TableCell>\n                                                            <TableCell>\n                                                                <b>ComplexityValue</b>\n                                                            </TableCell>\n                                                        </TableRow>\n                                                        {list.map((respond, index) => ((respond.type === typename.type)\n                                                     && (\n                                                         <TableRow>\n                                                             <TableCell>\n                                                                 {respond.field}\n                                                             </TableCell>\n                                                             <TableCell>\n                                                                 <TextField\n                                                                     id='complexityValue'\n                                                                     label='complexityValue'\n                                                                     margin='normal'\n                                                                     variant='outlined'\n                                                                     value={respond.complexityValue}\n                                                                     onChange={(event) => {\n                                                                         const newArr = [...list];\n                                                                         newArr[index] = {\n                                                                             type: respond.type,\n                                                                             field: respond.field,\n                                                                             complexityValue: +event.target.value,\n                                                                         };\n                                                                         setList(newArr);\n                                                                     }}\n                                                                 />\n                                                             </TableCell>\n                                                         </TableRow>\n                                                     )))}\n                                                    </Table>\n                                                </Grid>\n                                            </ExpansionPanelDetails>\n                                        </ExpansionPanel>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant='body1'>\n                                            {typename.summation}\n                                        </Typography>\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </Grid>\n        </>\n    );\n}\n\nUpdateComplexity.propTypes = {\n    setList: PropTypes.func.isRequired,\n    list: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.string,\n            field: PropTypes.string,\n            complexityValue: PropTypes.number,\n        }),\n    ).isRequired,\n    typelist: PropTypes.arrayOf(\n        PropTypes.shape({\n            type: PropTypes.string,\n            summation: PropTypes.number,\n        }),\n    ).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport EditRounded from '@material-ui/icons/EditRounded';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Container from '@material-ui/core/Container';\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { Progress } from 'AppComponents/Shared';\nimport UpdateComplexity from '../../QueryAnalysis/UpdateComplexity';\n\nconst useStyles = makeStyles(() => ({\n    content: {\n        flexGrow: 1,\n    },\n    itemWrapper: {\n        width: 'auto',\n        display: 'flex',\n    },\n    FormControl: {\n        padding: 10,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    subTitle: {\n        marginTop: 20,\n    },\n    subTitleDescription: {\n        marginBottom: 10,\n    },\n    flowWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: 10,\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    heading: {\n        margin: 'auto',\n        color: 'rgba(0, 0, 0, 0.40)',\n    },\n    paper: {\n        padding: '10px 24px',\n        width: 'auto',\n    },\n    editIcon: {\n        position: 'absolute',\n        top: 8,\n        right: 0,\n    },\n    dialogPaper: {\n        minHeight: '95vh',\n        maxHeight: '95vh',\n        minWidth: '150vh',\n        maxWidth: '150vh',\n    },\n}));\n\n/**\n * The base component of the GraphQL Query Analysis.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nexport default function GraphQLQueryAnalysis(props) {\n    const {\n        api,\n        setUpdateComplexityList,\n    } = props;\n    const [open, setOpen] = useState(false);\n    const classes = useStyles();\n    const [list, setList] = useState(null);\n    const [typelist, setTypeList] = useState([]);\n\n    /**\n     * Get Summation of field's complexity value of all types\n     * @param {Object of array} List\n     */\n    function findSummation(List) {\n        const type = [...new Set(List.map((respond) => respond.type))];\n        const array = [];\n        type.map((respond) => {\n            const ob = {};\n            ob.type = respond;\n            ob.summation = 0;\n            List.map((obj) => {\n                if (obj.type === respond) {\n                    ob.summation += obj.complexityValue;\n                }\n                return ob;\n            });\n            array.push(ob);\n            return array;\n        });\n        setTypeList(array);\n    }\n\n    /**\n     * Set the Initial Complexity Values to the field's\n     */\n\n    function setInitialComplexity() {\n        const apiId = api.id;\n        const apiClient = new Api();\n        const promisedComplexityType = apiClient.getGraphqlPoliciesComplexityTypes(apiId);\n        promisedComplexityType\n            .then((res) => {\n                const array = [];\n                res.typeList.map((respond) => {\n                    respond.fieldList.map((ob) => {\n                        const obj = {};\n                        obj.type = respond.type;\n                        obj.field = ob;\n                        obj.complexityValue = 1;\n                        array.push(obj);\n                        return ob;\n                    });\n                    return array;\n                });\n                setList(array);\n                findSummation(array);\n            });\n    }\n\n    useEffect(() => {\n        const apiId = api.id;\n        const apiClient = new Api();\n        const promisedComplexity = apiClient.getGraphqlPoliciesComplexity(apiId);\n        promisedComplexity\n            .then((res) => {\n                setList(res.list);\n                findSummation(res.list);\n                if (res.list.length === 0) {\n                    setInitialComplexity();\n                }\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            });\n    }, []);\n\n\n    /**\n    * Edit Custom Complexity Values\n    */\n    function editComplexity() {\n        setUpdateComplexityList(list);\n        findSummation(list);\n        setOpen(false);\n    }\n    /**\n     * set open state of the dialog box\n     */\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    if (list === null) {\n        return <Progress />;\n    }\n\n    return (\n        <>\n            <Paper className={classes.paper} spacing={2}>\n                <Grid container spacing={2} alignItems='flex-start'>\n                    <Grid item md={12} style={{ position: 'relative', display: 'inline-flex' }}>\n                        <Typography className={classes.subHeading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configurartion.components.QueryAnalysis'\n                                defaultMessage='Query Analysis'\n                            />\n                        </Typography>\n                        <Typography className={classes.heading}>\n\n                            <span>update complexity</span>\n\n                        </Typography>\n                        <Button\n                            className={classes.editIcon}\n                            size='small'\n                            onClick={handleClickOpen}\n                        >\n                            <EditRounded />\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Paper>\n            <Dialog\n                classes={{ paper: classes.dialogPaper }}\n                open={open}\n                aria-labelledby='responsive-dialog-title'\n            >\n                <DialogTitle id='responsive-dialog-title'>\n                    <Typography className={classes.subHeading} variant='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Configurartion.components.QueryAnalysis.edit'\n                            defaultMessage='Edit Complexity Values'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <DialogContentText>\n                        <Container fixed>\n                            <UpdateComplexity\n                                list={list}\n                                setList={setList}\n                                typelist={typelist}\n                            />\n                        </Container>\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Grid item>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            onClick={editComplexity}\n                            className={classes.saveButton}\n                        >\n\n                            <FormattedMessage\n                                id='Apis.Details.QyeryAnalysis.UpdateComplexity.save'\n                                defaultMessage='Set'\n                            />\n\n                        </Button>\n                    </Grid>\n                    <Button onClick={handleClose} color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Configurartion.components.QueryAnalysis.cancle.btn'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nGraphQLQueryAnalysis.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    setUpdateComplexityList: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useReducer, useContext, useState, useEffect,\n} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport isEmpty from 'lodash/isEmpty';\nimport cloneDeep from 'lodash.clonedeep';\nimport Api from 'AppData/api';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResponseCaching from './components/ResponseCaching';\nimport CORSConfiguration from './components/CORSConfiguration';\nimport SchemaValidation from './components/SchemaValidation';\nimport MaxBackendTps from './components/MaxBackendTps';\nimport Flow from './components/Flow';\nimport Endpoints from './components/Endpoints';\nimport APISecurity from './components/APISecurity/APISecurity';\nimport QueryAnalysis from './components/QueryAnalysis';\nimport {\n    DEFAULT_API_SECURITY_OAUTH2,\n    API_SECURITY_BASIC_AUTH,\n    API_SECURITY_API_KEY,\n    API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n    API_SECURITY_MUTUAL_SSL_MANDATORY,\n    API_SECURITY_MUTUAL_SSL,\n} from './components/APISecurity/components/apiSecurityConstants';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(0),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 90,\n        right: -43,\n    },\n    arrowBackIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 30,\n        right: -71,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    info: {\n        display: 'flex',\n        height: '100%',\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    const apiConfigJson = {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        wsdlUrl: api.wsdlUrl,\n        transport: [...api.transport],\n        securityScheme: [...api.securityScheme],\n        keyManagers: [...api.keyManagers || []],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n    };\n    return apiConfigJson;\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function RuntimeConfiguration() {\n    const [keyManagersConfigured, setKeyManagersConfigured] = useState([]);\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value, event } = configAction;\n        const nextState = { ...copyAPIConfig(state) };\n        switch (action) {\n            case 'description':\n            case 'isDefaultVersion':\n            case 'authorizationHeader':\n            case 'responseCachingEnabled':\n            case 'cacheTimeout':\n            case 'enableSchemaValidation':\n            case 'accessControl':\n            case 'visibility':\n            case 'maxTps':\n            case 'tags':\n                nextState[action] = value;\n                return nextState;\n            case 'accessControlRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'visibleRoles':\n                return { ...copyAPIConfig(state), [action]: value };\n            case 'securityScheme':\n                // If event came from mandatory selector of either Application level or Transport level\n                if (\n                    [API_SECURITY_MUTUAL_SSL_MANDATORY, API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY]\n                        .includes(event.name)\n                ) {\n                    // If user select not mandatory (optional) , Remove the respective schema, else add it\n                    if (event.value === 'optional') {\n                        return {\n                            ...copyAPIConfig(state),\n                            [action]: state[action].filter((schema) => schema !== event.name),\n                        };\n                    } else if (state[action].includes(event.name)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.name] };\n                    }\n                }\n                // User checked on one of api security schemas (either OAuth, Basic, ApiKey or Mutual SSL)\n                if (event.checked) {\n                    if (state[action].includes(event.value)) {\n                        return state; // Add for completeness, Ideally there couldn't exist this state\n                    } else {\n                        return { ...copyAPIConfig(state), [action]: [...state[action], event.value] };\n                    }\n                } else if (state[action].includes(event.value)) {\n                    // User has unchecked a security schema type\n                    const newState = {\n                        ...copyAPIConfig(state),\n                        [action]: state[action].filter((schema) => schema !== event.value),\n                    };\n                    if (\n                        !(\n                            newState[action].includes(DEFAULT_API_SECURITY_OAUTH2)\n                            || newState[action].includes(API_SECURITY_BASIC_AUTH)\n                            || newState[action].includes(API_SECURITY_API_KEY)\n                        )\n                    ) {\n                        const noMandatoryOAuthBasicAuth = newState[action]\n                            .filter((schema) => schema !== API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryOAuthBasicAuth,\n                        };\n                    } else if (!newState[action].includes(API_SECURITY_MUTUAL_SSL)) {\n                        const noMandatoryMutualSSL = newState[action]\n                            .filter((schema) => schema !== API_SECURITY_MUTUAL_SSL_MANDATORY);\n                        return {\n                            ...newState,\n                            [action]: noMandatoryMutualSSL,\n                        };\n                    }\n\n                    return newState;\n                } else {\n                    return state; // Add for completeness, Ideally there couldn't exist this state\n                }\n            case 'transport':\n                if (event.checked) {\n                    return { ...copyAPIConfig(state), transport: [...state.transport, event.value] };\n                } else {\n                    return {\n                        ...copyAPIConfig(state),\n                        transport: state.transport.filter((transport) => transport !== event.value),\n                    };\n                }\n            case 'accessControlAllowHeaders':\n            case 'accessControlAllowMethods':\n            case 'accessControlAllowCredentials':\n            case 'corsConfigurationEnabled':\n                nextState.corsConfiguration[action] = value;\n                return nextState;\n            case 'accessControlAllowOrigins':\n                if (event.checked) {\n                    nextState.corsConfiguration[action] = [event.value];\n                } else {\n                    nextState.corsConfiguration[action] = event.checked === false ? [] : event.value;\n                }\n                return nextState;\n            case 'keymanagers':\n                nextState.keyManagers = value;\n                return nextState;\n            case 'allKeyManagersEnabled':\n                if (value) {\n                    nextState.keyManagers = ['all'];\n                } else {\n                    nextState.keyManagers = keyManagersConfigured;\n                }\n                return nextState;\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [updateComplexityList, setUpdateComplexityList] = useState(null);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n    const mediationPolicies = cloneDeep(api.mediationPolicies || []);\n    const [inPolicy, setInPolicy] = useState(mediationPolicies.filter((seq) => seq.type === 'IN')[0]);\n    const [outPolicy, setOutPolicy] = useState(mediationPolicies.filter((seq) => seq.type === 'OUT')[0]);\n    const [faultPolicy, setFaultPolicy] = useState(mediationPolicies.filter((seq) => seq.type === 'FAULT')[0]);\n    const intl = useIntl();\n    useEffect(() => {\n        Api.keyManagers().then((response) => {\n            const kmNameList = [];\n            if (response.body.list) {\n                response.body.list.forEach((km) => kmNameList.push(km.name));\n            }\n            setKeyManagersConfigured(kmNameList);\n        })\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            });\n    }, []);\n\n    const getMediationPoliciesToSave = () => {\n        const NONE = 'none';\n        const newMediationPolicies = [];\n        if (!(isEmpty(inPolicy) || inPolicy.name === NONE)) {\n            newMediationPolicies.push(inPolicy);\n        }\n        if (!(isEmpty(outPolicy) || outPolicy.name === NONE)) {\n            newMediationPolicies.push(outPolicy);\n        }\n        if (!(isEmpty(faultPolicy) || faultPolicy.name === NONE)) {\n            newMediationPolicies.push(faultPolicy);\n        }\n        return newMediationPolicies;\n    };\n    const updateInMediationPolicy = (policy) => {\n        setInPolicy({ id: policy.id, name: policy.name, type: policy.type });\n    };\n    const updateOutMediationPolicy = (policy) => {\n        setOutPolicy({ id: policy.id, name: policy.name, type: policy.type });\n    };\n    const updateFaultMediationPolicy = (policy) => {\n        setFaultPolicy({ id: policy.id, name: policy.name, type: policy.type });\n    };\n\n\n    /**\n     * Update the GraphQL Query Complexity Values\n     */\n    function updateComplexity() {\n        const apiId = apiConfig.id;\n        const apiClient = new Api();\n        const promisedComplexity = apiClient.updateGraphqlPoliciesComplexity(\n            apiId, {\n                list: updateComplexityList,\n            },\n        );\n        promisedComplexity\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            });\n    }\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        const newMediationPolicies = getMediationPoliciesToSave();\n        if (api.isAPIProduct()) {\n            delete apiConfig.keyManagers; // remove keyManagers property if API type is API Product\n        } else {\n            apiConfig.mediationPolicies = newMediationPolicies;\n        }\n        if (updateComplexityList !== null) {\n            updateComplexity();\n        }\n        // Validate the key managers\n        if (\n            !api.isAPIProduct()\n            && apiConfig.securityScheme.includes('oauth2')\n            && !apiConfig.keyManagers.includes('all')\n            && (apiConfig.keyManagers && apiConfig.keyManagers.length === 0)\n        ) {\n            Alert.error(\n                intl.formatMessage(\n                    {\n                        id: 'Apis.Details.Configuration.RuntimeConfiguration.no.km.error',\n                        defaultMessage: 'Select one or more Key Managers',\n                    },\n                ),\n            );\n            return;\n        }\n        setIsUpdating(true);\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    return (\n        <>\n            <Box pb={3}>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.RuntimeConfiguration.topic.header'\n                        defaultMessage='Runtime Configurations'\n                    />\n                </Typography>\n            </Box>\n            <div className={classes.contentWrapper}>\n                <Grid container direction='row' justify='space-around' alignItems='stretch' spacing={8}>\n                    <Grid item xs={12} md={7}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.section.request'\n                                defaultMessage='Request'\n                            />\n                        </Typography>\n                        <Grid\n                            direction=' column'\n                            justify='space-between'\n                            alignItems='stretch'\n                            spacing={6}\n                        >\n                            <Grid item xs={12} style={{ marginBottom: 30, position: 'relative' }}>\n                                <Paper className={classes.paper} elevation={0}>\n                                    <APISecurity api={apiConfig} configDispatcher={configDispatcher} />\n                                    <CORSConfiguration api={apiConfig} configDispatcher={configDispatcher} />\n\n                                    {api.type !== 'GRAPHQL'\n                                        && <SchemaValidation api={apiConfig} configDispatcher={configDispatcher} />}\n                                    {!api.isAPIProduct() && (\n                                        <Flow\n                                            api={apiConfig}\n                                            type='IN'\n                                            updateMediationPolicy={updateInMediationPolicy}\n                                            selectedMediationPolicy={inPolicy}\n                                            isRestricted={isRestricted(['apim:api_create'], api)}\n                                        />\n                                    )}\n                                    {api.type === 'GRAPHQL' && (\n                                        <Box mt={3}>\n                                            <QueryAnalysis\n                                                api={apiConfig}\n                                                setUpdateComplexityList={setUpdateComplexityList}\n                                                isRestricted={isRestricted(['apim:api_create'], api)}\n                                            />\n                                        </Box>\n                                    )}\n                                </Paper>\n                                <ArrowForwardIcon className={classes.arrowForwardIcon} />\n                            </Grid>\n                            <Typography className={classes.heading} variant='h6'>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.section.response'\n                                    defaultMessage='Response'\n                                />\n                            </Typography>\n                            <Grid item xs={12} style={{ position: 'relative' }}>\n                                <Box mb={3}>\n                                    <Paper className={classes.paper} elevation={0}>\n                                        {!api.isAPIProduct() && (\n                                            <Box mb={3}>\n                                                <Flow\n                                                    api={apiConfig}\n                                                    type='OUT'\n                                                    updateMediationPolicy={updateOutMediationPolicy}\n                                                    selectedMediationPolicy={outPolicy}\n                                                    isRestricted={isRestricted(['apim:api_create'], api)}\n                                                />\n                                            </Box>\n                                        )}\n                                        <ResponseCaching api={apiConfig} configDispatcher={configDispatcher} />\n                                    </Paper>\n                                    <ArrowBackIcon className={classes.arrowBackIcon} />\n                                </Box>\n                            </Grid>\n                            {!api.isAPIProduct() && (\n                                <>\n                                    <Typography className={classes.heading} variant='h6'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.RuntimeConfiguration.section.fault'\n                                            defaultMessage='Fault'\n                                        />\n                                    </Typography>\n                                    <Grid item xs={12} style={{ position: 'relative' }}>\n                                        <Paper className={classes.paper} elevation={0}>\n                                            <Flow\n                                                api={apiConfig}\n                                                type='FAULT'\n                                                updateMediationPolicy={updateFaultMediationPolicy}\n                                                selectedMediationPolicy={faultPolicy}\n                                                isRestricted={isRestricted(['apim:api_create'], api)}\n                                            />\n                                        </Paper>\n                                    </Grid>\n                                </>\n                            )}\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} md={5}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.section.backend'\n                                defaultMessage='Backend'\n                            />\n                        </Typography>\n                        <Paper className={classes.paper} style={{ height: 'calc(100% - 75px)' }} elevation={0}>\n                            {!api.isAPIProduct() && (\n                                <>\n                                    <MaxBackendTps api={apiConfig} configDispatcher={configDispatcher} />\n                                    <Endpoints api={api} />\n                                </>\n                            )}\n\n                            {api.isAPIProduct() && (\n                                <Box alignItems='center' justifyContent='center' className={classes.info}>\n                                    <Typography variant='body1'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.RuntimeConfiguration.backend.api.product.\n                                            endpoint'\n                                            defaultMessage='Please refer respective APIs for endpoint information'\n                                        />\n                                    </Typography>\n                                </Box>\n                            )}\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid container direction='row' alignItems='center' spacing={1} style={{ marginTop: 20 }}>\n                        <Grid item>\n                            <Button\n                                disabled={isUpdating\n                                || ((apiConfig.visibility === 'RESTRICTED' && apiConfig.visibleRoles.length === 0)\n                                    || isRestricted(['apim:api_create'], api))}\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                onClick={handleSave}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={15} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Grid item>\n                                <Typography variant='body2' color='primary'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.update.not.allowed'\n                                        defaultMessage={\n                                            '* You are not authorized to update particular fields of'\n                                            + ' the API due to insufficient permissions'\n                                        }\n                                    />\n                                </Typography>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\n\n\nconst useStyles = makeStyles((theme) => ({\n    expansionPanel: {\n        marginBottom: theme.spacing(3),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n        display: 'inline-flex',\n    },\n    iconSpace: {\n        marginLeft: theme.spacing(0.5),\n    },\n    actionSpace: {\n        margin: '-7px auto',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: 1.5,\n    },\n    keyManagerSelect: {\n        minWidth: 180,\n    },\n}));\n\n/**\n *\n * API Level Rate Limiting configuration\n * @param {*} props\n * @returns\n */\nexport default function APILevelRateLimitingPolicies(props) {\n    const [apiFromContext] = useAPI();\n    const classes = useStyles();\n    const {\n        configDispatcher,\n        api: { apiThrottlingPolicy },\n    } = props;\n    const [apiRateLimits, setApiRateLimits] = useState([]);\n    const handleChange = (event) => {\n        configDispatcher({\n            action: 'apiThrottlingPolicy',\n            value: event.target.value,\n        });\n    };\n\n    useEffect(() => {\n        API.policies('api').then((response) => setApiRateLimits(response.body.list));\n    }, []);\n\n    return (\n        <ExpansionPanel className={classes.expansionPanel} defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography className={classes.subHeading} variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.components.APILevelRateLimitingPolicies.configuration'\n                        defaultMessage='Rate Limiting Configuration'\n                    />\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.APILevelRateLimitingPolicies.components.Configuration.tooltip'\n                                defaultMessage={'Selected Rate Limiting Policy will be applied to all the'\n                                + ' requests of this API.'}\n                            />\n                        )}\n                        aria-label='Rate Limiting Policies'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline className={classes.iconSpace} />\n                    </Tooltip>\n                </Typography>\n                <FormControlLabel\n                    className={classes.actionSpace}\n                    control={(\n                        <Switch\n                            disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                            checked={!(apiThrottlingPolicy === null)}\n                            onChange={({ target: { checked } }) => configDispatcher({\n                                action: 'throttlingPoliciesEnabled',\n                                value: checked,\n                            })}\n                            color='primary'\n                        />\n                    )}\n                />\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails className={classes.expansionPanelDetails}>\n                <Grid container spacing={1} alignItems='center'>\n                    <Grid item md={6} xs={12}>\n                        {!(apiThrottlingPolicy === null) && (\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                id='operation_throttling_policy'\n                                select\n                                value={apiThrottlingPolicy}\n                                onChange={handleChange}\n                                label='Rate limiting policies'\n                                margin='dense'\n                                variant='outlined'\n                                style={{ display: 'flex', minWidth: 180 }}\n                            >\n                                {apiRateLimits.map((rateLimit) => (\n                                    <MenuItem key={rateLimit.name} value={rateLimit.name}>\n                                        {rateLimit.displayName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        )}\n                    </Grid>\n                </Grid>\n            </ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nAPILevelRateLimitingPolicies.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    configDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ArrowForwardIcon from '@material-ui/icons/SettingsEthernet';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Endpoints from './components/Endpoints';\nimport KeyManager from './components/KeyManager';\nimport APILevelRateLimitingPolicies from './components/APILevelRateLimitingPolicies';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    boxFlex: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    paper: {\n        padding: theme.spacing(3),\n        minHeight: '250px',\n    },\n    paperCenter: {\n        padding: theme.spacing(3),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    heading: {\n        fontSize: '1.1rem',\n        fontWeight: 400,\n        marginBottom: theme.spacing(1),\n    },\n    itemPadding: {\n        marginBottom: theme.spacing(3),\n    },\n    arrowForwardIcon: {\n        fontSize: 50,\n        color: '#ccc',\n        position: 'absolute',\n        top: 175,\n        right: -55,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n    info: {\n        display: 'flex',\n        height: '100%',\n    },\n}));\n\n/**\n *\n * Deep coping the properties in API object (what ever the object in the state),\n * making sure that no direct mutations happen when updating the state.\n * You should know the shape of the object that you are keeping in the state,\n * @param {Object} api\n * @returns {Object} Deep copy of an object\n */\nfunction copyAPIConfig(api) {\n    const keyManagers = api.apiType === 'APIProduct' ? ['all'] : [...api.keyManagers];\n    return {\n        id: api.id,\n        name: api.name,\n        description: api.description,\n        lifeCycleStatus: api.lifeCycleStatus,\n        accessControl: api.accessControl,\n        authorizationHeader: api.authorizationHeader,\n        responseCachingEnabled: api.responseCachingEnabled,\n        cacheTimeout: api.cacheTimeout,\n        visibility: api.visibility,\n        apiThrottlingPolicy: api.apiThrottlingPolicy,\n        isDefaultVersion: api.isDefaultVersion,\n        enableSchemaValidation: api.enableSchemaValidation,\n        accessControlRoles: [...api.accessControlRoles],\n        visibleRoles: [...api.visibleRoles],\n        tags: [...api.tags],\n        maxTps: api.maxTps,\n        wsdlUrl: api.wsdlUrl,\n        transport: [...api.transport],\n        securityScheme: [...api.securityScheme],\n        corsConfiguration: {\n            corsConfigurationEnabled: api.corsConfiguration.corsConfigurationEnabled,\n            accessControlAllowCredentials: api.corsConfiguration.accessControlAllowCredentials,\n            accessControlAllowOrigins: [...api.corsConfiguration.accessControlAllowOrigins],\n            accessControlAllowHeaders: [...api.corsConfiguration.accessControlAllowHeaders],\n            accessControlAllowMethods: [...api.corsConfiguration.accessControlAllowMethods],\n        },\n        keyManagers,\n    };\n}\n/**\n * This component handles the basic configurations UI in the API details page\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function RuntimeConfiguration() {\n    /**\n     *\n     * Reduce the configuration UI related actions in to updated state\n     * @param {*} state current state\n     * @param {*} configAction dispatched configuration action\n     * @returns {Object} updated state\n     */\n    function configReducer(state, configAction) {\n        const { action, value } = configAction;\n        const nextState = { ...copyAPIConfig(state) };\n        switch (action) {\n            case 'apiThrottlingPolicy':\n            case 'maxTps':\n                nextState[action] = value;\n                return nextState;\n            case 'keymanagers':\n                nextState.keyManagers = value;\n                return nextState;\n            case 'throttlingPoliciesEnabled':\n                if (value) {\n                    nextState.apiThrottlingPolicy = '';\n                } else {\n                    nextState.apiThrottlingPolicy = null;\n                }\n                return nextState;\n            case 'allKeyManagersEnabled':\n                if (value) {\n                    nextState.keyManagers = [];\n                } else {\n                    nextState.keyManagers = ['all'];\n                }\n                return nextState;\n            default:\n                return state;\n        }\n    }\n    const { api, updateAPI } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [apiConfig, configDispatcher] = useReducer(configReducer, copyAPIConfig(api));\n    const classes = useStyles();\n\n\n    /**\n     *\n     * Handle the configuration view save button action\n     */\n    function handleSave() {\n        setIsUpdating(true);\n\n        updateAPI(apiConfig)\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                }\n            })\n            .finally(() => setIsUpdating(false));\n    }\n\n    return (\n        <>\n            <Box pb={3}>\n                <Typography variant='h5'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.RuntimeConfigurationWebSocket.topic.header'\n                        defaultMessage='Runtime Configurations'\n                    />\n                </Typography>\n            </Box>\n            <div className={classes.contentWrapper}>\n                <Grid container direction='row' justify='space-around' alignItems='stretch' spacing={8}>\n                    <Grid item xs={12} md={7} style={{ marginBottom: 30, position: 'relative' }}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.RuntimeConfigurationWebSocket.section.client.websocket'\n                                defaultMessage='Client Websocket'\n                            />\n                        </Typography>\n                        <div className={classes.boxFlex}>\n                            <Paper\n                                className={classes.paper}\n                                elevation={0}\n                                style={{ display: 'flex', alignItems: 'center' }}\n                            >\n                                <Box pr={3}>\n                                    <KeyManager api={apiConfig} configDispatcher={configDispatcher} />\n                                </Box>\n                                <Box pr={3}>\n                                    <APILevelRateLimitingPolicies api={apiConfig} configDispatcher={configDispatcher} />\n                                </Box>\n                            </Paper>\n                            <ArrowForwardIcon className={classes.arrowForwardIcon} />\n                        </div>\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <Typography className={classes.heading} variant='h6'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.RuntimeConfigurationWebSocket.section.backend.websocket'\n                                defaultMessage='Backend Websocket'\n                            />\n                        </Typography>\n                        <Paper className={classes.paper} style={{ height: 'calc(100% - 75px)' }} elevation={0}>\n                            {!api.isAPIProduct() && (\n                                <>\n                                    <Endpoints api={api} />\n                                </>\n                            )}\n                        </Paper>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid container direction='row' alignItems='center' spacing={1} style={{ marginTop: 20 }}>\n                        <Grid item>\n                            <Button\n                                disabled={isUpdating\n                                || ((apiConfig.visibility === 'RESTRICTED' && apiConfig.visibleRoles.length === 0)\n                                    || isRestricted(['apim:api_create'], api))}\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                onClick={handleSave}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={15} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Grid item>\n                                <Typography variant='body2' color='primary'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.update.not.allowed'\n                                        defaultMessage={\n                                            '* You are not authorized to update particular fields of'\n                                            + ' the API due to insufficient permissions'\n                                        }\n                                    />\n                                </Typography>\n                            </Grid>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/*\n `max-len` es-lint rule has been disabled for the entire file due to the generated svg elements in the file.\n it's impossible to get them under 120 columns rule\n  */\n/* eslint-disable max-len */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n    root: {\n        marginTop: 30,\n    },\n});\n\n/**\n *\n *\n * @class LifeCycleImage\n * @extends {React.Component}\n */\nclass LifeCycleImage extends React.Component {\n    /**\n     *\n     *\n     * @param {*} element\n     * @returns\n     * @memberof LifeCycleImage\n     */\n    highLightMe(element) {\n        const style = {};\n        if (!element.startsWith(this.props.lifeCycleStatus.toLowerCase())) {\n            style.opacity = 0.2;\n        }\n        return style;\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycleImage\n     */\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <svg\n                xmlns='http://www.w3.org/2000/svg'\n                width='633'\n                height='244'\n                viewBox='0 0 743.09858 287.34519'\n                id='svg5953'\n                className={classes.root}\n            >\n                <defs id='defs5955'>\n                    <path\n                        transform='scale(.26458)'\n                        id='path5588'\n                        d='m 1738.3694,290.45336 a 290.37688,290.37688 0 0 1 268.3994,-179.55952 290.37688,290.37688 0 0 1 5.8758,0.0595'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5578'\n                        d='m 2103.6746,127.54094 a 290.37688,290.37688 0 0 1 193.3409,265.03704'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path5547'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                    <path\n                        transform='scale(.26458)'\n                        id='path4189'\n                        d='m 1748.9295,534.82816 a 290.37688,290.37688 0 0 0 257.8393,156.81941 290.37688,290.37688 0 0 0 5.8709,-0.0593'\n                        style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                        color='#000'\n                        overflow='visible'\n                        fill='none'\n                        strokeWidth='6.633'\n                        strokeLinejoin='round'\n                    />\n                </defs>\n                <g id='layer1' transform='translate(51.512 4.77)'>\n                    <path d='m 99,13.3622 24,0 0,24 -24,0 z' id='path6746' fill='none' />\n                    <g id='prototyped' style={this.highLightMe('prototyped')}>\n                        <text\n                            id='text6729'\n                            y='6.362'\n                            x='61'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                            fill='#2b2b2b'\n                        >\n                            <tspan y='6.362' x='61' id='tspan6731'>\n                                PROTOTYPED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6748'\n                            d='m 118,16.3622 -4.18,0 c -0.42,-1.16 -1.52,-2 -2.82,-2 -1.3,0 -2.4,0.84 -2.82,2 l -4.18,0 c -1.1,0 -2,0.9 -2,2 l 0,14 c 0,1.1 0.9,2 2,2 l 14,0 c 1.1,0 2,-0.9 2,-2 l 0,-14 c 0,-1.1 -0.9,-2 -2,-2 z m -7,0 c 0.55,0 1,0.45 1,1 0,0.55 -0.45,1 -1,1 -0.55,0 -1,-0.45 -1,-1 0,-0.55 0.45,-1 1,-1 z m -2,14 -4,-4 1.41,-1.41 2.59,2.58 6.59,-6.59 1.41,1.42 -8,8 z'\n                        />\n                    </g>\n                    <path d='m 224.5,133.8622 24,0 0,24 -24,0 z' id='path6762' fill='none' />\n                    <g id='published' style={this.highLightMe('published')}>\n                        <text\n                            id='text6524'\n                            y='125.476'\n                            x='207'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='207' id='tspan6526'>\n                                PUBLISHED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6764'\n                            d='m 240.5,144.8622 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m -8,0 c 1.66,0 2.99,-1.34 2.99,-3 0,-1.66 -1.33,-3 -2.99,-3 -1.66,0 -3,1.34 -3,3 0,1.66 1.34,3 3,3 z m 0,2 c -2.33,0 -7,1.17 -7,3.5 l 0,2.5 14,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z m 8,0 c -0.29,0 -0.62,0.02 -0.97,0.05 1.16,0.84 1.97,1.97 1.97,3.45 l 0,2.5 6,0 0,-2.5 c 0,-2.33 -4.67,-3.5 -7,-3.5 z'\n                        />\n                    </g>\n                    <g id='created' style={this.highLightMe('created')}>\n                        <text\n                            id='text6520'\n                            y='282.362'\n                            x='68'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='68' id='tspan6522'>\n                                CREATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6778'\n                            d='m 97,238.8622 c -1.1,0 -1.99,0.9 -1.99,2 l -0.01,16 c 0,1.1 0.89,2 1.99,2 l 12.01,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -6,-6 -8,0 z m 7,7 0,-5.5 5.5,5.5 -5.5,0 z'\n                        />\n                    </g>\n                    <path d='m 91,236.8622 24,0 0,24 -24,0 z' id='path6780' fill='none' />\n                    <g id='deprecated' style={this.highLightMe('deprecated')}>\n                        <text\n                            id='text6536'\n                            y='125.476'\n                            x='397.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.476' x='397.858' id='tspan6538'>\n                                DEPRECATED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6794'\n                            d='m 433.52944,97.811947 c 0,1.1 0.9,2 2,2 l 8,0 c 1.1,0 2,-0.9 2,-2 l 0,-12 -12,0 0,12 z m 13,-15 -3.5,0 -1,-1 -5,0 -1,1 -3.5,0 0,2 14,0 0,-2 z'\n                        />\n                        <path id='path6796' d='m 427.52944,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <path d='m 427.52944,236.8622 24,0 0,24 -24,0 z' id='path6810' clipRule='evenodd' fill='none' />\n                    <g id='blocked' style={this.highLightMe('blocked')}>\n                        <text\n                            id='text6532'\n                            y='282.362'\n                            x='386.858'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='282.362' x='386.858' id='tspan6534'>\n                                BLOCKED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6812'\n                            d='m 450.22944,255.8622 -9.1,-9.1 c 0.9,-2.3 0.4,-5 -1.5,-6.9 -2,-2 -5,-2.4 -7.4,-1.3 l 4.3,4.3 -3,3 -4.4,-4.3 c -1.2,2.4 -0.7,5.4 1.3,7.4 1.9,1.9 4.6,2.4 6.9,1.5 l 9.1,9.1 c 0.4,0.4 1,0.4 1.4,0 l 2.3,-2.3 c 0.5,-0.4 0.5,-1.1 0.1,-1.4 z'\n                        />\n                    </g>\n                    <g id='retired' style={this.highLightMe('retired')}>\n                        <text\n                            id='text6540'\n                            y='125.483'\n                            x='627.485'\n                            style={{ lineHeight: '125%' }}\n                            fontWeight='400'\n                            fontSize='15'\n                            fontFamily='sans-serif'\n                            letterSpacing='0'\n                            wordSpacing='0'\n                        >\n                            <tspan y='125.483' x='627.485' id='tspan6542'>\n                                RETIRED\n                            </tspan>\n                        </text>\n                        <path\n                            id='path6826'\n                            d='m 663.36667,89.811947 0,2 -13,0 0,-6 9,0 c 2.21,0 4,1.79 4,4 z m -20,3 0,2 6,0 0,2 8,0 0,-2 6,0 0,-2 -20,0 z m 5.14,-1.9 c 1.16,-1.19 1.14,-3.08 -0.04,-4.24 -1.19,-1.16 -3.08,-1.14 -4.24,0.04 -1.16,1.19 -1.14,3.08 0.04,4.24 1.19,1.16 3.08,1.14 4.24,-0.04 z'\n                        />\n                        <path id='path6828' d='m 641.36667,78.811947 24,0 0,24.000003 -24,0 z' fill='none' />\n                    </g>\n                    <g id='published_to_created' style={this.highLightMe('published_to_created')}>\n                        <path\n                            id='path6872'\n                            d='m 235.84375,184.86133 c -11.86654,31.99459 -35.12697,58.48216 -65.32031,74.38281 l -5.4624,15.71344 14.85695,3.63617 c 35.16928,-17.95415 62.42125,-48.3249 76.47461,-85.22656 l -15.28708,7.18109 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#065381'\n                        />\n                        <path\n                            id='path6985'\n                            d='m 178.61585,255.22337 -4.875,15.375 14.5,3.625'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 187.11585,249.22337 -4.875,15.375 14.5,3.625'\n                            id='path6987'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_published' style={this.highLightMe('created_to_published')}>\n                        <path\n                            id='path6850'\n                            d='m 202.80469,171.18359 c -8.60566,23.79669 -25.78994,43.52064 -48.1836,55.30469 l 15.33148,4.4495 -5.74163,15.30245 c 27.19915,-14.16065 48.15744,-37.93366 58.79687,-66.69335 l -4.08764,-14.98782 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#34b2e4'\n                        />\n                        <path\n                            d='m 200.07828,178.47337 15.66836,-6.25318 3.78013,13.89858'\n                            id='path6979'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            id='path6991'\n                            d='m 195.3937,187.48898 15.66836,-6.25318 3.78013,13.89858'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_published' style={this.highLightMe('prototyped_to_published')}>\n                        <path\n                            id='path6874'\n                            d='m 181.42383,-4.0683594 5.18392,15.3553234 -15.14681,3.480614 c 26.97521,14.497097 48.38501,37.525806 60.88086,65.484375 l 16.41911,5.795641 4.09261,-14.231188 C 238.22018,39.231643 213.06477,12.507292 181.42383,-4.0683594 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#fe912a'\n                        />\n                        <path\n                            id='path6993'\n                            d='m 228.26421,71.982698 16.39604,5.833631 3.93328,-14.097941'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 224.76421,65.357698 16.39604,5.833631 3.93328,-14.097941'\n                            id='path6995'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='published_to_prototyped' style={this.highLightMe('published_to_prototyped')}>\n                        <path\n                            id='path6855'\n                            d='m 164.61328,27.712891 -16.76273,3.798407 6.57718,15.455499 c 19.64736,10.327117 35.3679,26.809879 44.75391,46.923828 l 6.94786,-12.105746 13.33339,3.763949 C 208.07457,60.73778 188.78631,40.399355 164.61328,27.712891 Z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#ffc95c'\n                        />\n                        <path\n                            id='path6997'\n                            d='m 163.43006,52.336437 -6.45235,-15.202795 16.61701,-3.535534'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='M 171.82695,57.993291 165.3746,42.790496 181.99161,39.254962'\n                            id='path6999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='created_to_prototyped' style={this.highLightMe('created_to_prototyped')}>\n                        <path\n                            id='path6870'\n                            d='M 35.433594,-4.7226562 C -17.800688,22.43674 -51.366944,77.095386 -51.511719,136.85742 c 0.08726,60.42038 34.333636,115.59607 88.439453,142.48828 l -5.963174,-14.43529 14.818643,-3.6858 C -1.8626488,238.10436 -32.152993,189.83798 -32.251953,136.87891 -32.191581,84.271252 -2.3316563,36.239603 44.818359,12.90625 l 7.576833,-14.3582512 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#8b103e'\n                        />\n                        <path\n                            id='path7001'\n                            d='m 25.625,1.1122031 16.25,3 -7.125,13.7499999'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 16.375,7.1122031 16.25,2.9999999 -7.125,13.75'\n                            id='path7003'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='prototyped_to_created' style={this.highLightMe('prototyped_to_created')}>\n                        <path\n                            id='path6840'\n                            d='M 52.171875,26.720703 C 10.473112,47.61586 -15.897048,90.22032 -16,136.86133 c 0.06835,46.84095 26.630186,89.61173 68.585938,110.43945 l 18.169686,-5.17409 -8.489999,-14.63841 C 27.868397,210.36444 6.0894455,175.28511 6,136.86133 6.0597413,98.328986 27.932967,63.153267 62.464844,46.056641 l -14.466177,-4.2932 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#e34856'\n                        />\n                        <path\n                            id='path7005'\n                            d='m 39.421204,240.07329 17.677669,-4.94975 -7.778174,-14.49569'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                        <path\n                            d='m 27.930719,230.8809 17.677669,-4.94975 -7.778174,-14.49569'\n                            id='path7007'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                        />\n                    </g>\n                    <g id='deprecated_to_retired' style={this.highLightMe('deprecated_to_retired')}>\n                        <path\n                            id='rect7009'\n                            d='m 530.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7016'\n                            d='m 589.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 581.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7018'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_deprecated' style={this.highLightMe('published_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.25049,110.51652 68.24164,0 9.89949,9.52539 -9.89949,9.40863 -68.24164,0 9.54594,-9.76218 z'\n                            id='path7020'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 365.97554,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            id='path7022'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7024'\n                            d='m 357.28804,111.03345 9.31051,8.95242 -9.42988,8.89273'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='published_to_blocked' style={this.highLightMe('published_to_blocked')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            id='path7026'\n                            color='#000'\n                            overflow='visible'\n                            fill='#65daad'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            id='path7028'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7030'\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g\n                        id='blocked_to_published'\n                        transform='rotate(180 338.919 207.057)'\n                        style={this.highLightMe('blocked_to_published')}\n                    >\n                        <path\n                            id='path7039'\n                            d='m 306.92162,149.0749 92.7941,75.49823 1.41692,13.66474 -13.63383,0.80053 -92.79411,-75.49822 13.59185,-1.29876 z'\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            color='#000'\n                            overflow='visible'\n                            fill='#64d0da'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            id='path7041'\n                            d='m 392.87565,219.47284 1.33665,12.84698 -12.94218,0.70939'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            d='m 386.23855,213.86735 1.33664,12.84698 -12.94218,0.70939'\n                            id='path7043'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                    <g id='blocked_to_deprecated' style={this.highLightMe('blocked_to_deprecated')}>\n                        <path\n                            style={{ isolation: 'auto', mixBlendMode: 'normal' }}\n                            d='m 427.85405,225.05409 0,-68.24164 9.52539,-9.89949 9.40863,9.89949 0,68.24164 -9.76218,-9.54594 z'\n                            id='path7045'\n                            color='#000'\n                            overflow='visible'\n                            fill='#5c5c5c'\n                            strokeWidth='6.016'\n                            strokeLinecap='round'\n                            strokeLinejoin='round'\n                        />\n                        <path\n                            d='m 428.37098,165.32904 8.95242,-9.31051 8.89273,9.42988'\n                            id='path7047'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                        <path\n                            id='path7049'\n                            d='m 428.37098,174.01654 8.95242,-9.31051 8.89273,9.42988'\n                            fill='none'\n                            fillRule='evenodd'\n                            stroke='#fff'\n                            strokeWidth='.955'\n                        />\n                    </g>\n                </g>\n            </svg>\n        );\n    }\n}\nLifeCycleImage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    lifeCycleStatus: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(LifeCycleImage);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CheckIcon from '@material-ui/icons/Check';\nimport green from '@material-ui/core/colors/green';\nimport yellow from '@material-ui/core/colors/yellow';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport WarningRoundedIcon from '@material-ui/icons/WarningRounded';\n\nconst useStyles = makeStyles((theme) => ({\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    paperCenter: {\n        padding: theme.spacing(2),\n        display: 'block',\n        alignItems: 'left',\n        justifyContent: 'center',\n    },\n    iconTrue: {\n        color: green[500],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconFalse: {\n        color: theme.palette.grey[500],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconWarn: {\n        color: yellow[700],\n        marginRight: theme.spacing(1),\n        display: 'block',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    grid: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'left',\n        alignItems: 'left',\n    },\n    labelsGrid: {\n        fontWeight: 600,\n        marginTop: theme.spacing(3),\n    },\n}));\n/**\n * This component renders the requirements list\n * @param {*} props\n */\nexport default function CheckboxLabels(props) {\n    const classes = useStyles();\n    const {\n        api, isMutualSSLEnabled, isCertAvailable, isAppLayerSecurityMandatory, isBusinessPlanAvailable,\n    } = props;\n    const isEndpointAvailable = api.endpointConfig !== null && !api.endpointConfig.implementation_status;\n    const isEnvironmentAvailable = api.gatewayEnvironments.length !== 0;\n    const isContainerMngEnvironmentAvailable = api.deploymentEnvironments\n        && api.deploymentEnvironments.some((env) => env.clusterName.length > 0);\n    const isPrototypedAvailable = (api.endpointConfig !== null\n        && api.endpointConfig.implementation_status === 'prototyped')\n        || api.endpointImplementationType === 'INLINE';\n\n    return (\n        <Paper className={classes.paperCenter}>\n            <Grid xs={12}>\n                <Typography variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.Configuration.requirements'\n                        defaultMessage='Requirements'\n                    />\n                </Typography>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Apis.Details.Configuration.Configuration.requirements.state.transition'\n                        defaultMessage='Requirements for next state transition'\n                    />\n                </Typography>\n            </Grid>\n            {(api.lifeCycleStatus === 'CREATED' || api.lifeCycleStatus === 'PROTOTYPED') && (\n                <>\n                    <Grid xs={12} className={classes.labelsGrid}>\n                        <Typography variant='subtitle2'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.publisher'\n                                defaultMessage='Publish'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid xs={12}>\n                        <Grid xs={12} className={classes.grid}>\n                            {isEndpointAvailable ? (\n                                <CheckIcon className={classes.iconTrue} />\n                            ) : (\n                                <CloseIcon className={classes.iconFalse} />\n                            )}\n                            <Typography>\n                                <FormattedMessage\n                                    id='Apis.Details.LifeCycle.CheckboxLabels.endpoints.provided'\n                                    defaultMessage='Endpoint provided'\n                                />\n                            </Typography>\n                            <Link to={'/apis/' + api.id + '/endpoints'}>\n                                <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                            </Link>\n                        </Grid>\n                        <>\n                            {isAppLayerSecurityMandatory && (\n                                <Grid xs={12} className={classes.grid}>\n                                    {isBusinessPlanAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.business.plans.selected'\n                                            defaultMessage='Business Plan(s) selected'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/subscriptions'}>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            )}\n                            {isMutualSSLEnabled && (\n                                <Grid xs={12} className={classes.grid}>\n                                    {isCertAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.cert.provided'\n                                            defaultMessage='Certificate provided'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/runtime-configuration'}>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            ) }\n                        </>\n                        <Grid xs={12} className={classes.grid}>\n                            {isEnvironmentAvailable || isContainerMngEnvironmentAvailable ? (\n                                <CheckIcon className={classes.iconTrue} />\n                            ) : (\n                                <WarningRoundedIcon className={classes.iconWarn} />\n                            )}\n                            <Typography>\n                                <FormattedMessage\n                                    id='Apis.Details.LifeCycle.CheckboxLabels.gateway.environments.selected'\n                                    defaultMessage='Gateway Environment(s) selected'\n                                />\n                            </Typography>\n                            <Link to={'/apis/' + api.id + '/environments'}>\n                                <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                            </Link>\n                        </Grid>\n                    </Grid>\n                    { api.type !== 'GRAPHQL' && (\n                        <>\n                            <Grid xs={12} className={classes.labelsGrid}>\n                                <Typography variant='subtitle2'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Configuration.Configuration.prototype'\n                                        defaultMessage='Deploy as a Prototype'\n                                    />\n                                </Typography>\n                            </Grid>\n                            <Grid xs={12}>\n                                <Grid xs={12} className={classes.grid}>\n                                    {isPrototypedAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <CloseIcon className={classes.iconFalse} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.Configuration.Configuration.prototype.endpoints.provided'\n                                            defaultMessage='Prototype Endpoint provided'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/endpoints'}>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                                <Grid xs={12} className={classes.grid}>\n                                    {isEnvironmentAvailable || isContainerMngEnvironmentAvailable ? (\n                                        <CheckIcon className={classes.iconTrue} />\n                                    ) : (\n                                        <WarningRoundedIcon className={classes.iconWarn} />\n                                    )}\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.CheckboxLabels.gateway.environments.selected'\n                                            defaultMessage='Gateway Environment(s) selected'\n                                        />\n                                    </Typography>\n                                    <Link to={'/apis/' + api.id + '/environments'}>\n                                        <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </>\n                    )}\n                </>\n            )}\n            {api.lifeCycleStatus === 'PUBLISHED' && (\n                <>\n                    <Grid xs={12} className={classes.labelsGrid}>\n                        <Typography variant='subtitle2'>\n                            <FormattedMessage\n                                id='Apis.Details.Configuration.Configuration.prototype'\n                                defaultMessage='Deploy as a Prototype'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid xs={12}>\n                        <Grid xs={12} className={classes.grid}>\n                            {isPrototypedAvailable ? (\n                                <CheckIcon className={classes.iconTrue} />\n                            ) : (\n                                <CloseIcon className={classes.iconFalse} />\n                            )}\n                            <Typography>\n                                <FormattedMessage\n                                    id='Apis.Details.Configuration.Configuration.prototype.endpoints.provided'\n                                    defaultMessage='Prototype Endpoint provided'\n                                />\n                            </Typography>\n                            <Link to={'/apis/' + api.id + '/endpoints'}>\n                                <LaunchIcon style={{ marginLeft: '2px' }} color='primary' fontSize='small' />\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </>\n            )}\n        </Paper>\n    );\n}\n\nCheckboxLabels.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Box from '@material-ui/core/Box';\nimport PropTypes from 'prop-types';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core/';\nimport Slide from '@material-ui/core/Slide';\n\nconst lifecyclePending = (props) => {\n    const { currentState } = props;\n    const intl = useIntl();\n    const [isOpen, setOpen] = useState(false);\n    const [api, updateAPI] = useAPI();\n    const deleteTask = () => {\n        const { id } = api;\n        api.cleanupPendingTask(id)\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.success',\n                    defaultMessage: 'Lifecycle task deleted successfully',\n                }));\n                updateAPI();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.error',\n                    defaultMessage: 'Error while deleting task',\n                }));\n            });\n    };\n    return (\n        <Paper>\n            <Box display='block' p={2} mt={2}>\n                <Box display='block'>\n                    <Typography variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.pending'\n                            defaultMessage='Pending lifecycle state change.'\n                        />\n                    </Typography>\n                </Box>\n                <Box display='block' mt={0.5}>\n                    <Typography variant='subtitle2'>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.current.state'\n                            defaultMessage='Current state is'\n                        />\n                        {' '}\n                        {currentState}\n                    </Typography>\n                </Box>\n                <Box display='flex' mt={2}>\n                    <Button\n                        size='small'\n                        variant='contained'\n                        color='primary'\n                        onClick={() => setOpen(true)}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.delete.task'\n                            defaultMessage='Delete Task'\n                        />\n                    </Button>\n\n                </Box>\n            </Box>\n            <Dialog open={isOpen} transition={Slide}>\n                <DialogTitle>\n                    <FormattedMessage\n                        id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.title'\n                        defaultMessage='Delete Task'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.text.description'\n                            defaultMessage='The life cycle task will be removed'\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button dense onClick={() => setOpen(false)}>\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='text'\n                        color='primary'\n                        onClick={deleteTask}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.LifeCycle.LifeCycleUpdate.LifecyclePending.dialog,delete'\n                            defaultMessage='Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Paper>\n    );\n};\nlifecyclePending.propTypes = {\n    currentState: PropTypes.string.isRequired,\n};\nexport default lifecyclePending;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport { CircularProgress } from '@material-ui/core';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Banner from 'AppComponents/Shared/Banner';\n\nimport LifeCycleImage from './LifeCycleImage';\nimport CheckboxLabels from './CheckboxLabels';\nimport LifecyclePending from './LifecyclePending';\nimport { API_SECURITY_MUTUAL_SSL_MANDATORY, API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY }\n    from '../Configuration/components/APISecurity/components/apiSecurityConstants';\n\nconst styles = (theme) => ({\n    buttonsWrapper: {\n        marginTop: 40,\n    },\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    paperCenter: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        alignItems: 'left',\n        justifyContent: 'left',\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 400,\n        margin: 0,\n        display: 'inline-flex',\n        lineHeight: '38px',\n    },\n});\n\n/**\n *\n *\n * @class LifeCycleUpdate\n * @extends {Component}\n */\nclass LifeCycleUpdate extends Component {\n    /**\n     * @param {*} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.updateLifeCycleState = this.updateLifeCycleState.bind(this);\n        this.api = new API();\n        this.WORKFLOW_STATUS = {\n            CREATED: 'CREATED',\n            APPROVED: 'APPROVED',\n        };\n        this.state = {\n            newState: null,\n            isUpdating: null,\n            pageError: null,\n        };\n    }\n\n    /**\n     * @param {*} apiUUID api UUID\n     * @param {*} action life cycle action\n     * @memberof LifeCycleUpdate\n     */\n    updateLCStateOfAPI(apiUUID, action) {\n        this.setState({ isUpdating: action });\n        let promisedUpdate;\n        const lifecycleChecklist = this.props.checkList.map((item) => item.value + ':' + item.checked);\n        if (lifecycleChecklist.length > 0) {\n            promisedUpdate = this.api.updateLcState(apiUUID, action, lifecycleChecklist);\n        } else {\n            promisedUpdate = this.api.updateLcState(apiUUID, action);\n        }\n        promisedUpdate\n            .then((response) => {\n            /* TODO: Handle IO erros ~tmkb */\n                this.props.handleUpdate(true);\n                const newState = response.body.lifecycleState.state;\n                const { workflowStatus } = response.body;\n                this.context.updateAPI({ enableStore: true });\n                this.setState({ newState });\n                const { intl } = this.props;\n\n                if (workflowStatus === this.WORKFLOW_STATUS.CREATED) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.LifeCycle.LifeCycleUpdate.success.createStatus',\n                        defaultMessage: 'Lifecycle state change request has been sent',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.LifeCycle.LifeCycleUpdate.success.otherStatus',\n                        defaultMessage: 'Lifecycle state updated successfully',\n                    }));\n                }\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    this.setState({ pageError: error.response.body });\n                } else {\n                    // TODO add i18n ~tmkb\n                    const message = 'Something went wrong while updating the lifecycle';\n                    Alert.error(message);\n                    this.setState({ pageError: error.response.body });\n                }\n                console.error(error);\n            })\n            .finally(() => {\n                this.setState({ isUpdating: null });\n            });\n    }\n\n    /**\n     *\n     *\n     * @param {*} event event\n     * @memberof LifeCycleUpdate\n     */\n    updateLifeCycleState(event) {\n        event.preventDefault();\n        let action = event.currentTarget.getAttribute('data-value');\n        if (action === 'Deploy To Test') {\n            action = 'Deploy as a Prototype';\n        }\n        const {\n            api: { id: apiUUID },\n        } = this.props;\n        this.updateLCStateOfAPI(apiUUID, action);\n    }\n\n    /**\n     * @inheritdoc\n     * @memberof LifeCycleUpdate\n     */\n    render() {\n        const {\n            api, lcState, classes, theme, handleChangeCheckList, checkList, certList,\n        } = this.props;\n        const lifecycleStates = [...lcState.availableTransitions];\n        const { newState, pageError } = this.state;\n        const isWorkflowPending = api.workflowStatus && api.workflowStatus === this.WORKFLOW_STATUS.CREATED;\n        const lcMap = new Map();\n        lcMap.set('Published', 'Publish');\n        lcMap.set('Prototyped', 'Deploy as a prototype');\n        lcMap.set('Deprecated', 'Deprecate');\n        lcMap.set('Blocked', 'Block');\n        lcMap.set('Created', 'Create');\n        lcMap.set('Retired', 'Retire');\n        const isPrototype = api.endpointConfig && api.endpointConfig.implementation_status === 'prototyped';\n        const isMutualSSLEnabled = api.securityScheme.includes(API_SECURITY_MUTUAL_SSL_MANDATORY);\n        const isAppLayerSecurityMandatory = api.securityScheme.includes(\n            API_SECURITY_OAUTH_BASIC_AUTH_API_KEY_MANDATORY,\n        );\n        const isCertAvailable = certList.length !== 0;\n        const isBusinessPlanAvailable = api.policies.length !== 0;\n        const lifecycleButtons = lifecycleStates.map((item) => {\n            const state = { ...item, displayName: item.event };\n            if (state.event === 'Deploy as a Prototype') {\n                let { displayName } = state;\n                if (lcState.state === 'Prototyped') {\n                    displayName = 'Redeploy';\n                }\n                return {\n                    ...state,\n                    displayName,\n                    disabled: !isPrototype || api.endpointConfig == null,\n                };\n            }\n            if (state.event === 'Publish') {\n                let { displayName } = state;\n                if (lcState.state === 'Published') {\n                    displayName = 'Redeploy';\n                }\n                return {\n                    ...state,\n                    displayName,\n                    disabled:\n                        api.endpointConfig === null\n                        || (isMutualSSLEnabled && !isCertAvailable)\n                        || (isAppLayerSecurityMandatory && !isBusinessPlanAvailable)\n                        || api.endpointConfig.implementation_status === 'prototyped',\n                };\n            }\n            return {\n                ...state,\n                disabled: false,\n            };\n        });\n        return (\n            <Grid container>\n                {isWorkflowPending ? (\n                    <Grid item xs={12}>\n                        <LifecyclePending currentState={lcState.state} />\n                    </Grid>\n                ) : (\n                    <Grid item xs={12}>\n                        {theme.custom.lifeCycleImage ? (\n                            <img src={theme.custom.lifeCycleImage} alt='life cycles' />\n                        ) : (\n                            <Grid container spacing={3}>\n                                <Grid item xs={8}>\n                                    <LifeCycleImage lifeCycleStatus={newState || api.lifeCycleStatus} />\n                                </Grid>\n                                {(api.lifeCycleStatus === 'CREATED'\n                                    || api.lifeCycleStatus === 'PROTOTYPED') && (\n                                    <Grid item xs={3}>\n                                        <CheckboxLabels\n                                            api={api}\n                                            isMutualSSLEnabled={isMutualSSLEnabled}\n                                            isAppLayerSecurityMandatory={isAppLayerSecurityMandatory}\n                                            isCertAvailable={isCertAvailable}\n                                            isBusinessPlanAvailable={isBusinessPlanAvailable}\n                                        />\n                                    </Grid>\n                                )}\n                            </Grid>\n                        )}\n                    </Grid>\n                )}\n                <Grid item xs={12}>\n                    {!isWorkflowPending && (\n                        <FormGroup row>\n                            {checkList.map((checkItem, index) => (\n                                <FormControlLabel\n                                    key={checkList[index].value}\n                                    control={(\n                                        <Checkbox\n                                            checked={checkList[index].checked}\n                                            onChange={handleChangeCheckList(index)}\n                                            value={checkList[index].value}\n                                            color='primary'\n                                        />\n                                    )}\n                                    label={checkList[index].label}\n                                />\n                            ))}\n                        </FormGroup>\n                    )}\n                    <ScopeValidation resourcePath={resourcePath.API_CHANGE_LC} resourceMethod={resourceMethod.POST}>\n                        <div className={classes.buttonsWrapper}>\n                            {!isWorkflowPending\n                                && lifecycleButtons.map((transitionState) => {\n                                    /* Skip when transitions available for current state ,\n                            this occurs in states where have allowed re-publishing in prototype and published sates */\n                                    return (\n                                        <Button\n                                            disabled={transitionState.disabled || this.state.isUpdating}\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.stateButton}\n                                            key={transitionState.event}\n                                            data-value={transitionState.event}\n                                            onClick={this.updateLifeCycleState}\n                                        >\n                                            {transitionState.displayName}\n                                            {this.state.isUpdating === transitionState.event && (\n                                                <CircularProgress size={18} />\n                                            )}\n                                        </Button>\n                                    );\n                                })}\n                        </div>\n                    </ScopeValidation>\n                </Grid>\n                {/* Page error banner */}\n                {pageError && (\n                    <Grid item xs={11}>\n                        <Banner\n                            onClose={() => this.setState({ pageError: null })}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n                {/* end of Page error banner */}\n            </Grid>\n        );\n    }\n}\n\nLifeCycleUpdate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    checkList: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    lcState: PropTypes.shape({}).isRequired,\n    handleChangeCheckList: PropTypes.func.isRequired,\n    handleUpdate: PropTypes.func.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nLifeCycleUpdate.contextType = ApiContext;\n\nexport default withStyles(styles, { withTheme: true })(injectIntl(LifeCycleUpdate));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Person from '@material-ui/icons/Person';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = (theme) => ({\n    firstCol: {\n        width: 100,\n    },\n    personIcon: {\n        fontSize: theme.typography.fontSize,\n    },\n    avatar: {\n        width: 25,\n        height: 25,\n    },\n});\nconst LifeCycleHistory = (props) => {\n    const { classes } = props;\n    return (\n        <Paper>\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell className={classes.firstCol}>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.user' defaultMessage='User' />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.LifeCycleHistory.action'\n                                defaultMessage='Action'\n                            />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage id='Apis.Details.LifeCycle.LifeCycleHistory.time' defaultMessage='Time' />\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {props.lcHistory.reverse().map((entry) => entry.previousState && (\n                        <TableRow key={entry.postState}>\n                            <TableCell component='th' scope='row'>\n                                <Avatar className={classes.avatar}>\n                                    <Person className={classes.personIcon} />\n                                </Avatar>\n                                <div>{entry.user}</div>\n                            </TableCell>\n                            <TableCell>\n                                <FormattedMessage\n                                    id='Apis.Details.LifeCycle.LifeCycleHistory.lifecycle.state.history'\n                                    defaultMessage='LC has changed from {previous} to {post}'\n                                    values={{ previous: entry.previousState, post: entry.postState }}\n                                />\n                            </TableCell>\n                            <TableCell>{moment(entry.updatedTime).fromNow()}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </Paper>\n    );\n};\nLifeCycleHistory.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    lcHistory: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\nexport default withStyles(styles)(LifeCycleHistory);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nimport LifeCycleUpdate from './LifeCycleUpdate';\nimport LifeCycleHistory from './LifeCycleHistory';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    historyHead: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n});\n/**\n *\n *\n * @class LifeCycle\n * @extends {Component}\n */\nclass LifeCycle extends Component {\n    /**\n     * Creates an instance of LifeCycle.\n     * @param {Object} props\n     * @memberof LifeCycle\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            lcHistory: null,\n            checkList: [],\n            certList: [],\n        };\n        this.updateData = this.updateData.bind(this);\n        this.handleChangeCheckList = this.handleChangeCheckList.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof LifeCycle\n     */\n    componentDidMount() {\n        this.updateData();\n    }\n\n    handleChangeCheckList = (index) => (event, checked) => {\n        const { checkList } = this.state;\n        checkList[index].checked = checked;\n        this.setState({ checkList });\n    };\n\n    /**\n     *\n     *\n     * @memberof LifeCycle\n     */\n    updateData() {\n        const { api: { id } } = this.props;\n        const promisedAPI = Api.get(id);\n        const promisedLcState = this.api.getLcState(id);\n        const privateJetModeEnabled = false;\n        const promisedLcHistory = this.api.getLcHistory(id);\n        const promisedClientCerts = Api.getAllClientCertificates(id);\n        Promise.all([promisedAPI, promisedLcState, promisedLcHistory, promisedClientCerts])\n            .then((response) => {\n                const api = response[0];\n                const lcState = response[1].body;\n                const lcHistory = response[2].body.list;\n                const clientCerts = response[3].body;\n\n                if (privateJetModeEnabled) {\n                    if (!api.hasOwnGateway) {\n                        const transitions = lcState.availableTransitionBeanList;\n                        const PUBLISHED = 'Published';\n\n                        for (const transition of transitions) {\n                            if (transition.targetState === PUBLISHED && lcState.state !== PUBLISHED) {\n                                const publishInPrivateJetMode = {\n                                    event: 'Publish In Private Jet Mode',\n                                    targetState: 'Published In Private Jet Mode',\n                                };\n                                lcState.availableTransitionBeanList.push(publishInPrivateJetMode);\n                            }\n                        }\n                    }\n                }\n                // Creating checklist\n                const checkList = [];\n                let index = 0;\n                for (const item of lcState.checkItems) {\n                    checkList.push({\n                        index,\n                        label: item.name,\n                        value: item.name,\n                        checked: false,\n                    });\n                    index++;\n                }\n                this.setState({\n                    api,\n                    lcState,\n                    lcHistory,\n                    privateJetModeEnabled,\n                    checkList,\n                    certList: [...clientCerts.certificates],\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof LifeCycle\n     */\n    render() {\n        const { classes } = this.props;\n        const {\n            api, lcState, privateJetModeEnabled, checkList, lcHistory, certList,\n        } = this.state;\n        const apiFromContext = this.context.api;\n        if (apiFromContext && isRestricted(['apim:api_publish'], apiFromContext)) {\n            return (\n                <Grid container direction='row' alignItems='center' spacing={4} style={{ marginTop: 20 }}>\n                    <Grid item>\n                        <Typography variant='body2' color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.LifeCycle.LifeCycle.change.not.allowed'\n                                defaultMessage={\n                                    '* You are not authorized to change the life cycle state of the API'\n                                    + ' due to insufficient permissions'\n                                }\n                            />\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        if (!lcState) {\n            return <Progress />;\n        }\n        return (\n            <>\n                <Typography variant='h4' gutterBottom>\n                    <FormattedMessage id='Apis.Details.LifeCycle.LifeCycle.lifecycle' defaultMessage='Lifecycle' />\n                </Typography>\n                <div className={classes.contentWrapper}>\n                    <Grid container>\n                        <Grid item xs={12}>\n                            <LifeCycleUpdate\n                                handleUpdate={this.updateData}\n                                lcState={lcState}\n                                checkList={checkList}\n                                handleChangeCheckList={this.handleChangeCheckList}\n                                api={api}\n                                privateJetModeEnabled={privateJetModeEnabled}\n                                certList={certList}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            {lcHistory.length > 1 && (\n                                <div>\n                                    <Typography variant='h6' gutterBottom className={classes.historyHead}>\n                                        <FormattedMessage\n                                            id='Apis.Details.LifeCycle.LifeCycle.history'\n                                            defaultMessage='History'\n                                        />\n                                    </Typography>\n                                    <LifeCycleHistory lcHistory={lcHistory} />\n                                </div>\n                            )}\n                        </Grid>\n                    </Grid>\n                </div>\n            </>\n        );\n    }\n}\n\nLifeCycle.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n};\n\nLifeCycle.contextType = ApiContext;\n\nexport default withStyles(styles)(LifeCycle);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport green from '@material-ui/core/colors/green';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Icon from '@material-ui/core/Icon';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dropzone from 'react-dropzone';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIValidation from 'AppData/APIValidation';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = theme => ({\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    group: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    formControlFirst: {\n        display: 'block',\n    },\n    formControl: {\n        display: 'block',\n        marginTop: 20,\n    },\n    formControlLabel: {\n        background: '#efefef',\n        borderRadius: 5,\n        paddingRight: 10,\n        marginLeft: 0,\n        marginTop: 10,\n    },\n    typeTextWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    acceptDrop: {\n        backgroundColor: green[50],\n    },\n    dropzone: {\n        border: '1px dashed ' + theme.palette.primary.main,\n        borderRadius: '5px',\n        cursor: 'pointer',\n        height: 75,\n        padding: `${theme.spacing(2)}px 0px`,\n        position: 'relative',\n        textAlign: 'center',\n        width: '100%',\n        margin: '10px 0',\n    },\n    dropZoneWrapper: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        '& span.material-icons': {\n            color: theme.palette.primary.main,\n        },\n    },\n    uploadedFile: {\n        fontSize: 11,\n    },\n});\n\nclass CreateEditForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            type: 'HOWTO',\n            sourceType: 'INLINE',\n            name: '',\n            summary: '',\n            sourceUrl: '',\n            file: null,\n            disableName: false,\n            otherTypeName: null,\n            nameNotDuplicate: true,\n            nameMaxLengthExceeds: false,\n            invalidUrl: true,\n            nameEmpty: false,\n            summeryEmpty: false,\n            urlEmpty: false,\n            visibility: 'API_LEVEL'\n        };\n    }\n\n    changeType = (e) => {\n        const { value } = e.target;\n        if (value === 'PUBLIC_FORUM' || value === 'SUPPORT_FORUM') {\n            this.setState({ type: 'URL' });\n        }\n        this.setState({ type: value });\n    };\n    changeSource = (e) => {\n        const { value } = e.target;\n        this.validate();\n        this.setState({ sourceType: value });\n    };\n    setDisable = (item) => {\n        const { type } = this.state;\n        if (item === 'INLINE' || item === 'MARKDOWN' || item === 'FILE') {\n            if (type === 'PUBLIC_FORUM' || type === 'SUPPORT_FORUM') {\n                return true;\n            }\n        }\n    };\n    handleChange = name => (e) => {\n        const { value } = e.target;\n        if (name === 'name') {\n            this.setState({ name: value });\n        } else if (name === 'summary') {\n            this.setState({ summary: value });\n        } else if (name === 'sourceUrl') {\n            this.setState({ sourceUrl: value });\n        } else if (name === 'otherTypeName') {\n            this.setState({ otherTypeName: value });\n        }else if (name === 'visibility') {\n            this.setState({ visibility: value });\n        }\n    };\n\n    onDrop = (acceptedFile) => {\n        this.setState({ file: acceptedFile });\n    };\n\n    addDocument = (apiId) => {\n        const { apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName, visibility,\n        } = this.state;\n        const docPromise = restAPI.addDocument(apiId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility,\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    updateDocument = (apiId) => {\n        const { apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        const {\n            name, type, summary, sourceType, sourceUrl, file, otherTypeName, visibility,\n        } = this.state;\n        const { docId } = this.props;\n        const docPromise = restAPI.updateDocument(apiId, docId, {\n            name,\n            type,\n            summary,\n            sourceType,\n            visibility,\n            sourceUrl,\n            otherTypeName,\n            inlineContent: '',\n        });\n        return { docPromise, file };\n    };\n    getDocument() {\n        const { apiId, docId, apiType } = this.props;\n        const restAPI = apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n        if (docId && apiId) {\n            const docPromise = restAPI.getDocument(apiId, docId);\n            docPromise\n                .then((doc) => {\n                    const {\n                        name, type, summary, sourceType, sourceUrl, otherTypeName, visibility,\n                    } = doc.body;\n                    this.setState({\n                        name,\n                        type,\n                        summary,\n                        sourceType,\n                        sourceUrl,\n                        otherTypeName,\n                        visibility,\n                    });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    }\n                });\n        }\n    }\n    validate(field=null, value=null) {\n        let invalidUrl = false;\n        if (field === 'url') {\n            invalidUrl = value ? APIValidation.url.validate(value).error : false;\n            this.setState({ invalidUrl });\n            if (value === '') {\n                this.setState({ urlEmpty: true });\n            } else {\n                this.setState({ urlEmpty: false });\n            }\n        } else if (field === 'name') {\n            if (value) {\n                const promise = APIValidation.apiDocument.validate({ id: this.props.apiId, name: value });\n                promise\n                    .then((isDocumentPresent) => {\n                        this.setState({ nameNotDuplicate: !isDocumentPresent });\n                    })\n                    .catch((error) => {\n                        if (error.status === 404) {\n                            this.setState({ nameNotDuplicate: true });\n                        } else {\n                            Alert.error('Error when validating document name');\n                        }\n                    });\n            } else {\n                this.setState({ nameNotDuplicate: true });\n            }\n\n            if (value === '') {\n                this.setState({ nameEmpty: true, nameMaxLengthExceeds: false });\n            } else if (value && value.length > 60) {\n                this.setState({ nameEmpty: false, nameMaxLengthExceeds: true });\n            } else {\n                this.setState({ nameEmpty: false, nameMaxLengthExceeds: false });\n            }\n        } else if (field === 'summary') {\n            if (value === '') {\n                this.setState({ summeryEmpty: true });\n            } else {\n                this.setState({ summeryEmpty: false });\n            }\n        }\n    }\n    componentDidMount() {\n        this.getDocument();\n        const { apiId, docId } = this.props;\n        if (apiId && docId) {\n            this.setState({ disableName: true });\n        }\n    }\n    showNameHelper() {\n        const { nameEmpty, nameNotDuplicate, nameMaxLengthExceeds } = this.state;\n        if (nameMaxLengthExceeds) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.exceeds.document.name.length.helper.text'\n                    defaultMessage='Document name exceeds the maximum length of 60 characters'\n                />\n            );\n        } else if (nameNotDuplicate && !nameEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.document.name.helper.text'\n                    defaultMessage='Provide the name for the document'\n                />\n            );\n        } else if (nameEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.empty.document.name.helper.text'\n                    defaultMessage='Document name cannot be empty'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.duplicate.document.name.helper.text'\n                    defaultMessage='Duplicate document name'\n                />\n            );\n        }\n    }\n    getUrlHelperText() {\n        const { invalidUrl, urlEmpty} = this.state;\n\n        if (invalidUrl) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text.error.invalid'\n                    defaultMessage='Enter a valid URL to the source'\n                />\n            );\n        } else if (urlEmpty) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text.error.empty'\n                    defaultMessage='URL Field cannot be empty'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Documents.CreateEditForm.source.url.helper.text'\n                    defaultMessage='Provide the URL to the source'\n                />\n            );\n        }\n    }\n    render() {\n        const {\n            name,\n            type,\n            summary,\n            sourceType,\n            sourceUrl,\n            file,\n            disableName,\n            otherTypeName,\n            invalidUrl,\n            nameNotDuplicate,\n            nameMaxLengthExceeds,\n            nameEmpty,\n            summeryEmpty,\n            urlEmpty,\n            visibility\n        } = this.state;\n        const { classes, setSaveDisabled } = this.props;\n        const { settings: settingsContext } = this.context;\n        if (\n            name !== '' &&\n            summary !== '' &&\n            nameNotDuplicate &&\n            !nameMaxLengthExceeds &&\n            ((!invalidUrl && sourceUrl !== '') || sourceType !== 'URL')\n        ) {\n            setSaveDisabled(false);\n        } else {\n            setSaveDisabled(true);\n        }\n        return (\n            <div className={classes.addNewOther}>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                this.validate('name', value);\n                            },\n                        }}\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.name'\n                                defaultMessage='Name *'\n                            />\n                        }\n                        helperText={this.showNameHelper()}\n                        type='text'\n                        variant='outlined'\n                        name='name'\n                        margin='normal'\n                        value={name}\n                        onChange={this.handleChange('name')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        autoFocus\n                        disabled={disableName}\n                        error={!nameNotDuplicate || nameEmpty || nameMaxLengthExceeds}\n                    />\n                </FormControl>\n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                    <TextField\n                        fullWidth\n                        multiline\n                        InputProps={{\n                            onBlur: ({ target: { value } }) => {\n                                this.validate('summary', value);\n                            },\n                            onKeyUp: ({ target: { value } }) => {\n                                this.validate('summary', value);\n                            },\n                        }}\n                        margin='normal'\n                        variant='outlined'\n                        label={\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary'\n                                defaultMessage='Summary *'\n                            />\n                        }\n                        helperText={\n                            summeryEmpty ? (\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.summary.error.empty'\n                                    defaultMessage='Document summary can not be empty'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.summary.helper.text'\n                                    defaultMessage='Provide a brief description for the document'\n                                />\n                            )\n                        }\n                        type='text'\n                        name='summary'\n                        margin='normal'\n                        value={summary}\n                        onChange={this.handleChange('summary')}\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        error={summeryEmpty}\n                    />\n                </FormControl>\n                {settingsContext.docVisibilityEnabled && \n                <FormControl margin='normal' className={classes.FormControlOdd}>\n                <TextField\n                    fullWidth\n                    id='docVisibility-selector'\n                    select\n                    variant='outlined'\n                    label={\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility'\n                            defaultMessage='Document Visibility'\n                        />\n                    }\n                    helperText={\n                        summeryEmpty ? (\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary.error.empty'\n                                defaultMessage='Document summary can not be empty'\n                            />\n                        ) : (\n                            <FormattedMessage\n                                id='Apis.Details.Documents.CreateEditForm.document.summary.helper.text'\n                                defaultMessage='Provide a brief description for the document'\n                            />\n                        )\n                    }\n                    type='text'\n                    name='visibility'\n                    margin='normal'\n                    value={visibility}\n                    onChange={this.handleChange('visibility')}\n                    error={summeryEmpty}\n                >\n                    <MenuItem value='API_LEVEL'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility.dropdown.public'\n                            defaultMessage='Same as API Visibility'\n                        />\n                    </MenuItem>\n                    <MenuItem value='PRIVATE'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility.dropdown.private'\n                            defaultMessage='Private'\n                        />\n                    </MenuItem>\n                    <MenuItem value='OWNER_ONLY'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.docVisibility.dropdown.ownerOnly'\n                            defaultMessage='Owner Only'\n                        />\n                    </MenuItem>\n                </TextField>\n            </FormControl>}\n                <FormControl component='fieldset' className={classes.formControlFirst}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.CreateEditForm.document.create.type'\n                            defaultMessage='Type'\n                        />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Type'\n                        name='type'\n                        className={classes.group}\n                        value={type}\n                        onChange={this.changeType}\n                    >\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='HOWTO'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>help_outline</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.how.to'\n                                            defaultMessage='How To'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SAMPLES'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>code</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.sample'\n                                            defaultMessage='Sample &amp; SDK'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='PUBLIC_FORUM'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.public.forum'\n                                            defaultMessage='Public Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='SUPPORT_FORUM'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>forum</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.Documents.CreateEditForm.document.create.type.support.' +\n                                                'forum'\n                                            }\n                                            defaultMessage='Support Forum'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                        <FormControlLabel\n                            className={classes.formControlLabel}\n                            value='OTHER'\n                            control={<Radio />}\n                            label={\n                                <div className={classes.typeTextWrapper}>\n                                    <Icon>video_label</Icon>\n                                    <div>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.CreateEditForm.document.create.type.other'\n                                            defaultMessage='Other'\n                                        />\n                                    </div>\n                                </div>\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {type === 'OTHER' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            label={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category'\n                                    }\n                                    defaultMessage='Other Document Type *'\n                                />\n                            }\n                            helperText={\n                                <FormattedMessage\n                                    id={\n                                        'Apis.Details.Documents.CreateEditForm.document.create.type.other.document.' +\n                                        'category.helper.text'\n                                    }\n                                    defaultMessage='Provide the document type'\n                                />\n                            }\n                            type='text'\n                            name='otherTypeName'\n                            margin='normal'\n                            value={otherTypeName}\n                            variant='outlined'\n                            onChange={this.handleChange('otherTypeName')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                        />\n                    </FormControl>\n                )}\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormLabel component='legend'>\n                        <FormattedMessage id='Apis.Details.Documents.CreateEditForm.source' defaultMessage='Source' />\n                    </FormLabel>\n                    <RadioGroup\n                        aria-label='Source'\n                        name='sourceType'\n                        className={classes.group}\n                        value={sourceType}\n                        onChange={this.changeSource}\n                    >\n                        <FormControlLabel\n                            disabled={this.setDisable('INLINE')}\n                            value='INLINE'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.inline'\n                                    defaultMessage='Inline'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('MARKDOWN')}\n                            value='MARKDOWN'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.markdown'\n                                    defaultMessage='Markdown'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('URL')}\n                            value='URL'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                        />\n                        <FormControlLabel\n                            disabled={this.setDisable('FILE')}\n                            value='FILE'\n                            control={<Radio />}\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.file'\n                                    defaultMessage='File'\n                                />\n                            }\n                        />\n                    </RadioGroup>\n                </FormControl>\n                {sourceType === 'URL' && (\n                    <FormControl margin='normal' className={classes.FormControlOdd}>\n                        <TextField\n                            fullWidth\n                            InputProps={{\n                                onBlur: ({ target: { value } }) => {\n                                    this.validate('url', value);\n                                },\n                                onKeyUp: ({ target: { value } }) => {\n                                    this.validate('url', value);\n                                },\n                            }}\n                            margin='normal'\n                            label={\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.source.url.url'\n                                    defaultMessage='URL'\n                                />\n                            }\n                            helperText={this.getUrlHelperText()}\n                            type='text'\n                            name='sourceUrl'\n                            margin='normal'\n                            value={sourceUrl}\n                            onChange={this.handleChange('sourceUrl')}\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            error={invalidUrl || urlEmpty}\n                            variant='outlined'\n                        />\n                    </FormControl>\n                )}\n                {sourceType === 'FILE' && (\n                    <Dropzone\n                        multiple={false}\n                        accept='application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/pdf, text/plain'\n                        className={classes.dropzone}\n                        activeClassName={classes.acceptDrop}\n                        rejectClassName={classes.rejectDrop}\n                        onDrop={(dropFile) => {\n                            this.onDrop(dropFile);\n                        }}\n                    >\n                        {({ getRootProps, getInputProps }) => (\n                            <div {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <div className={classes.dropZoneWrapper}>\n                                    <Icon className={classes.dropIcon} style={{ fontSize: 56 }}>\n                                        cloud_upload\n                                    </Icon>\n                                    {file && file.length > 0 && (\n                                        <div className={classes.uploadedFile}>\n                                            <Icon>file</Icon> {file[0].name}\n                                        </div>\n                                    )}\n                                </div>\n                            </div>\n                        )}\n                    </Dropzone>\n                )}\n                {(sourceType === 'INLINE' || sourceType === 'MARKDOWN') && (\n                    <InlineMessage type='info' height={60}>\n                        <div className={classes.contentWrapper}>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.CreateEditForm.document.content.info'\n                                    defaultMessage={\n                                        'Please save the document. The content can be edited in the next ' + 'step.'\n                                    }\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                )}\n            </div>\n        );\n    }\n}\nCreateEditForm.contextType = AppContext;\nCreateEditForm.defaultProps = {\n    apiId: null,\n    docId: null,\n};\nCreateEditForm.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}),\n    apiId: PropTypes.shape({}),\n    saveDisabled: PropTypes.bool.isRequired,\n    setSaveDisabled: PropTypes.func.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(CreateEditForm));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage } from 'react-intl';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nfunction GoToEdit(props) {\n    const { doc } = props;\n    const [open, setOpen] = React.useState(true);\n    const { api, isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    let docContentEditPath = null;\n    if (doc && doc.body && doc.body.documentId) {\n        docContentEditPath = `/${urlPrefix}/${api.id}/documents/${doc.body.documentId}/edit-content`;\n    }\n\n    let displayAddContent;\n    if (doc.body.sourceType === 'INLINE'  || doc.body.sourceType === 'MARKDOWN') {\n        displayAddContent = true;\n    } else {\n        displayAddContent= false;\n    }\n\n    console.info('printing doc', doc);\n    function handleClose() {\n        setOpen(false);\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={handleClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                {' '}\n                <FormattedMessage\n                    id='Apis.Details.Documents.GoToEdit.title'\n                    defaultMessage='Document Created Successfully'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {displayAddContent ? (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.GoToEdit.description.content'\n                        defaultMessage= 'You can add content to the document or go back to the document listing page.'\n                    />\n                    ) : (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.GoToEdit.description.file'\n                        defaultMessage= {'You can go back to the document listing page and upload' + \n                        ' the file by editing the document.'}\n                    />\n                    )}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                {displayAddContent && (<Link\n                    to={{\n                        pathname: docContentEditPath,\n                        state: { doc: doc.body },\n                    }}\n                >\n                    <Button color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.add.content'\n                            defaultMessage='Add Content'\n                        />\n                    </Button>\n                </Link>)}\n                <Link to={listingPath}>\n                    <Button color='primary' autoFocus>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.GoToEdit.back.to.listing'\n                            defaultMessage='Back to Listing'\n                        />\n                    </Button>\n                </Link>\n            </DialogActions>\n        </Dialog>\n    );\n}\nGoToEdit.propTypes = {\n    doc: PropTypes.shape({}).isRequired,\n};\nexport default GoToEdit;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useRef, useContext, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport CreateEditForm from './CreateEditForm';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport GoToEdit from './GoToEdit';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(3),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n});\n\nfunction Create(props) {\n    const { api, isAPIProduct } = useContext(APIContext);\n    const [newDoc, setNewDoc] = useState(null);\n    const [saveDisabled, setSaveDisabled] = useState(true);\n    const { classes, intl, history } = props;\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    const restAPI = api.apiType === Api.CONSTS.APIProduct ? new APIProduct() : new Api();\n    let createEditForm = useRef(null);\n\n    const addDocument = (apiId) => {\n        const promiseWrapper = createEditForm.addDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Create.successful.file.upload.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            history.push(listingPath);\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Create.markdown.editor.upload.error',\n                                    defaultMessage: 'Error uploading the file',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${doc.body.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.success',\n                        defaultMessage: ' added successfully.',\n                    })}`);\n                    setNewDoc(doc);\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Create.markdown.editor.add.error',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n    return (\n        <React.Fragment>\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={listingPath} className={classes.titleLink}>\n                                    <Typography variant='h5' align='left' className={classes.mainTitle}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.heading'\n                                            defaultMessage='Documents'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h5'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Create.title'\n                                        defaultMessage='Add New Document'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0}>\n                                <CreateEditForm\n                                    innerRef={(node) => {\n                                        createEditForm = node;\n                                    }}\n                                    apiType={api.apiType}\n                                    apiId={api.id}\n                                    saveDisabled={saveDisabled}\n                                    setSaveDisabled={setSaveDisabled}\n                                />\n                                <Divider />\n\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={() => addDocument(api.id)}\n                                        disabled={saveDisabled}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.button'\n                                            defaultMessage='Add Document'\n                                        />\n                                    </Button>\n                                    <Button className={classes.button} onClick={() => history.push(listingPath)}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Documents.Create.markdown.editor.add.document.cancel.button'\n                                            defaultMessage='Cancel'\n                                        />\n                                    </Button>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            {newDoc && <GoToEdit doc={newDoc} />}\n        </React.Fragment>\n    );\n}\n\nCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.func.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(Create)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext, Suspense, lazy } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"MDMonacoEditor\" */));\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"MDReactMarkdown\" */));\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    markdownViewWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nfunction MarkdownEditor(props) {\n    const { intl, showAtOnce, history } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [open, setOpen] = useState(showAtOnce);\n    const [code, setCode] = useState(\n        intl.formatMessage({\n            id: 'documents.markdown.editor.default',\n            defaultMessage: '#Enter your markdown content',\n        }),\n    );\n    const toggleOpen = () => {\n        if (!open) updateDoc();\n        if (open && showAtOnce) {\n            const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n            const listingPath = `/${urlPrefix}/${api.id}/documents`;\n            history.push(listingPath);\n        }\n        setOpen(!open);\n    };\n    const updateCode = newCode => {\n        setCode(newCode);\n    };\n    const editorDidMount = (editor, monaco) => {\n        editor.focus();\n    };\n    const addContentToDoc = () => {\n        const restAPI = new Api();\n        setIsUpdating(true);\n        const docPromise = restAPI.addInlineContentToDocument(api.id, props.docId, 'MARKDOWN', code);\n        docPromise\n            .then(doc => {\n                Alert.info(\n                    `${doc.obj.name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.MarkdownEditor.update.success.message',\n                        defaultMessage: 'updated successfully.',\n                    })}`,\n                );\n                toggleOpen();\n                setIsUpdating(false);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n                setIsUpdating(false);\n            });\n    };\n    const updateDoc = () => {\n        const restAPI = new Api();\n\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, props.docId);\n        docPromise\n            .then(doc => {\n                setCode(doc.text);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { classes } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen}>\n                <Icon>code</Icon>\n                <FormattedMessage\n                    id=\"Apis.Details.Documents.MarkdownEditor.edit.content\"\n                    defaultMessage=\"Edit Content\"\n                />\n            </Button>\n            <Dialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color=\"inherit\" onClick={toggleOpen} aria-label=\"Close\">\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant=\"h4\" className={classes.docName}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.edit.content.of\"\n                            defaultMessage=\"Edit Content of\"\n                        />{' '}\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant=\"contained\" disabled={isUpdating} color=\"primary\" onClick={addContentToDoc}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.update.content.button\"\n                            defaultMessage=\"Update Content\"\n                        />\n                        {isUpdating && <CircularProgress size={24} />}\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id=\"Apis.Details.Documents.MarkdownEditor.cancel.button\"\n                            defaultMessage=\"Cancel\"\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <Grid container spacing={7}>\n                        <Grid item xs={6}>\n                            <Suspense fallback={<CircularProgress />}>\n                                <MonacoEditor\n                                    width=\"100%\"\n                                    height=\"100vh\"\n                                    language=\"markdown\"\n                                    theme=\"vs-dark\"\n                                    value={code}\n                                    options={{ selectOnLineNumbers: true }}\n                                    onChange={updateCode}\n                                    editorDidMount={editorDidMount}\n                                />\n                            </Suspense>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className={classes.markdownViewWrapper}>\n                                <Suspense fallback={<CircularProgress />}>\n                                    <ReactMarkdown source={code} />\n                                </Suspense>\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nMarkdownEditor.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(MarkdownEditor)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useState, useRef, useContext} from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from 'AppComponents/Shared/Alert';\nimport CreateEditForm from './CreateEditForm';\nimport Api from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction Edit(props) {\n    const restAPI = new Api();\n\n    const { intl, apiType } = props;\n    const [open, setOpen] = useState(false);\n    const [saveDisabled, setSaveDisabled] = useState(false);\n    let createEditForm = useRef(null);\n    const { api } = useContext(APIContext);\n\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n\n    const updateDoc = () => {\n        const { apiId } = props;\n        const promiseWrapper = createEditForm.updateDocument(apiId);\n        promiseWrapper.docPromise\n            .then((doc) => {\n                const { documentId, name } = doc.body;\n                if (promiseWrapper.file && documentId) {\n                    const filePromise = restAPI.addFileToDocument(apiId, documentId, promiseWrapper.file[0]);\n                    filePromise\n                        .then((doc) => {\n                            Alert.info(`${name} ${intl.formatMessage({\n                                id: 'Apis.Details.Documents.Edit.markdown.editor.upload.success.message',\n                                defaultMessage: 'File uploaded successfully.',\n                            })}`);\n                            props.getDocumentsList();\n                            toggleOpen();\n                        })\n                        .catch((error) => {\n                            if (process.env.NODE_ENV !== 'production') {\n                                console.log(error);\n                                Alert.error(intl.formatMessage({\n                                    id: 'Apis.Details.Documents.Edit.markdown.editor.upload.error.message',\n                                    defaultMessage: 'Error uploading the file.',\n                                }));\n                            }\n                        });\n                } else {\n                    Alert.info(`${name} ${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.success.message',\n                        defaultMessage: 'Updated successfully.',\n                    })}`);\n                    props.getDocumentsList();\n                    toggleOpen();\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Documents.Edit.markdown.editor.update.error.message',\n                        defaultMessage: 'Error adding the document',\n                    }));\n                }\n            });\n    };\n\n    const { classes, docId, apiId } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}>\n                <Icon>edit</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Edit.documents.text.editor.edit'\n                    defaultMessage='Edit Meta Data'\n                />\n            </Button>\n            <Dialog open={open} onClose={toggleOpen} TransitionComponent={Transition} fullScreen>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant='h4' className={classes.docName}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.edit.content'\n                            defaultMessage='Edit '\n                        />\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant='contained' color='primary' onClick={updateDoc} disabled={saveDisabled}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.update.content'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Edit.documents.text.editor.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <CreateEditForm\n                        innerRef={(node) => {\n                            createEditForm = node;\n                        }}\n                        docId={docId}\n                        apiId={apiId}\n                        apiType={apiType}\n                        saveDisabled={saveDisabled}\n                        setSaveDisabled={setSaveDisabled}\n                    />\n                </div>\n            </Dialog>\n        </div>\n    );\n}\nEdit.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Edit));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nfunction Delete(props) {\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    const { api } = useContext(APIContext);\n\n    const runAction = (action) => {\n        if (action === 'yes') {\n            deleteDoc();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteDoc = () => {\n        const {\n            apiId, docId, getDocumentsList, apiType,\n        } = props;\n        const restApi = apiType === API.CONSTS.APIProduct ? new APIProduct() : new API();\n        const docPromise = restApi.deleteDocument(apiId, docId);\n        docPromise\n            .then(() => {\n                Alert.info(`${intl.formatMessage({\n                    id: 'Apis.Details.Documents.Delete.document.delete.successfully',\n                    defaultMessage: 'deleted successfully.',\n                })}`);\n                setOpen(!open);\n                getDocumentsList();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { apiName } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}>\n                <Icon>delete_forever</Icon>\n                <FormattedMessage id='Apis.Details.Documents.Delete.document.delete' defaultMessage='Delete' />\n            </Button>\n            <Dialog\n                open={open}\n                onClose={toggleOpen}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'\n            >\n                <DialogTitle id='alert-dialog-title'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm.title'\n                        defaultMessage='Delete Document'\n                    />\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='alert-dialog-description'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.confirm.body'\n                            defaultMessage={\n                                'Selected document will be deleted from the API.' +\n                                'You will not be able to undo this action.'\n                            }\n                        />\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => runAction('no')} color='default'>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button onClick={() => runAction('yes')} color='primary' autoFocus>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Delete.document.listing.delete.yes'\n                            defaultMessage='Yes. Delete'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nDelete.propTypes = {\n    apiId: PropTypes.shape({}).isRequired,\n    apiType: PropTypes.string.isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    getDocumentsList: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(Delete);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\n\nfunction DeleteMultiple(props) {\n    const {\n        intl, docsToDelete, docs, getDocumentsList,\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n    const restApi = isAPIProduct ? new APIProduct() : new API();\n\n    const [open, setOpen] = useState(true);\n\n    const runAction = (action) => {\n        if (action === 'yes') {\n            deleteDocs();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteDocs = () => {\n        const docPromises = [];\n\n        docsToDelete.data.map((docIndexObj) => {\n            const doc = docs[docIndexObj.index];\n            docPromises.push(restApi.deleteDocument(api.id, doc.documentId));\n        });\n        Promise.all(docPromises)\n            .then((values) => {\n                console.log(values);\n                Alert.info(`${intl.formatMessage({\n                    id: 'Apis.Details.Documents.Delete.document.delete.successfully',\n                    defaultMessage: 'deleted successfully.',\n                })}`);\n                setOpen(!open);\n                getDocumentsList();\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(`${intl.formatMessage({\n                        id: 'Apis.Details.Documents.Delete.document.delete.error',\n                        defaultMessage: 'Error while deleting documents!',\n                    })}`);\n                }\n            });\n    };\n    useEffect(() => {\n        setOpen(true);\n    }, [docsToDelete]);\n\n    return (\n        <Dialog\n            open={open}\n            onClose={toggleOpen}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.listing.delete.confirm.title'\n                    defaultMessage='Delete Selected Documents'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    <strong>{api.name}</strong>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm.body'\n                        defaultMessage={\n                            'Selected documents will be deleted from the API.' +\n                            ' You will not be able to undo this action.'\n                        }\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => runAction('no')} color='default'>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button onClick={() => runAction('yes')} color='primary' autoFocus>\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.yes'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\nDeleteMultiple.propTypes = {\n    docs: PropTypes.instanceOf(Array).isRequired,\n    getDocumentsList: PropTypes.func.isRequired,\n    docsToDelete: PropTypes.instanceOf(Array).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(DeleteMultiple);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {useState, useEffect} from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport Utils from 'AppData/Utils';\n\nfunction Download(props) {\n    const { intl } = props;\n\n    const { docId, apiId } = props;\n    const [isFileAvailable, setIsFileAvailable] = useState(false);\n    const [isSuccessful, setIsSuccessful] = useState(false);\n\n    useEffect(() => {\n        const api = new Api();\n        const promised_get_content = api.getFileForDocument(apiId, docId);\n        promised_get_content\n            .then((done) => {\n                setIsSuccessful(true);\n                setIsFileAvailable(true);\n            })\n            .catch((error) => {\n                setIsSuccessful(true);\n                setIsFileAvailable(false);\n            });\n    }, []);\n    const handleDownload = () => {\n        const api = new Api();\n        const promised_get_content = api.getFileForDocument(apiId, docId);\n        promised_get_content\n            .then((response) => {\n                Utils.forceDownload(response);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(intl.formatMessage({\n                        id:'Apis.Details.Documents.Download.documents.markdown.editor.download.error',\n                        defaultMessage: 'Error downloading the file',\n                    }));\n                }\n            });\n    };\n\n    return (\n        isSuccessful &&\n        <Button onClick={handleDownload} disabled={!isFileAvailable}>\n            <Icon>arrow_downward</Icon>\n            <FormattedMessage\n                id='Apis.Details.Documents.Download.documents.listing.download'\n                defaultMessage='Download'\n            />\n        </Button>\n    );\n}\nDownload.propTypes = {\n    apiId: PropTypes.shape({}).isRequired,\n    docId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(Download);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport API from 'AppData/api.js';\nimport APIProduct from 'AppData/APIProduct';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport Create from './Create';\nimport MarkdownEditor from './MarkdownEditor';\nimport Edit from './Edit';\nimport Delete from './Delete';\nimport DeleteMultiple from './DeleteMultiple';\nimport Download from './Download';\n\nconst TextEditor = lazy(() => import('./TextEditor' /* webpackChunkName: \"ListingTextEditor\" */));\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    mainTitle: {\n        paddingRight: 10,\n    },\n    actionTable: {\n        '& td': {\n            width: 50,\n        },\n        '& td:first-child': {\n            width: 130,\n        },\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n});\nfunction LinkGenerator(props) {\n    return props.apiType === 'APIProduct' ? (\n        <Link to={'/api-products/' + props.apiId + '/documents/' + props.docId + '/details'}>{props.docName}</Link>\n    ) : (\n        <Link to={'/apis/' + props.apiId + '/documents/' + props.docId + '/details'}>{props.docName}</Link>\n    );\n}\nclass Listing extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            docs: null,\n            showAddDocs: false,\n            docsToDelete: null,\n        };\n        this.apiId = props.api.id;\n        this.toggleAddDocs = this.toggleAddDocs.bind(this);\n        this.getDocumentsList = this.getDocumentsList.bind(this);\n    }\n    /**\n     * @inheritDoc\n     * @memberof Listing\n     */\n    componentDidMount() {\n        this.getDocumentsList();\n    }\n\n    /*\n     Get the document list attached to current API and set it to the state\n     */\n    getDocumentsList() {\n        const { api, intl } = this.props;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            const apiProduct = new APIProduct();\n            const docs = apiProduct.getDocuments(api.id);\n            docs.then((response) => {\n                this.setState({ docs: response.obj.list });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message.api.product',\n                    defaultMessage: 'Error in fetching documents list of the API Product',\n                }));\n            });\n        } else {\n            const newApi = new API();\n            const docs = newApi.getDocuments(this.props.api.id);\n            docs.then((response) => {\n                this.setState({ docs: response.obj.list });\n            }).catch((errorResponse) => {\n                const errorData = JSON.parse(errorResponse.message);\n                const messageTxt =\n                    'Error[' + errorData.code + ']: ' + errorData.description + ' | ' + errorData.message + '.';\n                console.error(messageTxt);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Documents.Listing.documents.listing.fetching.error.message',\n                    defaultMessage: 'Error in fetching documents list of the API',\n                }));\n            });\n        }\n    }\n    toggleAddDocs() {\n        this.setState((oldState) => {\n            return { showAddDocs: !oldState.showAddDocs };\n        });\n    }\n    setFoo() {\n        this.setState({ foo: 'test' });\n    }\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const { docs, showAddDocs, docsToDelete } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/documents/create`;\n        const showActionsColumn = isRestricted(['apim:api_publish', 'apim:api_create'], api) ? 'excluded' : true;\n        const options = {\n            title: false,\n            filter: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n            search: false,\n            onRowsDelete: (rowData, rowMeta, that = this) => {\n                that.setState({ docsToDelete: rowData });\n                return false;\n            },\n        };\n        const columns = [\n            {\n                name: 'documentId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            return (\n                                <LinkGenerator\n                                    docName={docName}\n                                    docId={docId}\n                                    apiId={this.apiId}\n                                    apiType={api.apiType}\n                                />\n                            );\n                        }\n                        return null;\n                    },\n                    filter: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.column.header.name'\n                            defaultMessage='name'\n                        />\n                    ),\n                },\n            },\n            {\n                name: 'sourceType',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.source.type'\n                        defaultMessage='sourceType'\n                    />\n                ),\n            },\n            {\n                name: 'type',\n                label: (\n                    <FormattedMessage id='Apis.Details.Documents.Listing.column.header.type' defaultMessage='type' />\n                ),\n            },\n            {\n                name: 'sourceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'action',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Listing.column.header.action'\n                        defaultMessage='action'\n                    />\n                ),\n                options: {\n                    display: showActionsColumn,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const docName = tableMeta.rowData[1];\n                            const docId = tableMeta.rowData[0];\n                            const sourceType = tableMeta.rowData[2];\n                            const sourceUrl = tableMeta.rowData[4];\n                            if (sourceType === 'MARKDOWN') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <MarkdownEditor docName={docName} docId={docId} apiId={this.apiId} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'INLINE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Suspense\n                                                    fallback={\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Documents.Listing.loading'\n                                                            defaultMessage='Loading...'\n                                                        />\n                                                    }\n                                                >\n                                                    <TextEditor\n                                                        docName={docName}\n                                                        docId={docId}\n                                                        apiId={this.apiId}\n                                                        apiType={api.apiType}\n                                                    />\n                                                </Suspense>\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'URL') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <a href={sourceUrl}>\n                                                <Button>\n                                                    <Icon>open_in_new</Icon>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Documents.Listing.documents.open'\n                                                        defaultMessage='Open'\n                                                    />\n                                                </Button>\n                                               </a>  \n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else if (sourceType === 'FILE') {\n                                return (\n                                    <table className={classes.actionTable}>\n                                        <tr>\n                                            <td>\n                                                <Download docId={docId} apiId={this.apiId} />\n                                            </td>\n                                            <td>\n                                                <Edit\n                                                    apiType={api.apiType}\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    api\n                                                />\n                                            </td>\n                                            <td>\n                                                <Delete\n                                                    docName={docName}\n                                                    docId={docId}\n                                                    apiId={this.apiId}\n                                                    getDocumentsList={this.getDocumentsList}\n                                                    apiType={api.apiType}\n                                                    api\n                                                />\n                                            </td>\n                                        </tr>\n                                    </table>\n                                );\n                            } else {\n                                return <span />;\n                            }\n                        }\n                        return null;\n                    },\n                    filter: false,\n                },\n            },\n        ];\n\n        return (\n            <React.Fragment>\n                {docsToDelete && (\n                    <DeleteMultiple getDocumentsList={this.getDocumentsList} docsToDelete={docsToDelete} docs={docs} />\n                )}\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.Listing.documents.listing.title'\n                            defaultMessage='Documents'\n                        />\n                    </Typography>\n                    {docs && docs.length > 0 && (\n                        <Link to={!isRestricted(['apim:api_create', 'apim:api_publish'], api) && url}>\n                            <Button\n                                size='small'\n                                className={classes.button}\n                                disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                            >\n                                <AddCircle className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.Documents.Listing.add.new.document.button'\n                                    defaultMessage='Add New Document'\n                                />\n                            </Button>\n                        </Link>\n                    )}\n                </div>\n                <div>\n                    {showAddDocs && (\n                        <Create\n                            toggleAddDocs={this.toggleAddDocs}\n                            getDocumentsList={this.getDocumentsList}\n                            apiType={api.apiType}\n                        />\n                    )}\n\n                    {docs && docs.length > 0 ? (\n                        <MUIDataTable title='' data={docs} columns={columns} options={options} />\n                    ) : (\n                        <InlineMessage type='info' height={140}>\n                            <div className={classes.contentWrapper}>\n                                <Typography variant='h5' component='h3' className={classes.head}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.title'\n                                        defaultMessage='Create Documents'\n                                    />\n                                </Typography>\n                                {api.apiType === API.CONSTS.APIProduct\n                                    ? \n                                <Typography component='p' className={classes.content}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.APIProduct.add.new.msg.content'\n                                        defaultMessage={\n                                            'You can add different types of documents to an API.' +\n                                            ' Proper documentation helps API publishers to market their ' +\n                                            ' APIs better and sustain competition. '\n                                        }\n                                    />\n                                </Typography>\n                                    : \n                                <Typography component='p' className={classes.content}>\n                                    <FormattedMessage\n                                        id='Apis.Details.Documents.Listing.add.new.msg.content'\n                                        defaultMessage={\n                                            'You can add different types of documents to an API.' +\n                                            ' Proper documentation helps API publishers to market their ' +\n                                            ' APIs better and sustain competition. '\n                                        }\n                                    />\n                                </Typography>\n                                }\n                                <div className={classes.actions}>\n                                    <Link to={!isRestricted(['apim:api_create', 'apim:api_publish'], api) && url}>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.button}\n                                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.Documents.Listing.add.new.msg.button'\n                                                defaultMessage='Add New Document'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </div>\n                        </InlineMessage>\n                    )}\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Listing)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useContext, Suspense, lazy } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport Button from '@material-ui/core/Button';\nimport ReactSafeHtml from 'react-safe-html';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport TableRow from '@material-ui/core/TableRow';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Utils from 'AppData/Utils';\n\nconst ReactMarkdown = lazy(() => import('react-markdown' /* webpackChunkName: \"ViewReactMD\" */));\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n    },\n    docTitle: {\n        fontWeight: 100,\n        fontSize: 50,\n        color: theme.palette.grey[500],\n    },\n    docBadge: {\n        padding: theme.spacing(1),\n        background: theme.palette.primary.main,\n        position: 'absolute',\n        top: 0,\n        marginTop: -22,\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    button: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    displayURL: {\n        padding: theme.spacing(2),\n        marginTop: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: theme.palette.getContrastText(theme.palette.grey[200]),\n        display: 'flex',\n    },\n    displayURLLink: {\n        paddingLeft: theme.spacing(2),\n    },\n    paper: {\n        marginTop: 20,\n        padding: theme.spacing(2),\n        height: '100%',\n    },\n    leftCell: {\n        width: 150,\n    },\n});\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction View(props) {\n    const {\n        classes,\n        fullScreen,\n        intl,\n        match: {\n            params: { documentId },\n        },\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [code, setCode] = useState('');\n    const [doc, setDoc] = useState(null);\n    const restAPI = isAPIProduct ? new APIProduct() : new API();\n\n    useEffect(() => {\n        const docPromise = restAPI.getDocument(api.id, documentId);\n        docPromise\n            .then(doc => {\n                const { body } = doc;\n                setDoc(body);\n                if (body.sourceType === 'MARKDOWN' || body.sourceType === 'INLINE') loadContentForDoc();\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    }, [documentId]);\n\n    const loadContentForDoc = () => {\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, documentId);\n        docPromise\n            .then(doc => {\n                setCode(doc.text);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n            });\n    };\n\n    const handleDownload = () => {\n        const promised_get_content = restAPI.getFileForDocument(api.id, documentId);\n        promised_get_content\n            .then(response => {\n                Utils.forceDownload(response);\n            })\n            .catch(error => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                    Alert.error(\n                        intl.formatMessage({\n                            id: 'Apis.Details.Documents.View.error.downloading',\n                            defaultMessage: 'Error downloading the file',\n                        }),\n                    );\n                }\n            });\n    };\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    const listingPath = `/${urlPrefix}/${api.id}/documents`;\n    return (\n        doc && (\n            <React.Fragment>\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Link to={listingPath} className={classes.titleLink}>\n                            <Typography variant=\"h5\" align=\"left\" className={classes.mainTitle}>\n                                <FormattedMessage id=\"Apis.Details.Documents.View.heading\" defaultMessage=\"Documents\" />\n                            </Typography>\n                        </Link>\n                        <Icon>keyboard_arrow_right</Icon>\n                        <Typography variant=\"h5\">{doc.name}</Typography>\n                    </div>\n                    <Paper className={classes.paper}>\n                        <Table className={classes.table}>\n                            <TableBody>\n                                <TableRow>\n                                    <TableCell className={classes.leftCell}>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.name\"\n                                                defaultMessage=\"Name\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.name}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.summary\"\n                                                defaultMessage=\"Summary\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.summary}</Typography>\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.catogery\"\n                                                defaultMessage=\"Categorized as\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            {doc.type === 'OTHER' ? doc.otherTypeName : doc.type}\n                                        </Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">\n                                            <FormattedMessage\n                                                id=\"Apis.Details.Documents.View.meta.source\"\n                                                defaultMessage=\"Source Type\"\n                                            />\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <Typography variant=\"body1\">{doc.sourceType}</Typography>{' '}\n                                    </TableCell>\n                                </TableRow>\n                            </TableBody>\n                        </Table>\n                    </Paper>\n\n                    <Paper className={classes.paper}>\n                        {doc.sourceType === 'MARKDOWN' && (\n                            <Suspense fallback={<CircularProgress />}>\n                                <ReactMarkdown source={code} />\n                            </Suspense>\n                        )}\n                        {doc.sourceType === 'INLINE' && <ReactSafeHtml html={code} />}\n                        {doc.sourceType === 'URL' && (\n                            <a className={classes.displayURL} href={doc.sourceUrl} target=\"_blank\">\n                                {doc.sourceUrl}\n                                <Icon className={classes.displayURLLink}>open_in_new</Icon>\n                            </a>\n                        )}\n                        {doc.sourceType === 'FILE' && (\n                            <Button\n                                variant=\"contained\"\n                                color=\"default\"\n                                className={classes.button}\n                                onClick={handleDownload}\n                            >\n                                <FormattedMessage\n                                    id=\"Apis.Details.Documents.View.btn.download\"\n                                    defaultMessage=\"Download\"\n                                />\n\n                                <Icon>arrow_downward</Icon>\n                            </Button>\n                        )}\n                    </Paper>\n                </div>\n            </React.Fragment>\n        )\n    );\n}\n\nView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    fullScreen: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(View));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState, Suspense, lazy } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport isEmpty from 'lodash.isempty';\nimport MarkdownEditor from './MarkdownEditor';\nimport { FormattedMessage } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\n\nconst TextEditor = lazy(() => import('./TextEditor' /* webpackChunkName: \"EditContentTextEditor\" */));\n\nfunction EditContent(props) {\n    const [doc, setDoc] = useState(null);\n    const {\n        history: {\n            location: { state, pathname },\n            replace,\n        },\n    } = props;\n    useEffect(() => {\n        // Check if we want to show the add content screen in the case of coming from GoToEdit.jsx with history -> state props\n\n        if (!isEmpty(state)) {\n            const { doc } = state;\n            if (doc) {\n                setDoc(doc);\n            }\n        }\n    }, []);\n    return (\n        <React.Fragment>\n            {doc && doc.sourceType === 'MARKDOWN' && (\n                <MarkdownEditor docName={doc.name} docId={doc.documentId} showAtOnce />\n            )}\n            {doc && doc.sourceType === 'INLINE' && (\n                <Suspense\n                    fallback={<Progress />}\n                >\n                    <TextEditor docName={doc.name} docId={doc.documentId} showAtOnce />\n                </Suspense>\n            )}\n        </React.Fragment>\n    );\n}\nexport default withRouter(EditContent);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport Listing from './Listing';\nimport View from './View';\nimport Edit from './Edit';\nimport EditContent from './EditContent';\nimport DocCreate from './Create';\n\nconst Documents = (props) => {\n    const { isAPIProduct } = useContext(APIContext);\n    const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n    return (\n        <div>\n            <Switch>\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents'} component={Listing} />} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/details'} component={View} />} />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit'} component={Edit} />} />\n                <Route\n                    exact\n                    path={'/' + urlPrefix + '/:apiUUID/documents/:documentId/edit-content'}\n                    component={EditContent}\n                />\n                } />\n                <Route exact path={'/' + urlPrefix + '/:apiUUID/documents/create'} component={DocCreate} />\n                <Route component={ResourceNotFound} />\n            </Switch>\n        </div>\n    );\n};\n\nDocuments.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n};\n\nexport default Documents;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Radio from '@material-ui/core/Radio';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst RateLimitingLevels = {\n    API: 'api',\n    RESOURCE: 'resource',\n};\n\n/**\n *\n * Handles the resource level and API level throttling UI switch\n * @export\n * @param {*} props\n * @returns\n */\nfunction APIRateLimiting(props) {\n    const {\n        updateAPI, operationRateLimits, onChange, value: currentApiThrottlingPolicy, isAPIProduct,\n    } = props;\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(currentApiThrottlingPolicy);\n    const [isSaving, setIsSaving] = useState(false);\n\n    const isResourceLevel = apiThrottlingPolicy === null;\n    const rateLimitingLevel = isResourceLevel ? RateLimitingLevels.RESOURCE : RateLimitingLevels.API;\n    const [apiFromContext] = useAPI();\n\n    // Following effect is used to handle the controlled component case, If user provide onChange handler to\n    // control this component, Then we accept the props as the valid input and update the current state value from props\n    useEffect(() => {\n        if (onChange) {\n            if (currentApiThrottlingPolicy === '' && apiFromContext.apiThrottlingPolicy) {\n                setApiThrottlingPolicy(apiFromContext.apiThrottlingPolicy);\n            } else {\n                setApiThrottlingPolicy(currentApiThrottlingPolicy);\n            }\n        }\n    }, [onChange, currentApiThrottlingPolicy]); // Do not expect to change the onChange during the runtime\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function updateRateLimitingPolicy(event) {\n        // If the selected option is resource, we set the api level rate limiting to null\n        const userSelection = event.target.value === RateLimitingLevels.RESOURCE\n            ? null : '';\n        if (onChange) {\n            // Assumed controlled component\n            onChange(userSelection);\n        } else {\n            setApiThrottlingPolicy(userSelection);\n        }\n    }\n    /**\n     *\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateAPI({ apiThrottlingPolicy }).finally(() => setIsSaving(false));\n    }\n\n    /**\n     *\n     *\n     */\n    function resetChanges() {\n        setApiThrottlingPolicy(currentApiThrottlingPolicy);\n    }\n\n    let operationRateLimitMessage = (\n        <Typography variant='body1' gutterBottom>\n            You may change the rate limiting policies per operation\n            <Typography variant='caption' display='block' gutterBottom>\n                Expand an operation below to select a rate limiting policy for an operation\n            </Typography>\n        </Typography>\n    );\n    if (isAPIProduct) {\n        operationRateLimitMessage = (\n            <Typography variant='body1' gutterBottom>\n                Rate limiting polices of the source operation will be applied\n                <Typography variant='caption' display='block' gutterBottom>\n                    Rate limiting policy of an individual operation will be govern by the policy specified in the source\n                    operation\n                </Typography>\n            </Typography>\n        );\n    }\n    return (\n        <Paper>\n            <Grid container direction='row' spacing={3} justify='flex-start' alignItems='flex-start'>\n                <Grid item md={12} xs={12}>\n                    <Box ml={1}>\n                        <Typography variant='subtitle1' gutterBottom>\n                            Operations Configuration\n                            <Tooltip\n                                fontSize='small'\n                                title='Configurations that affects on all the resources'\n                                aria-label='common configurations'\n                                placement='right-end'\n                                interactive\n                            >\n                                <HelpOutline />\n                            </Tooltip>\n                        </Typography>\n                    </Box>\n                    <Divider light variant='middle' />\n                </Grid>\n                <Grid item md={1} xs={1} />\n                <Grid item md={5} xs={11}>\n                    <FormControl component='fieldset'>\n                        <FormLabel component='legend'>Rate limiting level</FormLabel>\n                        <RadioGroup\n                            aria-label='Apply rate limiting in'\n                            value={rateLimitingLevel}\n                            onChange={updateRateLimitingPolicy}\n                            row\n                        >\n                            <FormControlLabel\n                                value={RateLimitingLevels.API}\n                                control={(\n                                    <Radio\n                                        color='primary'\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    />\n                                )}\n                                label='API Level'\n                                labelPlacement='end'\n                            />\n                            <FormControlLabel\n                                value={RateLimitingLevels.RESOURCE}\n                                control={(\n                                    <Radio\n                                        color='primary'\n                                        disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                    />\n                                )}\n                                label='Operation Level'\n                                labelPlacement='end'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                    <Box minHeight={70} borderLeft={1} pl={10}>\n                        {isResourceLevel ? (\n                            operationRateLimitMessage\n                        ) : (\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                id='operation_throttling_policy'\n                                select\n                                label='Rate limiting policies'\n                                value={apiThrottlingPolicy}\n                                onChange={({ target: { value } }) => (\n                                    onChange ? onChange(value) : setApiThrottlingPolicy(value))}\n                                helperText='Selected rate limiting policy will be applied to whole API'\n                                margin='dense'\n                                variant='outlined'\n                            >\n                                {operationRateLimits.map((rateLimit) => (\n                                    <MenuItem key={rateLimit.name} value={rateLimit.name}>\n                                        {rateLimit.displayName}\n                                    </MenuItem>\n                                ))}\n                            </TextField>\n                        )}\n                    </Box>\n                </Grid>\n                {/* If onChange handler is provided we assume that component is getting controlled by its parent\n                so that, hide the save cancel action */}\n                {!onChange && (\n                    <>\n                        <Grid item md={12}>\n                            <Divider />\n                        </Grid>\n                        <Grid item>\n                            <Box ml={1}>\n                                <Button\n                                    onClick={saveChanges}\n                                    disabled={false}\n                                    variant='outlined'\n                                    size='small'\n                                    color='primary'\n                                >\n                                    Save\n                                    {isSaving && <CircularProgress size={24} />}\n                                </Button>\n                                <Box display='inline' ml={1}>\n                                    <Button size='small' onClick={resetChanges}>\n                                        Reset\n                                    </Button>\n                                </Box>\n                            </Box>\n                        </Grid>\n                    </>\n                )}\n            </Grid>\n        </Paper>\n    );\n}\nAPIRateLimiting.defaultProps = {\n    onChange: null,\n    isAPIProduct: false,\n};\nAPIRateLimiting.propTypes = {\n    updateAPI: PropTypes.func.isRequired,\n    onChange: PropTypes.oneOf([null, PropTypes.func]),\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n    disabledAction: PropTypes.shape({}).isRequired,\n    value: PropTypes.string.isRequired,\n    isAPIProduct: PropTypes.bool,\n};\n\nexport default React.memo(APIRateLimiting);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport TextField from '@material-ui/core/TextField';\nimport { Typography } from '@material-ui/core';\nimport Switch from '@material-ui/core/Switch';\n\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(),\n        marginRight: theme.spacing(),\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 20,\n    },\n    scopes: {\n        width: 400,\n    },\n    dropDown: {\n        width: theme.spacing(11.25),\n    },\n    divider: {\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    chip: {\n        margin: theme.spacing(),\n        color: theme.palette.text.secondary,\n        minWidth: 100,\n    },\n    chipActive: {\n        margin: theme.spacing(),\n        color: theme.palette.text.secondary,\n        background: theme.palette.background.active,\n        minWidth: 100,\n        borderRadius: theme.shape.borderRadius,\n    },\n    paper: {\n        padding: 20,\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    listItem: {\n        paddingLeft: 0,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    formControl: {\n        paddingRight: 0,\n        marginRight: 0,\n    },\n    resourceRoot: {\n        background: theme.palette.grey['100'],\n        paddingLeft: theme.spacing(),\n        paddingRight: theme.spacing(),\n        borderRadius: theme.shape.borderRadius,\n        marginBottom: theme.spacing(),\n    },\n    deleteButton: {\n        marginLeft: 'auto',\n    },\n    pathDisplay: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n    },\n    descriptionWrapper: {\n        paddingTop: theme.spacing(),\n        paddingBottom: theme.spacing(),\n    },\n    scopeSelect: {\n        width: '100%',\n    },\n    descriptionWrapperUp: {\n        paddingBottom: '0 !important',\n    },\n    addParamRow: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    propsForm: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    deleteLink: {\n        cursor: 'pointer',\n    },\n    row: {\n        '& td': {\n            borderBottom: 'none',\n            verticalAlign: 'bottom',\n            width: '33%',\n            paddingLeft: 0,\n        },\n    },\n});\n\n/**\n *\n */\nclass Operation extends React.Component {\n    /**\n     *\n     * @param {any} props @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isSecurity: false,\n        };\n        this.handleScopeChange = this.handleScopeChange.bind(this);\n        this.handlePolicyChange = this.handlePolicyChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    /**\n     *\n     * @param {*} operationAction event triggered for handle  Scope Change\n     */\n    handleScopeChange(operationAction) {\n        const { operation } = this.props;\n        const { data } = operationAction;\n        const { value } = data || {};\n        const defValue = value[0];\n        const newoperation = {\n            ...operation,\n            scopes: [...operation.scopes],\n        };\n        newoperation.scopes = defValue;\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     *\n     * @param {*} e event triggered for handle  policy Change\n     */\n    handlePolicyChange(e) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        newoperation.throttlingPolicy = e.target.value;\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @param {*} event event triggered for handle  policy Change\n     */\n    handleChange(event) {\n        const { operation } = this.props;\n        const newoperation = { ...operation };\n        const { checked } = event.target;\n        if (checked) {\n            newoperation.authType = 'Any';\n        } else {\n            newoperation.authType = 'None';\n        }\n        this.setState({\n            isSecurity: checked,\n        });\n        this.props.handleUpdateList(newoperation);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            operation, theme, classes, apiPolicies, scopes, isOperationRateLimiting, sharedScopes, intl,\n        } = this.props;\n        const dropdownScopes = [...scopes];\n        const { isSecurity } = this.state;\n        const filteredApiScopes = dropdownScopes.filter((sharedScope) => !sharedScope.shared);\n        let chipColor = theme.custom.operationChipColor\n            ? theme.custom.operationChipColor[operation.verb.toLowerCase()]\n            : null;\n        let chipTextColor = '#000000';\n        if (!chipColor) {\n            console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n            chipColor = '#cccccc';\n        } else {\n            chipTextColor = theme.palette.getContrastText(\n                theme.custom.operationChipColor[operation.verb.toLowerCase()],\n            );\n        }\n        return (\n            <TableRow style={{ borderStyle: 'hidden' }}>\n                <TableCell>\n                    <Typography variant='body1'>\n                        {operation.target}\n                    </Typography>\n                </TableCell>\n                <TableCell>\n                    <Chip\n                        label={operation.verb}\n                        style={{\n                            backgroundColor: chipColor, color: chipTextColor, height: 20, width: 40, fontSize: 9,\n                        }}\n                        className={classes.chipActive}\n                    />\n                </TableCell>\n                <TableCell>\n                    <Select\n                        className={classes.dropDown}\n                        value={isOperationRateLimiting ? operation.throttlingPolicy : ''}\n                        disabled={!isOperationRateLimiting}\n                        onChange={this.handlePolicyChange}\n                        fieldName='Throttling Policy'\n                    >\n                        {apiPolicies.map((policy) => (\n                            <MenuItem\n                                key={policy.name}\n                                value={policy.name}\n                            >\n                                {policy.displayName}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </TableCell>\n                <TableCell>\n                    <TextField\n                        id='operation_scope'\n                        select\n                        SelectProps={{\n                            multiple: true,\n                            renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                        }}\n                        fullWidth\n                        label={dropdownScopes.length !== 0 || sharedScopes ? intl.formatMessage({\n                            id: 'Apis.Details.Operations.Operation.operation.scope.label.default',\n                            defaultMessage: 'Operation scope',\n                        }) : intl.formatMessage({\n                            id: 'Apis.Details.Operations.Operation.operation.scope.label.notAvailable',\n                            defaultMessage: 'No scope available',\n                        })}\n                        value={operation.scopes}\n                        onChange={({ target: { value } }) => this.handleScopeChange({\n                            data: { value: value ? [value] : [] },\n                        })}\n                        helperText={(\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.operation.scope.helperText'\n                                defaultMessage='Select a scope to control permissions to this operation'\n                            />\n                        )}\n                        margin='dense'\n                        variant='outlined'\n                    >\n                        <ListSubheader>\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.operation.scope.select.local'\n                                defaultMessage='API Scopes'\n                            />\n                        </ListSubheader>\n                        {filteredApiScopes.length !== 0 ? filteredApiScopes.map((apiScope) => (\n                            <MenuItem\n                                key={apiScope.scope.name}\n                                value={apiScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operation.scopes.includes(apiScope.scope.name)} color='primary' />\n                                {apiScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id='Apis.Details.Operations.Operation.operation.no.api.scope.available'\n                                        defaultMessage='No API scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                        <ListSubheader>\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.operation.scope.select.shared'\n                                defaultMessage='Shared Scopes'\n                            />\n                        </ListSubheader>\n                        {sharedScopes && sharedScopes.length !== 0 ? sharedScopes.map((sharedScope) => (\n                            <MenuItem\n                                key={sharedScope.scope.name}\n                                value={sharedScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operation.scopes.includes(sharedScope.scope.name)} color='primary' />\n                                {sharedScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id='Apis.Details.Operations.Operation.operation.no.sharedpi.scope.available'\n                                        defaultMessage='No shared scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                    </TextField>\n                </TableCell>\n                <TableCell>\n                    <Switch\n                        checked={(() => {\n                            if (operation.authType === 'None') {\n                                return false;\n                            }\n                            return true;\n                        })()}\n                        onChange={this.handleChange}\n                        value={isSecurity}\n                        color='primary'\n                    />\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nOperation.propTypes = {\n    classes: PropTypes.shape({\n    }).isRequired,\n    operation: PropTypes.shape({\n        target: PropTypes.string,\n        verb: PropTypes.string,\n        throttlingPolicy: PropTypes.string,\n        auth: PropTypes.string,\n    }).isRequired,\n    apiPolicies: PropTypes.shape({\n    }).isRequired,\n    isOperationRateLimiting: PropTypes.shape({\n    }).isRequired,\n    scopes: PropTypes.shape({\n    }).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Operation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport APIRateLimiting from '../Resources/components/APIRateLimiting';\nimport Operation from './Operation';\n\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 400,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    scopes: {\n        width: 400,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonMain: {\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        marginRight: theme.spacing(1),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        width: 300,\n    },\n    addResource: {\n        width: 600,\n        marginTop: 0,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    expansionPanel: {\n        marginBottom: theme.spacing(1),\n    },\n    expansionPanelDetails: {\n        flexDirection: 'column',\n    },\n});\n\n/**\n * This class defined for operation List\n */\nclass Operations extends React.Component {\n    /**\n     *\n     * @param {*} props the props parameters\n     */\n    constructor(props) {\n        super(props);\n        const { api } = props;\n        const { operations } = api;\n        const operationCopy = [...operations];\n        operationCopy.sort((a, b) => ((a.target + a.verb > b.target + b.verb) ? 1 : -1));\n        this.state = {\n            notFound: false,\n            apiPolicies: [],\n            operations: operationCopy,\n            apiThrottlingPolicy: api.apiThrottlingPolicy,\n            filterKeyWord: '',\n            isSaving: false,\n            sharedScopes: [],\n            apiScopesByName: {},\n            sharedScopesByName: {},\n        };\n\n        this.newApi = new Api();\n        this.handleUpdateList = this.handleUpdateList.bind(this);\n        this.handleApiThrottlePolicy = this.handleApiThrottlePolicy.bind(this);\n        this.updateOperations = this.updateOperations.bind(this);\n    }\n\n    /**\n     *\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const apiScopesByNameList = {};\n        const promisedResPolicies = Api.policies('api');\n        promisedResPolicies\n            .then((policies) => {\n                this.setState({ apiPolicies: policies.obj.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error.status;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n\n        for (const scopeObject of api.scopes) {\n            const modifiedScope = {};\n            modifiedScope.scope = scopeObject.scope;\n            modifiedScope.shared = scopeObject.shared;\n            apiScopesByNameList[scopeObject.scope.name] = modifiedScope;\n        }\n        this.setState({ apiScopesByName: apiScopesByNameList });\n        this.getAllSharedScopes();\n    }\n\n    /**\n     *\n     * @param {*} event\n     */\n    setFilterByKeyWord(event) {\n        this.setState({ filterKeyWord: event.target.value.toLowerCase() });\n    }\n\n    /**\n     * @memberof Operations\n     */\n    getAllSharedScopes() {\n        Api.getAllScopes()\n            .then((response) => {\n                if (response.body && response.body.list) {\n                    const sharedScopesList = [];\n                    const sharedScopesByNameList = {};\n                    const shared = true;\n                    for (const scope of response.body.list) {\n                        const modifiedScope = {};\n                        modifiedScope.scope = scope;\n                        modifiedScope.shared = shared;\n                        sharedScopesList.push(modifiedScope);\n                        sharedScopesByNameList[scope.name] = modifiedScope;\n                    }\n                    this.setState({ sharedScopesByName: sharedScopesByNameList });\n                    this.setState({ sharedScopes: sharedScopesList });\n                }\n            });\n    }\n\n    /**\n     *\n     *\n     * @param {*} throttlePolicy\n     * @memberof Operations\n     */\n    handleApiThrottlePolicy(apiThrottlingPolicy) {\n        this.setState({ apiThrottlingPolicy });\n    }\n\n    /**\n     *\n     * @param {*} newOperation\n     */\n    handleUpdateList(newOperation) {\n        const { operations, sharedScopesByName, apiScopesByName } = this.state;\n        const updatedList = operations.map(\n            (operation) => ((operation.target === newOperation.target && operation.verb === newOperation.verb)\n                ? newOperation : operation),\n        );\n\n        for (const selectedScope of newOperation.scopes) {\n            if (selectedScope\n                && !apiScopesByName[selectedScope]\n                && apiScopesByName[selectedScope] !== '') {\n                if (selectedScope in sharedScopesByName) {\n                    apiScopesByName[selectedScope] = sharedScopesByName[selectedScope];\n                }\n            }\n        }\n        this.setState({ apiScopesByName });\n        this.setState({ operations: updatedList });\n    }\n\n    /**\n     *\n     */\n    updateOperations() {\n        const { operations, apiThrottlingPolicy, apiScopesByName } = this.state;\n        const { updateAPI } = this.props;\n        this.setState({ isSaving: true });\n        this.updateApiScopes(operations);\n        const scopes = Object.keys(apiScopesByName).map((key) => { return apiScopesByName[key]; });\n        updateAPI({ operations, apiThrottlingPolicy, scopes }).finally(() => this.setState({ isSaving: false }));\n    }\n\n    /**\n     *\n     * This method modifies the security definition scopes by removing the scopes which are not present\n     * in operations and which are shared scopes\n     * @param {Array} apiOperations Operations list\n     */\n    updateApiScopes(apiOperations) {\n        const { apiScopesByName, sharedScopesByName } = this.state;\n        Object.keys(apiScopesByName).forEach((key) => {\n            let isScopeExistsInOperation = false;\n            for (const operation of apiOperations) {\n                // Checking if the scope resides in the operation\n                if (operation.scopes.includes(key)) {\n                    isScopeExistsInOperation = true;\n                    break;\n                }\n            }\n            // Checking if the scope exists in operation and is a shared scope\n            if (!isScopeExistsInOperation && (key in sharedScopesByName)) {\n                delete apiScopesByName[key];\n            }\n        });\n        this.setState({ apiScopesByName });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { api, resourceNotFoundMessage } = this.props;\n        const {\n            operations, apiPolicies, apiThrottlingPolicy, isSaving, filterKeyWord, notFound, sharedScopes,\n        } = this.state;\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFoundMessage} />;\n        }\n        if (!operations && apiPolicies.length === 0) {\n            return <Progress />;\n        }\n        const { classes } = this.props;\n        return (\n            <>\n                <Box pb={3}>\n                    <Typography variant='h5'>\n                        <FormattedMessage\n                            id='Apis.Details.Operations.Operations.title'\n                            defaultMessage='Operations'\n                        />\n                    </Typography>\n                </Box>\n\n                <Grid container spacing={2}>\n                    <Grid item md={12}>\n                        <APIRateLimiting\n                            operationRateLimits={apiPolicies}\n                            api={api}\n                            value={apiThrottlingPolicy}\n                            onChange={this.handleApiThrottlePolicy}\n                        />\n                    </Grid>\n                    <Grid item md={2}>\n                        <Box mt={4} pb={2}>\n                            <div className={classes.searchWrapper}>\n                                <TextField\n                                    id='outlined-full-width'\n                                    label='Operation'\n                                    placeholder='Filter Operations'\n                                    onChange={(e) => this.setFilterByKeyWord(e, api.operations)}\n                                    fullWidth\n                                    variant='outlined'\n                                    InputLabelProps={{\n                                        shrink: true,\n                                    }}\n                                />\n                            </div>\n                        </Box>\n                    </Grid>\n                    <Grid item md={12}>\n                        <Table>\n                            <TableRow>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.operation.operationName'\n                                            defaultMessage='Operation'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.OperationType'\n                                            defaultMessage='Operation Type'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.throttling.policy'\n                                            defaultMessage='Rate Limiting'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.scopes'\n                                            defaultMessage='Scope'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography variant='subtitle2'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Operations.Operation.authType'\n                                            defaultMessage='Security Enabled'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                            {operations.filter(\n                                (operation) => operation.target.toLowerCase().includes(filterKeyWord),\n                            ).map((item) => {\n                                return (\n                                    <Operation\n                                        operation={item}\n                                        handleUpdateList={this.handleUpdateList}\n                                        scopes={api.scopes}\n                                        sharedScopes={sharedScopes}\n                                        isOperationRateLimiting={!apiThrottlingPolicy}\n                                        apiPolicies={apiPolicies}\n                                    />\n                                );\n                            })}\n                        </Table>\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            disabled={isSaving}\n                            className={classes.buttonMain}\n                            onClick={this.updateOperations}\n                        >\n                            {isSaving && <CircularProgress size={20} />}\n                            <FormattedMessage\n                                id='Apis.Details.Operations.Operation.save'\n                                defaultMessage='Save'\n                            />\n                        </Button>\n                        <Link to={'/apis/' + api.id + '/overview'}>\n                            <Button>\n                                <FormattedMessage\n                                    id='Apis.Details.Operations.Operation.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Button>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </>\n        );\n    }\n}\n\nOperations.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        operations: PropTypes.array,\n        scopes: PropTypes.array,\n        updateOperations: PropTypes.func,\n        policies: PropTypes.func,\n        id: PropTypes.string,\n    }).isRequired,\n    resourceNotFoundMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Operations));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\n/**\n *\n * Renders the operation summary and description sections\n * @export\n * @param {*} props\n * @returns\n */\nexport default function DescriptionAndSummary(props) {\n    const {\n        operation, operationsDispatcher, disableUpdate, target, verb,\n    } = props;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Summary\n                    {' '}\n                    {'&'}\n                    {' '}\nDescription\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                <TextField\n                    margin='dense'\n                    fullWidth\n                    label='Description'\n                    multiline\n                    disabled={disableUpdate}\n                    rows='4'\n                    value={operation.description}\n                    variant='outlined'\n                    onChange={\n                        ({ target: { value } }) => operationsDispatcher(\n                            { action: 'description', data: { target, verb, value } },\n                        )\n                    }\n                />\n            </Grid>\n            <Grid item md={5}>\n                <TextField\n                    id='operation_summary'\n                    label='Summary'\n                    margin='dense'\n                    variant='outlined'\n                    fullWidth\n                    disabled={disableUpdate}\n                    multiline\n                    rows='4'\n                    value={operation.summary}\n                    onChange={({ target: { value } }) => operationsDispatcher(\n                        { action: 'summary', data: { target, verb, value } },\n                    )}\n                />\n            </Grid>\n            <Grid item md={1} />\n        </>\n    );\n}\n\nDescriptionAndSummary.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n        spec: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nDescriptionAndSummary.defaultProps = {\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nconst VERSIONS = {\n    V3: ['3.0.0', '3.0.1', '3.0.2'],\n    V2: ['2.0'],\n};\n/**\n *\n *\n * @param {*} apiProduct\n */\nfunction getAPIProductTaggedOperations(apiProduct, openAPI) {\n    const taggedOperations = { Default: [] };\n    apiProduct.apis.map((apiOperations) => {\n        return apiOperations.operations.map((operation) => {\n            const { target, verb } = operation;\n            // TODO: WARN! `toLowerCase` could cause a case sensitive issues\n            // in `verb` if definition has mixed case verbs\n            const openAPIOperation = openAPI.paths[target] && openAPI.paths[target][verb.toLowerCase()];\n            if (!openAPIOperation) {\n                console.warn(`Could not find target = ${target} `\n                        + `verb (lower cased) = ${verb.toLowerCase()} operation in OpenAPI definition`);\n                // Skipping not found operations\n                return null;\n            }\n            const operationInfo = { spec: openAPIOperation, ...operation };\n\n            if (!taggedOperations[apiOperations.name]) {\n                taggedOperations[apiOperations.name] = [];\n            }\n            taggedOperations[apiOperations.name].push(operationInfo);\n            return operationInfo;\n        });\n    });\n    return taggedOperations;\n}\n\n/**\n *\n *\n */\nfunction getTaggedOperations(api, openAPI) {\n    const taggedOperations = { Default: [] };\n    if (api.isAPIProduct()) {\n        return getAPIProductTaggedOperations(api, openAPI);\n    } else {\n        api.operations.map((apiOperation) => {\n            const { target, verb } = apiOperation;\n            // TODO: WARN! `toLowerCase` could cause a case sensitive\n            // issues in `verb` if definition has mixed case verbs\n            const openAPIOperation = openAPI.paths[target] && openAPI.paths[target][verb.toLowerCase()];\n            if (!openAPIOperation) {\n                console.warn(`Could not find target = ${target} `\n                        + `verb (lower cased) = ${verb.toLowerCase()} operation in OpenAPI definition`);\n                // Skipping not found operations\n                return null;\n            }\n            const operationInfo = { spec: openAPIOperation, ...apiOperation };\n            if (openAPIOperation.tags) {\n                openAPIOperation.tags.map((tag) => {\n                    if (!taggedOperations[tag]) {\n                        taggedOperations[tag] = [];\n                    }\n                    taggedOperations[tag].push(operationInfo);\n                    return operationInfo; // Just to satisfy an es-lint rule or could use `for ... of ...`\n                });\n            } else {\n                taggedOperations.Default.push(operationInfo);\n            }\n            return operationInfo; // Just to satisfy an es-lint rule or could use `for ... of ...`\n        });\n        return taggedOperations;\n    }\n}\n\n/**\n * Return the definition version given the parsed spec object\n *\n * @param {SwaggerObject} spec\n * @returns {String} version\n */\nfunction getVersion(spec) {\n    return spec.openapi || spec.swagger;\n}\n/**\n *Extract the path parameters from URI template. User has to give the Open API spec version as well\n * https://github.com/OAI/OpenAPI-Specification/tree/master/versions\n * @param {String} target URI template\n * @param {String} openAPIVersion Should be a valid Open API specification version (i:e \"2.0\", \"3.0.0\")\n * @returns {Array} List of parameter objects according to the given spec version\n */\nfunction extractPathParameters(target, spec) {\n    const regEx = /[^{}]+(?=})/g;\n    const params = target.match(regEx) || [];\n    let parameters = [];\n    const openAPIVersion = getVersion(spec);\n    if (VERSIONS.V3.includes(openAPIVersion)) {\n        parameters = params.map((para) => {\n            const paraObj = {};\n            paraObj.name = para;\n            paraObj.in = 'path';\n            paraObj.required = true;\n            paraObj.schema = {\n                type: 'string',\n                format: 'string',\n            };\n            return paraObj;\n        });\n    } else if (VERSIONS.V2.includes(openAPIVersion)) {\n        parameters = params.map((para) => {\n            const paraObj = {};\n            paraObj.name = para;\n            paraObj.in = 'path';\n            paraObj.required = true;\n            paraObj.type = 'string';\n            paraObj.format = 'string';\n            return paraObj;\n        });\n    }\n\n    return parameters;\n}\n\n/**\n *\n * Return the WSO2 specific scopes array (currently only use the first element of the array)\n * @param {*} operation\n * @param {*} openAPIVersion\n * @returns {Array} Scopes of the `default` security scheme\n */\nfunction getOperationScopes(operation, spec) {\n    const openAPIVersion = getVersion(spec);\n    let scopes = [];\n    if (VERSIONS.V3.includes(openAPIVersion)) {\n        if (Array.isArray(operation.security) && operation.security.find((item) => item.default)) {\n            scopes = operation.security.find((item) => item.default).default;\n        } else if (operation['x-scope']) {\n            scopes = [operation['x-scope']];\n        }\n    } else if (VERSIONS.V2.includes(openAPIVersion)) {\n        if (Array.isArray(operation.security) && operation.security.find((item) => item.default)) {\n            scopes = operation.security.find((item) => item.default).default;\n        } else if (operation['x-scope']) {\n            scopes = [operation['x-scope']];\n        }\n    }\n    return scopes;\n}\n\n/**\n * Map the api.operations array to swagger paths like object\n * @param {Array} operations Operations in API DTO\n * @returns {Object} Mapped operations object\n */\nfunction mapAPIOperations(operations) {\n    const temp = {};\n    for (const operation of operations) {\n        const { target, verb, ...rest } = operation;\n        if (!temp[target]) {\n            temp[target] = {\n                [verb]: rest,\n            };\n        } else {\n            temp[target][verb] = rest;\n        }\n    }\n    return temp;\n}\n\n/**\n *\n *\n * @param {*} selectedOperations\n * @param {*} operations\n * @returns\n */\nfunction isSelectAll(selectedOperations, operations) {\n    for (const path in operations) {\n        if (Object.prototype.hasOwnProperty.call(operations, path)) {\n            const verbs = operations[path];\n            if (\n                !selectedOperations[path]\n                || Object.keys(selectedOperations[path]).length !== Object.keys(verbs).length\n            ) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * Check whether the provided object is a Ref object.\n *\n * @param {object} content : The object that needs to be checked.\n * @return {boolean} true if Ref, false otherwise.\n * */\nfunction isRef(content) {\n    let isReference = false;\n    if (typeof content === 'object') {\n        Object.keys(content).map((name) => {\n            isReference = name === '$ref';\n            return name;\n        });\n    }\n    return isReference;\n}\n\nexport {\n    mapAPIOperations,\n    getTaggedOperations,\n    getAPIProductTaggedOperations,\n    extractPathParameters,\n    getOperationScopes,\n    isSelectAll,\n    getVersion,\n    VERSIONS,\n    isRef,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Link } from 'react-router-dom';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { useIntl, FormattedMessage } from 'react-intl';\nimport { getOperationScopes } from '../../operationUtils';\n\n\n/**\n *\n * Renders the security , throttling policies and scopes selection section in the operation collapsed page\n * @export\n * @param {*} props\n * @returns\n */\nexport default function OperationGovernance(props) {\n    const {\n        operation, operationsDispatcher, operationRateLimits, api, disableUpdate, spec, target, verb, sharedScopes,\n    } = props;\n    const operationScopes = getOperationScopes(operation, spec);\n    const isOperationRateLimiting = api.apiThrottlingPolicy === null;\n    const filteredApiScopes = api.scopes.filter((sharedScope) => !sharedScope.shared);\n    const intl = useIntl();\n\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography gutterBottom variant='subtitle1'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.OperationGovernance.title'\n                        defaultMessage='Operation Governance'\n                    />\n                    <Typography style={{ marginLeft: '10px' }} gutterBottom variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.OperationGovernance.subTitle'\n                            defaultMessage='(Security, Rate Limiting & Scopes)'\n                        />\n                    </Typography>\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                <FormControl disabled={disableUpdate} component='fieldset'>\n                    <FormControlLabel\n                        control={(\n                            <Switch\n                                checked={operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none'}\n                                onChange={({ target: { checked } }) => operationsDispatcher({\n                                    action: 'authType',\n                                    data: { target, verb, value: checked },\n                                })}\n                                size='small'\n                                color='primary'\n                            />\n                        )}\n                        label='Security'\n                        labelPlacement='start'\n                    />\n                </FormControl>\n                <sup style={{ marginLeft: '10px' }}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.OperationGovernance.Security'\n                                + '.tooltip'}\n                                defaultMessage='This will enable/disable Application Level securities defined in the\n                                Runtime Configurations page.'\n                            />\n                        )}\n                        fontSize='small'\n                        aria-label='Operation security'\n                        placement='right-end'\n                        interactive\n                    >\n                        <HelpOutline />\n                    </Tooltip>\n                </sup>\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={5}>\n                <TextField\n                    id='operation_rate_limiting_policy'\n                    select\n                    fullWidth={!isOperationRateLimiting}\n                    SelectProps={{\n                        autoWidth: true,\n                        IconComponent: isOperationRateLimiting ? ArrowDropDownIcon : 'span',\n                    }}\n                    disabled={disableUpdate || !isOperationRateLimiting}\n                    label={\n                        isOperationRateLimiting\n                            ? intl.formatMessage({\n                                id: 'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.rate.limiting.policy',\n                                defaultMessage: 'Rate limiting policy',\n                            })\n                            : (\n                                <div>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.governed.by'}\n                                        defaultMessage='Rate limiting is governed by '\n                                    />\n                                    <Box fontWeight='fontWeightBold' display='inline' color='primary.main'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.API.level'}\n                                            defaultMessage='API Level'\n                                        />\n                                    </Box>\n                                </div>\n                            )\n                    }\n                    value={\n                        isOperationRateLimiting && operation['x-throttling-tier'] ? operation['x-throttling-tier'] : ''\n                    }\n                    onChange={({ target: { value } }) => operationsDispatcher({\n                        action: 'throttlingPolicy',\n                        data: { target, verb, value },\n                    })}\n                    helperText={\n                        isOperationRateLimiting\n                            ? intl.formatMessage({\n                                id: 'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.rate.limiting.policy.select',\n                                defaultMessage: 'Select a rate limit policy for this operation',\n                            })\n                            : (\n                                <span>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section1'}\n                                        defaultMessage='Use '\n                                    />\n                                    <Box fontWeight='fontWeightBold' display='inline' color='primary.main'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section2'}\n                                            defaultMessage='Operation Level'\n                                        />\n                                    </Box>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section3'}\n                                        defaultMessage=' rate limiting to '\n                                    />\n                                    <b>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section4'}\n                                            defaultMessage='enable'\n                                        />\n                                    </b>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.rate.limiting.helperText.section5'}\n                                        defaultMessage=' rate limiting per operation'\n                                    />\n                                </span>\n                            )\n                    }\n                    margin='dense'\n                    variant='outlined'\n                >\n                    {operationRateLimits.map((rateLimit) => (\n                        <MenuItem key={rateLimit.name} value={rateLimit.name}>\n                            {rateLimit.displayName}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item md={6} />\n            <Grid item md={1} />\n            <Grid item md={5}>\n                { operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? (\n                    <TextField\n                        id='operation_scope'\n                        select\n                        SelectProps={{\n                            multiple: true,\n                            renderValue: (selected) => (Array.isArray(selected) ? selected.join(', ') : selected),\n                        }}\n                        disabled={disableUpdate}\n                        fullWidth\n                        label={api.scopes.length !== 0 || sharedScopes ? intl.formatMessage({\n                            id: 'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.operation.scope.label.default',\n                            defaultMessage: 'Operation scope',\n                        }) : intl.formatMessage({\n                            id: 'Apis.Details.Resources.components.operationComponents.'\n                            + 'OperationGovernance.operation.scope.label.notAvailable',\n                            defaultMessage: 'No scope available',\n                        })}\n                        value={operationScopes}\n                        onChange={({ target: { value } }) => operationsDispatcher({\n                            action: 'scopes',\n                            data: { target, verb, value: value ? [value] : [] },\n                        })}\n                        helperText={(\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.helperText'}\n                                defaultMessage='Select a scope to control permissions to this operation'\n                            />\n                        )}\n                        margin='dense'\n                        variant='outlined'\n                    >\n                        <ListSubheader>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.select.local'}\n                                defaultMessage='API Scopes'\n                            />\n                        </ListSubheader>\n                        {filteredApiScopes.length !== 0 ? filteredApiScopes.map((apiScope) => (\n                            <MenuItem\n                                key={apiScope.scope.name}\n                                value={apiScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operationScopes.includes(apiScope.scope.name)} color='primary' />\n                                {apiScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                    + 'OperationGovernance.operation.no.api.scope.available'}\n                                        defaultMessage='No API scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                        <ListSubheader>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.select.shared'}\n                                defaultMessage='Shared Scopes'\n                            />\n                        </ListSubheader>\n                        {sharedScopes && sharedScopes.length !== 0 ? sharedScopes.map((sharedScope) => (\n                            <MenuItem\n                                key={sharedScope.scope.name}\n                                value={sharedScope.scope.name}\n                                dense\n                            >\n                                <Checkbox checked={operationScopes.includes(sharedScope.scope.name)} color='primary' />\n                                {sharedScope.scope.name}\n                            </MenuItem>\n                        )) : (\n                            <MenuItem\n                                value=''\n                                disabled\n                            >\n                                <em>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                    + 'OperationGovernance.operation.no.sharedpi.scope.available'}\n                                        defaultMessage='No shared scopes available'\n                                    />\n                                </em>\n                            </MenuItem>\n                        )}\n                    </TextField>\n                ) : null }\n            </Grid>\n            <Grid item md={5} style={{ marginTop: '14px' }}>\n                { operation['x-auth-type'] && operation['x-auth-type'].toLowerCase() !== 'none' ? !disableUpdate && (\n                    <Link to={`/apis/${api.id}/scopes/create`} target='_blank'>\n                        <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.'\n                                + 'OperationGovernance.operation.scope.create.new.scope'}\n                                defaultMessage='Create New Scope'\n                            />\n                            <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                        </Typography>\n                    </Link>\n                ) : null}\n            </Grid>\n            <Grid item md={1} />\n        </>\n    );\n}\n\nOperationGovernance.propTypes = {\n    disableUpdate: PropTypes.bool,\n    operation: PropTypes.shape({\n        target: PropTypes.string.isRequired,\n        verb: PropTypes.string.isRequired,\n    }).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})),\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})) }),\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})),\n};\n\nOperationGovernance.defaultProps = {\n    operationRateLimits: [],\n    api: { scopes: [] },\n    sharedScopes: [],\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * The renderInput function.\n * @param {any} inputProps The props that are being passed to the function.\n * @returns {any} HTML view of the inputs.\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    // eslint-disable-next-line react/forbid-prop-types\n    classes: PropTypes.object.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types, react/require-default-props\n    InputProps: PropTypes.object,\n};\n\n/**\n * The renderSuggestion function.\n * @param {any} suggestionProps The props that are being passed to the function.\n * @returns {any} HTML view of the suggestions.\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, selectedItem,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (selectedItem || '').indexOf(suggestion) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion}\n            selected={isHighlighted}\n            component='div'\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    // eslint-disable-next-line react/forbid-prop-types\n    itemProps: PropTypes.object.isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.shape('').isRequired,\n};\n\n/**\n * The getSuggestions function.\n * @param {any} value The value that are being passed to the function.\n * @param {any} arns The arns that are being passed to the function.\n * @returns {any} suggestion values.\n */\nfunction getSuggestions(value, { showEmpty = false } = {}, arns) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    return inputLength === 0 && !showEmpty\n        ? []\n        : arns.filter((suggestion) => {\n            const keep = count < 5 && suggestion.slice(0, inputLength).toLowerCase() === inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1000,\n        marginTop: theme.spacing(-2),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n}));\n\n\n/**\n * The autocomplete component. This component lists the ARNs of a specific user role.\n * @returns {any} HTML view of the autocomplete component.\n * @param {any} props The input parameters.\n */\nexport default function IntegrationDownshift(props) {\n    const classes = useStyles();\n    const {\n        operation,\n        operationsDispatcher,\n        target,\n        verb,\n        arns,\n    } = props;\n    const [timeout, setTimeout] = useState(50000);\n    useEffect(() => {\n        if (operation['x-amzn-resource-timeout']) {\n            setTimeout(operation['x-amzn-resource-timeout']);\n        }\n    }, []);\n    const handleTimeoutMin = (event) => {\n        if (event.target.value !== '') {\n            const minutes = parseInt(event.target.value, 10);\n            const seconds = (timeout / 1000) % 60;\n            const milliSeconds = (minutes * 60 + seconds) * 1000;\n            let newTimeout = 0;\n            if (milliSeconds > 900000) {\n                newTimeout = 900000;\n            } else if (milliSeconds < 1000) {\n                newTimeout = 1000;\n            } else {\n                newTimeout = milliSeconds;\n            }\n            setTimeout(newTimeout);\n            operationsDispatcher({\n                action: 'amznResourceTimeout',\n                data: { target, verb, value: newTimeout },\n            });\n        }\n    };\n    const handleTimeoutSec = (event) => {\n        if (event.target.value !== '') {\n            const minutes = Math.floor((timeout / 1000) / 60);\n            const seconds = parseInt(event.target.value, 10);\n            const milliSeconds = (minutes * 60 + seconds) * 1000;\n            let newTimeout = 0;\n            if (milliSeconds > 900000) {\n                newTimeout = 900000;\n            } else if (milliSeconds < 1000) {\n                newTimeout = 1000;\n            } else {\n                newTimeout = milliSeconds;\n            }\n            setTimeout(newTimeout);\n            operationsDispatcher({\n                action: 'amznResourceTimeout',\n                data: { target, verb, value: newTimeout },\n            });\n        }\n    };\n    return (\n        <>\n            <Grid item md={12} xs={12}>\n                <Typography variant='subtitle1'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.AWSLambdaSettings.Title'\n                        defaultMessage='AWS Lambda Settings'\n                    />\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item md={1} xs={1} />\n            <Grid item md={7} xs={7}>\n                <Downshift\n                    id='downshift-options'\n                    onSelect={(changes) => {\n                        if (changes !== null) {\n                            operationsDispatcher({\n                                action: 'amznResourceName',\n                                data: { target, verb, value: changes },\n                            });\n                        }\n                    }}\n                >\n                    {({\n                        clearSelection,\n                        getInputProps,\n                        getItemProps,\n                        getLabelProps,\n                        getMenuProps,\n                        highlightedIndex,\n                        inputValue,\n                        isOpen,\n                        openMenu,\n                        selectedItem,\n                    }) => {\n                        const {\n                            onBlur, onChange, onFocus, ...inputProps\n                        } = getInputProps({\n                            onChange: (event) => {\n                                operationsDispatcher({\n                                    action: 'amznResourceName',\n                                    data: { target, verb, value: event.target.value },\n                                });\n                                if (event.target.value === '') {\n                                    clearSelection();\n                                }\n                            },\n                            onBlur: () => {\n                                clearSelection();\n                            },\n                            value: operation['x-amzn-resource-name'],\n                            onFocus: openMenu,\n                            placeholder: 'Select or type an ARN',\n                        });\n                        return (\n                            <div className={classes.container}>\n                                {renderInput({\n                                    variant: 'outlined',\n                                    required: true,\n                                    fullWidth: true,\n                                    classes,\n                                    InputLabelProps: getLabelProps({ shrink: true }),\n                                    label: 'Amazon Resource Name (ARN)',\n                                    helperText: 'Select or type an ARN',\n                                    InputProps: {\n                                        onBlur,\n                                        onChange,\n                                        onFocus,\n                                        endAdornment: (\n                                            <InputAdornment position='end'>\n                                                <Icon className={classes.helpIcon}>keyboard_arrow_down</Icon>\n                                            </InputAdornment>\n                                        ),\n                                    },\n                                    inputProps,\n                                })}\n\n                                <div {...getMenuProps()}>\n                                    {isOpen ? (\n                                        <Paper className={classes.paper} square>\n                                            {getSuggestions(inputValue, { showEmpty: true }, arns)\n                                                .map((suggestion, index) => renderSuggestion({\n                                                    suggestion,\n                                                    index,\n                                                    itemProps: getItemProps({ item: suggestion }),\n                                                    highlightedIndex,\n                                                    selectedItem,\n                                                }))}\n                                        </Paper>\n                                    ) : null}\n                                </div>\n                            </div>\n                        );\n                    }}\n                </Downshift>\n            </Grid>\n            <Grid item md={1} xs={1} />\n            <Grid item md={1} xs={1}>\n                <TextField\n                    id='timeout-min'\n                    label='min'\n                    variant='outlined'\n                    helperText='Set Timeout'\n                    type='number'\n                    inputProps={{\n                        min: 0,\n                        max: 15,\n                        step: 1,\n                    }}\n                    value={Math.floor((timeout / 1000) / 60)}\n                    onChange={(event) => {\n                        handleTimeoutMin(event);\n                    }}\n                />\n            </Grid>\n            <Grid item md={1} xs={1}>\n                <TextField\n                    id='timeout-sec'\n                    label='sec'\n                    variant='outlined'\n                    type='number'\n                    inputProps={{\n                        min: 0,\n                        max: 59,\n                        step: 1,\n                    }}\n                    value={(timeout / 1000) % 60}\n                    onChange={(event) => {\n                        handleTimeoutSec(event);\n                    }}\n                />\n            </Grid>\n            <Grid item md={1} xs={1} />\n        </>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    operation: PropTypes.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    arns: PropTypes.shape([]).isRequired,\n};\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\n/**\n * Defining the supported data types by the OAS spec versions.\n *\n * 2.0 : https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#dataTypeFormat\n * 3.x :https://swagger.io/docs/specification/data-models/data-types/\n * */\nconst supportedDataTypes = {\n    '2.0': {\n        body: ['integer', 'number', 'string', 'boolean', 'object'],\n        formData: ['integer', 'number', 'string', 'boolean', 'file'],\n        query: ['integer', 'number', 'string', 'boolean'],\n        path: ['integer', 'number', 'string', 'boolean'],\n        header: ['integer', 'number', 'string', 'boolean'],\n    },\n    '3.x': {\n        body: ['integer', 'number', 'string', 'boolean', 'object'],\n        query: ['integer', 'number', 'string', 'boolean'],\n        path: ['integer', 'number', 'string', 'boolean'],\n        header: ['integer', 'number', 'string', 'boolean'],\n        cookie: ['integer', 'number', 'string', 'boolean'],\n    },\n};\n\n/**\n * Util method for checking conditions.\n *\n * @param {boolean} condition : The condition to be checked\n * @param {any} matched : The value to be returned if the condition is true\n * @param {any} otherwise : The value to be returned if the condition is false.\n * @return {object} If true -> matched, false -> otherwise\n * */\nexport function iff(condition, matched, otherwise) {\n    return condition ? matched : otherwise;\n}\n\n/**\n * Method to get the supported data types for the given parameter type.\n *\n * @param {string} specVersion : The OAS version\n * @param {string} paramType : The parameter type.\n * @return {array} The list of supported parameters.\n * */\nexport function getSupportedDataTypes(specVersion, paramType) {\n    return paramType ? supportedDataTypes[specVersion === '2.0' ? '2.0' : '3.x'][paramType] : [];\n}\n\n/**\n * Get the supported data formats by each data type.\n *\n * @param {string} dataType: THe data type.\n * @return {array} The list of supported data formats.\n * */\nexport function getDataFormats(dataType) {\n    switch (dataType) {\n        case 'integer':\n            return ['int64', 'int32'];\n        case 'number':\n            return ['float', 'double'];\n        case 'string':\n            return ['date', 'date-time', 'byte', 'binary', 'password'];\n        default:\n            return [];\n    }\n}\n\n/**\n * Method to get the parameter schema based on the spec version.\n * For more info about Data Models (Schemas) refer https://swagger.io/docs/specification/data-models/\n * @param {string} specVersion : The OAS version\n * @return {object} The default schema\n * */\nexport function getParameter(specVersion) {\n    return specVersion === '2.0'\n        ? {\n            in: '', name: '', type: '', required: '',\n        }\n        : {\n            in: '', name: '', schema: { type: '' }, required: '',\n        };\n}\n\n/**\n * Get parameter types supported by spec version.\n *\n * @param {string} specVersion : The OAS version\n * @return {array} The list of supported parameter types.\n * */\nexport function getParameterTypes(specVersion) {\n    return specVersion === '2.0' ? ['query', 'header', 'body', 'formData'] : ['query', 'header', 'cookie', 'body'];\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useRef, useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport {\n    iff,\n    getParameter,\n    getParameterTypes,\n    getSupportedDataTypes,\n} from 'AppComponents/Apis/Details/Resources/components/operationComponents/parameterUtils';\n\nconst useStyles = makeStyles(() => ({\n    formControl: {\n        minWidth: 120,\n    },\n    parameterContainer: {\n        alignItems: 'center',\n        justifyContent: 'space-between',\n    },\n    checkBox: {\n        color: '#7c7c7c',\n    },\n}));\n\n/**\n *\n * Add resource parameter according to swagger spec\n * A unique parameter is defined by a combination of a name and param type and schema or content is required\n * OpenAPI 3.0 spec: https://swagger.io/specification/#parameterObject\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction AddParameter(props) {\n    const {\n        operation, operationsDispatcher, target, verb, specVersion, intl,\n    } = props;\n    const inputLabel = useRef(null);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const initParameter = getParameter(specVersion);\n\n    /**\n     *\n     *\n     * @param {*} state\n     * @param {*} action\n     * @returns\n     */\n    function newParameterReducer(state, action) {\n        const { type, value } = action;\n        switch (type) {\n            case 'in':\n            case 'name':\n            case 'required':\n                return { ...state, [type]: value };\n            case 'type': {\n                if (specVersion === '2.0') {\n                    return { ...state, [type]: value };\n                } else {\n                    return { ...state, schema: { [type]: value } };\n                }\n            }\n            case 'clear':\n                return initParameter;\n            default:\n                return state;\n        }\n    }\n    const [newParameter, newParameterDispatcher] = useReducer(newParameterReducer, initParameter);\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    let isParameterExist = false;\n    const isParameterExistValue = operation.parameters && operation.parameters.map(\n        (operations) => (operations.in === newParameter.in && operations.name === newParameter.name),\n    );\n\n    if (isParameterExistValue && isParameterExistValue.includes(true)) {\n        isParameterExist = true;\n    } else {\n        isParameterExist = false;\n    }\n\n    const classes = useStyles();\n\n    /**\n     *\n     *\n     */\n    function clearInputs() {\n        newParameterDispatcher({ type: 'clear' });\n    }\n    /**\n     *\n     *\n     */\n    function addNewParameter() {\n        if (newParameter.in === 'body') {\n            operationsDispatcher(specVersion === '2.0'\n                ? {\n                    action: 'parameter',\n                    data: {\n                        target,\n                        verb,\n                        value: {\n                            name: newParameter.name,\n                            description: '',\n                            required: newParameter.required,\n                            in: newParameter.in,\n                            schema: {\n                                type: newParameter.type,\n                            },\n                        },\n                    },\n                }\n                : {\n                    action: 'requestBody',\n                    data: {\n                        target,\n                        verb,\n                        value: {\n                            description: '',\n                            required: newParameter.required,\n                            content: { [newParameter.name]: { schema: { type: 'object' } } },\n                        },\n                    },\n                });\n        } else {\n            operationsDispatcher({ action: 'parameter', data: { target, verb, value: newParameter } });\n        }\n        clearInputs();\n    }\n\n    function isDisabled() {\n        if (specVersion === '2.0') {\n            return (!newParameter.name || !newParameter.type || !newParameter.in || isParameterExist);\n        }\n        return (!newParameter.name || !newParameter.schema.type || !newParameter.in || isParameterExist);\n    }\n\n    function getParameterNameHelperText(paramIn) {\n        if (isParameterExist) {\n            return intl.formatMessage({\n                id: 'Apis.Details.Resources.components.operationComponents.AddParameter.parameter.name.already.exists',\n                defaultMessage: 'Parameter name already exists',\n            });\n        }\n        if (paramIn === 'body') {\n            if (specVersion !== '2.0') {\n                return intl.formatMessage({\n                    id: 'Apis.Details.Resources.components.operationComponents.AddParameter.enter.content.type',\n                    defaultMessage: 'Enter Content Type',\n                });\n            }\n        }\n        return intl.formatMessage({\n            id: 'Apis.Details.Resources.components.operationComponents.AddParameter.enter.parameter.name',\n            defaultMessage: 'Enter Parameter Name',\n        });\n    }\n\n    return (\n        <Grid container direction='row' spacing={1} className={classes.parameterContainer}>\n            <Grid item xs={2} md={2}>\n                <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                    <InputLabel ref={inputLabel} htmlFor='param-in' error={isParameterExist}>\n                        Parameter Type\n                    </InputLabel>\n\n                    <Select\n                        value={newParameter.in}\n                        onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                            name: 'in',\n                            id: 'param-in',\n                        }}\n                        MenuProps={{\n                            getContentAnchorEl: null,\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                        }}\n                        error={isParameterExist}\n                    >\n                        {getParameterTypes(specVersion).map((paramType) => {\n                            if ((paramType === 'body' || paramType === 'formData')\n                                && !['post', 'put', 'patch'].includes(verb)) {\n                                return null;\n                            }\n                            return (\n                                <MenuItem value={paramType} dense>\n                                    {capitalizeFirstLetter(paramType)}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                    {isParameterExist\n                        ? (\n                            <FormHelperText id='my-helper-text' error>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.parameter.name.exists'\n                                    defaultMessage='Parameter type already exists'\n                                />\n                            </FormHelperText>\n                        )\n                        : (\n                            <FormHelperText id='my-helper-text'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.select.parameter.type'\n                                    defaultMessage='Select the parameter type'\n                                />\n                            </FormHelperText>\n                        )}\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <TextField\n                    id='parameter-name'\n                    label={newParameter.in === 'body'\n                        ? iff(specVersion === '2.0',\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.parameter.name'\n                                defaultMessage='Parameter Name'\n                            />,\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.content.type'\n                                defaultMessage='Content Type'\n                            />)\n                        : (\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.parameter.name'\n                                defaultMessage='Parameter Name'\n                            />\n                        )}\n                    name='name'\n                    value={newParameter.name}\n                    onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                    helperText={getParameterNameHelperText(newParameter.in)}\n                    margin='dense'\n                    variant='outlined'\n                    onKeyPress={(event) => {\n                        if (event.key === 'Enter') {\n                            // key code 13 is for `Enter` key\n                            event.preventDefault(); // To prevent form submissions\n                            addNewParameter();\n                        }\n                    }}\n                    error={isParameterExist}\n                />\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                    <InputLabel ref={inputLabel} htmlFor='data-type' error={isParameterExist}>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.data.type'\n                            defaultMessage='Data Type'\n                        />\n                    </InputLabel>\n\n                    <Select\n                        value={newParameter.schema !== undefined ? newParameter.schema.type : newParameter.type}\n                        onChange={({ target: { name, value } }) => newParameterDispatcher({ type: name, value })}\n                        labelWidth={labelWidth}\n                        inputProps={{\n                            name: 'type',\n                            id: 'data-type',\n                        }}\n                        MenuProps={{\n                            getContentAnchorEl: null,\n                            anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'left',\n                            },\n                        }}\n                        error={isParameterExist}\n                    >\n                        {getSupportedDataTypes(specVersion, newParameter.in).map((paramType) => {\n                            return (\n                                <MenuItem value={paramType} dense>\n                                    {capitalizeFirstLetter(paramType)}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                    <FormHelperText id='my-helper-text'>Select the data type</FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <FormControl component='fieldset' className={classes.formControl}>\n                    <FormControlLabel\n                        className={classes.checkBox}\n                        control={(\n                            <Checkbox\n                                checked={newParameter.required}\n                                onChange={\n                                    ({\n                                        target: { name, value },\n                                    }) => newParameterDispatcher({ type: name, value: !value })\n                                }\n                                value={newParameter.required}\n                                inputProps={{\n                                    name: 'required',\n                                }}\n                            />\n                        )}\n                        label={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.required'\n                                defaultMessage='Required'\n                            />\n                        )}\n                    />\n                    <FormHelperText>\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.required.helper.text'\n                            defaultMessage='Check whether the parameter is required.'\n                        />\n                    </FormHelperText>\n                </FormControl>\n            </Grid>\n            <Grid item xs={2} md={2}>\n                <Tooltip\n                    title={(\n                        <FormattedMessage\n                            id='Apis.Details.Resources.components.operationComponents.AddParameter.add.tooltip'\n                            defaultMessage='Add new parameter'\n                        />\n                    )}\n                    aria-label='AddParameter'\n                    placement='bottom'\n                    interactive\n                >\n                    <span>\n                        <Button\n                            style={{ marginLeft: '20px', marginBottom: '15px', marginRight: '20px' }}\n                            disabled={isDisabled()}\n                            size='small'\n                            variant='outlined'\n                            aria-label='add'\n                            color='primary'\n                            onClick={addNewParameter}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.AddParameter.add'\n                                defaultMessage='Add'\n                            />\n                        </Button>\n                    </span>\n                </Tooltip>\n                <sup>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddParameter.clear.inputs.tooltip'\n                                defaultMessage='Clear inputs'\n                            />\n                        )}\n                        aria-label='clear-inputs'\n                        placement='bottom'\n                        interactive\n                    >\n                        <span>\n                            <IconButton onClick={clearInputs} size='small'>\n                                <ClearIcon />\n                            </IconButton>\n                        </span>\n                    </Tooltip>\n                </sup>\n            </Grid>\n        </Grid>\n    );\n}\n\nAddParameter.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    specVersion: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default React.memo(injectIntl(AddParameter));\n","/*\n *  Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport TableCell from '@material-ui/core/TableCell';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TableRow from '@material-ui/core/TableRow';\n\n/**\n * Component to render the Request b\n *\n * */\nfunction RequestBody(props) {\n    const {\n        contentType, content, operation, disableUpdate, hideParameterEdit, operationsDispatcher, target, verb,\n    } = props;\n    return (\n        <TableRow key={contentType}>\n            <TableCell align='left'>\n                <FormattedMessage\n                    id='Apis.Details.Resources.components.operationComponents.ListParameter.body'\n                    defaultMessage='Body'\n                />\n            </TableCell>\n            <TableCell>{contentType}</TableCell>\n            <TableCell align='left'>{content.schema.type}</TableCell>\n            <TableCell align='left'>\n                {operation.requestBody.required\n                    ? (\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.yes'}\n                            defaultMessage='Yes'\n                        />\n                    )\n                    : (\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.no'}\n                            defaultMessage='No'\n                        />\n                    )}\n            </TableCell>\n            {!disableUpdate && (\n                <TableCell align='left'>\n                    {hideParameterEdit && (\n                        <Tooltip title='Edit'>\n                            <IconButton onClick={() => {}} fontSize='small'>\n                                <EditIcon fontSize='small' />\n                            </IconButton>\n                        </Tooltip>\n                    )}\n                    <Tooltip title={(\n                        <FormattedMessage\n                            id={'Apis.Details.Resources.components.operationComponents'\n                            + '.ListParameter.delete'}\n                            defaultMessage='Delete'\n                        />\n                    )}\n                    >\n                        <IconButton\n                            disabled={disableUpdate}\n                            onClick={() => {\n                                operationsDispatcher({\n                                    action: 'requestBody',\n                                    data: {\n                                        target,\n                                        verb,\n                                        value: {\n                                            description: '',\n                                            required: false,\n                                            content: {},\n                                        },\n                                    },\n                                });\n                            }}\n                            fontSize='small'\n                        >\n                            <DeleteIcon fontSize='small' />\n                        </IconButton>\n                    </Tooltip>\n                </TableCell>\n            )}\n        </TableRow>\n    );\n}\n\nRequestBody.propTypes = {\n    contentType: PropTypes.string.isRequired,\n    content: PropTypes.shape({}).isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    disableUpdate: PropTypes.bool.isRequired,\n    hideParameterEdit: PropTypes.bool.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n};\n\nexport default RequestBody;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport {\n    getSupportedDataTypes,\n    getDataFormats,\n    iff,\n} from 'AppComponents/Apis/Details/Resources/components/operationComponents/parameterUtils';\nimport { FormattedMessage } from 'react-intl';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        margin: 'auto',\n        width: 'fit-content',\n    },\n    formControl: {\n        marginTop: theme.spacing(2),\n        minWidth: 120,\n    },\n    formControlLabel: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function EditParameter(props) {\n    const {\n        operationsDispatcher, target, verb, editingParameter, setEditingParameter, version,\n    } = props;\n    /**\n     *\n     *\n     * @param {*} currentParameter\n     * @param {*} paramAction\n     */\n    function parameterActionReducer(currentParameter, paramAction) {\n        const { action, value } = paramAction;\n        const nextParameter = currentParameter.schema\n            ? { ...currentParameter, schema: { ...currentParameter.schema } } : { ...currentParameter };\n        switch (action) {\n            case 'description':\n            case 'required':\n                nextParameter[action] = value;\n                break;\n            case 'type':\n            case 'format':\n                if (nextParameter.schema) {\n                    nextParameter.schema[action] = value;\n                } else {\n                    nextParameter[action] = value;\n                }\n                break;\n            default:\n                break;\n        }\n        return nextParameter;\n    }\n    const [parameter, parameterActionDispatcher] = useReducer(parameterActionReducer, editingParameter);\n    const classes = useStyles();\n\n    const handleClose = () => {\n        setEditingParameter(null);\n    };\n\n    /**\n     *\n     *\n     */\n    function handelDone() {\n        operationsDispatcher({ action: 'parameter', data: { target, verb, value: parameter } });\n        handleClose();\n    }\n    const isEditing = parameter !== null;\n    if (!isEditing) {\n        return null;\n    }\n    return (\n        <Dialog fullWidth maxWidth='md' open={isEditing} onClose={handleClose} aria-labelledby='edit-parameter'>\n            <DialogTitle disableTypography id='edit-parameter'>\n                <Typography variant='h6'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.title'\n                        defaultMessage='Edit'\n                    />\n                    {' '}\n                    <Typography display='inline' variant='subtitle1'>\n                        {capitalizeFirstLetter(parameter.in)}\n                        {' '}\n                        :\n                        {parameter.name}\n                    </Typography>\n                </Typography>\n            </DialogTitle>\n            <DialogContent>\n                <Grid container direction='row' spacing={2} justify='flex-start' alignItems='center'>\n                    <Grid item md={6}>\n                        <TextField\n                            value={capitalizeFirstLetter(parameter.in)}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.type'\n                                    defaultMessage='Parameter Type'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid>\n                    <Grid item md={6}>\n                        <TextField\n                            value={parameter.name}\n                            disabled\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.name'\n                                    defaultMessage='Name'\n                                />\n                            )}\n                            margin='dense'\n                            variant='outlined'\n                        />\n                    </Grid>\n                    <Grid item md={12}>\n                        <TextField\n                            value={parameter.description}\n                            fullWidth\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.description'\n                                    defaultMessage='Description'\n                                />\n                            )}\n                            multiline\n                            rows='4'\n                            name='description'\n                            margin='normal'\n                            variant='outlined'\n                            onChange={({ target: { name, value } }) => {\n                                parameterActionDispatcher({ action: name, value });\n                            }}\n                        />\n                    </Grid>\n                    <Grid item md={6}>\n                        <FormControl\n                            required\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                        >\n                            <InputLabel required id='edit-parameter-type'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.EditParameter.data.type'\n                                    defaultMessage='Data Type'\n                                />\n                            </InputLabel>\n\n                            <Select\n                                value={parameter.schema ? parameter.schema.type : parameter.type}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'type',\n                                    id: 'edit-parameter-type',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getSupportedDataTypes(version, parameter.in).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'select.schema.data.type'}\n                                    defaultMessage='Select the Schema Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid item md={6}>\n                        <FormControl\n                            fullWidth\n                            margin='dense'\n                            variant='outlined'\n                            className={classes.formControl}\n                            disabled={parameter.schema\n                                ? iff(\n                                    parameter.schema.type === 'boolean' || parameter.schema.type === 'object',\n                                    true,\n                                    false,\n                                )\n                                : iff(\n                                    parameter.type === 'boolean' || parameter.type === 'object',\n                                    true,\n                                    false,\n                                )}\n                        >\n                            <InputLabel id='edit-parameter-format'>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'data.format'}\n                                    defaultMessage='Data Format'\n                                />\n                            </InputLabel>\n                            <Select\n                                value={parameter.schema ? parameter.schema.format : parameter.format}\n                                onChange={\n                                    ({ target: { name, value } }) => parameterActionDispatcher({ action: name, value })\n                                }\n                                inputProps={{\n                                    name: 'format',\n                                    id: 'edit-parameter-format',\n                                }}\n                                MenuProps={{\n                                    getContentAnchorEl: null,\n                                    anchorOrigin: {\n                                        vertical: 'bottom',\n                                        horizontal: 'left',\n                                    },\n                                }}\n                            >\n                                {getDataFormats(\n                                    parameter.schema ? parameter.schema.type : parameter.type,\n                                ).map((dataType) => (\n                                    <MenuItem value={dataType} dense>\n                                        {capitalizeFirstLetter(dataType)}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                            <FormHelperText>\n                                <FormattedMessage\n                                    id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                    + 'select.format.of.data.type'}\n                                    defaultMessage='Select the Format of Data Type'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    </Grid>\n                    <Grid item>\n                        <FormControl component='fieldset'>\n                            <FormControlLabel\n                                control={(\n                                    <Checkbox\n                                        checked={parameter.required}\n                                        onChange={(\n                                            { target: { name, checked } },\n                                        ) => parameterActionDispatcher({ action: name, value: checked })}\n                                        value={parameter.required}\n                                        inputProps={{\n                                            name: 'required',\n                                        }}\n                                    />\n                                )}\n                                label={(\n                                    <FormattedMessage\n                                        id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                        + 'required'}\n                                        defaultMessage='Required'\n                                    />\n                                )}\n                            />\n                        </FormControl>\n                    </Grid>\n                    <Grid container direction='row' justify='flex-end' alignItems='center'>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id={'Apis.Details.Resources.components.operationComponents.EditParameter.'\n                                + 'use.done.button.to.persist.changes'}\n                                defaultMessage='Use DONE button in the page to persist changes'\n                            />\n                        </DialogContentText>\n                    </Grid>\n                </Grid>\n            </DialogContent>\n            <DialogActions>\n                <Button size='small' onClick={handleClose} color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.close'\n                        defaultMessage='Close'\n                    />\n                </Button>\n                <Button size='small' onClick={handelDone} variant='contained' color='primary'>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.components.operationComponents.EditParameter.done'\n                        defaultMessage='Done'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nEditParameter.propTypes = {\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    editingParameter: PropTypes.shape({}).isRequired,\n    setEditingParameter: PropTypes.func.isRequired,\n    version: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { capitalizeFirstLetter } from 'AppData/stringFormatter';\nimport { FormattedMessage } from 'react-intl';\nimport { isRef } from 'AppComponents/Apis/Details/Resources/operationUtils';\nimport RequestBody from 'AppComponents/Apis/Details/Resources/components/operationComponents/RequestBody';\nimport EditParameter from './EditParameter';\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n});\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ListParameters(props) {\n    const {\n        operation, operationsDispatcher, target, verb, disableUpdate, hideParameterEdit, specVersion, resolvedSpec,\n    } = props;\n    const classes = useStyles();\n    const [editingParameter, setEditingParameter] = useState(null);\n\n    return (\n        <>\n            {editingParameter !== null && (\n                <EditParameter\n                    operationsDispatcher={operationsDispatcher}\n                    target={target}\n                    verb={verb}\n                    editingParameter={editingParameter}\n                    setEditingParameter={setEditingParameter}\n                    version={specVersion}\n                />\n            )}\n            <Table className={classes.table} aria-label='parameters list'>\n                <TableHead>\n                    <TableRow>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.type'\n                                defaultMessage='Parameter Type'\n                            />\n                        </TableCell>\n                        <TableCell>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.parameter.name'\n                                defaultMessage='Name'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.data.type'\n                                defaultMessage='Data Type'\n                            />\n                        </TableCell>\n                        <TableCell align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.operationComponents.ListParameter.required'\n                                defaultMessage='Required'\n                            />\n                        </TableCell>\n                        {!disableUpdate && (\n                            <TableCell align='left'>\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.operationComponents.ListParameter.actions'\n                                    defaultMessage='Actions'\n                                />\n                            </TableCell>\n                        )}\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {operation.parameters\n                        && operation.parameters.map((parameter, index) => {\n                            const isRefParam = isRef(parameter);\n                            const paramCopy = isRefParam\n                                ? resolvedSpec.paths[target][verb].parameters[index] : parameter;\n                            return (\n                                <TableRow key={paramCopy.name}>\n                                    <TableCell align='left'>{capitalizeFirstLetter(paramCopy.in)}</TableCell>\n                                    <TableCell align='left'>{paramCopy.name}</TableCell>\n                                    <TableCell align='left'>\n                                        {capitalizeFirstLetter(paramCopy.schema\n                                            ? paramCopy.schema.type : paramCopy.type)}\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        {paramCopy.required\n                                            ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                + '.ListParameter.yes'}\n                                                    defaultMessage='Yes'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                + '.ListParameter.no'}\n                                                    defaultMessage='No'\n                                                />\n                                            )}\n                                    </TableCell>\n                                    {!disableUpdate && (\n                                        <TableCell align='left'>\n                                            {!isRefParam && (\n                                                <Tooltip title={(\n                                                    <FormattedMessage\n                                                        id={'Apis.Details.Resources.components.operationComponents.'\n                                                    + 'ListParameter.edit'}\n                                                        defaultMessage='Edit'\n                                                    />\n                                                )}\n                                                >\n                                                    <IconButton\n                                                        onClick={() => setEditingParameter(parameter)}\n                                                        fontSize='small'\n                                                    >\n                                                        <EditIcon fontSize='small' />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            )}\n                                            <Tooltip title={(\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.operationComponents'\n                                                + '.ListParameter.delete'}\n                                                    defaultMessage='Delete'\n                                                />\n                                            )}\n                                            >\n                                                <IconButton\n                                                    disabled={disableUpdate}\n                                                    onClick={() => operationsDispatcher({\n                                                        action: 'deleteParameter',\n                                                        data: { target, verb, value: paramCopy },\n                                                    })}\n                                                    fontSize='small'\n                                                >\n                                                    <DeleteIcon fontSize='small' />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </TableCell>\n                                    )}\n                                </TableRow>\n                            );\n                        })}\n                    {operation.requestBody && (isRef(operation.requestBody)\n                        ? Object.entries(resolvedSpec.paths[target][verb].requestBody.content).map(\n                            ([contentType, content]) => {\n                                return (\n                                    <RequestBody\n                                        contentType={contentType}\n                                        content={content}\n                                        operation={operation}\n                                        disableUpdate={disableUpdate}\n                                        hideParameterEdit={hideParameterEdit}\n                                        operationsDispatcher={operationsDispatcher}\n                                        target={target}\n                                        verb={verb}\n                                    />\n                                );\n                            },\n                        ) : Object.entries(operation.requestBody.content).map(([contentType, content]) => {\n                            return (\n                                <RequestBody\n                                    contentType={contentType}\n                                    content={content}\n                                    operation={operation}\n                                    disableUpdate={disableUpdate}\n                                    hideParameterEdit={hideParameterEdit}\n                                    operationsDispatcher={operationsDispatcher}\n                                    target={target}\n                                    verb={verb}\n                                />\n                            );\n                        }))}\n                </TableBody>\n            </Table>\n        </>\n    );\n}\n\nListParameters.defaultProps = {\n    hideParameterEdit: false,\n    disableUpdate: false,\n};\nListParameters.propTypes = {\n    operation: PropTypes.shape({}).isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    hideParameterEdit: PropTypes.bool,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n    specVersion: PropTypes.string.isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport { getVersion } from 'AppComponents/Apis/Details/Resources/operationUtils';\nimport AddParameter from './AddParameter';\nimport ListParameters from './ListParameters';\n\n/**\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function Parameters(props) {\n    const {\n        operation, spec, target, verb, operationsDispatcher, disableUpdate, resolvedSpec,\n    } = props;\n    const specVersion = getVersion(spec);\n    const haveParameters = (operation.parameters && operation.parameters.length !== 0) || operation.requestBody;\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Parameters\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={1} />\n            <Grid item xs={11}>\n                {!disableUpdate && (\n                    <AddParameter\n                        target={target}\n                        verb={verb}\n                        operationsDispatcher={operationsDispatcher}\n                        operation={operation}\n                        specVersion={specVersion}\n                    />\n                )}\n            </Grid>\n            <Grid item md={1} />\n            <Grid item md={11}>\n                {haveParameters && (\n                    <ListParameters\n                        disableUpdate={disableUpdate}\n                        target={target}\n                        verb={verb}\n                        operationsDispatcher={operationsDispatcher}\n                        operation={operation}\n                        spec={spec}\n                        specVersion={specVersion}\n                        resolvedSpec={resolvedSpec}\n                    />\n                )}\n            </Grid>\n        </>\n    );\n}\n\nParameters.propTypes = {\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    operation: PropTypes.shape({}).isRequired,\n    disableUpdate: PropTypes.bool,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n};\n\nParameters.defaultProps = {\n    disableUpdate: false,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function CloseConfirmation(props) {\n    const { open, onClose, closeEditor } = props;\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            <DialogTitle id='alert-dialog-title'>Discard changes and Close</DialogTitle>\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    All the unsaved changes will be lost\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color='primary'>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() => {\n                        onClose();\n                        closeEditor();\n                    }}\n                    color='primary'\n                    autoFocus\n                >\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n\nCloseConfirmation.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    closeEditor: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Suspense, lazy, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Fade from '@material-ui/core/Fade';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Banner from 'AppComponents/Shared/Banner';\nimport CloseConfirmation from './CloseConfirmation';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"PolicyEditorMonaco\" */));\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        // position: 'relative',\n        top: 'auto',\n        bottom: 0,\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n}));\n\nconst Transition = React.forwardRef((props, ref) => {\n    return <Fade in ref={ref} {...props} />;\n});\n\n/**\n *\n *\n * @export\n * @returns\n */\nexport default function PolicyEditor(props) {\n    const classes = useStyles();\n    const [api] = useAPI();\n    const {\n        open,\n        onClose,\n        prefersDarkMode,\n        originalResourcePolicy,\n        selectedPolicy,\n        setPolicyContent,\n        resourcePoliciesDispatcher,\n        direction,\n    } = props;\n    const [pageError, setPageError] = useState(null);\n    const [openConfirmation, setOpenConfirmation] = useState(false);\n    const [saving, setSaving] = useState(false);\n\n    const editorOptions = {\n        selectOnLineNumbers: true,\n        readOnly: saving,\n        smoothScrolling: true,\n        wordWrap: 'on',\n    };\n    const editorProps = {\n        language: 'xml',\n        height: 'calc(100vh)',\n        theme: prefersDarkMode ? 'vs-dark' : 'vs',\n        value: selectedPolicy.content,\n        options: editorOptions,\n        onChange: setPolicyContent,\n    };\n\n    /**\n     *\n     *\n     */\n    function confirmAndClose() {\n        // No need to confirm if user have not done any changes\n        if (selectedPolicy.content !== originalResourcePolicy.content) {\n            setOpenConfirmation(true);\n        } else {\n            onClose();\n        }\n    }\n    /**\n     *\n     *\n     */\n    function save() {\n        setSaving(true);\n        api.updateResourcePolicy(selectedPolicy)\n            .then((response) => {\n                Alert.success('Resource policy updated successfully');\n                resourcePoliciesDispatcher({ action: 'update', data: { value: response.body, direction } });\n                onClose();\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                } else {\n                    // TODO add i18n ~tmkb\n                    const message = error.message || 'Something went wrong while updating resource policy!';\n                    Alert.error(message);\n                    setPageError(message);\n                }\n                console.error(error);\n            })\n            .finally(() => setSaving(false));\n    }\n\n    return (\n        <Dialog fullScreen open={open} onClose={onClose} TransitionComponent={Transition}>\n            <AppBar position='fixed' color='default' className={classes.appBar}>\n                <Toolbar variant='dense'>\n                    <Grid container direction='row' justify='flex-start' alignItems='flex-start'>\n                        <Grid item>\n                            <Button\n                                disabled={saving}\n                                variant='outlined'\n                                color='primary'\n                                className={classes.title}\n                                onClick={save}\n                            >\n                                save & close\n                                {saving && <CircularProgress size={18} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button color='inherit' className={classes.title} onClick={confirmAndClose}>\n                                close\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Grid container direction='row' justify='center' alignItems='center'>\n                {pageError && (\n                    <Grid item xs={12}>\n                        <Banner\n                            onClose={() => setPageError(null)}\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='error'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n            </Grid>\n            <Grid item xs={12}>\n                <Suspense fallback={<CircularProgress disableShrink />}>\n                    <MonacoEditor {...editorProps} />\n                </Suspense>\n            </Grid>\n            <CloseConfirmation\n                open={openConfirmation}\n                onClose={() => {\n                    setPolicyContent(originalResourcePolicy.content);\n                    setOpenConfirmation(false);\n                }}\n                closeEditor={onClose}\n            />\n        </Dialog>\n    );\n}\nPolicyEditor.defaultProps = {\n    open: false,\n    onClose: () => {},\n    prefersDarkMode: false,\n\n};\nPolicyEditor.propTypes = {\n    open: PropTypes.bool,\n    onClose: PropTypes.func,\n    prefersDarkMode: PropTypes.bool,\n    originalResourcePolicy: PropTypes.shape({}).isRequired,\n    selectedPolicy: PropTypes.shape({}).isRequired,\n    setPolicyContent: PropTypes.func.isRequired,\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    direction: PropTypes.oneOf(['in', 'out']).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useState, Suspense, lazy, useEffect,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\n\nimport PolicyEditor from './PolicyEditor';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"SOAPToRESTMonaco\" */));\n\n/**\n *\n * Renders the operation parameters section\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SOAPToRESTListing(props) {\n    const { resourcePolicy, resourcePoliciesDispatcher } = props;\n    const [resourcePolicyIn, setResourcePolicyIn] = useState(resourcePolicy.in);\n    const [resourcePolicyOut, setResourcePolicyOut] = useState(resourcePolicy.out);\n    useEffect(() => {\n        setResourcePolicyIn(resourcePolicy.in);\n        setResourcePolicyOut(resourcePolicy.out);\n    }, [resourcePolicy]);\n    // Get use preference from OS https://material-ui.com/customization/palette/#user-preference\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [openEditor, setOpenEditor] = useState(false);\n    const [selectedTab, setTabIndex] = useState('in');\n    const editorOptions = {\n        selectOnLineNumbers: true,\n        readOnly: true,\n        smoothScrolling: true,\n        wordWrap: 'on',\n    };\n    const selectedPolicy = selectedTab === 'in' ? resourcePolicyIn : resourcePolicyOut;\n    const editorProps = {\n        language: 'xml',\n        height: 'calc(50vh)',\n        theme: prefersDarkMode ? 'vs-dark' : 'vs',\n        value: selectedPolicy.content,\n        options: editorOptions,\n    };\n\n    /**\n     *\n     *\n     * @param {*} content\n     */\n    function setPolicyContent(content) {\n        if (selectedTab === 'in') {\n            setResourcePolicyIn({ ...resourcePolicyIn, content });\n        } else {\n            setResourcePolicyOut({ ...resourcePolicyOut, content });\n        }\n    }\n    return (\n        <>\n            <Grid item xs={12} md={12}>\n                <Typography variant='subtitle1'>\n                    Mediation\n                    <Divider variant='middle' />\n                </Typography>\n            </Grid>\n            <Grid item xs={12}>\n                <Tabs\n                    value={selectedTab}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    onChange={(event, tab) => setTabIndex(tab)}\n                    aria-label='Resource mediation in/out tabs'\n                >\n                    <Tab value='in' label='In' />\n                    <Tab value='out' label='Out' />\n                </Tabs>\n                <Box p={1}>\n                    <Button onClick={() => setOpenEditor(true)} variant='outlined' size='small' color='primary'>\n                        Edit\n                        {' '}\n                        <EditIcon />\n                    </Button>\n                    {!openEditor && (\n                        <Paper elevation={4}>\n                            <Suspense fallback={<CircularProgress disableShrink />}>\n                                <MonacoEditor {...editorProps} />\n                            </Suspense>\n                        </Paper>\n                    )}\n                </Box>\n            </Grid>\n            <PolicyEditor\n                resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                setPolicyContent={setPolicyContent}\n                selectedPolicy={selectedPolicy}\n                originalResourcePolicy={resourcePolicy[selectedTab]}\n                direction={selectedTab}\n                prefersDarkMode={prefersDarkMode}\n                onClose={() => setOpenEditor(false)}\n                open={openEditor}\n            />\n        </>\n    );\n}\n\nSOAPToRESTListing.defaultProps = {\n    disableUpdate: false,\n};\nSOAPToRESTListing.propTypes = {\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    resourcePolicy: PropTypes.shape({}).isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    disableUpdate: PropTypes.bool,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Utils from 'AppData/Utils';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport ReportProblemOutlinedIcon from '@material-ui/icons/ReportProblemOutlined';\n// spliced operation components\n\nimport { FormattedMessage } from 'react-intl';\nimport DescriptionAndSummary from './operationComponents/DescriptionAndSummary';\nimport OperationGovernance from './operationComponents/OperationGovernance';\nimport AWSLambdaSettings from './operationComponents/AWSLambdaSettings';\nimport Parameters from './operationComponents/Parameters';\nimport SOAPToRESTListing from './operationComponents/SOAPToREST/SOAPToRESTListing';\nimport { getOperationScopes } from '../operationUtils';\n\n/**\n *\n * Handle the operation UI\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nfunction Operation(props) {\n    const {\n        operation,\n        operationsDispatcher,\n        highlight,\n        operationRateLimits,\n        api,\n        disableDelete,\n        disableUpdate,\n        onMarkAsDelete,\n        markAsDelete,\n        hideParameters,\n        spec,\n        resourcePolicy,\n        resourcePoliciesDispatcher,\n        target,\n        verb,\n        arns,\n        resolvedSpec,\n        sharedScopes,\n    } = props;\n    const [isExpanded, setIsExpanded] = useState(false);\n    const useStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb];\n        return {\n            customButton: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                width: theme.spacing(12),\n            },\n            paperStyles: {\n                border: `1px solid ${backgroundColor}`,\n                borderBottom: '',\n            },\n            customDivider: {\n                backgroundColor,\n            },\n            linearProgress: {\n                height: '2px',\n            },\n            highlightSelected: {\n                backgroundColor: Utils.hexToRGBA(backgroundColor, 0.1),\n            },\n            contentNoMargin: {\n                margin: theme.spacing(0),\n            },\n            overlayUnmarkDelete: {\n                position: 'absolute',\n                zIndex: theme.zIndex.operationDeleteUndo,\n                right: '10%',\n            },\n        };\n    });\n    const apiOperation = api.operations[target] && api.operations[target][verb.toUpperCase()];\n    const isUsedInAPIProduct = apiOperation && Array.isArray(\n        apiOperation.usedProductIds,\n    ) && apiOperation.usedProductIds.length;\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function toggleDelete(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        setIsExpanded(false);\n        onMarkAsDelete({ verb, target }, !markAsDelete);\n    }\n\n    /**\n     *\n     *\n     * @param {*} event\n     * @param {*} expanded\n     */\n    function handleExpansion(event, expanded) {\n        setIsExpanded(expanded);\n    }\n    const classes = useStyles();\n    return (\n        <>\n            {markAsDelete && (\n                <Box className={classes.overlayUnmarkDelete}>\n                    <Tooltip title='Marked for delete' aria-label='Marked for delete'>\n                        <Button onClick={toggleDelete} variant='outlined' style={{ marginTop: '10px' }}>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.Operation.undo.delete'\n                                defaultMessage='Undo Delete'\n                            />\n                        </Button>\n                    </Tooltip>\n                </Box>\n            )}\n            <ExpansionPanel\n                expanded={isExpanded}\n                onChange={handleExpansion}\n                disabled={markAsDelete}\n                className={classes.paperStyles}\n            >\n                <ExpansionPanelSummary\n                    className={highlight ? classes.highlightSelected : ''}\n                    disableRipple\n                    disableTouchRipple\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel2a-content'\n                    id='panel2a-header'\n                    classes={{ content: classes.contentNoMargin }}\n                >\n                    <Grid container direction='row' justify='space-between' alignItems='center' spacing={0}>\n                        <Grid item md={4}>\n                            <Badge invisible={!operation['x-wso2-new']} color='error' variant='dot'>\n                                <Button\n                                    disableFocusRipple\n                                    variant='contained'\n                                    size='small'\n                                    className={classes.customButton}\n                                >\n                                    {verb}\n                                </Button>\n                            </Badge>\n                            <Typography display='inline' style={{ margin: '0px 30px' }} variant='h6' gutterBottom>\n                                {target}\n                                <Typography\n                                    display='inline'\n                                    style={{ margin: '0px 30px' }}\n                                    variant='caption'\n                                    gutterBottom\n                                >\n                                    {operation.summary}\n                                </Typography>\n                            </Typography>\n                        </Grid>\n                        {(isUsedInAPIProduct) ? (\n                            <Grid item md={3}>\n                                <Box display='flex' justifyContent='center'>\n                                    <ReportProblemOutlinedIcon fontSize='small' />\n                                    <Box display='flex' ml={1} mt={1 / 4} fontSize='caption.fontSize'>\n                                        <FormattedMessage\n                                            id={'Apis.Details.Resources.components.Operation.this.operation.'\n                                            + 'used.in.products'}\n                                            defaultMessage={'This operation is used in {isUsedInAPIProduct} API '\n                                            + 'product(s)'}\n                                            values={{ isUsedInAPIProduct }}\n                                        />\n                                    </Box>\n                                </Box>\n                            </Grid>\n                        ) : (\n                            <Grid item md={3} />\n                        )}\n                        <Grid item md={4}>\n                            <Typography\n                                display='inline'\n                                style={{ margin: '0px 30px' }}\n                                variant='caption'\n                                gutterBottom\n                            >\n                                <b>{ getOperationScopes(operation, spec) != null && 'Scope : ' }</b>\n                                { getOperationScopes(operation, spec) != null\n                                    && getOperationScopes(operation, spec).join(', ') }\n                            </Typography>\n                        </Grid>\n                        {!(disableDelete || markAsDelete) && (\n                            <Grid item md={1} justify='flex-end' container>\n                                <Tooltip\n                                    title={\n                                        isUsedInAPIProduct\n                                            ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Resources.components.Operation.cannot.delete'\n                                                    + '.when.used.in.api.products'}\n                                                    defaultMessage='Cannot delete operation when used in an API product'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Resources.components.Operation.Delete'\n                                                    defaultMessage='Delete'\n                                                />\n                                            )\n                                    }\n                                    aria-label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.components.Operation.delete.operation'\n                                            defaultMessage='Delete operation'\n                                        />\n                                    )}\n                                >\n                                    <div>\n                                        <IconButton\n                                            disabled={Boolean(isUsedInAPIProduct) || disableUpdate}\n                                            onClick={toggleDelete}\n                                            aria-label='delete'\n                                        >\n                                            <DeleteIcon fontSize='small' />\n                                        </IconButton>\n                                    </div>\n                                </Tooltip>\n                            </Grid>\n                        )}\n                    </Grid>\n                </ExpansionPanelSummary>\n                <Divider light className={classes.customDivider} />\n                <ExpansionPanelDetails>\n                    <Grid spacing={2} container direction='row' justify='flex-start' alignItems='flex-start'>\n                        <DescriptionAndSummary\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            disableUpdate={disableUpdate}\n                            target={target}\n                            verb={verb}\n                        />\n                        <OperationGovernance\n                            operation={operation}\n                            operationsDispatcher={operationsDispatcher}\n                            operationRateLimits={operationRateLimits}\n                            api={api}\n                            disableUpdate={disableUpdate}\n                            spec={spec}\n                            target={target}\n                            verb={verb}\n                            sharedScopes={sharedScopes}\n                        />\n                        {!hideParameters && (\n                            <Parameters\n                                operation={operation}\n                                operationsDispatcher={operationsDispatcher}\n                                operationRateLimits={operationRateLimits}\n                                api={api}\n                                disableUpdate={disableUpdate}\n                                spec={spec}\n                                target={target}\n                                verb={verb}\n                                resolvedSpec={resolvedSpec}\n                            />\n                        )}\n                        {resourcePolicy && (\n                            <SOAPToRESTListing\n                                operation={operation}\n                                operationsDispatcher={operationsDispatcher}\n                                operationRateLimits={operationRateLimits}\n                                resourcePolicy={resourcePolicy}\n                                resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                                disableUpdate={disableUpdate}\n                                spec={spec}\n                                target={target}\n                                verb={verb}\n                            />\n                        )}\n                        {\n                            api.endpointConfig\n                            && api.endpointConfig.endpoint_type\n                            && api.endpointConfig.endpoint_type === 'awslambda'\n                            && (\n                                <AWSLambdaSettings\n                                    operation={operation}\n                                    operationsDispatcher={operationsDispatcher}\n                                    target={target}\n                                    verb={verb}\n                                    arns={arns}\n                                />\n                            )\n                        }\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\nOperation.defaultProps = {\n    highlight: false,\n    disableUpdate: false,\n    hideParameters: false,\n    disableDelete: false,\n    onMarkAsDelete: () => {},\n    markAsDelete: false,\n    operationRateLimits: [], // Response body.list from apis policies for `api` throttling policies type\n};\nOperation.propTypes = {\n    api: PropTypes.shape({ scopes: PropTypes.arrayOf(PropTypes.shape({})), resourcePolicies: PropTypes.shape({}) })\n        .isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n    onMarkAsDelete: PropTypes.func,\n    resourcePoliciesDispatcher: PropTypes.func.isRequired,\n    markAsDelete: PropTypes.bool,\n    disableDelete: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n    hideParameters: PropTypes.bool,\n    resourcePolicy: PropTypes.shape({}).isRequired,\n    operation: PropTypes.shape({\n        'x-wso2-new': PropTypes.bool,\n        summary: PropTypes.string,\n    }).isRequired,\n    target: PropTypes.string.isRequired,\n    verb: PropTypes.string.isRequired,\n    spec: PropTypes.shape({}).isRequired,\n    highlight: PropTypes.bool,\n    operationRateLimits: PropTypes.arrayOf(PropTypes.shape({})),\n    arns: PropTypes.shape([]).isRequired,\n    resolvedSpec: PropTypes.shape({}).isRequired,\n    sharedScopes: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n\nexport default React.memo(Operation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport PropTypes from 'prop-types';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n/**\n *\n * Return a group container , User should provide the operations list as the child component\n * @export\n * @param {*} props\n * @returns {React.Component} @inheritdoc\n */\nexport default function GroupOfOperations(props) {\n    const { openAPI, children, tag } = props;\n    const currentTagInfo = openAPI.tags && openAPI.tags.find((tagInfo) => tagInfo.name === tag);\n    return (\n        <ExpansionPanel defaultExpanded>\n            <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />} aria-controls='panel1a-content' id='panel1a-header'>\n                <Typography variant='h4'>\n                    {tag}\n                    {currentTagInfo && (\n                        <Typography style={{ margin: '0px 30px' }} variant='caption'>\n                            {currentTagInfo.description}\n                        </Typography>\n                    )}\n                </Typography>\n            </ExpansionPanelSummary>\n            <ExpansionPanelDetails>{children}</ExpansionPanelDetails>\n        </ExpansionPanel>\n    );\n}\n\nGroupOfOperations.propTypes = {\n    children: PropTypes.element.isRequired,\n    openAPI: PropTypes.shape({ tags: PropTypes.arrayOf(PropTypes.string) }).isRequired,\n    tag: PropTypes.string.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PropTypes from 'prop-types';\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SpecErrors(props) {\n    const { specErrors } = props;\n    const [open, setOpen] = useState(false);\n    if (specErrors.length === 0) {\n        return null;\n    }\n    return (\n        <>\n            <sup>\n                <Tooltip title='Show errors'>\n                    <IconButton onClick={() => setOpen(true)} color='secondary' aria-label='Errors in spec'>\n                        <ErrorOutlineIcon color='error' />\n                    </IconButton>\n                </Tooltip>\n            </sup>\n            <Dialog maxWidth='md' aria-labelledby='confirmation-dialog-title' open={open}>\n                <DialogTitle id='confirmation-dialog-title'>\n                    <Typography display='inline' color='textPrimary' variant='h6'>\n                        Errors\n                        <Typography display='inline' variant='subtitle2'>\n                            {' '}\n                            in OpenAPI definition\n                        </Typography>\n                    </Typography>\n                </DialogTitle>\n                <DialogContent dividers>\n                    <List>\n                        {specErrors.map((error, index) => (\n                            <>\n                                {index % 2 !== 0 && <Divider light variant='inset' />}\n                                <ListItem>\n                                    <ListItemText\n                                        primary={error.message}\n                                        primaryTypographyProps={{\n                                            color: 'error',\n                                        }}\n                                        inset\n                                    />\n                                </ListItem>\n                            </>\n                        ))}\n                    </List>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setOpen(false)} color='primary'>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nSpecErrors.propTypes = {\n    specErrors: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, {\n    useState, useRef, useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport AddIcon from '@material-ui/icons/Add';\nimport { FormattedMessage, useIntl } from 'react-intl';\n\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Fab from '@material-ui/core/Fab';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Badge from '@material-ui/core/Badge';\nimport APIValidation from 'AppData/APIValidation';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        minWidth: 120,\n    },\n    paper: {\n        paddingLeft: theme.spacing(4),\n        paddingTop: theme.spacing(1.5),\n        paddingBottom: theme.spacing(0.5),\n        marginTop: '12px',\n    },\n}));\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nfunction VerbElement(props) {\n    const {\n        verb, onClick, isButton, checked,\n    } = props;\n\n    const useMenuStyles = makeStyles((theme) => {\n        const backgroundColor = theme.custom.resourceChipColors[verb.toLowerCase()];\n        return {\n            customMenu: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n            customButton: {\n                '&:hover': { backgroundColor },\n                backgroundColor,\n                width: theme.spacing(12),\n                marginLeft: theme.spacing(1),\n                color: theme.palette.getContrastText(backgroundColor),\n            },\n        };\n    });\n    const classes = useMenuStyles();\n    if (isButton) {\n        return (\n            <Button disableFocusRipple variant='contained' className={classes.customButton} size='small'>\n                {verb}\n            </Button>\n        );\n    } else {\n        return (\n            <MenuItem dense className={classes.customMenu} onClick={onClick}>\n                <Checkbox checked={checked} />\n                {verb}\n            </MenuItem>\n        );\n    }\n}\n\nconst SUPPORTED_VERBS = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS'];\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nfunction AddOperation(props) {\n    const { operationsDispatcher } = props;\n    const inputLabel = useRef(null);\n    const [labelWidth, setLabelWidth] = useState(0);\n    const intl = useIntl();\n\n    /**\n     *\n     *\n     * @param {*} state\n     * @param {*} action\n     * @returns\n     */\n    function newOperationsReducer(state, action) {\n        const { type, value } = action;\n        switch (type) {\n            case 'target':\n            case 'verbs':\n                return { ...state, [type]: value };\n            case 'clear':\n                return { verbs: [], target: '' };\n            case 'error':\n                return { ...state, error: value };\n            default:\n                return state;\n        }\n    }\n    const [newOperations, newOperationsDispatcher] = useReducer(newOperationsReducer, { verbs: [] });\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n    const classes = useStyles();\n\n    /**\n     *\n     *\n     */\n    function clearInputs() {\n        newOperationsDispatcher({ type: 'clear' });\n    }\n    /**\n     *\n     *\n     */\n    function addOperation() {\n        if (\n            APIValidation.operationTarget.validate(newOperations.target).error !== null\n            || APIValidation.operationVerbs.validate(newOperations.verbs).error !== null\n        ) {\n            Alert.warning(intl.formatMessage({\n                id: 'Apis.Details.Resources.components.AddOperation.operation.target.or.verb.cannot.be.empty.warning',\n                defaultMessage: \"Operation target or operation verb(s) can't be empty\",\n            }));\n            return;\n        }\n        operationsDispatcher({ action: 'add', data: newOperations });\n        clearInputs();\n    }\n    return (\n        <Paper className={classes.paper}>\n            <Grid container direction='row' spacing={0} justify='center' alignItems='center'>\n                <Grid item md={5} xs={12}>\n                    <FormControl margin='dense' variant='outlined' className={classes.formControl}>\n                        <InputLabel ref={inputLabel} htmlFor='outlined-age-simple'>\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddOperation.http.verb'\n                                defaultMessage='HTTP Verb'\n                            />\n                        </InputLabel>\n\n                        <Select\n                            multiple\n                            renderValue={(verbs) => {\n                                const remaining = [];\n                                const verbElements = verbs.map((verb, index) => {\n                                    if (index < 2) {\n                                        return <VerbElement isButton verb={verb} />;\n                                    }\n                                    remaining.push(verb.toUpperCase());\n                                    return null;\n                                });\n                                const allSelected = verbs.length === SUPPORTED_VERBS.length;\n                                return (\n                                    <>\n                                        {verbElements}\n                                        {remaining.length > 0 && (\n                                            <Tooltip title={remaining.join(', ')} placement='top'>\n                                                <Box display='inline' color='text.hint' m={1} fontSize='subtitle1'>\n                                                    {allSelected ? 'All selected' : `${verbs.length - 2} more`}\n                                                </Box>\n                                            </Tooltip>\n                                        )}\n                                    </>\n                                );\n                            }}\n                            value={newOperations.verbs}\n                            onChange={({ target: { name, value } }) => newOperationsDispatcher({ type: name, value })}\n                            labelWidth={labelWidth}\n                            inputProps={{\n                                name: 'verbs',\n                                id: 'operation-verb',\n                            }}\n                            MenuProps={{\n                                getContentAnchorEl: null,\n                                anchorOrigin: {\n                                    vertical: 'bottom',\n                                    horizontal: 'left',\n                                },\n                            }}\n                        >\n                            {SUPPORTED_VERBS.map((verb) => (\n                                <VerbElement\n                                    checked={newOperations.verbs.includes(verb.toLowerCase())}\n                                    value={verb.toLowerCase()}\n                                    verb={verb}\n                                />\n                            ))}\n                        </Select>\n\n                        <FormHelperText id='my-helper-text'>\n                            {newOperations.verbs.includes('option') && (\n                                // TODO: Add i18n to tooltip text ~tmkb\n                                <Tooltip\n                                    title={\n                                        'Select the OPTION method to send OPTIONS calls to the backend.'\n                                        + ' If the OPTIONS method is not selected, OPTIONS calls will be returned '\n                                        + 'from the Gateway with allowed methods.'\n                                    }\n                                    placement='bottom'\n                                >\n                                    <Badge color='error' variant='dot'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Resources.components.AddOperation.option'\n                                            defaultMessage='OPTION'\n                                        />\n                                    </Badge>\n                                </Tooltip>\n                            )}\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item md={5} xs={8}>\n                    <TextField\n                        id='operation-target'\n                        label='URI Pattern'\n                        error={Boolean(newOperations.error)}\n                        autoFocus\n                        name='target'\n                        value={newOperations.target}\n                        onChange={({ target: { name, value } }) => newOperationsDispatcher(\n                            { type: name, value: value.startsWith('/') ? value : `/${value}` },\n                        )}\n                        placeholder='Enter URI pattern'\n                        helperText={newOperations.error || 'Enter URI pattern'}\n                        fullWidth\n                        margin='dense'\n                        variant='outlined'\n                        InputLabelProps={{\n                            shrink: true,\n                        }}\n                        onKeyPress={(event) => {\n                            if (event.key === 'Enter') {\n                                // key code 13 is for `Enter` key\n                                event.preventDefault(); // To prevent form submissions\n                                addOperation();\n                            }\n                        }}\n                    />\n                </Grid>\n                <Grid item md={2} xs={4}>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Resources.components.AddOperation.add.tooltip'\n                                defaultMessage='Add new operation'\n                            />\n                        )}\n                        aria-label='AddOperation'\n                        placement='bottom'\n                        interactive\n                    >\n                        <span>\n                            <Fab\n                                style={{ marginLeft: '20px', marginBottom: '15px', marginRight: '20px' }}\n                                size='small'\n                                color='primary'\n                                aria-label='add'\n                                onClick={addOperation}\n                            >\n                                <AddIcon />\n                            </Fab>\n                        </span>\n                    </Tooltip>\n                    <sup>\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.components.AddOperation.clear.inputs.tooltip'\n                                    defaultMessage='Clear inputs'\n                                />\n                            )}\n                            aria-label='clear-inputs'\n                            placement='bottom'\n                            interactive\n                        >\n                            <span>\n                                <IconButton onClick={clearInputs} size='small'>\n                                    <ClearIcon />\n                                </IconButton>\n                            </span>\n                        </Tooltip>\n                    </sup>\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n}\n\nAddOperation.propTypes = {\n    operationsDispatcher: PropTypes.func.isRequired,\n};\n\nexport default React.memo(AddOperation);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\n\n/**\n *\n * Simply reders the edit api definition link in the bottom of the resources listing\n * @export\n * @param {*} props\n * @returns\n */\nexport default function GoToDefinitionLink(props) {\n    const { api, message } = props;\n    return (\n        <Box m={1}>\n            <Link to={`/apis/${api.id}/api definition`}>\n                <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                    {message}\n                    <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                </Typography>\n            </Link>\n        </Box>\n    );\n}\nGoToDefinitionLink.defaultProps = {\n    message: 'Edit API Definition',\n};\nGoToDefinitionLink.propTypes = {\n    api: PropTypes.shape({ id: PropTypes.string }).isRequired,\n    message: PropTypes.string,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\nimport isEmpty from 'lodash.isempty';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\n/**\n *\n *\n * @param {*} props\n * @returns\n */\nexport default function OperationsSelector(props) {\n    const { selectedOperations, setSelectedOperation, operations } = props;\n    const [apiFromContext] = useAPI();\n\n    // TODO: Following logic introduce a limitation in showing `indeterminate` icon state if user\n    // select all -> unchecked one operation -> recheck same operation again ~tmkb\n    const isIndeterminate = !isEmpty(selectedOperations);\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function handleSelector() {\n        setSelectedOperation(isIndeterminate ? {} : operations);\n    }\n    return (\n        <Grid container direction='row' justify='space-between' alignItems='center'>\n            <Grid item />\n            <Grid item>\n                <Box mr={17.25}>\n                    <Tooltip title={isIndeterminate ? 'Clear selections' : 'Mark all for delete'}>\n                        <div>\n                            <IconButton\n                                disabled={isRestricted(['apim:api_create'], apiFromContext)}\n                                onClick={handleSelector}\n                                aria-label='delete all'\n                                size='large'\n                            >\n                                {isIndeterminate ? <ClearAllIcon /> : <DeleteSweepIcon />}\n                            </IconButton>\n                        </div>\n                    </Tooltip>\n                </Box>\n            </Grid>\n        </Grid>\n    );\n}\n\nOperationsSelector.defaultProps = {};\n\nOperationsSelector.propTypes = {\n    selectedOperations: PropTypes.shape({}).isRequired,\n    setSelectedOperation: PropTypes.func.isRequired,\n    operations: PropTypes.shape({}).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function SaveOperations(props) {\n    const { updateOpenAPI, operationsDispatcher, api } = props;\n    const [isSaving, setIsSaving] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    /**\n     * Handle the Save button event,\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateOpenAPI('save').finally(() => setIsSaving(false));\n    }\n    return (\n        <>\n            <Box>\n                <Button\n                    disabled={isSaving || isRestricted(['apim:api_create'], api)}\n                    onClick={saveChanges}\n                    variant='contained'\n                    color='primary'\n                >\n                    Save\n                    {isSaving && <CircularProgress size={24} />}\n                </Button>\n                <Box display='inline' ml={1}>\n                    <Button onClick={() => setIsOpen(true)}>Reset</Button>\n                </Box>\n            </Box>\n            <Dialog\n                open={isOpen}\n                aria-labelledby='bulk-delete-dialog-title'\n                aria-describedby='bulk-delete-dialog-description'\n                onBackdropClick={() => setIsOpen(false)}\n            >\n                <DialogTitle id='bulk-delete-dialog-title'>Discard changes</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='bulk-delete-dialog-description'>\n                        Please confirm the discard all changes action\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setIsOpen(false)}>CLOSE</Button>\n                    <Box ml={1}>\n                        <Button\n                            onClick={() => {\n                                operationsDispatcher({ action: 'init' });\n                                setIsOpen(false);\n                            }}\n                            color='error'\n                        >\n                        RESET\n                        </Button>\n                    </Box>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\nSaveOperations.propTypes = {\n    updateOpenAPI: PropTypes.func.isRequired,\n    operationsDispatcher: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useReducer, useEffect, useState, useCallback, useMemo,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash/isEmpty';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Banner from 'AppComponents/Shared/Banner';\nimport API from 'AppData/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport PropTypes from 'prop-types';\nimport SwaggerParser from 'swagger-parser';\nimport { isRestricted } from 'AppData/AuthManager';\nimport CONSTS from 'AppData/Constants';\nimport Operation from './components/Operation';\nimport GroupOfOperations from './components/GroupOfOperations';\nimport SpecErrors from './components/SpecErrors';\nimport AddOperation from './components/AddOperation';\nimport GoToDefinitionLink from './components/GoToDefinitionLink';\nimport APIRateLimiting from './components/APIRateLimiting';\nimport {\n    extractPathParameters, isSelectAll, mapAPIOperations, getVersion, VERSIONS,\n} from './operationUtils';\nimport OperationsSelector from './components/OperationsSelector';\nimport SaveOperations from './components/SaveOperations';\n\n/**\n * This component handles the Resource page in API details though it's written in a sharable way\n * that anyone could use this to render resources in anywhere else if needed.\n *\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function Resources(props) {\n    const {\n        operationProps,\n        disableRateLimiting,\n        hideAPIDefinitionLink,\n        disableMultiSelect,\n        disableUpdate,\n        disableAddOperation,\n    } = props;\n\n    const [api, updateAPI] = useAPI();\n    const [pageError, setPageError] = useState(false);\n    const [operationRateLimits, setOperationRateLimits] = useState([]);\n    const [markedOperations, setSelectedOperation] = useState({});\n    const [sharedScopes, setSharedScopes] = useState();\n    const [sharedScopesByName, setSharedScopesByName] = useState();\n    const [openAPISpec, setOpenAPISpec] = useState({});\n    const [securityDefScopes, setSecurityDefScopes] = useState({});\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(api.apiThrottlingPolicy);\n    const [arns, setArns] = useState([]);\n    const [resolvedSpec, setResolvedSpec] = useState({ spec: {}, errors: [] });\n\n    /**\n     *\n     *\n     * @param {*} currentPolicies\n     * @param {*} policyAction\n     * @returns\n     */\n    function resourcePoliciesReducer(currentPolicies, policyAction) {\n        const { action, data } = policyAction;\n        const { value } = data || {}; // target, verb,\n        let nextResourcePolicies = { ...currentPolicies };\n        switch (action) {\n            case 'init':\n                nextResourcePolicies = value;\n                break;\n            case 'update':\n                nextResourcePolicies[value.resourcePath][value.httpVerb][data.direction] = value;\n                break;\n            default:\n                break;\n        }\n        return nextResourcePolicies;\n    }\n    const [resourcePolicies, resourcePoliciesDispatcher] = useReducer(resourcePoliciesReducer, null);\n\n    /**\n     *\n     *\n     * @param {*} currenPaths\n     * @param {*} action\n     */\n    function operationsReducer(currentOperations, operationAction) {\n        const { action, data } = operationAction;\n        const { target, verb, value } = data || {};\n        let updatedOperation;\n        let addedOperations;\n        if (target && verb) {\n            updatedOperation = cloneDeep(currentOperations[target][verb]);\n        } else {\n            addedOperations = cloneDeep(currentOperations);\n        }\n\n        switch (action) {\n            case 'init':\n                setSelectedOperation({});\n                return data || openAPISpec.paths;\n            case 'description':\n            case 'summary':\n                updatedOperation[action] = value;\n                break;\n            case 'authType':\n                updatedOperation['x-auth-type'] = value ? 'Any' : 'None';\n                break;\n            case 'parameter':\n                if (updatedOperation.parameters) {\n                    // Get the index to check whether the same parameter exists.\n                    const index = updatedOperation.parameters.findIndex(\n                        (e) => e.in === value.in && e.name === value.name,\n                    );\n                    if (index === -1) { // Parameter with name and in does not exists.\n                        if (value.in === 'body') {\n                            // Get the index of existing body param.\n                            // This replaces if a new body parameter is added when another one exists.\n                            const bodyIndex = updatedOperation.parameters.findIndex((parameter) => {\n                                return parameter.in === 'body';\n                            });\n                            if (bodyIndex !== -1) {\n                                updatedOperation.parameters[bodyIndex] = value;\n                            } else {\n                                updatedOperation.parameters.push(value);\n                            }\n                        } else {\n                            updatedOperation.parameters.push(value);\n                        }\n                    } else {\n                        updatedOperation.parameters[index] = value;\n                    }\n                } else {\n                    updatedOperation.parameters = [value];\n                }\n                break;\n            case 'requestBody':\n                updatedOperation[action] = value;\n                break;\n            case 'deleteParameter':\n                updatedOperation.parameters = updatedOperation.parameters.filter((parameter) => {\n                    return !(parameter.in === value.in && parameter.name === value.name);\n                });\n                break;\n            case 'throttlingPolicy':\n                updatedOperation['x-throttling-tier'] = value;\n                break;\n            case 'amznResourceName':\n                updatedOperation['x-amzn-resource-name'] = value;\n                break;\n            case 'amznResourceTimeout':\n                updatedOperation['x-amzn-resource-timeout'] = value;\n                break;\n            case 'scopes': {\n                if (!updatedOperation.security) {\n                    updatedOperation.security = [{ default: [] }];\n                } else if (!updatedOperation.security.find((item) => item.default)) {\n                    updatedOperation.security.push({ default: [] });\n                }\n                const defValue = value[0];\n                updatedOperation.security.find((item) => item.default).default = defValue;\n                for (const selectedScope of defValue) {\n                    if (selectedScope\n                        && !securityDefScopes[selectedScope]\n                        && securityDefScopes[selectedScope] !== '') {\n                        let scopeDescription = '';\n                        if (selectedScope in sharedScopesByName) {\n                            scopeDescription = sharedScopesByName[selectedScope].scope.description;\n                            securityDefScopes[selectedScope] = scopeDescription;\n                        }\n                        setSecurityDefScopes(securityDefScopes);\n                    }\n                }\n                break;\n            }\n            case 'add': {\n                const parameters = extractPathParameters(data.target, openAPISpec);\n                if (!addedOperations[data.target]) {\n                    // If target is not there add an empty object\n                    addedOperations[data.target] = {};\n                }\n                let alreadyExistCount = 0;\n                for (const currentVerb of data.verbs) {\n                    if (addedOperations[data.target][currentVerb]) {\n                        const message = `Operation already exist with ${data.target} and ${currentVerb}`;\n                        Alert.warning(message);\n                        console.warn(message);\n                        alreadyExistCount++;\n                    } else {\n                        // use else condition because continue is not allowed by es-lint rules\n                        addedOperations[data.target][currentVerb] = {\n                            'x-wso2-new': true, // This is to identify unsaved newly added operations, Remove when PUT\n                            'x-auth-type': 'Application & Application User', // By default security is enabled\n                            responses: { 200: { description: 'ok' } },\n                            parameters,\n                        };\n                    }\n                }\n                if (alreadyExistCount === data.verbs.length) {\n                    Alert.error('Operation(s) already exist!');\n                    return currentOperations;\n                }\n                return addedOperations;\n            }\n            default:\n                return currentOperations;\n        }\n        return { ...currentOperations, [target]: { ...currentOperations[target], [verb]: updatedOperation } };\n    }\n    const [operations, operationsDispatcher] = useReducer(operationsReducer, {});\n    /**\n     *\n     *\n     * @param {*} operation\n     * @param {*} checked\n     */\n    function onOperationSelectM(operation, checked) {\n        const { target, verb } = operation;\n        setSelectedOperation((currentSelections) => {\n            const nextSelectedOperations = cloneDeep(currentSelections);\n            if (!nextSelectedOperations[target]) {\n                nextSelectedOperations[target] = {};\n            }\n            if (checked) {\n                nextSelectedOperations[target][verb] = checked;\n            } else {\n                delete nextSelectedOperations[target][verb];\n            }\n            if (isEmpty(nextSelectedOperations[target])) {\n                delete nextSelectedOperations[target];\n            }\n            return nextSelectedOperations;\n        });\n    }\n    const onMarkAsDelete = useCallback(onOperationSelectM, [setSelectedOperation]);\n\n    // can't depends on API id because we need to consider the changes in operations in api object\n    // memoized (https://reactjs.org/docs/hooks-reference.html#usememo) to improve pref,\n    // localized to inject local apiThrottlingPolicy data\n    const localAPI = useMemo(\n        () => ({\n            id: api.id,\n            apiThrottlingPolicy,\n            scopes: api.scopes,\n            operations: api.isAPIProduct() ? {} : mapAPIOperations(api.operations),\n            endpointConfig: api.endpointConfig,\n        }),\n        [api, apiThrottlingPolicy],\n    );\n\n    /**\n     * This method sets the securityDefinitionScopes from the spec\n     * @param {Object} spec The original swagger content.\n     */\n    function setSecurityDefScopesFromSpec(spec) {\n        const openAPIVersion = getVersion(spec);\n        if (VERSIONS.V3.includes(openAPIVersion)) {\n            if (spec.components && spec.components.securitySchemes && spec.components.securitySchemes.default) {\n                const { flows } = spec.components.securitySchemes.default;\n                if (flows.implicit.scopes) {\n                    setSecurityDefScopes(cloneDeep(flows.implicit.scopes));\n                }\n            }\n        } else if (VERSIONS.V2.includes(openAPIVersion)) {\n            if (spec.securityDefinitions && spec.securityDefinitions.default) {\n                if (spec.securityDefinitions.default.scopes) {\n                    setSecurityDefScopes(cloneDeep(spec.securityDefinitions.default.scopes));\n                }\n            }\n        }\n    }\n\n    /**\n     * This method sets the scopes of the spec from the securityDefinitionScopes\n     */\n    function setSpecScopesFromSecurityDefScopes() {\n        const openAPIVersion = getVersion(openAPISpec);\n        if (VERSIONS.V3.includes(openAPIVersion)) {\n            if (openAPISpec.components\n                && openAPISpec.components.securitySchemes\n                && openAPISpec.components.securitySchemes.default) {\n                openAPISpec.components.securitySchemes.default.flows.implicit.scopes = securityDefScopes;\n            }\n        } else if (VERSIONS.V2.includes(openAPIVersion)) {\n            if (openAPISpec.securityDefinitions && openAPISpec.securityDefinitions.default) {\n                openAPISpec.securityDefinitions.default.scopes = securityDefScopes;\n            }\n        }\n    }\n\n    /**\n     *\n     * @param {*} rawSpec The original swagger content.\n     * @returns {null}\n     */\n    function resolveAndUpdateSpec(rawSpec) {\n        /*\n         * Deep copying the spec.\n         * Otherwise it will resolved to the original parameter passed (rawSpec) to the validate method.\n         * We will not alter the provided spec.\n         */\n        const specCopy = cloneDeep(rawSpec);\n        /*\n        * Used SwaggerParser.validate() because we can get the errors as well.\n        */\n        SwaggerParser.validate(specCopy, (err, result) => {\n            setResolvedSpec(() => {\n                const errors = err ? [err] : [];\n                return {\n                    spec: result,\n                    errors,\n                };\n            });\n        });\n        operationsDispatcher({ action: 'init', data: rawSpec.paths });\n        setOpenAPISpec(rawSpec);\n        setSecurityDefScopesFromSpec(rawSpec);\n    }\n\n    /**\n     *\n     * Update the swagger using /swagger PUT operation and then fetch the updated API Object doing a apis/{api-uuid} GET\n     * @param {JSON} spec Updated full OpenAPI spec ready to PUT\n     * @returns {Promise} Promise resolving to updated API object\n     */\n    function updateSwagger(spec) {\n        return api\n            .updateSwagger(spec)\n            .then((response) => resolveAndUpdateSpec(response.body))\n            .then(updateAPI)\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    setPageError(error.response.body);\n                } else {\n                    Alert.error('Error while updating the definition');\n                }\n            });\n    }\n\n    /**\n     *\n     * This method modifies the security definition scopes by removing the scopes which are not present\n     * in operations and which are shared scopes\n     * @param {Array} apiOperations Operations list\n     */\n    function updateSecurityDefinition(apiOperations) {\n        Object.keys(securityDefScopes).forEach((key) => {\n            let isScopeExistsInOperation = false;\n            for (const [, verbs] of Object.entries(apiOperations)) {\n                for (const [, verbInfo] of Object.entries(verbs)) {\n                    // Checking if the scope resides in the operation\n                    for (const secDef of verbInfo.security || []) {\n                        if (secDef\n                            && secDef.default\n                            && secDef.default.includes(key)) {\n                            isScopeExistsInOperation = true;\n                            break;\n                        }\n                    }\n\n                    if (isScopeExistsInOperation) {\n                        break;\n                    }\n                }\n                if (isScopeExistsInOperation) {\n                    break;\n                }\n            }\n            // Checking if the scope exists in operation and is a shared scope\n            if (!isScopeExistsInOperation && (key in sharedScopesByName)) {\n                delete securityDefScopes[key];\n            }\n        });\n        setSecurityDefScopes(securityDefScopes);\n    }\n\n    /**\n     *\n     * Save the OpenAPI changes using REST API, type parameter is required to\n     * identify the locally created data structured, i:e type `operation` will assume that `data` contains the\n     * object structure of locally created operation object which is a combination of REST API\n     * response `operations` field and OpenAPI spec operation information\n     * @param {String} type Type of data object\n     * @param {Object} data Data object\n     * @returns {Promise|null} A promise object which resolve to Swagger PUT response body.\n     */\n    function updateOpenAPI(type) {\n        const copyOfOperations = cloneDeep(operations);\n        switch (type) {\n            case 'save':\n                if (isSelectAll(markedOperations, copyOfOperations)) {\n                    const message = 'At least one operation is required for the API';\n                    Alert.warning(message);\n                    return Promise.reject(new Error(message));\n                }\n                for (const [target, verbs] of Object.entries(markedOperations)) {\n                    for (const verb of Object.keys(verbs)) {\n                        delete copyOfOperations[target][verb];\n                        if (isEmpty(copyOfOperations[target])) {\n                            delete copyOfOperations[target];\n                        }\n                    }\n                }\n                // TODO: use better alternative (optimize performance) to identify newly added operations ~tmkb\n                for (const [, verbs] of Object.entries(copyOfOperations)) {\n                    for (const [, verbInfo] of Object.entries(verbs)) {\n                        if (verbInfo['x-wso2-new']) {\n                            delete verbInfo['x-wso2-new'];\n                        }\n                    }\n                }\n                break;\n            default:\n                return Promise.reject(new Error('Unsupported resource operation!'));\n        }\n        updateSecurityDefinition(copyOfOperations);\n        setSpecScopesFromSecurityDefScopes();\n        if (apiThrottlingPolicy !== api.apiThrottlingPolicy) {\n            return updateAPI({ apiThrottlingPolicy })\n                .catch((error) => {\n                    console.error(error);\n                    Alert.error('Error while updating the API');\n                })\n                .then(() => updateSwagger({ ...openAPISpec, paths: copyOfOperations }));\n        } else {\n            return updateSwagger({ ...openAPISpec, paths: copyOfOperations });\n        }\n    }\n\n    useEffect(() => {\n        API.getAmznResourceNames(api.id)\n            .then((response) => {\n                if (response.body && response.body.list) {\n                    setArns(response.body.list);\n                }\n            });\n    }, []);\n\n    useEffect(() => {\n        if (api.apitype !== 'APIProduct') {\n            API.getAllScopes()\n                .then((response) => {\n                    if (response.body && response.body.list) {\n                        const sharedScopesList = [];\n                        const sharedScopesByNameList = {};\n                        const shared = true;\n                        for (const scope of response.body.list) {\n                            const modifiedScope = {};\n                            modifiedScope.scope = scope;\n                            modifiedScope.shared = shared;\n                            sharedScopesList.push(modifiedScope);\n                            sharedScopesByNameList[scope.name] = modifiedScope;\n                        }\n                        setSharedScopes(sharedScopesList);\n                        setSharedScopesByName(sharedScopesByNameList);\n                    }\n                });\n        }\n    }, []);\n\n    useEffect(() => {\n        // Update the Swagger spec object when API object gets changed\n        api.getSwagger()\n            .then((response) => {\n                resolveAndUpdateSpec(response.body);\n            })\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                    setPageError(error.response.body);\n                }\n                console.error(error);\n            });\n        if (api.isSOAPToREST()) {\n            const promisedInPolicies = api.getResourcePolicies('in');\n            const promisedOutPolicies = api.getResourcePolicies('out');\n            Promise.all([promisedInPolicies, promisedOutPolicies])\n                .then(([inPolicies, outPolicies]) => {\n                    const mappedPolicies = {};\n                    for (const policy of inPolicies.body.list) {\n                        const { resourcePath, httpVerb } = policy;\n                        if (!mappedPolicies[resourcePath]) {\n                            mappedPolicies[resourcePath] = {\n                                [httpVerb]: { in: policy },\n                            };\n                        } else {\n                            mappedPolicies[resourcePath][httpVerb] = { in: policy };\n                        }\n                    }\n                    for (const policy of outPolicies.body.list) {\n                        const { resourcePath, httpVerb } = policy;\n                        if (!mappedPolicies[resourcePath]) {\n                            mappedPolicies[resourcePath] = {\n                                [httpVerb]: { out: policy },\n                            };\n                        } else {\n                            mappedPolicies[resourcePath][httpVerb].out = policy;\n                        }\n                    }\n                    resourcePoliciesDispatcher({ action: 'init', data: { value: mappedPolicies } });\n                })\n                .catch((error) => {\n                    if (error.response) {\n                        Alert.error(error.response.body.description);\n                        setPageError(error.response.body);\n                    }\n                    setPageError(error.message);\n                    console.error(error);\n                });\n        }\n        // Fetch API level throttling policies only when the page get mounted for the first time `componentDidMount`\n        API.policies('api').then((response) => {\n            setOperationRateLimits(response.body.list);\n        });\n        // TODO: need to handle the error cases through catch ~tmkb\n    }, [api.id]);\n\n    // Note: Make sure not to use any hooks after/within this condition , because it returns conditionally\n    // If you do so, You will probably get `Rendered more hooks than during the previous render.` exception\n    if ((!pageError && isEmpty(openAPISpec)) || (resolvedSpec.errors.length === 0 && isEmpty(resolvedSpec.spec))) {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center'>\n                <Grid item>\n                    <CircularProgress disableShrink />\n                </Grid>\n            </Grid>\n        );\n    }\n    return (\n        <Grid container direction='row' justify='flex-start' spacing={2} alignItems='stretch'>\n            {pageError && (\n                <Grid item md={12}>\n                    <Banner onClose={() => setPageError(null)} disableActions type='error' message={pageError} />\n                </Grid>\n            )}\n            {!disableRateLimiting && (\n                <Grid item md={12}>\n                    <APIRateLimiting\n                        operationRateLimits={operationRateLimits}\n                        value={apiThrottlingPolicy}\n                        onChange={setApiThrottlingPolicy}\n                        isAPIProduct={api.isAPIProduct()}\n                    />\n                </Grid>\n            )}\n            {!isRestricted(['apim:api_create'], api) && !disableAddOperation && (\n                <Grid item md={12} xs={12}>\n                    <AddOperation operationsDispatcher={operationsDispatcher} />\n                </Grid>\n            )}\n            {resolvedSpec.errors.length > 0 && <SpecErrors specErrors={resolvedSpec.errors} />}\n            <Grid item md={12}>\n                <Paper>\n                    {!disableMultiSelect && (\n                        <OperationsSelector\n                            operations={operations}\n                            selectedOperations={markedOperations}\n                            setSelectedOperation={setSelectedOperation}\n                        />\n                    )}\n                    {Object.entries(operations).map(([target, verbObject]) => (\n                        <Grid key={target} item md={12}>\n                            <GroupOfOperations openAPI={openAPISpec} tag={target}>\n                                <Grid\n                                    container\n                                    direction='column'\n                                    justify='flex-start'\n                                    spacing={1}\n                                    alignItems='stretch'\n                                >\n                                    {Object.entries(verbObject).map(([verb, operation]) => {\n                                        return CONSTS.HTTP_METHODS.includes(verb) ? (\n                                            <Grid key={`${target}/${verb}`} item>\n                                                <Operation\n                                                    target={target}\n                                                    verb={verb}\n                                                    highlight\n                                                    resourcePoliciesDispatcher={resourcePoliciesDispatcher}\n                                                    resourcePolicy={\n                                                        resourcePolicies\n                                                        && resourcePolicies[target.slice(1)]\n                                                        && resourcePolicies[target.slice(1)][verb]\n                                                    }\n                                                    operationsDispatcher={operationsDispatcher}\n                                                    spec={openAPISpec}\n                                                    operation={operation}\n                                                    operationRateLimits={operationRateLimits}\n                                                    api={localAPI}\n                                                    markAsDelete={Boolean(markedOperations[target]\n                                                        && markedOperations[target][verb])}\n                                                    onMarkAsDelete={onMarkAsDelete}\n                                                    disableUpdate={\n                                                        disableUpdate || isRestricted(['apim:api_create'], api)\n                                                    }\n                                                    disableMultiSelect={disableMultiSelect}\n                                                    arns={arns}\n                                                    {...operationProps}\n                                                    resolvedSpec={resolvedSpec.spec}\n                                                    sharedScopes={sharedScopes}\n                                                />\n                                            </Grid>\n                                        ) : null;\n                                    })}\n                                </Grid>\n                            </GroupOfOperations>\n                        </Grid>\n                    ))}\n                </Paper>\n                <Grid\n                    style={{ marginTop: '25px' }}\n                    container\n                    direction='row'\n                    justify='space-between'\n                    alignItems='center'\n                >\n                    {!disableUpdate && (\n                        <SaveOperations\n                            operationsDispatcher={operationsDispatcher}\n                            updateOpenAPI={updateOpenAPI}\n                            api={api}\n                        />\n                    )}\n                    {!hideAPIDefinitionLink && <GoToDefinitionLink api={api} />}\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nResources.defaultProps = {\n    operationProps: { disableDelete: false },\n    disableUpdate: false,\n    disableRateLimiting: false,\n    disableMultiSelect: false,\n    hideAPIDefinitionLink: false,\n    disableAddOperation: false,\n};\n\nResources.propTypes = {\n    disableRateLimiting: PropTypes.bool,\n    hideAPIDefinitionLink: PropTypes.bool,\n    disableMultiSelect: PropTypes.bool,\n    disableAddOperation: PropTypes.bool,\n    disableUpdate: PropTypes.bool,\n    operationProps: PropTypes.shape({\n        disableDelete: PropTypes.bool,\n    }),\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { FormattedMessage } from 'react-intl';\n\nimport Resources from './Resources';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APIOperations() {\n    return (\n        <>\n            <Box mb={4}>\n                <Typography variant='h4' gutterBottom>\n                    <FormattedMessage\n                        id='Apis.Details.Resources.APIOperations.title'\n                        defaultMessage='Resources'\n                    />\n                </Typography>\n            </Box>\n            <Resources />\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { FormattedMessage } from 'react-intl';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport Box from '@material-ui/core/Box';\nimport API from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport Resources from 'AppComponents/Apis/Details/Resources/Resources';\nimport APIRateLimiting from '../Resources/components/APIRateLimiting';\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function APIProductOperations() {\n    const [api, updateAPI] = useAPI();\n    const [apiThrottlingPolicy, setApiThrottlingPolicy] = useState(api.apiThrottlingPolicy);\n    const [operationRateLimits, setOperationRateLimits] = useState([]);\n    const [isSaving, setIsSaving] = useState(false);\n    useEffect(() => {\n        // Fetch API level throttling policies only when the page get mounted for the first time `componentDidMount`\n        API.policies('api').then((response) => {\n            setOperationRateLimits(response.body.list);\n        });\n        // TODO: need to handle the error cases through catch ~tmkb\n    }, []);\n\n    /**\n     *\n     *\n     */\n    function saveChanges() {\n        setIsSaving(true);\n        updateAPI({ apiThrottlingPolicy }).finally(() => setIsSaving(false));\n    }\n    return (\n        <Grid container spacing={3}>\n            <Grid item md={12}>\n                <Typography variant='h4' gutterBottom>\n                    Product Resources\n                    <Box component='div' display='inline'>\n                        <Link to={'/api-products/' + api.id + '/resources/edit'}>\n                            <Button size='small'>\n                                <EditIcon />\n                                <FormattedMessage\n                                    id='Apis.Details.Resources.Resources.edit.resources.button'\n                                    defaultMessage='Edit Resources'\n                                />\n                            </Button>\n                        </Link>\n                    </Box>\n                </Typography>\n            </Grid>\n            <Grid item md={12}>\n                <APIRateLimiting\n                    operationRateLimits={operationRateLimits}\n                    api={api}\n                    isAPIProduct\n                    value={apiThrottlingPolicy}\n                    onChange={setApiThrottlingPolicy}\n                />\n            </Grid>\n            {!isRestricted(['apim:api_create'], api) && (\n                <Grid item md={12}>\n                    <Box ml={1}>\n                        <Button onClick={saveChanges} disabled={false} variant='contained' size='small' color='primary'>\n                            Save\n                            {isSaving && <CircularProgress size={24} />}\n                        </Button>\n                        <Box display='inline' ml={1}>\n                            <Button\n                                size='small'\n                                variant='outlined'\n                                onClick={() => setApiThrottlingPolicy(api.apiThrottlingPolicy)}\n                            >\n                                Reset\n                            </Button>\n                        </Box>\n                    </Box>\n                </Grid>\n            )}\n\n            <Grid item md={12}>\n                <Resources\n                    hideAPIDefinitionLink\n                    disableUpdate\n                    disableRateLimiting\n                    operationProps={{ disableDelete: true }}\n                    disableMultiSelect\n                    disableAddOperation\n                />\n            </Grid>\n        </Grid>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint-disable array-callback-return */\n/* eslint no-param-reassign: [\"error\", { \"props\": true, \"ignorePropertyModificationsFor\": [\"operationObj\"] }] */\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport cloneDeep from 'lodash.clonedeep';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport ProductResourcesEditWorkspace from './ProductResourcesEditWorkspace';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n    },\n    buttonWrapper: {\n        marginTop: theme.spacing(4),\n    },\n}));\n\n\n/**\n *\n *\n * @returns\n */\nfunction ProductResourcesEdit() {\n    const classes = useStyles();\n\n    // Get the current api product object from the context\n    const { api, updateAPI } = useContext(APIContext);\n    const apiCopy = cloneDeep(api);\n    const { apis } = apiCopy;\n\n    // Define states\n    const [apiResources, setApiResources] = useState(apis);\n    const [updating, setUpdating] = useState(false);\n    // Initialize the rest api libraries\n\n    const save = () => {\n        setUpdating(true);\n\n        const updatePromise = updateAPI({ apis: apiResources }, true);\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.titleWrapper}>\n                <Typography variant='h4' align='left' className={classes.mainTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.ProductResources.ProductResourcesEdit.title'\n                        defaultMessage='Manage Resources'\n                    />\n                </Typography>\n            </div>\n            <div className={classes.contentWrapper}>\n                <ProductResourcesEditWorkspace\n                    apiResources={apiResources}\n                    setApiResources={setApiResources}\n                    api={api}\n                />\n                <div className={classes.buttonWrapper}>\n                    <Grid container direction='row' alignItems='flex-start' spacing={4}>\n                        <Grid item>\n                            <div>\n                                <Button variant='contained' color='primary' onClick={save} disabled={updating}>\n                                    {updating && (\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.updating'\n                                            defaultMessage='Updating ...'\n                                        />\n                                    )}\n                                    {!updating && (\n                                        <FormattedMessage\n                                            id='Apis.Details.ProductResources.ProductResourcesEdit.save'\n                                            defaultMessage='Save'\n                                        />\n                                    )}\n                                </Button>\n                            </div>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ProductResources.ProductResourcesEdit.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ProductResourcesEdit;\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, { useState } from 'react';\nimport {\n    Typography,\n    Grid,\n    withStyles,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n    FormControl,\n    Divider,\n    Button,\n    Card,\n    CardContent,\n    CardActions,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst styles = (theme) => ({\n    inlineMessageContainer: {\n        marginBottom: theme.spacing(1),\n    },\n    endpointTypeCard: {\n        margin: theme.spacing(1),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n        height: theme.spacing(40),\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardContent: {\n        height: theme.spacing(40),\n    },\n    content: {\n        marginTop: theme.spacing(1),\n    },\n    cardActions: {\n        justifyContent: 'flex-end',\n        borderTop: 'solid #e0e0e0 thin',\n    },\n});\n\n/**\n * Component to create new endpoint.\n * This component will render if the api object does not have an endpoint configuration, letting users to create a\n * new endpoint configuration based on their requirement.\n * Following endpoint types are supported.\n * 1. HTTP/ SOAP endpoints\n * 2. Prototyped/ Mock endpoints\n * 3. AWS Lambda endpoints\n * 4. Dynamic Endpoints\n *\n * @param {any} props The input props.\n * @return {any} The HTML representation of the component.\n * */\nfunction NewEndpointCreate(props) {\n    const {\n        classes,\n        intl,\n        generateEndpointConfig,\n        apiType,\n    } = props;\n    const [endpointImplType, setImplType] = useState('mock');\n    const endpointTypes = [\n        {\n            type: 'http',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint',\n                defaultMessage: 'HTTP/ REST Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.http.endpoint.description',\n                defaultMessage: 'A REST API endpoint based on a URI template.',\n            }),\n            options: null,\n            disabled: ['SOAPTOREST'],\n        },\n        {\n            type: 'address',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint',\n                defaultMessage: 'HTTP/ SOAP Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.soap.endpoint.description',\n                defaultMessage: 'The direct URI of the web service.',\n            }),\n            options: null,\n            disabled: ['GRAPHQL'],\n        },\n        {\n            type: 'prototyped',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint',\n                defaultMessage: 'Prototype Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.prototype.endpoint.description',\n                defaultMessage: 'Use the inbuilt JavaScript engine to prototype the API or provide an endpoint'\n                    + ' to a prototype API. The inbuilt JavaScript engine does support prototype SOAP APIs',\n            }),\n            options: [\n                {\n                    type: 'mock',\n                    name: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.NewEndpointCreate.prototype.implementation',\n                        defaultMessage: 'Prototype Implementation',\n                    }),\n                    disabled: ['SOAP', 'SOAPTOREST'],\n                },\n                {\n                    type: 'prototyped',\n                    name: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.NewEndpointCreate.default.prototype.endpoints',\n                        defaultMessage: 'Prototype Endpoint',\n                    }),\n                    disabled: [],\n                },\n            ],\n            disabled: ['GRAPHQL'],\n        },\n        {\n            type: 'dynamic',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint',\n                defaultMessage: 'Dynamic Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.dynamic.endpoint.description',\n                defaultMessage: 'If you need to send the request to the URI specified in the TO header.',\n            }),\n            options: null,\n            disabled: [],\n        },\n        {\n            type: 'awslambda',\n            name: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.awslambda.endpoint',\n                defaultMessage: 'AWS Lambda Endpoint',\n            }),\n            description: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.NewEndpointCreate.create.awslambda.endpoint.description',\n                defaultMessage: 'If you need to invoke AWS Lambda functions through API gateway.',\n            }),\n            options: null,\n            disabled: ['SOAPTOREST', 'GRAPHQL'],\n        },\n    ];\n\n    return (\n        <>\n            <Typography variant='h4' align='left' className={classes.titleWrapper}>\n                <FormattedMessage\n                    id='Apis.Details.Endpoints.NewEndpointCreate.add.endpoints.header'\n                    defaultMessage='Select an Endpoint Type to Add'\n                />\n            </Typography>\n            <Grid container justify='flex-start' spacing={2}>\n                {endpointTypes.filter((type) => !type.disabled.includes(apiType)).map(((type) => {\n                    return (\n                        <Grid item className={classes.inlineMessageContainer}>\n                            <Card className={classes.endpointTypeCard}>\n                                <CardContent className={classes.cardContent}>\n                                    <Typography variant='h5' component='h3' className={classes.head}>\n                                        {type.name}\n                                    </Typography>\n                                    <Divider />\n                                    <Typography component='p' className={classes.content}>\n                                        {type.description}\n                                    </Typography>\n                                    {type.options\n                                        ? (\n                                            <div>\n                                                <FormControl component='fieldset' className={classes.formControl}>\n                                                    <RadioGroup\n                                                        aria-label='EndpointType'\n                                                        name='endpointType'\n                                                        className={classes.radioGroup}\n                                                        value={endpointImplType}\n                                                        onChange={(event) => { setImplType(event.target.value); }}\n                                                    >\n                                                        {type.options.filter((types) => !types.disabled\n                                                            .includes(apiType)).map(((option) => {\n                                                            return (\n                                                                <FormControlLabel\n                                                                    value={option.type}\n                                                                    control={<Radio color='primary' />}\n                                                                    label={option.name}\n                                                                />\n                                                            );\n                                                        }))}\n                                                    </RadioGroup>\n                                                </FormControl>\n                                            </div>\n                                        )\n                                        : <div /> }\n                                </CardContent>\n                                <CardActions className={classes.cardActions}>\n                                    <Button\n                                        color='primary'\n                                        className={classes.button}\n                                        onClick={() => generateEndpointConfig(type.type, endpointImplType)}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.NewEndpointCreate.create.button'\n                                            defaultMessage='Add'\n                                        />\n                                    </Button>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    );\n                }))}\n            </Grid>\n        </>\n    );\n}\n\nNewEndpointCreate.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    generateEndpointConfig: PropTypes.func.isRequired,\n    apiType: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(injectIntl(NewEndpointCreate));\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, {\n    useContext,\n    lazy,\n    Suspense,\n    useState,\n} from 'react';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport {\n    Chip,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Typography,\n    makeStyles,\n    Button,\n} from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Utils from 'AppData/Utils';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"GenResourceMonaco\" */));\n\n/**\n * The generic resource component.\n *\n * @param {any} props The input props\n * @return {any} The HTML representation of the component.\n * */\nfunction GenericResource(props) {\n    const {\n        resourcePath, resourceMethod, scriptContent, onChange, originalScript, setMockValueDetails,\n    } = props;\n    const { api } = useContext(APIContext);\n    const [showReset, setShowReset] = useState(false);\n\n    const useStyles = makeStyles((theme) => {\n        let chipColor = theme.custom.resourceChipColors ? theme.custom.resourceChipColors[resourceMethod] : null;\n        let chipTextColor = '#000000';\n        if (!chipColor) {\n            console.log('Check the theme settings. The resourceChipColors is not populated properlly');\n            chipColor = '#cccccc';\n        } else {\n            chipTextColor = theme.palette.getContrastText(theme.custom.resourceChipColors[resourceMethod]);\n        }\n\n        return {\n            editor: {\n                width: '100%',\n                height: '500px',\n            },\n            chipActive: {\n                borderRadius: '5px',\n                width: '80%',\n                backgroundColor: chipColor,\n                color: chipTextColor,\n                ...theme.typography.button,\n            },\n            resourcePathContainer: {\n                paddingTop: theme.spacing(1),\n            },\n            prototypeResourceHeader: {\n                borderBottom: `${chipColor} 1px solid`,\n            },\n            chipExpansionPanel: {\n                backgroundColor: Utils.hexToRGBA(chipColor, 0.1),\n                border: `${chipColor} 1px solid`,\n            },\n            scriptResetButton: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginBottom: '10px',\n            },\n\n        };\n    });\n\n    const classes = useStyles();\n\n    return (\n        <Grid item>\n            <ExpansionPanel className={classes.chipExpansionPanel}>\n                <ExpansionPanelSummary className={classes.prototypeResourceHeader} expandIcon={<ExpandMoreIcon />}>\n                    <Grid container spacing={12}>\n                        <Grid xs={1}>\n                            <Chip label={resourceMethod} className={classes.chipActive} />\n                        </Grid>\n                        <Grid xs className={classes.resourcePathContainer}>\n                            <Typography>{resourcePath}</Typography>\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.genericResourceContent}>\n                    <Grid container direction='column'>\n                        <Grid item className={classes.scriptResetButton}>\n                            <Typography variant='subtitle2'>\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.Prototype.InlineEndpoints.script'\n                                    defaultMessage='Script'\n                                />\n                            </Typography>\n                            {showReset\n                            && (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => {\n                                        setMockValueDetails({ resourcePath, resourceMethod });\n                                        onChange(originalScript, resourcePath, resourceMethod);\n                                    }}\n                                >\n                                    Reset\n                                </Button>\n                            )}\n                        </Grid>\n                        <Grid item>\n                            <Suspense fallback={<CircularProgress />}>\n                                <MonacoEditor\n                                    height='50vh'\n                                    width='100%'\n                                    theme='vs-dark'\n                                    value={scriptContent}\n                                    options={{\n                                        selectOnLineNumbers: true,\n                                        readOnly: `${isRestricted(['apim:api_create'], api)}`,\n                                    }}\n                                    language='javascript'\n                                    onChange={(content) => {\n                                        setShowReset(true);\n                                        setMockValueDetails({ resourcePath, resourceMethod });\n                                        onChange(content, resourcePath, resourceMethod);\n                                    }}\n                                />\n                            </Suspense>\n                        </Grid>\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Grid>\n    );\n}\n\nGenericResource.propTypes = {\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n    scriptContent: PropTypes.string.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default React.memo(GenericResource);\n","/*\n *  Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n *  WSO2 Inc. licenses this file to you under the Apache License,\n *  Version 2.0 (the \"License\"); you may not use this file except\n *  in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing,\n *  software distributed under the License is distributed on an\n *  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n *  KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations\n *  under the License.\n */\n\nimport React, {\n    useState, useEffect, useContext, useCallback,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid } from '@material-ui/core';\nimport GenericResource from 'AppComponents/Apis/Details/Endpoints/Prototype/GenericResource';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst xMediationScriptProperty = 'x-mediation-script';\n\nconst defaultScript = '/* mc.setProperty(\\'CONTENT_TYPE\\', \\'application/json\\');\\n\\t'\n    + 'mc.setPayloadJSON(\\'{ \"data\" : \"sample JSON\"}\\');*/\\n'\n    + '/*Uncomment the above comment block to send a sample response.*/';\n\n/**\n * The inline endpoints component.\n * This component lists the api resources to add custom mediation scripts.\n *\n * @param {any} props The input props.\n * @return {any} The HTML representation of the component.\n * */\nfunction InlineEndpoints(props) {\n    const { api } = useContext(APIContext);\n    const {\n        paths, updatePaths,\n    } = props;\n    const [mockValueDetails, setMockValueDetails] = useState({ resourcePath: '', resourceMethod: '' });\n\n    /**\n     * Handles the onChange event of the script editor.\n     *\n     * @param {string} value The editor content\n     * @param {string} path The path value of the resource.\n     * @param {string} method The resource method.\n     * */\n    const onScriptChange = useCallback(\n        (value, path, method) => {\n            const tmpPaths = JSON.parse(JSON.stringify(paths));\n            tmpPaths[path][method][xMediationScriptProperty] = value;\n            updatePaths(tmpPaths);\n        },\n        [mockValueDetails.resourcePath, mockValueDetails.resourceMethod],\n    );\n\n    const [mockScripts, setMockScripts] = useState([]);\n\n    useEffect(() => {\n        const promisedResponse = api.getGeneratedMockScriptsOfAPI(api.id);\n        promisedResponse.then((response) => {\n            setMockScripts(response.obj.list);\n        });\n    }, []);\n\n    function getGeneratedMockScriptOfAPI(resourcePath, resourceMethod) {\n        for (let i = 0; i < mockScripts.length; i++) {\n            if (mockScripts[i].verb.toLowerCase() === resourceMethod.toLowerCase()\n                && mockScripts[i].path === resourcePath) {\n                return mockScripts[i].content;\n            }\n        }\n        return null;\n    }\n\n    return (\n        <>\n            <Grid container spacing={1} direction='column'>\n                {Object.keys(paths).map((path) => {\n                    return (\n                        Object.keys(paths[path]).map((method) => {\n                            const mediationScript = paths[path][method][xMediationScriptProperty];\n                            const script = mediationScript === undefined ? defaultScript : mediationScript;\n                            const originalScript = getGeneratedMockScriptOfAPI(path, method);\n                            return (\n                                <GenericResource\n                                    resourcePath={path}\n                                    resourceMethod={method}\n                                    onChange={onScriptChange}\n                                    scriptContent={script}\n                                    originalScript={originalScript}\n                                    setMockValueDetails={setMockValueDetails}\n                                />\n                            );\n                        })\n                    );\n                })}\n            </Grid>\n        </>\n    );\n}\n\nInlineEndpoints.propTypes = {\n    paths: PropTypes.shape({}).isRequired,\n    updatePaths: PropTypes.func.isRequired,\n};\n\nexport default React.memo(InlineEndpoints);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport cloneDeep from 'lodash.clonedeep';\n\n/**\n * Utility method to get the endpoint property name based on the given endpoint type and category.\n *\n * @param {string} type The type of the endpoint (load_balance/ failover)\n * @param {string} category The endpoint category (production/ sandbox)\n * @return {string} The property name of the endpoints.\n */\nfunction getEndpointTypeProperty(type, category) {\n    if (type !== 'failover') {\n        return category;\n    } else {\n        return category === 'sandbox_endpoints' ? 'sandbox_failovers' : 'production_failovers';\n    }\n}\n\n/**\n * Merge the loadbalance/ failover endpoints to single object.\n *\n * @param {object} endpointConfig The endpoint config object\n * @return {object} {production: [], sandbox: []}\n * */\nfunction mergeEndpoints(endpointConfig) {\n    const type = endpointConfig.endpoint_type;\n    if (type === 'load_balance') {\n        return { production: endpointConfig.production_endpoints, sandbox: endpointConfig.sandbox_endpoints };\n    } else if (type === 'failover') {\n        const prodEps = [endpointConfig.production_endpoints].concat(endpointConfig.production_failovers);\n        const sandboxEps = [endpointConfig.sandbox_endpoints].concat(endpointConfig.sandbox_failovers);\n        return { production: prodEps, sandbox: sandboxEps };\n    }\n    return { production: [endpointConfig.production_endpoints], sandbox: [endpointConfig.sandbox_endpoints] };\n}\n\n/**\n * Method to get the endpoints templates based on the selected endpoint type (loadbalance/ failover) and whether is\n * http or address endpoint.\n *\n * @param {string} endpointType The endpoint type\n * @param {bool} isAddressEndpoint Whether the endpoint is soap or not.\n * @param {object} currentEndpointConfig The existing endpoint information.\n * @return {object} A endpoint template object.\n * */\nfunction getEndpointTemplateByType(endpointType, isAddressEndpoint, currentEndpointConfig) {\n    const tmpEndpointConfig = {};\n    if (endpointType === 'failover') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.production_failovers = currentEndpointConfig.production_failovers\n            ? currentEndpointConfig.production_failovers : [];\n        tmpEndpointConfig.sandbox_failovers = currentEndpointConfig.sandbox_failovers\n            ? currentEndpointConfig.sandbox_failovers : [];\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n            ? currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n            ? currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = 'True';\n    } else if (endpointType === 'load_balance') {\n        tmpEndpointConfig.endpoint_type = endpointType;\n        tmpEndpointConfig.algoClassName = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.algoCombo = 'org.apache.synapse.endpoints.algorithms.RoundRobin';\n        tmpEndpointConfig.sessionManagement = '';\n        tmpEndpointConfig.sessionTimeOut = '';\n        if (currentEndpointConfig.production_endpoints) {\n            tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n                ? currentEndpointConfig.production_endpoints : [currentEndpointConfig.production_endpoints];\n        }\n        if (currentEndpointConfig.sandbox_endpoints) {\n            tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n                ? currentEndpointConfig.sandbox_endpoints : [currentEndpointConfig.sandbox_endpoints];\n        }\n        tmpEndpointConfig.failOver = 'False';\n    } else {\n        tmpEndpointConfig.endpoint_type = isAddressEndpoint === true ? 'address' : 'http';\n        tmpEndpointConfig.production_endpoints = Array.isArray(currentEndpointConfig.production_endpoints)\n            ? currentEndpointConfig.production_endpoints[0] : currentEndpointConfig.production_endpoints;\n        tmpEndpointConfig.sandbox_endpoints = Array.isArray(currentEndpointConfig.sandbox_endpoints)\n            ? currentEndpointConfig.sandbox_endpoints[0] : currentEndpointConfig.sandbox_endpoints;\n        tmpEndpointConfig.failOver = 'False';\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Returns all the endpoints as a list.\n *\n * @param {object} endpointConfig The endpoint config object from the api.\n * @return {array} The list of endpoints.\n * */\nfunction endpointsToList(endpointConfig) {\n    const config = cloneDeep(endpointConfig);\n    const endpoints = [];\n    if (Array.isArray(config.production_endpoints)) {\n        endpoints.push(...config.production_endpoints);\n    } else {\n        endpoints.push(config.production_endpoints);\n    }\n\n    if (Array.isArray(config.sandbox_endpoints)) {\n        endpoints.push(...config.sandbox_endpoints);\n    } else {\n        endpoints.push(config.sandbox_endpoints);\n    }\n\n    if (config.endpoint_type === 'failover') {\n        if (config.sandbox_failovers) {\n            endpoints.push(...config.sandbox_failovers);\n        }\n        if (config.production_failovers) {\n            endpoints.push(...config.production_failovers);\n        }\n    }\n    return endpoints;\n}\n\n/**\n * Returns an endpoint config object template based on the implementation method.\n * Eg: Managed, Prototyped.\n *\n * @param {string} implementationType The endpoint implementation type.\n * @return {object} The endpoint template.\n * */\nfunction getEndpointConfigByImpl(implementationType) {\n    const tmpEndpointConfig = {};\n    if (implementationType === 'PROTOTYPED') {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.implementation_status = 'prototyped';\n        tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n        tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n    } else {\n        tmpEndpointConfig.endpoint_type = 'http';\n        tmpEndpointConfig.production_endpoints = { url: '' };\n        tmpEndpointConfig.sandbox_endpoints = { url: '' };\n        tmpEndpointConfig.failOver = 'False';\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Get the endpoint config based on the selected endpoint type.\n * Supported endpoint types:\n * 1. http\n * 2. address\n * 3. prototyped\n * 4. awslambda\n * 5. default (Dynamic)\n *\n * @param {string} endpointType The selected endpoint type.\n * @return {endpointConfig} Endpoint config object.\n * */\nfunction createEndpointConfig(endpointType) {\n    const tmpEndpointConfig = {};\n    switch (endpointType) {\n        case 'http':\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.failOver = 'False';\n            break;\n        case 'address':\n            tmpEndpointConfig.endpoint_type = 'address';\n            tmpEndpointConfig.failOver = 'False';\n            break;\n        case 'prototyped':\n            tmpEndpointConfig.implementation_status = 'prototyped';\n            tmpEndpointConfig.endpoint_type = 'http';\n            tmpEndpointConfig.production_endpoints = { config: null, url: 'http://localhost' };\n            tmpEndpointConfig.sandbox_endpoints = { config: null, url: 'http://localhost' };\n            break;\n        case 'awslambda':\n            tmpEndpointConfig.endpoint_type = 'awslambda';\n            tmpEndpointConfig.access_method = 'role-supplied';\n            tmpEndpointConfig.amznAccessKey = '';\n            tmpEndpointConfig.amznSecretKey = '';\n            tmpEndpointConfig.amznRegion = '';\n            break;\n        default:\n            tmpEndpointConfig.endpoint_type = 'default';\n            tmpEndpointConfig.production_endpoints = { url: 'default' };\n            tmpEndpointConfig.sandbox_endpoints = { url: 'default' };\n            tmpEndpointConfig.failOver = 'False';\n            break;\n    }\n    return tmpEndpointConfig;\n}\n\n/**\n * Get the endpoint template based on endpoint type.\n *\n * @param {string} type: Endpoint type (HTTP/ Address)\n * @return {object} Endpoint Template\n * */\nfunction getEndpointTemplate(type) {\n    if (type === 'address') {\n        return { url: '', endpoint_type: 'address', template_not_supported: false };\n    }\n    return { url: '', template_not_supported: false };\n}\n\nexport {\n    getEndpointTypeProperty,\n    mergeEndpoints,\n    getEndpointTemplateByType,\n    endpointsToList,\n    getEndpointConfigByImpl,\n    createEndpointConfig,\n    getEndpointTemplate,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport {\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Typography,\n    withStyles,\n    Box,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Certificates from './GeneralConfiguration/Certificates';\nimport API from '../../../../data/api'; // TODO: Use webpack aliases instead of relative paths ~tmkb\nimport Alert from '../../../Shared/Alert';\nimport { endpointsToList } from './endpointUtils';\n\nconst styles = (theme) => ({\n    configHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    generalConfigContent: {\n        boxShadow: 'inset -1px 2px 3px 0px #c3c3c3',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontWeight: '900',\n    },\n    endpointConfigSection: {\n        padding: '10px',\n    },\n    generalConfigPanel: {\n        width: '100%',\n    },\n    securityHeading: {\n        fontWeight: 600,\n    },\n    sandboxEndpointSwitch: {\n        marginLeft: theme.spacing(2),\n    },\n});\n\n/**\n * The component which holds the general configurations of the endpoints.\n *\n * @param {any} props The input properties to the component\n * @returns {any} The HTML representation of the component.\n * */\nfunction GeneralConfiguration(props) {\n    const {\n        intl,\n        epConfig,\n        endpointType,\n        classes,\n    } = props;\n    const [isConfigExpanded, setConfigExpand] = useState(false);\n    const [endpointCertificates, setEndpointCertificates] = useState([]);\n    const [aliasList, setAliasList] = useState([]);\n\n    /**\n     * Method to upload the certificate content by calling the rest api.\n     * */\n    const saveCertificate = (certificate, endpoint, alias) => {\n        return API.addCertificate(certificate, endpoint, alias)\n            .then((resp) => {\n                if (resp.status === 201) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.add.success',\n                        defaultMessage: 'Certificate added successfully',\n                    }));\n                    const tmpCertificates = [...endpointCertificates];\n                    tmpCertificates.push({\n                        alias: resp.obj.alias,\n                        endpoint: resp.obj.endpoint,\n                    });\n                    setEndpointCertificates(tmpCertificates);\n                }\n            })\n            .catch((err) => {\n                console.error(err.message);\n                if (err.message === 'Conflict') {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.alias.exist',\n                        defaultMessage: 'Adding Certificate Failed. Certificate Alias Exists.',\n                    }));\n                } else if (err.response) {\n                    Alert.error(err.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.error',\n                        defaultMessage: 'Something went wrong while adding the certificate.',\n                    }));\n                }\n            });\n    };\n    /**\n     * Method to delete the selected certificate.\n     *\n     * @param {string} alias The alias of the certificate to be deleted.\n     * */\n    const deleteCertificate = (alias) => {\n        return API.deleteEndpointCertificate(alias)\n            .then((resp) => {\n                setEndpointCertificates(() => {\n                    if (resp.status === 200) {\n                        return endpointCertificates.filter((cert) => {\n                            return cert.alias !== alias;\n                        });\n                    } else {\n                        return -1;\n                    }\n                });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.success',\n                    defaultMessage: 'Certificate Deleted Successfully',\n                }));\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.GeneralConfiguration.Certificates.certificate.delete.error',\n                    defaultMessage: 'Error Deleting Certificate',\n                }));\n            });\n    };\n\n    // Get the certificates from backend.\n    useEffect(() => {\n        if (!isRestricted(['apim:ep_certificates_view'])) {\n            API.getEndpointCertificates()\n                .then((resp) => {\n                    const { certificates } = resp.obj;\n                    const endpoints = endpointsToList(epConfig);\n                    const aliases = [];\n                    const filteredCertificates = certificates.filter((cert) => {\n                        aliases.push(cert.alias);\n                        for (const endpoint of endpoints) {\n                            if (endpoint && endpoint.url.indexOf(cert.endpoint) !== -1) {\n                                return true;\n                            }\n                        }\n                        return false;\n                    });\n                    setEndpointCertificates(filteredCertificates);\n                    setAliasList(aliases);\n                })\n                .catch((err) => {\n                    console.error(err);\n                    setEndpointCertificates([]);\n                });\n        } else {\n            setEndpointCertificates([]);\n        }\n    }, []);\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={isConfigExpanded}\n                onChange={() => setConfigExpand(!isConfigExpanded)}\n                className={classes.generalConfigPanel}\n                disabled={isRestricted(['apim:ep_certificates_view'])}\n            >\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                    className={classes.configHeaderContainer}\n                >\n                    {endpointType.key === 'default' || endpointType.key === 'awslambda' ? (\n                        <div />\n                    ) : (\n                        <Typography\n                            className={classes.secondaryHeading}\n                            hidden={endpointType.key === 'default' || endpointType.key === 'awslambda'}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.certificates.sub.heading'\n                                defaultMessage='Certificates'\n                            />\n                            :\n                            {' '}\n                            {endpointCertificates.length}\n                            {isRestricted(['apim:ep_certificates_view']) && (\n                                <Box ml={2}>\n                                    <Typography variant='body2' color='primary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.GeneralConfiguration.not.allowed'\n                                            defaultMessage={'*You are not authorized to view certificates'\n                                        + ' due to insufficient permissions'}\n                                        />\n                                    </Typography>\n                                </Box>\n                            )}\n                        </Typography>\n                    )}\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.generalConfigContent}>\n                    <Grid\n                        container\n                        className={classes.endpointConfigSection}\n                        hidden={endpointType.key === 'default' || endpointType.key === 'awslambda'}\n                    >\n                        <Certificates\n                            endpoints={endpointsToList(epConfig)}\n                            certificates={endpointCertificates}\n                            uploadCertificate={saveCertificate}\n                            deleteCertificate={deleteCertificate}\n                            aliasList={aliasList}\n                        />\n                    </Grid>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n\nGeneralConfiguration.propTypes = {\n    epConfig: PropTypes.shape({}).isRequired,\n    endpointType: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(GeneralConfiguration));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    Divider,\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport green from '@material-ui/core/colors/green';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Chip from '@material-ui/core/Chip';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n    iconButtonValid: {\n        padding: theme.spacing(1),\n        color: green[500],\n    },\n    divider: {\n        width: 1,\n        height: 28,\n        margin: 4,\n    },\n    endpointValidChip: {\n        color: 'green',\n        border: '1px solid green',\n    },\n    endpointInvalidChip: {\n        color: '#ffd53a',\n        border: '1px solid #ffd53a',\n    },\n    endpointErrorChip: {\n        color: 'red',\n        border: '1px solid red',\n    },\n});\n/**\n * This component represents a single endpoint view of the endpoints listing. This component holds the actions that\n * affect the endpont. Eg: Delete, advance configuration.\n *\n * @param {any} props The input props\n * @returns {any} The HTML representation of the component.\n * */\nfunction GenericEndpoint(props) {\n    const {\n        category,\n        endpointURL,\n        editEndpoint,\n        classes,\n        type,\n        setAdvancedConfigOpen,\n        esCategory,\n        setESConfigOpen,\n        deleteEndpoint,\n        index,\n        readOnly,\n        autoFocus,\n        name,\n        apiId,\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState(endpointURL);\n    const { api } = useContext(APIContext);\n    const [isEndpointValid, setIsEndpointValid] = useState();\n    const [statusCode, setStatusCode] = useState('');\n    const [isUpdating, setUpdating] = useState(false);\n    const [isErrorCode, setIsErrorCode] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    useEffect(() => {\n        setServiceUrl(endpointURL);\n    }, [endpointURL]);\n\n    function testEndpoint(endpoint, apiID) {\n        setUpdating(true);\n        const restApi = new API();\n        restApi.testEndpoint(endpoint, apiID)\n            .then((result) => {\n                if (result.body.error !== null) {\n                    setStatusCode(result.body.error);\n                    setIsErrorCode(true);\n                } else {\n                    setStatusCode(result.body.statusCode + ' ' + result.body.statusMessage);\n                    setIsErrorCode(false);\n                }\n                if (result.body.statusCode >= 200 && result.body.statusCode < 300) {\n                    setIsEndpointValid(true);\n                    setIsErrorCode(false);\n                } else {\n                    setIsEndpointValid(false);\n                }\n            }).finally(() => {\n                setUpdating(false);\n            });\n    }\n\n    return (\n        <div className={classes.endpointInputWrapper}>\n            <TextField\n                disabled={isRestricted(['apim:api_create'], api)}\n                label={name}\n                className={classes.textField}\n                value={serviceUrl}\n                placeholder={!serviceUrl ? 'http://appserver/resource' : ''}\n                onChange={(event) => setServiceUrl(event.target.value)}\n                onBlur={() => editEndpoint(index, category, serviceUrl)}\n                error={!serviceUrl}\n                helperText={!serviceUrl\n                    ? (\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GenericEndpoint.no.ep.error'\n                            defaultMessage='Endpoint URL should not be empty'\n                        />\n                    ) : ''}\n                variant='outlined'\n                margin='normal'\n                required\n                InputProps={{\n                    readOnly,\n                    autoFocus,\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            {statusCode && (\n                                <Chip\n                                    label={statusCode}\n                                    className={isEndpointValid ? classes.endpointValidChip : iff(\n                                        isErrorCode,\n                                        classes.endpointErrorChip, classes.endpointInvalidChip,\n                                    )}\n                                    variant='outlined'\n                                />\n                            )}\n                            {!api.isWebSocket() && (\n                                <IconButton\n                                    className={isEndpointValid ? classes.iconButtonValid : classes.iconButton}\n                                    aria-label='TestEndpoint'\n                                    onClick={() => testEndpoint(serviceUrl, apiId)}\n                                    disabled={(isRestricted(['apim:api_create'], api)) || isUpdating}\n                                >\n                                    {isUpdating\n                                        ? <CircularProgress size={20} />\n                                        : (\n                                            <Icon>\n                                        check_circle\n                                            </Icon>\n                                        )}\n                                </IconButton>\n                            )}\n                            {type === 'prototyped'\n                                ? <div />\n                                : (\n                                    <>\n                                        <IconButton\n                                            className={classes.iconButton}\n                                            aria-label='Settings'\n                                            onClick={() => setAdvancedConfigOpen(index, type, category)}\n                                            disabled={(isRestricted(['apim:api_create'], api))}\n                                        >\n                                            <Icon>\n                                            settings\n                                            </Icon>\n                                        </IconButton>\n                                        <IconButton\n                                            className={classes.iconButton}\n                                            aria-label='Security'\n                                            onClick={() => setESConfigOpen(type, esCategory)}\n                                            disabled={(isRestricted(['apim:api_create'], api))}\n                                        >\n                                            <Icon>\n                                            security\n                                            </Icon>\n                                        </IconButton>\n                                    </>\n                                )}\n                            {(index > 0) ? <Divider className={classes.divider} /> : <div />}\n                            {(type === 'load_balance' || type === 'failover') ? (\n                                <IconButton\n                                    className={classes.iconButton}\n                                    aria-label='Delete'\n                                    color='secondary'\n                                    onClick={() => deleteEndpoint(index, type, category)}\n                                    disabled={(isRestricted(['apim:api_create'], api))}\n                                >\n                                    <Icon>\n                                        delete\n                                    </Icon>\n                                </IconButton>\n                            ) : (<div />)}\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nGenericEndpoint.defaultProps = {\n    readOnly: false,\n    autoFocus: false,\n    name: 'Service URL',\n};\n\nGenericEndpoint.propTypes = {\n    endpointURL: PropTypes.string.isRequired,\n    deleteEndpoint: PropTypes.func.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    setESConfigOpen: PropTypes.func.isRequired,\n    index: PropTypes.number.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    category: PropTypes.string.isRequired,\n    readOnly: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    name: PropTypes.string,\n    apiId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(GenericEndpoint);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useContext } from 'react';\n\nimport {\n    Icon,\n    IconButton,\n    InputAdornment,\n    TextField,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    textField: {\n        width: '100%',\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: theme.spacing(1),\n    },\n});\n\n/**\n * This component represents the view and functions of endpoint add.\n *\n * @param {any} props The input props.\n * @returns {any} HTML representation of the component.\n * */\nfunction GenericEndpointAdd(props) {\n    const {\n        classes,\n        addEndpoint,\n    } = props;\n    const [serviceUrl, setServiceUrl] = useState('');\n    const { api } = useContext(APIContext);\n\n    /**\n     * The method to handle endpoint add button click action.\n     * */\n    const onAddEndpoint = () => {\n        setServiceUrl('');\n        addEndpoint(serviceUrl);\n    };\n\n    return (\n        <div className={classes.endpointInputWrapper}>\n            <TextField\n                label={(\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GenericEndpoint.service.url.input'\n                        defaultMessage='Service URL'\n                    />\n                )}\n                disabled={isRestricted(['apim:api_create'], api)}\n                className={classes.textField}\n                value={serviceUrl}\n                fullWidth\n                onChange={(event) => setServiceUrl(event.target.value)}\n                variant='outlined'\n                margin='normal'\n                placeholder='Enter the Endpoint URL and press + button'\n                InputProps={{\n                    endAdornment: (\n                        <InputAdornment position='end'>\n                            <IconButton\n                                onClick={onAddEndpoint}\n                                color='green'\n                                className={classes.iconButton}\n                                aria-label='Search'\n                                disabled={serviceUrl === ''}\n                            >\n                                <Icon>\n                                    add\n                                </Icon>\n                            </IconButton>\n                        </InputAdornment>\n                    ),\n                }}\n            />\n        </div>\n    );\n}\n\nGenericEndpointAdd.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    addEndpoint: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(GenericEndpointAdd);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Grid, withStyles } from '@material-ui/core';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport GenericEndpoint from './GenericEndpoint';\nimport GenericEndpointAdd from './GenericEndpointAdd';\n\nconst styles = (theme) => ({\n    endpointInputWrapper: {\n        display: 'flex',\n    },\n    epInput: {\n        width: '100%',\n    },\n    epTypeWrapper: {\n        display: 'flex',\n        padding: '5px',\n    },\n    epTypeName: {\n        paddingTop: '10px',\n        fontWeight: 600,\n    },\n    epConfig: {\n        justifyContent: 'flex-end',\n    },\n    leftArrow: {\n        paddingTop: '6px',\n    },\n    leftArrowLight: {\n        color: '#c5c5c5',\n        paddingTop: '6px',\n    },\n    dialogHeader: {\n        fontWeight: 600,\n    },\n    listItemOdd: {\n        background: '#ececec',\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n    listItem: {\n        borderRadius: '5px',\n        '&:hover': {\n            backgroundColor: theme.palette.grey[300],\n        },\n        '&:focus': {\n            backgroundColor: theme.palette.grey[400],\n        },\n    },\n});\n\n/**\n * The Component for endpoint listing.\n * @param {*} props The props that are being passed to the component.\n * @returns {any} The HTML view of the ep listing component.\n */\nfunction EndpointListing(props) {\n    const {\n        classes,\n        category,\n        apiEndpoints,\n        epType,\n        failOvers,\n        editEndpoint,\n        addNewEndpoint,\n        removeEndpoint,\n        setAdvancedConfigOpen,\n        apiId,\n    } = props;\n    const [endpointType, setEndpointType] = useState(epType);\n    const [endpoints, setEndpoints] = useState([{ url: 'http://myservice/endpoint' }]);\n    const selectedRef = useRef(null);\n\n    /**\n     * Method to add a new endpoint.\n     *\n     * @param {string} url The url of the endpoint that needs to be added.\n     * */\n    const addEndpoint = (url) => {\n        addNewEndpoint(category, epType, url);\n    };\n\n    useEffect(() => {\n        setEndpointType(epType);\n        setEndpoints(() => {\n            if (apiEndpoints !== null && epType === 'failover') {\n                return ([apiEndpoints].concat(failOvers));\n            } else {\n                if (apiEndpoints !== undefined) {\n                    return Array.isArray(apiEndpoints) ? apiEndpoints : [apiEndpoints];\n                }\n                return [{ url: 'http://myservice/' }];\n            }\n        });\n    }, [props]);\n\n    return (\n        <div className={classes.listingWrapper} ref={selectedRef}>\n            <Grid container xs={12}>\n                <Grid xs={12}>\n                    {(endpointType === 'failover' || endpointType === 'load_balance')\n                        ? <GenericEndpointAdd addEndpoint={addEndpoint} /> : <div />}\n                </Grid>\n                <Grid xs={12}>\n                    {\n                        (endpoints.map((ep, index) => {\n                            if (index > 0) {\n                                return (\n                                    <GenericEndpoint\n                                        readOnly\n                                        endpointURL={endpoints[index] ? endpoints[index].url : ''}\n                                        type={endpointType}\n                                        index={index}\n                                        category={category}\n                                        editEndpoint={editEndpoint}\n                                        deleteEndpoint={removeEndpoint}\n                                        setAdvancedConfigOpen={setAdvancedConfigOpen}\n                                        apiId={apiId}\n                                    />\n                                );\n                            }\n                            return (<div />);\n                        }))\n                    }\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nEndpointListing.propTypes = {\n    classes: PropTypes.shape({\n        epTypeWrapper: PropTypes.shape({}),\n        epTypeName: PropTypes.shape({}),\n        listingWrapper: PropTypes.shape({}),\n        epConfig: PropTypes.shape({}),\n    }).isRequired,\n    epType: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n    apiEndpoints: PropTypes.shape({}).isRequired,\n    failOvers: PropTypes.shape({}).isRequired,\n    addNewEndpoint: PropTypes.func.isRequired,\n    removeEndpoint: PropTypes.func.isRequired,\n    editEndpoint: PropTypes.func.isRequired,\n    setAdvancedConfigOpen: PropTypes.func.isRequired,\n    apiId: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointListing));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport {\n    TextField, MenuItem, Grid, Button, withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst algorithms = [\n    {\n        key: 'org.apache.synapse.endpoints.algorithms.RoundRobin',\n        value: 'Round-Robin',\n    },\n    { key: 'other', value: 'Other' },\n];\nconst sessionManagementOps = [\n    { key: 'http', value: 'Transport' },\n    { key: 'soap', value: 'SOAP' },\n    { key: 'simpleClientSession', value: 'Client Id' },\n    { key: 'none', value: 'None' },\n];\n\nconst defaultTemplateObj = {\n    algoClassName: algorithms[0].key,\n    algoCombo: algorithms[0].key,\n    sessionManagement: sessionManagementOps[0].key,\n    sessionTimeOut: 300,\n};\n\nconst styles = (theme) => ({\n    configButtonContainer: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingTop: theme.spacing(1),\n    },\n});\n\n/**\n * The component for loadbalance endpoint configuration.\n * @param {any} props The props that are being passed.\n * @returns {any} The HTML contents of the Configuration component.\n */\nfunction LoadBalanceConfig(props) {\n    const {\n        algoClassName,\n        algoCombo,\n        sessionManagement,\n        sessionTimeOut,\n        handleLBConfigChange,\n        closeLBConfigDialog,\n        classes,\n    } = props;\n    const [lbConfig, setLbConfigObject] = useState(defaultTemplateObj);\n    const [algoClassNameError, setAlgoClassNameError] = useState(false);\n    const { api } = useContext(APIContext);\n\n    useEffect(() => {\n        setLbConfigObject(() => {\n            const tmpLBConfig = { ...defaultTemplateObj };\n            if (algoCombo) {\n                tmpLBConfig.algoCombo = algoCombo;\n            }\n            if (sessionManagement) {\n                tmpLBConfig.sessionManagement = sessionManagement;\n            }\n            if (algoClassName) {\n                tmpLBConfig.algoClassName = algoClassName;\n            }\n            if (sessionTimeOut) {\n                tmpLBConfig.sessionTimeOut = sessionTimeOut;\n            }\n            return tmpLBConfig;\n        });\n    }, [props]);\n\n    /**\n     * Method to capture the alogrithm select changes.\n     *\n     * @param {any} event The event triggered by the element.\n     * */\n    const handleAlgorithmChange = (event) => {\n        const { value } = event.target;\n        setLbConfigObject({\n            ...lbConfig,\n            algoCombo: value,\n            algoClassName: value === 'other' ? '' : defaultTemplateObj.algoClassName,\n        });\n    };\n\n    /**\n     * Method to capture the onChange event of the elements.\n     *\n     * @param {any} event The event triggered by the element.\n     * @param {string} field The respective field which is being changed.\n     * */\n    const handleFieldChange = (event, field) => {\n        setLbConfigObject({ ...lbConfig, [field]: event.target.value });\n    };\n\n    /**\n     * Method to set the configuration changes to the original endpoints config object.\n     * */\n    const submitConfiguration = () => {\n        handleLBConfigChange(lbConfig);\n    };\n\n    return (\n        <>\n            <Grid container direction='column'>\n                <TextField\n                    id='algorithmSelect'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.algorithm'\n                            defaultMessage='Algorithm'\n                        />\n                    )}\n                    value={lbConfig.algoCombo}\n                    onChange={handleAlgorithmChange}\n                    helperText='Please select the Loadbalance Algorithm.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {algorithms.map((algo) => (\n                        <MenuItem key={algo.key} value={algo.key} selected={lbConfig.algoCombo}>\n                            {algo.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                {(lbConfig.algoCombo === 'other')\n                    ? (\n                        <TextField\n                            id='customAlgoInput'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.LoadBalanceConfig.class.name.for.algorithm'\n                                    defaultMessage='Class Name for Algorithm'\n                                />\n                            )}\n                            required\n                            error={algoClassNameError}\n                            value={lbConfig.algoClassName}\n                            onChange={(event) => handleFieldChange(event, 'algoClassName')}\n                            onBlur={() => setAlgoClassNameError(lbConfig.algoClassName === '')}\n                            helperText='Enter the class name of the loadbalance algorithm'\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            margin='normal'\n                        />\n                    ) : <div /> }\n                <TextField\n                    id='sessionMgtSelect'\n                    select\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.session.management'\n                            defaultMessage='Session Management'\n                        />\n                    )}\n                    value={lbConfig.sessionManagement}\n                    onChange={(event) => handleFieldChange(event, 'sessionManagement')}\n                    helperText='Please select the Session Management mechanism.'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                >\n                    {sessionManagementOps.map((option) => (\n                        <MenuItem key={option.key} value={option.key}>\n                            {option.value}\n                        </MenuItem>\n                    ))}\n                </TextField>\n                <TextField\n                    id='sessionTimeout'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadBalanceConfig.session.timeout'\n                            defaultMessage='Session Timeout (Millis)'\n                        />\n                    )}\n                    value={lbConfig.sessionTimeOut}\n                    onChange={(event) => handleFieldChange(event, 'sessionTimeOut')}\n                    type='number'\n                    placeholder='300'\n                    margin='normal'\n                    disabled={isRestricted(['apim:api_create'], api)}\n                />\n            </Grid>\n            <Grid className={classes.configButtonContainer}>\n                <Button\n                    color='primary'\n                    variant='contained'\n                    autoFocus\n                    onClick={submitConfiguration}\n                    disabled={lbConfig.algoClassName === '' || isRestricted(['apim:api_create'], api)}\n                    style={{ marginRight: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button\n                    onClick={closeLBConfigDialog}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.EndpointOverview.loadbalance.config.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </>\n    );\n}\n\nLoadBalanceConfig.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    algoClassName: PropTypes.string.isRequired,\n    algoCombo: PropTypes.string.isRequired,\n    sessionManagement: PropTypes.string.isRequired,\n    sessionTimeOut: PropTypes.string.isRequired,\n    handleLBConfigChange: PropTypes.func.isRequired,\n    closeLBConfigDialog: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(LoadBalanceConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    ExpansionPanel,\n    ExpansionPanelDetails,\n    ExpansionPanelSummary,\n    Grid,\n    Icon,\n    IconButton,\n    MenuItem,\n    TextField,\n    Typography,\n    withStyles,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport EndpointListing from 'AppComponents/Apis/Details/Endpoints/EndpointListing';\nimport LoadBalanceConfig from 'AppComponents/Apis/Details/Endpoints/LoadBalanceConfig';\nimport Collapse from '@material-ui/core/Collapse';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport { getEndpointTypeProperty } from './endpointUtils';\n\nconst styles = (theme) => ({\n    endpointTypeSelect: {\n        width: '50%',\n        marginTop: theme.spacing(1),\n    },\n    configHeaderContainer: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    generalConfigContent: {\n        boxShadow: 'inset -1px 2px 3px 0px #c3c3c3',\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n        display: 'flex',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n        fontWeight: '900',\n    },\n    endpointConfigSection: {\n        padding: '10px',\n    },\n    generalConfigPanel: {\n        width: '100%',\n    },\n    endpointsTypeSelectWrapper: {\n        display: 'flex',\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    lbConfigBtn: {\n        position: 'relative',\n        top: '10px',\n    },\n    endpointName: {\n        fontWeight: 600,\n    },\n    wrapper: {\n        width: '100%',\n    },\n});\n\nconst endpointTypes = [\n    { key: 'none', value: 'None' },\n    { key: 'failover', value: 'Failover' },\n    { key: 'load_balance', value: 'Load Balanced' },\n];\n\n/**\n * The component which holds the load balance and failover configuration.\n *\n * @param {any} props The input properties to the component\n * @returns {any} The HTML representation of the component.\n * */\nfunction LoadbalanceFailoverConfig(props) {\n    const {\n        epConfig,\n        classes,\n        endpointsDispatcher,\n        toggleAdvanceConfig,\n        globalEpType,\n        handleEndpointCategorySelect,\n    } = props;\n    const { api } = useContext(APIContext);\n    const [isConfigExpanded, setConfigExpand] = useState(false);\n    const [endpointType, setEndpointType] = useState(props);\n    const [isLBConfigOpen, setLBConfigOpen] = useState(false);\n\n    useEffect(() => {\n        const epType = epConfig.endpoint_type;\n        if (epType === 'http' || epType === 'address') {\n            setEndpointType('none');\n        } else {\n            setEndpointType(epType);\n        }\n    }, [props]);\n\n    /**\n     * Method to add new loadbalance/ failover endpoint to the existing endpoints.\n     *\n     * @param {string} category The endpoint category (production/ sandbox)\n     * @param {string} type The endpoint type. (load_balance/ failover)\n     * @param {string} newURL The url of the new endpoint.\n     * */\n    const addEndpoint = (category, type, newURL) => {\n        const endpointConfigCopy = cloneDeep(epConfig);\n        const endpointTemplate = {\n            endpoint_type: globalEpType.key,\n            template_not_supported: false,\n            url: newURL,\n        };\n        const epConfigProperty = getEndpointTypeProperty(type, category);\n        let endpointList = endpointConfigCopy[epConfigProperty];\n        /**\n         * Check whether we have existing endpoints added.\n         * */\n        if (endpointList) {\n            if (!Array.isArray(endpointList)) {\n                endpointList = [endpointList].concat(endpointTemplate);\n            } else {\n                endpointList = endpointList.concat(endpointTemplate);\n            }\n        } else {\n            endpointList = [endpointTemplate];\n        }\n        endpointConfigCopy[epConfigProperty] = endpointList;\n        endpointsDispatcher({ action: 'add_endpoint', value: endpointConfigCopy });\n    };\n\n    /**\n     * Method to handle the loadbalance configuration changes.\n     *\n     * @param {object} lbConfig The modified loadbalance configuration.\n     * */\n    const handleLBConfigChange = (lbConfig) => {\n        endpointsDispatcher({ action: 'set_lb_config', value: { ...epConfig, ...lbConfig } });\n        setLBConfigOpen(false);\n    };\n\n    const getEndpointTypeHeading = () => {\n        switch (endpointType) {\n            case 'none':\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.none.heading'\n                        defaultMessage='Not Configured'\n                    />\n                );\n            case 'failover':\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.failover.heading'\n                        defaultMessage='Failover Endpoints'\n                    />\n                );\n            default:\n                return (\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.loadbalance.heading'\n                        defaultMessage='Load Balanced Endpoints'\n                    />\n                );\n        }\n    };\n\n    /**\n     * Method to remove the selected endpoint from the endpoints list.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (production/ sandbox)\n     * */\n    const removeEndpoint = (index, epType, category) => {\n        const tmpEndpointConfig = cloneDeep(epConfig);\n        const endpointConfigProperty = getEndpointTypeProperty(epType, category);\n        const indexToRemove = epType === 'failover' ? index - 1 : index;\n        const tmpEndpoints = tmpEndpointConfig[endpointConfigProperty];\n        tmpEndpoints.splice(indexToRemove, 1);\n        endpointsDispatcher({\n            action: 'remove_endpoint',\n            value: { ...epConfig, [endpointConfigProperty]: tmpEndpoints },\n        });\n    };\n\n    const editEndpoint = () => {};\n    const handleEndpointTypeSelect = (event) => {\n        setEndpointType(event.target.value);\n        handleEndpointCategorySelect(event);\n    };\n\n    return (\n        <>\n            <ExpansionPanel\n                expanded={isConfigExpanded || endpointType === 'load_balance' || endpointType === 'failover'}\n                onChange={() => setConfigExpand(!isConfigExpanded)}\n                className={classes.generalConfigPanel}\n            >\n                <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls='panel1bh-content'\n                    id='panel1bh-header'\n                    className={classes.configHeaderContainer}\n                >\n                    <Typography className={classes.secondaryHeading}>\n                        {getEndpointTypeHeading()}\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails className={classes.generalConfigContent}>\n                    {(!epConfig.production_endpoints && !epConfig.sandbox_endpoints)\n                        ? (\n                            <InlineMessage>\n                                <div className={classes.contentWrapper}>\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.no.endpoints.message'\n                                            defaultMessage='Add Production/ Sandbox endpoints to configure.'\n                                        />\n                                    </Typography>\n                                </div>\n                            </InlineMessage>\n                        )\n                        : (\n                            <Grid container item xs={12}>\n                                <Grid xs={12} className={classes.endpointsTypeSelectWrapper}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        id='certificateEndpoint'\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.endpoint.type'\n                                                defaultMessage='Endpoint Type'\n                                            />\n                                        )}\n                                        value={endpointType}\n                                        placeholder='Endpoint'\n                                        onChange={handleEndpointTypeSelect}\n                                        margin='normal'\n                                        variant='outlined'\n                                        select\n                                        className={classes.endpointTypeSelect}\n                                    >\n                                        {endpointTypes.map((type) => {\n                                            return <MenuItem value={type.key}>{type.value}</MenuItem>;\n                                        })}\n                                    </TextField>\n                                    <div className={classes.lpConfigWrapper}>\n                                        <IconButton\n                                            className={classes.lbConfigBtn}\n                                            disabled={epConfig.endpoint_type !== 'load_balance'}\n                                            aria-label='Delete'\n                                            onClick={() => setLBConfigOpen(true)}\n                                        >\n                                            <Icon>\n                                            settings\n                                            </Icon>\n                                        </IconButton>\n                                    </div>\n                                </Grid>\n                                <Grid xs={12} container spacing={2}>\n                                    <Collapse className={classes.wrapper} in={endpointType !== 'none'}>\n                                        {epConfig.production_endpoints\n                                    && (\n                                        <Grid xs={12} className={classes.endpointsWrapperLeft}>\n                                            <Typography className={classes.endpointName}>\n                                                {epConfig.endpoint_type === 'failover'\n                                                    ? (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                            + 'LoadbalanceFailoverConfig.production.'\n                                                            + 'failover.endpoint'}\n                                                            defaultMessage='Production Failover Endpoints'\n                                                        />\n                                                    )\n                                                    : (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.LoadbalanceFailoverConfig.'\n                                                    + 'production.loadbalance.endpoint'}\n                                                            defaultMessage='Production Loadbalanced Endpoints'\n                                                        />\n                                                    )}\n                                            </Typography>\n                                            <EndpointListing\n                                                apiEndpoints={epConfig.production_endpoints}\n                                                failOvers={epConfig.production_failovers}\n                                                epType={epConfig.endpoint_type}\n                                                addNewEndpoint={addEndpoint}\n                                                removeEndpoint={removeEndpoint}\n                                                editEndpoint={editEndpoint}\n                                                setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                category='production_endpoints'\n                                                apiId={api.id}\n                                            />\n                                        </Grid>\n                                    )}\n                                        {epConfig.sandbox_endpoints\n                                    && (\n                                        <Grid xs={12} className={classes.endpointsWrapperRight}>\n                                            <Typography className={classes.endpointName}>\n                                                {epConfig.endpoint_type === 'failover'\n                                                    ? (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                            + 'LoadbalanceFailoverConfig.sandbox.'\n                                                            + 'failover.endpoint'}\n                                                            defaultMessage='Sandbox Failover Endpoints'\n                                                        />\n                                                    )\n                                                    : (\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.LoadbalanceFailoverConfig.'\n                                                    + 'sandbox.loadbalance.endpoint'}\n                                                            defaultMessage='Sandbox Loadbalanced Endpoints'\n                                                        />\n                                                    )}\n                                            </Typography>\n                                            <EndpointListing\n                                                apiEndpoints={epConfig.sandbox_endpoints}\n                                                failOvers={epConfig.sandbox_failovers}\n                                                epType={epConfig.endpoint_type}\n                                                addNewEndpoint={addEndpoint}\n                                                removeEndpoint={removeEndpoint}\n                                                editEndpoint={editEndpoint}\n                                                setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                category='sandbox_endpoints'\n                                                apiId={api.id}\n                                            />\n                                        </Grid>\n                                    )}\n                                    </Collapse>\n                                </Grid>\n                            </Grid>\n                        )}\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <Dialog open={isLBConfigOpen}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.LoadbalanceFailoverConfig.load.balance.configuration.title'\n                            defaultMessage='Load Balance Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <LoadBalanceConfig\n                        handleLBConfigChange={handleLBConfigChange}\n                        closeLBConfigDialog={() => setLBConfigOpen(false)}\n                        algoCombo={epConfig.algoCombo}\n                        algoClassName={epConfig.algoClassName}\n                        sessionTimeOut={epConfig.sessionTimeOut}\n                        sessionManagement={epConfig.sessionManagement}\n                    />\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n}\n\nLoadbalanceFailoverConfig.propTypes = {\n    epConfig: PropTypes.shape({}).isRequired,\n    endpointSecurityInfo: PropTypes.shape({}).isRequired,\n    endpointType: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n    toggleAdvanceConfig: PropTypes.func.isRequired,\n    handleEndpointCategorySelect: PropTypes.func.isRequired,\n    globalEpType: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(LoadbalanceFailoverConfig));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport {\n    Divider,\n    FormControl,\n    Grid,\n    Input,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n    Button,\n    withStyles,\n} from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst itemHeight = 48;\nconst itemPaddingTop = 8;\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: (itemHeight * 4.5) + itemPaddingTop, width: 250,\n        },\n    },\n};\nconst styles = (theme) => ({\n    formControl: {\n        width: '500px',\n    },\n    subTitle: {\n        fontSize: '1rem',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    configContainer: {\n        paddingTop: '10px',\n    },\n    configSubContainer: {\n        paddingBottom: '10px',\n        marginTop: '5px',\n        padding: '5px',\n    },\n    textField: {\n        marginRight: theme.spacing(1),\n        width: '45%',\n    },\n    advanceDialogActions: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n});\n\n/**\n * The component for advanced endpoint configurations.\n * @param {any} props The input props\n * @returns {any} The HTML representation of the compoenent.\n */\nfunction AdvanceEndpointConfig(props) {\n    const { api } = useContext(APIContext);\n    const {\n        classes,\n        intl,\n        advanceConfig,\n        isSOAPEndpoint,\n        onSaveAdvanceConfig,\n        onCancel,\n    } = props;\n    const [advanceConfigObj, setAdvanceConfig] = useState(() => {\n        const config = {};\n        if (isSOAPEndpoint) {\n            config.format = 'soap11';\n            config.optimize = 'SWA';\n        }\n        config.actionDuration = '30000';\n        config.actionSelect = 'fault';\n        config.factor = '';\n        config.retryDelay = '';\n        config.retryErroCode = [];\n        config.retryTimeOut = '';\n        config.suspendDuration = '';\n        config.suspendErrorCode = [];\n        config.suspendMaxDuration = '';\n        return config;\n    });\n\n    /**\n     * The error codes definition.\n     * */\n    const errorCodes = [\n        {\n            key: '101001',\n            value: '101001 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.receiving',\n                defaultMessage: 'Receiver IO error Receiving',\n            }),\n        },\n        {\n            key: '101500',\n            value: '101500 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.sending',\n                defaultMessage: 'Sender IO Error Sending',\n            }),\n        },\n        {\n            key: '101000',\n            value: '101000 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.receiver.io.error.sending',\n                defaultMessage: 'Retriever IO Error Sending',\n            }),\n        },\n        {\n            key: '101501',\n            value: '101501 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.sender.io.error.receiving',\n                defaultMessage: 'Sender IO Error Receiving',\n            }),\n        },\n        {\n            key: '101503',\n            value: '101503 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.failed',\n                defaultMessage: 'Connection Failed',\n            }),\n        },\n        {\n            key: '101504',\n            value: '101504 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.timed.out',\n                defaultMessage: 'Connection Timed Out',\n            }),\n        },\n        {\n            key: '101505',\n            value: '101505 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connection.closed',\n                defaultMessage: 'Connection Closed',\n            }),\n        },\n        {\n            key: '101506',\n            value: '101506 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.tpp.protocol.violation',\n                defaultMessage: 'TTP Protocol Violation',\n            }),\n        },\n        {\n            key: '101507',\n            value: '101507 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.cancel',\n                defaultMessage: 'Connect Cancel',\n            }),\n        },\n        {\n            key: '101508',\n            value: '101508 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.connect.timeout',\n                defaultMessage: 'Connect Timeout',\n            }),\n        },\n        {\n            key: '101509',\n            value: '101509 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.send.abort',\n                defaultMessage: 'Send Abort',\n            }),\n        },\n        {\n            key: '101510',\n            value: '101510 : ' + intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.response.processing.failure',\n                defaultMessage: 'Response Processing Failure',\n            }),\n        }];\n\n    /**\n     * Supported action items.\n     * */\n    const actionItems = [\n        {\n            key: 'fault',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.execute.fault.sequence',\n                defaultMessage: 'Execute Fault Sequence',\n            }),\n        },\n        {\n            key: 'discard',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.discard.message',\n                defaultMessage: 'Discard Message',\n            }),\n        },\n    ];\n\n    /**\n     * Message types for the address endpoint type.\n     * */\n    const messageTypes = [\n        { key: 'soap11', value: 'SOAP 1.1' },\n        { key: 'soap12', value: 'SOAP 1.2' },\n        {\n            key: 'POX',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.plain.old.xml',\n                defaultMessage: 'Plain Old XML (POX)',\n            }),\n        },\n        {\n            key: 'REST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.representational.state.transfer',\n                defaultMessage: 'Representational State Transfer (REST)',\n            }),\n        },\n        {\n            key: 'GET',\n            value: 'GET',\n        },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    /**\n     * Address endpoint message optimizations.\n     * */\n    const optimizeOptions = [\n        { key: 'SWA', value: 'SWA' },\n        { key: 'MTOM', value: 'MTOM' },\n        {\n            key: 'leave-as-is',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.leave.as.is',\n                defaultMessage: 'Leave As-Is',\n            }),\n        },\n    ];\n\n    useEffect(() => {\n        setAdvanceConfig(() => {\n            if (advanceConfig === {}) {\n                return { ...advanceConfigObj };\n            }\n            return { ...advanceConfigObj, ...advanceConfig };\n        });\n    }, [props]);\n\n    /**\n     * Method to handle the advance endpoint field change. In each change, the advance config object is getting updated.\n     *\n     * @param {any} event The HTML event triggered by the element.\n     * @param {string} field The HTML element that is being changed.\n     * */\n    const handleConfigFieldChange = (event, field) => {\n        const di = { ...advanceConfigObj, [field]: event.target.value };\n        setAdvanceConfig(di);\n    };\n\n    return (\n        <Grid container direction='column' className={classes.configContainer}>\n            {(isSOAPEndpoint) ? (\n                <Grid item container className={classes.configSubContainer}>\n                    <Typography className={classes.subTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.message.content'\n                            defaultMessage='Message Content'\n                        />\n                    </Typography>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.format.select'\n                                defaultMessage='Format'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.format}\n                            onChange={(event) => handleConfigFieldChange(event, 'format')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {messageTypes.map((messageType) => (\n                                <MenuItem key={messageType.key} value={messageType.key}>\n                                    {messageType.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel htmlFor='err-code-select'>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.optimize.select'\n                                defaultMessage='Optimize'\n                            />\n                        </InputLabel>\n                        <Select\n                            autoWidth={false}\n                            value={advanceConfigObj.optimize}\n                            onChange={(event) => handleConfigFieldChange(event, 'optimize')}\n                            input={<Input id='err-code-select' />}\n                            MenuProps={MenuProps}\n                        >\n                            {optimizeOptions.map((option) => (\n                                <MenuItem key={option.key} value={option.key}>\n                                    {option.value}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                    <Divider />\n                </Grid>\n            ) : (<div />)}\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Endpoint.Suspension.State' defaultMessage='Endpoint Suspension State' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.suspendErrorCode}\n                        onChange={(event) => handleConfigFieldChange(event, 'suspendErrorCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                        variant='outlined'\n                    >\n                        {errorCodes.map((code) => (\n                            <MenuItem key={code.key} value={code.key}>\n                                {code.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='initial-duration-input'\n                    value={advanceConfigObj.suspendDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'suspendDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.initial.duration.ms'\n                            defaultMessage='Initial Duration (ms)'\n                        />\n                    )}\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='max-duration-input'\n                    value={advanceConfigObj.suspendMaxDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'suspendMaxDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.max.duration.ms'\n                            defaultMessage='Max Duration (ms)'\n                        />\n                    )}\n                    margin='normal'\n                    type='number'\n                />\n                <TextField\n                    className={classes.textField}\n                    value={advanceConfigObj.factor}\n                    onChange={(event) => handleConfigFieldChange(event, 'factor')}\n                    id='factor-input'\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.factor'\n                            defaultMessage='Factor'\n                        />\n                    )}\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.endpoint.timeout.state'\n                        defaultMessage='Endpoint Timeout State'\n                    />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.error.code'\n                            defaultMessage='Error Code'\n                        />\n                    </InputLabel>\n                    <Select\n                        multiple\n                        autoWidth={false}\n                        value={advanceConfigObj.retryErroCode}\n                        onChange={(event) => handleConfigFieldChange(event, 'retryErroCode')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                    >\n                        {errorCodes.map((code) => (\n                            <MenuItem key={code.key} value={code.key}>\n                                {code.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='retries-input'\n                    value={advanceConfigObj.retryTimeOut}\n                    onChange={(event) => handleConfigFieldChange(event, 'retryTimeOut')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retries.before.suspension'\n                            defaultMessage='Retries Before Suspension'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n                <TextField\n                    className={classes.textField}\n                    id='retry-delay-input'\n                    value={advanceConfigObj.retryDelay}\n                    onChange={(event) => handleConfigFieldChange(event, 'retryDelay')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.retry.delay.ms'\n                            defaultMessage='Retry Delay (ms)'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Divider />\n            <Grid item container className={classes.configSubContainer}>\n                <Typography className={classes.subTitle}>\n                    <FormattedMessage id='Connection.Timeout' defaultMessage='Connection Timeout' />\n                </Typography>\n                <FormControl className={classes.formControl}>\n                    <InputLabel htmlFor='err-code-select'>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.action'\n                            defaultMessage='Action'\n                        />\n                    </InputLabel>\n                    <Select\n                        autoWidth={false}\n                        value={advanceConfigObj.actionSelect}\n                        onChange={(event) => handleConfigFieldChange(event, 'actionSelect')}\n                        input={<Input id='err-code-select' />}\n                        MenuProps={MenuProps}\n                    >\n                        {actionItems.map((item) => (\n                            <MenuItem key={item.key} value={item.key}>\n                                {item.value}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n                <TextField\n                    className={classes.textField}\n                    id='duration-input'\n                    value={advanceConfigObj.actionDuration}\n                    onChange={(event) => handleConfigFieldChange(event, 'actionDuration')}\n                    label={(\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.duration.ms'\n                            defaultMessage='Duration (ms)'\n                        />\n                    )}\n                    type='number'\n                    margin='normal'\n                />\n            </Grid>\n            <Grid className={classes.advanceDialogActions}>\n                <Button\n                    onClick={() => onSaveAdvanceConfig(advanceConfigObj)}\n                    color='primary'\n                    autoFocus\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    variant='contained'\n                    style={{ marginRight: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.config.save.button'\n                        defaultMessage='Save'\n                    />\n                </Button>\n                <Button onClick={onCancel}>\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.AdvancedConfig.AdvanceEndpointConfig.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nAdvanceEndpointConfig.propTypes = {\n    classes: PropTypes.shape({\n        configContainer: PropTypes.shape({}),\n        configSubContainer: PropTypes.shape({}),\n        subTitle: PropTypes.shape({}),\n        formControl: PropTypes.shape({}),\n\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    advanceConfig: PropTypes.shape({}).isRequired,\n    isSOAPEndpoint: PropTypes.bool.isRequired,\n    onSaveAdvanceConfig: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(AdvanceEndpointConfig));\n","/* eslint-disable react/jsx-no-bind */\n/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        cursor: 'pointer',\n    },\n}));\n\n/**\n * EditableParameterRow for OAuth Endpoint Security\n * @param {*} props properties\n * @returns {*} EditableParameterRow component\n */\nfunction EditableParameterRow(props) {\n    const {\n        oldName, oldValue,\n        handleUpdateList, handleDelete,\n        intl, isRestricted, api,\n    } = props;\n    const [newName, setName] = useState(oldName);\n    const [newValue, setValue] = useState(oldValue);\n    const [editMode, setEditMode] = useState(false);\n\n    /**\n     * Set edit mode\n     */\n    const updateEditMode = () => {\n        setEditMode(!editMode);\n    };\n\n    /**\n     * Update name field\n     * @param {*} event value entered for name field\n     */\n    const handleKeyChange = (event) => {\n        const { value } = event.target;\n        setName(value);\n    };\n\n    /**\n     * Update value field\n     * @param {*} event value entered for the value field\n     */\n    const handleValueChange = (event) => {\n        const { value } = event.target;\n        setValue(value);\n    };\n\n    /**\n     * Validate if the field is empty\n     * @param {*} itemValue value of the field\n     * @returns {*} boolean value\n     */\n    const validateEmpty = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Save the updated values in the custom parameters object\n     */\n    const saveRow = () => {\n        const oldRow = { oldName, oldValue };\n        const newRow = { newName: newName || oldName, newValue: newValue || oldValue };\n        handleUpdateList(oldRow, newRow);\n        setEditMode(false);\n    };\n\n    /**\n     * Delete name-value pair in the custom parameters object\n     */\n    const deleteRow = () => {\n        handleDelete(oldName);\n    };\n\n    /**\n     * Keyboard event listener to save the name-value pair on Enter\n     * @param {*} e event containing the key that was pressed\n     */\n    const handleKeyDown = (e) => {\n        if (e.key === 'Enter') {\n            saveRow();\n        }\n    };\n\n    // Styles definition\n    const classes = useStyles();\n\n    return (\n        <TableRow>\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.GeneralConfiguration.EditableParameterRow.Parameter.Name',\n                            defaultMessage: 'Parameter Name',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newName}\n                        onChange={handleKeyChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newName)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldName}</TableCell>\n            )}\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.GeneralConfiguration.EditableParameterRow.Parameter.Value',\n                            defaultMessage: 'Parameter Value',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newValue}\n                        onChange={handleValueChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newValue)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldValue}</TableCell>\n            )}\n            <TableCell align='right'>\n                {editMode ? (\n                    <>\n                        <IconButton\n                            className={classes.link}\n                            aria-label='save'\n                            onClick={saveRow}\n                            onKeyDown={() => {}}\n                            disabled={validateEmpty(newName) || validateEmpty(newValue)}\n                            color='inherit'\n                        >\n                            <SaveIcon className={classes.buttonIcon} />\n                        </IconButton>\n                    </>\n                ) : (\n                    <IconButton\n                        className={classes.link}\n                        aria-label='edit'\n                        onClick={updateEditMode}\n                        onKeyDown={() => {}}\n                        color='inherit'\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <EditIcon className={classes.buttonIcon} />\n                    </IconButton>\n                )}\n                <IconButton\n                    className={classes.link}\n                    aria-label='remove'\n                    onClick={deleteRow}\n                    onKeyDown={() => {}}\n                    color='inherit'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                >\n                    <DeleteForeverIcon className={classes.buttonIcon} />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}\n\nEditableParameterRow.propTypes = {\n    oldName: PropTypes.string.isRequired,\n    oldValue: PropTypes.string.isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    handleUpdateList: PropTypes.func.isRequired,\n    handleDelete: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(EditableParameterRow);\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Grid, TextField, MenuItem, InputAdornment,\n    Icon,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n} from '@material-ui/core';\nimport { RemoveRedEye } from '@material-ui/icons';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport Button from '@material-ui/core/Button';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport isEmpty from 'lodash.isempty';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport APIValidation from 'AppData/APIValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport EditableParameterRow from './EditableParameterRow';\n\nconst styles = () => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n    },\n    radioWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    addParameter: {\n        marginRight: '16px',\n    },\n    marginRight: {\n        marginRight: '8px',\n    },\n    buttonIcon: {\n        marginRight: '16px',\n    },\n    button: {\n        marginTop: '5px',\n    },\n    listItem: {\n        marginTop: '25px',\n    },\n    eye: {\n        cursor: 'pointer',\n    },\n});\n\n/**\n * The base component for advanced endpoint configurations.\n * @param {any} props The props that are being passed\n * @returns {any} The html representation of the component.\n */\nfunction EndpointSecurity(props) {\n    const { api } = useContext(APIContext);\n    const {\n        intl, securityInfo, onChangeEndpointAuth, classes, isProduction,\n        saveEndpointSecurityConfig,\n        closeEndpointSecurityConfig,\n    } = props;\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState({\n        type: '',\n        username: '',\n        password: '',\n        grantType: '',\n        tokenUrl: '',\n        clientId: '',\n        clientSecret: '',\n        customParameters: {},\n    });\n    const [securityValidity, setSecurityValidity] = useState();\n\n    const [showAddParameter, setShowAddParameter] = useState(false);\n    const [clientSecretIsMasked, setClientSecretIsMasked] = useState(true);\n    // Implementation of useState variables for parameter name and value\n    const [parameterName, setParameterName] = useState(null);\n    const [parameterValue, setParameterValue] = useState(null);\n    const endpointType = isProduction ? 'production' : 'sandbox';\n\n    const authTypes = [\n        {\n            key: 'NONE',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.none',\n                defaultMessage: 'None',\n            }),\n        },\n        {\n            key: 'BASIC',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.basic',\n                defaultMessage: 'Basic Auth',\n            }),\n        },\n        {\n            key: 'DIGEST',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.digest.auth',\n                defaultMessage: 'Digest Auth',\n            }),\n        },\n        {\n            key: 'OAUTH',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.oauth',\n                defaultMessage: 'OAuth 2.0',\n            }),\n        },\n    ];\n    const grantTypes = [\n        {\n            key: 'CLIENT_CREDENTIALS',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.oauth.grant.type.client',\n                defaultMessage: 'Client Credentials',\n            }),\n        },\n        {\n            key: 'PASSWORD',\n            value: intl.formatMessage({\n                id: 'Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.oauth.grant.type.password',\n                defaultMessage: 'Resource Owner Password',\n            }),\n        },\n    ];\n    useEffect(() => {\n        let tmpSecurity = {};\n        if (securityInfo !== null) {\n            tmpSecurity = { ...securityInfo };\n            const {\n                type, username, password, grantType, tokenUrl, clientId, clientSecret, customParameters,\n            } = securityInfo;\n            tmpSecurity.type = type === null ? 'NONE' : type;\n            tmpSecurity.username = username;\n            tmpSecurity.password = password === '' ? '**********' : password;\n            tmpSecurity.grantType = grantType;\n            tmpSecurity.tokenUrl = tokenUrl;\n            tmpSecurity.clientId = clientId === '' ? '********' : clientId;\n            tmpSecurity.clientSecret = clientSecret === '' ? '********' : clientSecret;\n            tmpSecurity.customParameters = customParameters;\n        }\n        setEndpointSecurityInfo(tmpSecurity);\n    }, [props]);\n\n    /**\n     * Validating whether token url is in a proper format\n     * @param {*} value value of the field\n     * @returns {*} boolean value\n     */\n    const validateTokenUrl = (value) => {\n        const state = APIValidation.url.required().validate(value).error;\n        if (state === null) {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Validate Security Info properties\n     * @param {*} field value of the field\n     */\n    const validateAndUpdateSecurityInfo = (field) => {\n        if (!endpointSecurityInfo[field]) {\n            setSecurityValidity({ ...securityValidity, [field]: false });\n        } else {\n            let validity = true;\n            if (field === 'tokenUrl') {\n                validity = validateTokenUrl(endpointSecurityInfo[field]);\n            }\n            setSecurityValidity({ ...securityValidity, [field]: validity });\n        }\n        const type = isProduction ? 'production' : 'sandbox';\n        onChangeEndpointAuth(endpointSecurityInfo, type);\n    };\n\n    /**\n     * Show or hide the Add Parameter component\n     */\n    const toggleAddParameter = () => {\n        setShowAddParameter(!showAddParameter);\n    };\n\n    /**\n     * Show or hide the Client Secret\n     */\n    const toggleClientSecretMask = () => {\n        setClientSecretIsMasked(!clientSecretIsMasked);\n    };\n\n    /**\n     * Set the custom parameter name or value property\n     * @param {*} name name of the field edited\n     * @returns {*} fills the parameter name or parameter value states\n     */\n    const handleParameterChange = (name) => (event) => {\n        const { value } = event.target;\n        if (name === 'parameterName') {\n            setParameterName(value);\n        } else if (name === 'parameterValue') {\n            setParameterValue(value);\n        }\n    };\n\n    /**\n     * Check if the field is empty or not\n     * @param {*} itemValue value of the field\n     * @returns {*} boolean value\n     */\n    const validateEmpty = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     * Add new custom parameter\n     */\n    const handleAddToList = () => {\n        const customParametersCopy = endpointSecurityInfo.customParameters;\n\n        if (customParametersCopy !== null\n            && Object.prototype.hasOwnProperty.call(customParametersCopy, parameterName)) {\n            Alert.warning('Parameter name: ' + parameterName + ' already exists');\n        } else {\n            customParametersCopy[parameterName] = parameterValue;\n            setParameterName(null);\n            setParameterValue(null);\n        }\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, customParameters: customParametersCopy });\n        onChangeEndpointAuth(endpointSecurityInfo, endpointType);\n    };\n\n    /**\n     * Update existing custom parameter name-value pair\n     * @param {*} oldRow previous name-value pair\n     * @param {*} newRow new name-value pair\n     */\n    const handleUpdateList = (oldRow, newRow) => {\n        const customParametersCopy = endpointSecurityInfo.customParameters;\n        const { oldName, oldValue } = oldRow;\n        const { newName, newValue } = newRow;\n        if (customParametersCopy !== null\n            && Object.prototype.hasOwnProperty.call(customParametersCopy, newName) && oldName === newName) {\n            // Only the value is updated\n            if (newValue && oldValue !== newValue) {\n                customParametersCopy[oldName] = newValue;\n            }\n        } else {\n            delete customParametersCopy[oldName];\n            customParametersCopy[newName] = newValue;\n        }\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, customParameters: customParametersCopy });\n        onChangeEndpointAuth(endpointSecurityInfo, endpointType);\n    };\n\n    /**\n     * Delete existing custom parameter name-value pair\n     * @param {*} oldName name property of the name-value pair to be removed\n     */\n    const handleDelete = (oldName) => {\n        const customParametersCopy = endpointSecurityInfo.customParameters;\n        if (customParametersCopy !== null && Object.prototype.hasOwnProperty.call(customParametersCopy, oldName)) {\n            delete customParametersCopy[oldName];\n        }\n        setEndpointSecurityInfo({ ...endpointSecurityInfo, customParameters: customParametersCopy });\n        onChangeEndpointAuth(endpointSecurityInfo, endpointType);\n    };\n\n    /**\n     * Keyboard shortcut to execute adding custom parameters when pressing the Enter key\n     * @param {*} event event containing the key that was pressed\n     */\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleAddToList();\n        }\n    };\n\n    /**\n     * Render the custom parameters component\n     * @returns {*} list of items added\n     */\n    const renderCustomParameters = () => {\n        const items = [];\n        for (const name in endpointSecurityInfo.customParameters) {\n            if (Object.prototype.hasOwnProperty.call(endpointSecurityInfo.customParameters, name)) {\n                items.push(<EditableParameterRow\n                    oldName={name}\n                    oldValue={endpointSecurityInfo.customParameters[name]}\n                    handleUpdateList={handleUpdateList}\n                    handleDelete={handleDelete}\n                    customParameters={endpointSecurityInfo.customParameters}\n                    {...props}\n                    isRestricted={isRestricted}\n                    api={api}\n                />);\n            }\n        }\n        return items;\n    };\n\n    return (\n        <Grid container direction='row' spacing={2}>\n            <Grid item xs={6}>\n                <TextField\n                    disabled={isRestricted(['apim:api_create'], api)}\n                    fullWidth\n                    select\n                    value={endpointSecurityInfo && endpointSecurityInfo.type}\n                    variant='outlined'\n                    onChange={(event) => {\n                        setEndpointSecurityInfo({\n                            ...endpointSecurityInfo,\n                            type: event.target.value,\n                        });\n                    }}\n                    inputProps={{\n                        name: 'key',\n                        id: 'auth-type-select',\n                    }}\n                    onBlur={() => validateAndUpdateSecurityInfo(isProduction)}\n                >\n                    {authTypes.map((type) => (\n                        <MenuItem value={type.key}>{type.value}</MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid item xs={6} />\n\n            {(endpointSecurityInfo.type === 'OAUTH')\n                && (\n                    <>\n                        <Grid item xs={6}>\n                            <TextField\n                                disabled={isRestricted(['apim:api_create'], api)}\n                                required\n                                fullWidth\n                                select\n                                label={(\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                        + '.EndpointSecurity.grant.type.input'}\n                                        defaultMessage='Grant Type'\n                                    />\n                                )}\n                                variant='outlined'\n                                onChange={(event) => setEndpointSecurityInfo(\n                                    { ...endpointSecurityInfo, grantType: event.target.value },\n                                )}\n                                value={endpointSecurityInfo.grantType}\n                                inputProps={{\n                                    name: 'key',\n                                    id: 'grant-type-select',\n                                }}\n                                onBlur={() => validateAndUpdateSecurityInfo('grantType')}\n                            >\n                                {grantTypes.map((type) => (\n                                    <MenuItem value={type.key}>{type.value}</MenuItem>\n                                ))}\n                            </TextField>\n                        </Grid>\n\n\n                        {(endpointSecurityInfo.grantType === 'CLIENT_CREDENTIALS'\n                        || endpointSecurityInfo.grantType === 'PASSWORD') && (\n                            <>\n                                <Grid item xs={6}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        required\n                                        fullWidth\n                                        error={securityValidity && securityValidity.tokenUrl === false}\n                                        helperText={\n                                            securityValidity && securityValidity.tokenUrl === false ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                            + '.EndpointSecurity.no.tokenUrl.error'}\n                                                    defaultMessage={'Token URL should not be empty'\n                                                    + ' or formatted incorrectly'}\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.tokenUrl.message'}\n                                                    defaultMessage='Enter Token URL'\n                                                />\n                                            )\n                                        }\n                                        variant='outlined'\n                                        id='auth-tokenUrl'\n                                        label={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                + 'EndpointSecurity.token.url.input'}\n                                                defaultMessage='Token URL'\n                                            />\n                                        )}\n                                        onChange={(event) => setEndpointSecurityInfo(\n                                            { ...endpointSecurityInfo, tokenUrl: event.target.value },\n                                        )}\n                                        value={endpointSecurityInfo.tokenUrl}\n                                        onBlur={() => validateAndUpdateSecurityInfo('tokenUrl')}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        required\n                                        fullWidth\n                                        error={securityValidity && securityValidity.clientId === false}\n                                        helperText={\n                                            securityValidity && securityValidity.clientId === false ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.no.clientId.error'}\n                                                    defaultMessage='Client ID should not be empty'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                    + 'EndpointSecurity.clientId.message'}\n                                                    defaultMessage='Enter Client ID'\n                                                />\n                                            )\n                                        }\n                                        variant='outlined'\n                                        id='auth-clientId'\n                                        label={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                + 'EndpointSecurity.clientId.input'}\n                                                defaultMessage='Client ID'\n                                            />\n                                        )}\n                                        onChange={(event) => setEndpointSecurityInfo(\n                                            { ...endpointSecurityInfo, clientId: event.target.value },\n                                        )}\n                                        value={endpointSecurityInfo.clientId}\n                                        onBlur={() => validateAndUpdateSecurityInfo('clientId')}\n                                    />\n                                </Grid>\n\n                                <Grid item xs={6}>\n                                    <TextField\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                        required\n                                        fullWidth\n                                        error={securityValidity && securityValidity.clientSecret === false}\n                                        helperText={\n                                            securityValidity && securityValidity.clientSecret === false ? (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.no.clientSecret.error'}\n                                                    defaultMessage='Client Secret should not be empty'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                            + 'EndpointSecurity.clientSecret.message'}\n                                                    defaultMessage='Enter Client Secret'\n                                                />\n                                            )\n                                        }\n                                        variant='outlined'\n                                        id='auth-clientSecret'\n                                        type={clientSecretIsMasked ? 'password' : 'text'}\n                                        label={(\n                                            <FormattedMessage\n                                                id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                                + 'EndpointSecurity.clientSecret.input'}\n                                                defaultMessage='Client Secret'\n                                            />\n                                        )}\n                                        onChange={(event) => setEndpointSecurityInfo(\n                                            { ...endpointSecurityInfo, clientSecret: event.target.value },\n                                        )}\n                                        value={endpointSecurityInfo.clientSecret}\n                                        onBlur={() => validateAndUpdateSecurityInfo('clientSecret')}\n                                        InputProps={{\n                                            endAdornment: (\n                                                <InputAdornment position='end'>\n                                                    <RemoveRedEye\n                                                        className={classes.eye}\n                                                        onClick={toggleClientSecretMask}\n                                                    />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                    />\n                                </Grid>\n                            </>\n                        )}\n                    </>\n                )}\n\n            {(endpointSecurityInfo.type === 'BASIC'\n                || endpointSecurityInfo.type === 'DIGEST'\n                || endpointSecurityInfo.grantType === 'PASSWORD') && (\n                <>\n                    <Grid item xs={6}>\n                        <TextField\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            required\n                            fullWidth\n                            error={securityValidity && securityValidity.username === false}\n                            helperText={\n                                securityValidity && securityValidity.username === false ? (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.no.username.error'}\n                                        defaultMessage='Username should not be empty'\n                                    />\n                                ) : (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.username.message'}\n                                        defaultMessage='Enter Username'\n                                    />\n                                )\n                            }\n                            variant='outlined'\n                            id='auth-userName'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.user.name.input'\n                                    defaultMessage='Username'\n                                />\n                            )}\n                            onChange={(event) => setEndpointSecurityInfo(\n                                { ...endpointSecurityInfo, username: event.target.value },\n                            )}\n                            value={endpointSecurityInfo.username}\n                            onBlur={() => validateAndUpdateSecurityInfo('username')}\n                        />\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <TextField\n                            disabled={isRestricted(['apim:api_create'], api)}\n                            required\n                            fullWidth\n                            error={securityValidity && securityValidity.password === false}\n                            helperText={\n                                securityValidity && securityValidity.password === false ? (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.no.password.error'}\n                                        defaultMessage='Password should not be empty'\n                                    />\n                                ) : (\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration.'\n                                        + 'EndpointSecurity.password.message'}\n                                        defaultMessage='Enter Password'\n                                    />\n                                )\n                            }\n                            variant='outlined'\n                            type='password'\n                            id='auth-password'\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.password.input'\n                                    defaultMessage='Password'\n                                />\n                            )}\n                            value={endpointSecurityInfo.password}\n                            onChange={(event) => setEndpointSecurityInfo(\n                                { ...endpointSecurityInfo, password: event.target.value },\n                            )}\n                            onBlur={() => validateAndUpdateSecurityInfo('password')}\n                        />\n                    </Grid>\n                </>\n            )}\n\n            {endpointSecurityInfo.type === 'OAUTH' && (endpointSecurityInfo.grantType === 'CLIENT_CREDENTIALS'\n            || endpointSecurityInfo.grantType === 'PASSWORD')\n            && (\n                <Grid item xs={12}>\n                    <ListItem\n                        className={classes.listItem}\n                    >\n                        <ListItemAvatar>\n                            <Icon color='primary'>info</Icon>\n                        </ListItemAvatar>\n                        <ListItemText>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.add.new.parameter.info'\n                                defaultMessage={'You can add any additional payload parameters'\n                                + ' required for the endpoint below'}\n                            />\n                        </ListItemText>\n                    </ListItem>\n                    <Button\n                        size='medium'\n                        className={classes.button}\n                        onClick={toggleAddParameter}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <AddCircle className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurity.add.new.parameter'\n                            defaultMessage='Add New Parameter'\n                        />\n                    </Button>\n                </Grid>\n            )}\n\n            <Grid item xs={12} />\n\n            {(endpointSecurityInfo.type === 'OAUTH')\n            && (!isEmpty(endpointSecurityInfo.customParameters) || showAddParameter) && (\n                <Grid item xs={12}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                            + '.EndpointSecurity.label.parameter.name'}\n                                        defaultMessage='Parameter Name'\n                                    />\n                                </TableCell>\n                                <TableCell>\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.GeneralConfiguration'\n                                            + '.EndpointSecurity.label.parameter.value'}\n                                        defaultMessage='Parameter Value'\n                                    />\n                                </TableCell>\n                                <TableCell />\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {showAddParameter\n                            && (\n                                <>\n                                    <TableRow>\n                                        <TableCell>\n                                            <TextField\n                                                fullWidth\n                                                required\n                                                id='outlined-required'\n                                                label={intl.formatMessage({\n                                                    id: 'Apis.Details.Endpoints.GeneralConfiguration'\n                                                    + '.EndpointSecurity.input.parameter.name',\n                                                    defaultMessage: 'Parameter Name',\n                                                })}\n                                                margin='normal'\n                                                variant='outlined'\n                                                className={classes.addParameter}\n                                                value={parameterName === null ? '' : parameterName}\n                                                onChange={handleParameterChange('parameterName')}\n                                                onKeyDown={handleKeyDown('parameterName')}\n                                                helperText={validateEmpty(parameterName)\n                                                    ? 'Invalid parameter name' : ''}\n                                                error={validateEmpty(parameterName)}\n                                                disabled={isRestricted(\n                                                    ['apim:api_create', 'apim:api_publish'],\n                                                    api,\n                                                )}\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <TextField\n                                                fullWidth\n                                                required\n                                                id='outlined-required'\n                                                label={intl.formatMessage({\n                                                    id: 'Apis.Details.Endpoints.GeneralConfiguration'\n                                                        + '.EndpointSecurity.input.parameter.value',\n                                                    defaultMessage: 'Parameter Value',\n                                                })}\n                                                margin='normal'\n                                                variant='outlined'\n                                                className={classes.addParameter}\n                                                value={parameterValue === null ? '' : parameterValue}\n                                                onChange={handleParameterChange('parameterValue')}\n                                                onKeyDown={handleKeyDown('parameterValue')}\n                                                error={validateEmpty(parameterValue)}\n                                                disabled={isRestricted(\n                                                    ['apim:api_create', 'apim:api_publish'],\n                                                    api,\n                                                )}\n                                            />\n                                        </TableCell>\n                                        <TableCell align='right'>\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                                disabled={\n                                                    !parameterValue\n                                                            || !parameterName\n                                                            || isRestricted(\n                                                                ['apim:api_create', 'apim:api_publish'], api,\n                                                            )\n                                                }\n                                                onClick={handleAddToList}\n                                                className={classes.marginRight}\n                                            >\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.add'\n                                                    defaultMessage='Add'\n                                                />\n                                            </Button>\n\n                                            <Button onClick={toggleAddParameter}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.cancel'\n                                                    defaultMessage='Cancel'\n                                                />\n                                            </Button>\n                                        </TableCell>\n                                    </TableRow>\n                                </>\n                            )}\n                            {((endpointType === 'production') || (endpointType === 'sandbox')) && (\n                                renderCustomParameters()\n                            )}\n                        </TableBody>\n                    </Table>\n                </Grid>\n            )}\n            <Grid className={classes.advanceDialogActions}>\n                <Button\n                    onClick={() => saveEndpointSecurityConfig(endpointSecurityInfo, endpointType)}\n                    color='primary'\n                    autoFocus\n                    variant='contained'\n                    style={{ marginTop: '10px', marginRight: '10px', marginBottom: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurityConfig.config.save.button'\n                        defaultMessage='Submit'\n                    />\n                </Button>\n                <Button\n                    onClick={closeEndpointSecurityConfig}\n                    style={{ marginTop: '10px', marginBottom: '10px' }}\n                >\n                    <FormattedMessage\n                        id='Apis.Details.Endpoints.GeneralConfiguration.EndpointSecurityConfig.cancel.button'\n                        defaultMessage='Close'\n                    />\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}\n\nEndpointSecurity.propTypes = {\n    intl: PropTypes.shape({}).isRequired,\n    securityInfo: PropTypes.shape({}).isRequired,\n    onChangeEndpointAuth: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(injectIntl(EndpointSecurity));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Grid,\n    TextField,\n    makeStyles,\n    Typography,\n    Tooltip,\n    RadioGroup,\n    FormControl,\n    FormControlLabel,\n    MenuItem,\n    InputLabel,\n    Select,\n    Radio,\n} from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { FormattedMessage } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport API from 'AppData/api';\nimport Banner from 'AppComponents/Shared/Banner';\n\nconst useStyles = makeStyles((theme) => ({\n    typography: {\n        display: 'inline-block',\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,\n    },\n    selectField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 300,\n    },\n    helpIcon: {\n        fontSize: 20,\n    },\n    banner: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\n/**\n * The credentials component. This component holds the access and secret key pair.\n * @param {any} props The parameters to credentials component.\n * @returns {any} HTML view of the credentials component.\n */\nexport default function Credentials(props) {\n    const {\n        apiId,\n        endpointConfig,\n        endpointsDispatcher,\n    } = props;\n    const classes = useStyles();\n    const [pageError, setPageError] = useState(null);\n    const inputLabel = useRef(null);\n    const handleChange = (event) => {\n        const newEndpointConfig = { ...endpointConfig };\n        newEndpointConfig.access_method = event.target.value;\n        newEndpointConfig.amznAccessKey = '';\n        newEndpointConfig.amznSecretKey = '';\n        newEndpointConfig.amznRegion = '';\n        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n        setPageError(null);\n    };\n    const regionsList = [\n        {\n            key: 'us-east-1',\n            value: 'us-east-1: US East (N. Virginia)',\n        },\n        {\n            key: 'us-east-2',\n            value: 'us-east-2: US East (Ohio)',\n        },\n        {\n            key: 'us-west-1',\n            value: 'us-west-1: US West (N. California)',\n        },\n        {\n            key: 'us-west-2',\n            value: 'us-west-2: US West (Oregon)',\n        },\n        {\n            key: 'ap-east-1',\n            value: 'ap-east-1: Asia Pacific (Hong Kong)',\n        },\n        {\n            key: 'ap-south-1',\n            value: 'ap-south-1: Asia Pacific (Mumbai)',\n        },\n        {\n            key: 'ap-northeast-1',\n            value: 'ap-northeast-1: Asia Pacific (Tokyo)',\n        },\n        {\n            key: 'ap-northeast-2',\n            value: 'ap-northeast-2: Asia Pacific (Seoul)',\n        },\n        {\n            key: 'ap-northeast-3',\n            value: 'ap-northeast-3: Asia Pacific (Osaka-Local)',\n        },\n        {\n            key: 'ap-southeast-1',\n            value: 'ap-southeast-1: Asia Pacific (Singapore)',\n        },\n        {\n            key: 'ap-southeast-2',\n            value: 'ap-southeast-2: Asia Pacific (Sydney)',\n        },\n        {\n            key: 'ca-central-1',\n            value: 'ca-central-1: Canada (Central)',\n        },\n        {\n            key: 'eu-central-1',\n            value: 'eu-central-1: Europe (Frankfurt)',\n        },\n        {\n            key: 'eu-west-1',\n            value: 'eu-west-1: Europe (Ireland)',\n        },\n        {\n            key: 'eu-west-2',\n            value: 'eu-west-2: Europe (London)',\n        },\n        {\n            key: 'eu-west-3',\n            value: 'eu-west-3: Europe (Paris)',\n        },\n        {\n            key: 'eu-north-1',\n            value: 'eu-north-1: Europe (Stockholm)',\n        },\n        {\n            key: 'me-south-1',\n            value: 'me-south-1: Middle East (Bahrain)',\n        },\n        {\n            key: 'sa-east-1',\n            value: 'sa-east-1: South America (São Paulo)',\n        },\n    ];\n    useEffect(() => {\n        API.getAmznResourceNames(apiId)\n            .catch((error) => {\n                setPageError(error.response.body.error);\n            });\n    }, []);\n    return (\n        <>\n            <Typography className={classes.typography}>\n                <FormattedMessage\n                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                    + '.endpoint.accessMethod'}\n                    defaultMessage='Access Method'\n                />\n            </Typography>\n            <RadioGroup\n                aria-label='accessMethod'\n                name='accessMethod'\n                value={endpointConfig.access_method}\n                onChange={handleChange}\n            >\n                <div>\n                    <FormControlLabel\n                        value='role-supplied'\n                        control={<Radio color='primary' />}\n                        label={\n                            (\n                                <FormattedMessage\n                                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                    + '.endpoint.accessMethod.roleSupplied'}\n                                    defaultMessage='Using IAM role-supplied temporary AWS credentials'\n                                />\n                            )\n                        }\n                    />\n                    <Tooltip\n                        title={\n                            (\n                                <FormattedMessage\n                                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                    + '.endpoint.tooltip'}\n                                    defaultMessage={'You can and should use an IAM role to manage temporary '\n                                    + 'credentials for applications that run on an EC2 instance'}\n                                />\n                            )\n                        }\n                    >\n                        <Icon className={classes.helpIcon}>help_outline</Icon>\n                    </Tooltip>\n                </div>\n                <div>\n                    <FormControlLabel\n                        value='stored'\n                        control={<Radio color='primary' />}\n                        label={\n                            (\n                                <FormattedMessage\n                                    id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                    + '.endpoint.accessMethod.stored'}\n                                    defaultMessage='Using stored AWS credentials'\n                                />\n                            )\n                        }\n                    />\n                </div>\n            </RadioGroup>\n            <Grid item>\n                <TextField\n                    required\n                    disabled={endpointConfig.access_method === 'role-supplied'}\n                    id='outlined-required'\n                    label={\n                        (\n                            <FormattedMessage\n                                id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                + '.endpoint.accessKey'}\n                                defaultMessage='Access Key'\n                            />\n                        )\n                    }\n                    margin='normal'\n                    variant='outlined'\n                    className={classes.textField}\n                    value={endpointConfig.amznAccessKey}\n                    onChange={(event) => {\n                        const newEndpointConfig = { ...endpointConfig };\n                        newEndpointConfig.amznAccessKey = event.target.value;\n                        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                    }}\n                />\n                <TextField\n                    required\n                    disabled={endpointConfig.access_method === 'role-supplied'}\n                    id='outlined-password-input-required'\n                    label={\n                        (\n                            <FormattedMessage\n                                id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                                + '.endpoint.secretKey'}\n                                defaultMessage='Secret Key'\n                            />\n                        )\n                    }\n                    type='password'\n                    margin='normal'\n                    variant='outlined'\n                    className={classes.textField}\n                    value={endpointConfig.amznSecretKey}\n                    onChange={(event) => {\n                        const newEndpointConfig = { ...endpointConfig };\n                        newEndpointConfig.amznSecretKey = event.target.value;\n                        endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                    }}\n                />\n                <FormControl\n                    required\n                    margin='normal'\n                    variant='outlined'\n                    disabled={endpointConfig.access_method === 'role-supplied'}\n                >\n                    <InputLabel ref={inputLabel} id='region-label'>\n                        <FormattedMessage\n                            id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                            + '.endpoint.region'}\n                            defaultMessage='Region'\n                        />\n                    </InputLabel>\n                    <Select\n                        labelId='region-label'\n                        autoWidth={false}\n                        className={classes.selectField}\n                        onChange={(event) => {\n                            const newEndpointConfig = { ...endpointConfig };\n                            newEndpointConfig.amznRegion = event.target.value;\n                            endpointsDispatcher({ action: 'set_awsCredentials', value: newEndpointConfig });\n                        }}\n                        value={endpointConfig.amznRegion}\n                    >\n                        {regionsList.map((region) => ((\n                            <MenuItem key={region.key} value={region.key}>\n                                {region.value}\n                            </MenuItem>\n                        )))}\n                    </Select>\n                </FormControl>\n            </Grid>\n            <Grid item>\n                <Link to={`/apis/${apiId}/resources`}>\n                    <Typography style={{ marginLeft: '10px' }} color='primary' display='inline' variant='caption'>\n                        <FormattedMessage\n                            id={'Apis.Details.Endpoints.EndpointOverview.awslambda'\n                            + '.endpoint.linkToResources'}\n                            defaultMessage='Go to Resources to map ARNs'\n                        />\n                        <LaunchIcon style={{ marginLeft: '2px' }} fontSize='small' />\n                    </Typography>\n                </Link>\n            </Grid>\n            {pageError\n                && (\n                    <Grid item className={classes.banner}>\n                        <Banner\n                            disableActions\n                            dense\n                            paperProps={{ elevation: 1 }}\n                            type='warning'\n                            message={pageError}\n                        />\n                    </Grid>\n                )}\n        </>\n    );\n}\n\nCredentials.propTypes = {\n    apiId: PropTypes.shape('').isRequired,\n    endpointConfig: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n};\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n    useEffect, useState, useCallback,\n} from 'react';\nimport {\n    FormControl,\n    Grid,\n    Paper,\n    Typography,\n    withStyles,\n    Radio,\n    FormControlLabel,\n    Collapse,\n    RadioGroup, Checkbox, Dialog, DialogTitle, DialogContent, IconButton, Button, DialogActions, Icon,\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { isRestricted } from 'AppData/AuthManager';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { Progress } from 'AppComponents/Shared';\n\nimport cloneDeep from 'lodash.clonedeep';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport InlineEndpoints from 'AppComponents/Apis/Details/Endpoints/Prototype/InlineEndpoints';\nimport {\n    getEndpointTypeProperty,\n    createEndpointConfig,\n    getEndpointTemplate,\n} from './endpointUtils';\nimport GeneralConfiguration from './GeneralConfiguration';\nimport LoadbalanceFailoverConfig from './LoadbalanceFailoverConfig';\nimport GenericEndpoint from './GenericEndpoint';\nimport AdvanceEndpointConfig from './AdvancedConfig/AdvanceEndpointConfig';\nimport EndpointSecurity from './GeneralConfiguration/EndpointSecurity';\nimport Credentials from './AWSLambda/Credentials.jsx';\n\nconst styles = (theme) => ({\n    listing: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n    },\n    endpointContainer: {\n        paddingLeft: theme.spacing(2),\n        padding: theme.spacing(1),\n    },\n    endpointName: {\n        paddingLeft: theme.spacing(1),\n        fontSize: '1rem',\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    endpointTypesWrapper: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(2),\n    },\n    sandboxHeading: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    endpointsWrapperLeft: {\n        padding: theme.spacing(1),\n        borderRight: '#c4c4c4',\n        borderRightStyle: 'solid',\n        borderRightWidth: 'thin',\n    },\n    endpointsWrapperRight: {\n        padding: theme.spacing(1),\n    },\n    endpointsTypeSelectWrapper: {\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        padding: theme.spacing(1),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    endpointTypesSelectWrapper: {\n        display: 'flex',\n    },\n    defaultEndpointWrapper: {\n        paddingLeft: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    configDialogHeader: {\n        fontWeight: '600',\n    },\n    addLabel: {\n        padding: theme.spacing(2),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    button: {\n        textTransform: 'none',\n    },\n});\n\nconst endpointTypes = [\n    { key: 'http', value: 'HTTP/REST Endpoint' },\n    { key: 'default', value: 'Dynamic Endpoints' },\n    { key: 'address', value: 'HTTP/SOAP Endpoint' },\n    { key: 'prototyped', value: 'Prototype Endpoint' },\n    { key: 'INLINE', value: 'Prototype Implementation' },\n    { key: 'awslambda', value: 'AWS Lambda' },\n];\n\n/**\n * The endpoint overview component. This component holds the views of endpoint creation and configuration.\n * @param {any} props The props that are being passed to the component.\n * @returns {any} HTML view of the endpoints overview.\n */\nfunction EndpointOverview(props) {\n    const {\n        classes,\n        api,\n        endpointsDispatcher,\n        swaggerDef,\n        updateSwagger,\n        saveAndRedirect,\n    } = props;\n    const { endpointConfig, endpointSecurity } = api;\n    const [endpointType, setEndpointType] = useState(endpointTypes[0]);\n    const [supportedEnpointTypes, setSupportedEndpointType] = useState([]);\n\n    const [epConfig, setEpConfig] = useState(endpointConfig);\n    const [endpointSecurityInfo, setEndpointSecurityInfo] = useState(null);\n    const [advanceConfigOptions, setAdvancedConfigOptions] = useState({\n        open: false,\n        index: 0,\n        type: '',\n        category: '',\n        config: undefined,\n    });\n    const [endpointSecurityConfig, setEndpointSecurityConfig] = useState({\n        open: false,\n        type: '',\n        category: '',\n        config: undefined,\n    });\n    const [endpointCategory, setEndpointCategory] = useState({ sandbox: false, prod: false });\n    const [typeChangeConfirmation, setTypeChangeConfirmation] = useState({ openDialog: false });\n\n    const handleToggleEndpointSecurity = () => {\n        const tmpSecurityInfo = endpointSecurityInfo === null ? {\n            production: {\n                enabled: false,\n                type: null,\n                username: null,\n                password: null,\n                grantType: null,\n                tokenUrl: null,\n                clientId: null,\n                clientSecret: null,\n                customParameters: {},\n            },\n            sandbox: {\n                enabled: false,\n                type: null,\n                username: null,\n                password: null,\n                grantType: null,\n                tokenUrl: null,\n                clientId: null,\n                clientSecret: null,\n                customParameters: {},\n            },\n        } : endpointSecurityInfo;\n        setEndpointSecurityInfo(tmpSecurityInfo);\n    };\n\n    /**\n     * Method to get the type of the endpoint. (HTTP/REST or HTTP/SOAP)\n     * In failover/ loadbalance cases, the endpoint type is presented in the endpoints list. Therefore that property\n     * needs to be extracted separately.\n     *\n     * @param {Object} apiObject  The representative type of the endpoint.\n     * @return {string} The type of the endpoint.\n     * */\n    const getEndpointType = (apiObject) => {\n        const type = apiObject.endpointConfig && apiObject.endpointConfig.endpoint_type;\n        if (apiObject.endpointImplementationType === 'INLINE') {\n            return endpointTypes[4];\n        } else if (apiObject.endpointImplementationType === 'ENDPOINT'\n            && apiObject.endpointConfig.implementation_status === 'prototyped') {\n            return endpointTypes[3];\n        } else if (type === 'http') {\n            return endpointTypes[0];\n        } else if (type === 'default') {\n            return endpointTypes[1];\n        } else if (type === 'address') {\n            return endpointTypes[2];\n        } else if (type === 'awslambda') {\n            return endpointTypes[5];\n        } else {\n            const availableEndpoints = (endpointConfig.production_endpoints && endpointConfig.production_endpoints)\n                || (endpointConfig.sandbox_endpoints && endpointConfig.sandbox_endpoints);\n            // Handle the all endpoints de-select condition... Rollback to http.\n            if (!availableEndpoints) {\n                return endpointTypes[0];\n            }\n            if (Array.isArray(availableEndpoints)) {\n                return availableEndpoints[0].endpoint_type !== undefined\n                    ? endpointTypes[2] : endpointTypes[0];\n            }\n            return availableEndpoints.endpoint_type !== undefined\n                ? endpointTypes[2] : endpointTypes[0];\n        }\n    };\n\n    /**\n     * Method to get the supported endpoint types by api type.\n     *\n     * @param {Object} apiObject  The representative type of the endpoint.\n     * @return {string} The supported endpoint types.\n     * */\n    const getSupportedType = (apiObject) => {\n        const { type } = apiObject;\n        let supportedEndpointTypes = [];\n        if (type === 'GRAPHQL') {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n            ];\n        } else if (type === 'SOAP' || type === 'SOAPTOREST') {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'address', value: 'HTTP/SOAP Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n                { key: 'prototyped', value: 'Prototype Endpoint' },\n            ];\n        } else {\n            supportedEndpointTypes = [\n                { key: 'http', value: 'HTTP/REST Endpoint' },\n                { key: 'address', value: 'HTTP/SOAP Endpoint' },\n                { key: 'default', value: 'Dynamic Endpoints' },\n                { key: 'prototyped', value: 'Prototype Endpoint' },\n                { key: 'INLINE', value: 'Prototype Implementation' },\n                { key: 'awslambda', value: 'AWS Lambda' },\n            ];\n        }\n        return supportedEndpointTypes;\n    };\n\n    useEffect(() => {\n        const supportedTypeLists = getSupportedType(api);\n        const epType = getEndpointType(api);\n        if (epType.key !== 'INLINE') {\n            setEndpointCategory({\n                prod: !!endpointConfig.production_endpoints,\n                sandbox: !!endpointConfig.sandbox_endpoints,\n            });\n        }\n        setSupportedEndpointType(supportedTypeLists);\n        setEpConfig(endpointConfig);\n        setEndpointType(epType);\n        if (endpointConfig.endpoint_security) {\n            setEndpointSecurityInfo(endpointConfig.endpoint_security);\n        } else {\n            setEndpointSecurityInfo(endpointSecurity);\n        }\n    }, [props]);\n\n    const getEndpoints = (type) => {\n        if (epConfig[type]) {\n            return epConfig[type].length > 0\n                ? epConfig[type][0].url : epConfig[type].url;\n        }\n        return '';\n    };\n\n    const handleOnChangeEndpointCategoryChange = (category) => {\n        let endpointConfigCopy = cloneDeep(endpointConfig);\n        if (category === 'prod') {\n            const endpointProp = 'production_endpoints';\n            if (endpointCategory[category]) {\n                delete endpointConfigCopy[endpointProp];\n                if (endpointConfigCopy.endpointType === 'failover') {\n                    delete endpointConfigCopy.production_failovers;\n                }\n            } else if (endpointConfigCopy.endpointType === 'load_balance') {\n                endpointConfigCopy[endpointProp] = [getEndpointTemplate(endpointType.key)];\n            } else if (endpointConfigCopy.endpointType === 'failover') {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n                endpointConfigCopy.production_failovers = [];\n            } else {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n            }\n        } else {\n            const endpointProp = 'sandbox_endpoints';\n            if (endpointCategory[category]) {\n                delete endpointConfigCopy[endpointProp];\n                if (endpointConfigCopy.endpointType === 'failover') {\n                    delete endpointConfigCopy.sandbox_failovers;\n                }\n            } else if (endpointConfigCopy.endpointType === 'load_balance') {\n                endpointConfigCopy[endpointProp] = [getEndpointTemplate(endpointType.key)];\n            } else if (endpointConfigCopy.endpointType === 'failover') {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n                endpointConfigCopy.sandbox_failovers = [];\n            } else {\n                endpointConfigCopy[endpointProp] = getEndpointTemplate(endpointType.key);\n            }\n        }\n        // Check whether, config has either prod/ sandbox endpoints. If not, reSet the endpoint type to http\n        if (!endpointConfigCopy.production_endpoints && !endpointConfigCopy.sandbox_endpoints) {\n            endpointConfigCopy = createEndpointConfig('http');\n        }\n        endpointsDispatcher({ action: 'select_endpoint_category', value: endpointConfigCopy });\n    };\n\n    /**\n     * Method to modify the endpoint represented by the given parameters.\n     *\n     * If url is null, remove the endpoint from the endpoint config.\n     *\n     * @param {number} index The index of the endpoint in the listing.\n     * @param {string} category The endpoint category. (production/ sand box)\n     * @param {string} url The new endpoint url.\n     * */\n    const editEndpoint = (index, category, url) => {\n        let modifiedEndpoint = null;\n        // Make a copy of the endpoint config.\n        const endpointConfigCopy = cloneDeep(epConfig);\n        /*\n        * If the index > 0, it means that the endpoint is load balance or fail over.\n        * Otherwise it is the default endpoint. (index = 0)\n        * */\n        if (index > 0) {\n            const endpointTypeProperty = getEndpointTypeProperty(endpointConfigCopy.endpoint_type, category);\n            modifiedEndpoint = endpointConfigCopy[endpointTypeProperty];\n            /*\n            * In failover case, the failover endpoints are a separate object. But in endpoint listing, since we\n            *  consider all the endpoints as a single list, to get the real index of the failover endpoint we use\n            *  index - 1.\n            * */\n            if (endpointConfigCopy.endpoint_type === 'failover') {\n                modifiedEndpoint[index - 1].url = url.trim();\n            } else {\n                modifiedEndpoint[index].url = url.trim();\n            }\n            endpointConfigCopy[endpointTypeProperty] = modifiedEndpoint;\n        } else if (url !== '') {\n            modifiedEndpoint = endpointConfigCopy[category];\n\n            /*\n            * In this case, we are editing the default endpoint.\n            * If the endpoint type is load balance, the production_endpoints or the sandbox_endpoint object is an\n            *  array. Otherwise, in failover mode, the default endpoint is an object.\n            *\n            * So, we check whether the endpoints is an array or an object.\n            *\n            * If This is the first time a user creating an endpoint endpoint config object does not have\n            *  production_endpoints or sandbox_endpoints object.\n            * Therefore create new object and add to the endpoint config.\n            * */\n            if (!modifiedEndpoint) {\n                modifiedEndpoint = getEndpointTemplate(endpointConfigCopy.endpoint_type);\n                modifiedEndpoint.url = url.trim();\n            } else if (Array.isArray(modifiedEndpoint)) {\n                if (url === '') {\n                    modifiedEndpoint.splice(0, 1);\n                } else {\n                    modifiedEndpoint[0].url = url.trim();\n                }\n            } else {\n                modifiedEndpoint.url = url.trim();\n            }\n            endpointConfigCopy[category] = modifiedEndpoint;\n        } else {\n            /*\n            * If the url is empty, delete the respective endpoint object.\n            * */\n            delete endpointConfigCopy[category];\n        }\n        endpointsDispatcher({ action: category, value: modifiedEndpoint });\n    };\n\n    const handleEndpointCategorySelect = (event) => {\n        endpointsDispatcher({\n            action: 'endpoint_type',\n            value: { category: event.target.value, endpointType: endpointType.key },\n        });\n    };\n\n    /**\n     * Handles the endpoint type change functionality.\n     *\n     * @param {string} value The selected endpoint type.\n     * */\n    const changeEndpointType = (value) => {\n        setTypeChangeConfirmation({ openDialog: false });\n        const selectedKey = typeChangeConfirmation.type || value;\n        if (selectedKey === 'INLINE') {\n            const tmpConfig = createEndpointConfig('prototyped');\n            endpointsDispatcher({\n                action: 'set_inline',\n                value: {\n                    endpointConfig: tmpConfig,\n                    endpointImplementationType: 'INLINE',\n                },\n            });\n        } else if (selectedKey === 'prototyped') {\n            const tmpConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'set_prototyped',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: tmpConfig,\n                },\n            });\n        } else if (selectedKey === 'awslambda') {\n            const generatedEndpointConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'select_endpoint_type',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: { ...generatedEndpointConfig },\n                },\n            });\n        } else {\n            const generatedEndpointConfig = createEndpointConfig(selectedKey);\n            endpointsDispatcher({\n                action: 'select_endpoint_type',\n                value: {\n                    endpointImplementationType: 'ENDPOINT',\n                    endpointConfig: { ...generatedEndpointConfig },\n                },\n            });\n        }\n    };\n\n    /**\n     * Handles the endpoint type select event. If endpoint config has existing values, show confirmation dialog.\n     * @param {any} event The select event.\n     * */\n    const handleEndpointTypeSelect = (event) => {\n        // Check whether the endpoint Config has values.\n        if (epConfig.production_endpoints || epConfig.sandbox_endpoints) {\n            // Show confirmation dialog\n            setTypeChangeConfirmation({ type: event.target.value, openDialog: true });\n        } else {\n            changeEndpointType(event.target.value);\n        }\n    };\n\n    /**\n     * Method to get the advance configuration from the selected endpoint.\n     *\n     * @param {number} index The selected endpoint index\n     * @param {string} epType The type of the endpoint. (loadbalance/ failover)\n     * @param {string} category The endpoint category (Production/ sandbox)\n     * @return {object} The advance config object of the endpoint.\n     * */\n    const getAdvanceConfig = (index, epType, category) => {\n        const endpointTypeProperty = getEndpointTypeProperty(epType, category);\n        let advanceConfig = {};\n        if (index > 0) {\n            if (epConfig.endpoint_type === 'failover') {\n                advanceConfig = epConfig[endpointTypeProperty][index - 1].config;\n            } else {\n                advanceConfig = epConfig[endpointTypeProperty][index].config;\n            }\n        } else {\n            const endpointInfo = epConfig[endpointTypeProperty];\n            if (Array.isArray(endpointInfo)) {\n                advanceConfig = endpointInfo[0].config;\n            } else {\n                advanceConfig = endpointInfo.config;\n            }\n        }\n        return advanceConfig;\n    };\n\n    /**\n     * Method to open/ close the advance configuration dialog. This method also sets some information about the\n     * seleted endpoint type/ category and index.\n     *\n     * @param {number} index The index of the selected endpoint.\n     * @param {string} type The endpoint type\n     * @param {string} category The endpoint category.\n     * */\n    const toggleAdvanceConfig = (index, type, category) => {\n        const advanceEPConfig = getAdvanceConfig(index, type, category);\n        setAdvancedConfigOptions(() => {\n            return ({\n                open: !advanceConfigOptions.open,\n                index,\n                type,\n                category,\n                config: advanceEPConfig === undefined ? {} : advanceEPConfig,\n            });\n        });\n    };\n\n    const toggleEndpointSecurityConfig = (type, category) => {\n        handleToggleEndpointSecurity();\n        setEndpointSecurityConfig(() => {\n            return ({\n                open: !endpointSecurityConfig.open,\n                type,\n                category,\n                config: endpointSecurityInfo === undefined ? {} : endpointSecurityInfo,\n            });\n        });\n    };\n\n    /**\n     * Method to handle the endpoint security changes.\n     * @param {string} value The value\n     * @param {string} type The security property that is being modified.\n     * */\n    const handleEndpointSecurityChange = (value, type) => {\n        endpointsDispatcher({\n            action: 'endpointSecurity',\n            value: { ...endpointSecurityInfo, [type]: value },\n        });\n    };\n\n    const saveEndpointSecurityConfig = (endpointSecurityObj, enType) => {\n        endpointsDispatcher({\n            action: 'endpointSecurity',\n            value: {\n                ...endpointSecurityInfo,\n                [enType]: {\n                    ...endpointSecurityInfo[enType],\n                    enabled: endpointSecurityObj.type !== 'NONE'\n                        ? endpointSecurityInfo[enType].enabled = true : endpointSecurityInfo[enType].enabled = false,\n                },\n            },\n        });\n        setEndpointSecurityConfig({ open: false });\n    };\n\n    const closeEndpointSecurityConfig = () => {\n        setEndpointSecurityConfig({ open: false });\n    };\n\n    /**\n     * Method to save the advance configurations.\n     *\n     * @param {object} advanceConfig The advance configuration object.\n     * */\n    const saveAdvanceConfig = (advanceConfig) => {\n        const config = cloneDeep(epConfig);\n        const endpointConfigProperty = getEndpointTypeProperty(\n            advanceConfigOptions.type, advanceConfigOptions.category,\n        );\n        const selectedEndpoints = config[endpointConfigProperty];\n        if (Array.isArray(selectedEndpoints)) {\n            if (advanceConfigOptions.type === 'failover') {\n                selectedEndpoints[advanceConfigOptions.index - 1].config = advanceConfig;\n            } else {\n                selectedEndpoints[advanceConfigOptions.index].config = advanceConfig;\n            }\n        } else {\n            selectedEndpoints.config = advanceConfig;\n        }\n        setAdvancedConfigOptions({ open: false });\n        endpointsDispatcher({\n            action: 'set_advance_config',\n            value: { ...config, [endpointConfigProperty]: selectedEndpoints },\n        });\n    };\n\n    /**\n     * Method to close the advance configuration dialog box.\n     * */\n    const closeAdvanceConfig = () => {\n        setAdvancedConfigOptions({ open: false });\n    };\n\n    /**\n     * Method to update the resource paths object in the swagger.\n     * @param {any} paths The updated paths object.\n     * */\n    const updatePaths = useCallback(\n        (paths) => {\n            updateSwagger({ ...swaggerDef, paths });\n        },\n        [swaggerDef],\n    );\n\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    /**\n     *\n     *\n     * @param {*} event\n     */\n    function epCategoryOnChangeHandler(event) {\n        handleOnChangeEndpointCategoryChange('prod', event);\n    }\n\n    return (\n        <div className={classes.overviewWrapper}>\n            <Grid container spacing={2}>\n                <Grid item xs={12}>\n                    {api.type === 'WS' ? <div /> : (\n                        <FormControl component='fieldset' className={classes.formControl}>\n                            <RadioGroup\n                                aria-label='EndpointType'\n                                name='endpointType'\n                                className={classes.radioGroup}\n                                value={endpointType.key}\n                                onChange={handleEndpointTypeSelect}\n                            >\n                                {supportedEnpointTypes.map((endpoint) => {\n                                    if (api.lifeCycleStatus === 'CREATED') {\n                                        return (\n                                            <FormControlLabel\n                                                value={endpoint.key}\n                                                control={(\n                                                    <Radio\n                                                        disabled={(isRestricted(['apim:api_create'], api))}\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label={endpoint.value}\n                                            />\n                                        );\n                                    } else if (api.lifeCycleStatus === 'PROTOTYPED') {\n                                        if (endpoint.key === 'prototyped' || endpoint.key === 'INLINE') {\n                                            return (\n                                                <FormControlLabel\n                                                    value={endpoint.key}\n                                                    control={(\n                                                        <Radio\n                                                            disabled={(isRestricted(['apim:api_create'], api))}\n                                                            color='primary'\n                                                        />\n                                                    )}\n                                                    label={endpoint.value}\n                                                />\n                                            );\n                                        }\n                                    } else if (endpoint.key !== 'prototyped' && endpoint.key !== 'INLINE') {\n                                        return (\n                                            <FormControlLabel\n                                                value={endpoint.key}\n                                                control={(\n                                                    <Radio\n                                                        disabled={(isRestricted(['apim:api_create'], api))}\n                                                        color='primary'\n                                                    />\n                                                )}\n                                                label={endpoint.value}\n                                            />\n                                        );\n                                    }\n                                    return <div />;\n                                })}\n                            </RadioGroup>\n                        </FormControl>\n                    )}\n                </Grid>\n                <Grid item xs={12}>\n                    {endpointType.key === 'INLINE' ? iff(Object.keys(swaggerDef.paths).length !== 0,\n                        <InlineEndpoints paths={swaggerDef.paths} updatePaths={updatePaths} />, <Progress />)\n                        : (\n                            <Paper className={classes.endpointContainer}>\n                                {endpointType.key === 'awslambda'\n                                    ? (\n                                        <Credentials\n                                            apiId={api.id}\n                                            endpointConfig={endpointConfig}\n                                            endpointsDispatcher={endpointsDispatcher}\n                                        />\n                                    )\n                                    : (\n                                        <>\n                                            {endpointType.key === 'prototyped'\n                                                ? (\n                                                    <Typography>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.Endpoints.'\n                                                                + 'EndpointOverview.prototype.endpoint'\n                                                                + '.prototype.label'}\n                                                            defaultMessage='Prototype Endpoint'\n                                                        />\n                                                    </Typography>\n                                                )\n                                                : (\n                                                    <FormControlLabel\n                                                        control={(\n                                                            <Checkbox\n                                                                checked={endpointCategory.prod}\n                                                                value='prod'\n                                                                color='primary'\n                                                                onChange={epCategoryOnChangeHandler}\n                                                            />\n                                                        )}\n                                                        label={(\n                                                            <Typography>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.'\n                                                                        + 'Endpoints.EndpointOverview'\n                                                                        + '.production.endpoint.production.label'}\n                                                                    defaultMessage='Production Endpoint'\n                                                                />\n                                                            </Typography>\n                                                        )}\n                                                    />\n                                                )}\n                                            <Collapse in={endpointCategory.prod}>\n                                                {endpointType.key === 'default'\n                                                    ? (\n\n                                                        <InlineMessage>\n                                                            <div className={classes.contentWrapper}>\n                                                                <Typography component='p' className={classes.content}>\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.EndpointOverview'\n                                                                            + '.upload.mediation.message'}\n                                                                        defaultMessage={\n                                                                            'Please upload a mediation'\n                                                                            + ' sequence file to'\n                                                                            + ' Message Mediation Policies,'\n                                                                            + ' which sets the endpoints.'\n                                                                        }\n                                                                    />\n                                                                    <IconButton\n                                                                        onClick={saveAndRedirect}\n                                                                    >\n                                                                        <LaunchIcon\n                                                                            style={{ marginLeft: '2px' }}\n                                                                            fontSize='small'\n                                                                            color='primary'\n                                                                        />\n                                                                    </IconButton>\n                                                                </Typography>\n                                                            </div>\n                                                            <Button\n                                                                className={classes.button}\n                                                                aria-label='Settings'\n                                                                onClick={() => toggleAdvanceConfig(\n                                                                    0, '', 'production_endpoints',\n                                                                )}\n                                                                disabled={\n                                                                    (isRestricted(\n                                                                        ['apim:api_create'], api,\n                                                                    )\n                                                                    )\n                                                                }\n                                                                variant='outlined'\n                                                            >\n                                                                <Icon\n                                                                    className={classes.buttonIcon}\n                                                                >\n                                                                    settings\n                                                                </Icon>\n                                                                <Typography>\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.EndpointOverview'\n                                                                            + '.advance.endpoint.configuration'}\n                                                                        defaultMessage='Advanced Configurations'\n                                                                    />\n                                                                </Typography>\n                                                            </Button>\n                                                            <Button\n                                                                className={classes.button}\n                                                                aria-label='Settings'\n                                                                onClick={() => toggleEndpointSecurityConfig(\n                                                                    '', 'production',\n                                                                )}\n                                                                disabled={\n                                                                    (isRestricted(\n                                                                        ['apim:api_create'], api,\n                                                                    )\n                                                                    )\n                                                                }\n                                                                variant='outlined'\n                                                            >\n                                                                <Icon\n                                                                    className={classes.buttonIcon}\n                                                                >\n                                                                    security\n                                                                </Icon>\n                                                                <Typography>\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.EndpointOverview'\n                                                                            + '.endpoint.security.configuration'}\n                                                                        defaultMessage={'Endpoint '\n                                                                        + 'Security Configurations'}\n                                                                    />\n                                                                </Typography>\n                                                            </Button>\n                                                        </InlineMessage>\n                                                    )\n                                                    : (\n                                                        <GenericEndpoint\n                                                            autoFocus\n                                                            name={endpointType.key === 'prototyped'\n                                                                ? (\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.'\n                                                                            + 'EndpointOverview.prototype'\n                                                                            + '.endpoint.prototype.header'}\n                                                                        defaultMessage='Prototype Endpoint'\n                                                                    />\n                                                                ) : (\n                                                                    <FormattedMessage\n                                                                        id={'Apis.Details.Endpoints.'\n                                                                            + 'EndpointOverview.production'\n                                                                            + '.endpoint.production.header'}\n                                                                        defaultMessage='Production Endpoint'\n                                                                    />\n                                                                )}\n                                                            className={classes.defaultEndpointWrapper}\n                                                            endpointURL={getEndpoints('production_endpoints')}\n                                                            type=''\n                                                            index={0}\n                                                            category='production_endpoints'\n                                                            editEndpoint={editEndpoint}\n                                                            setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                            esCategory='production'\n                                                            setESConfigOpen={toggleEndpointSecurityConfig}\n                                                            apiId={api.id}\n                                                        />\n                                                    )}\n                                            </Collapse>\n                                            {endpointType.key === 'prototyped' ? <div />\n                                                : (\n                                                    <div>\n                                                        <FormControlLabel\n                                                            control={(\n                                                                <Checkbox\n                                                                    checked={endpointCategory.sandbox}\n                                                                    value='sandbox'\n                                                                    color='primary'\n                                                                    onChange={(event) => (\n                                                                        handleOnChangeEndpointCategoryChange(\n                                                                            'sandbox', event,\n                                                                        ))}\n                                                                />\n                                                            )}\n                                                            label={(\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.Endpoints.'\n                                                                        + 'EndpointOverview.sandbox.endpoint'}\n                                                                    defaultMessage='Sandbox Endpoint'\n                                                                />\n                                                            )}\n                                                        />\n                                                        <Collapse in={endpointCategory.sandbox}>\n                                                            {endpointType.key === 'default'\n                                                                ? (\n                                                                    <InlineMessage>\n                                                                        <div className={classes.contentWrapper}>\n                                                                            <Typography\n                                                                                component='p'\n                                                                                className={classes.content}\n                                                                            >\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints'\n                                                                                        + '.EndpointOverview.upload'\n                                                                                        + '.mediation.message'}\n                                                                                    defaultMessage={\n                                                                                        'Please upload a mediation'\n                                                                                        + ' sequence file to'\n                                                                                        + ' Message Mediation Policies,'\n                                                                                        + ' which sets the endpoints.'\n                                                                                    }\n                                                                                />\n                                                                                <IconButton\n                                                                                    onClick={saveAndRedirect}\n                                                                                >\n                                                                                    <LaunchIcon\n                                                                                        style={{ marginLeft: '2px' }}\n                                                                                        fontSize='small'\n                                                                                        color='primary'\n                                                                                    />\n                                                                                </IconButton>\n                                                                            </Typography>\n                                                                        </div>\n                                                                        <Button\n                                                                            className={classes.button}\n                                                                            aria-label='Settings'\n                                                                            onClick={() => toggleAdvanceConfig(\n                                                                                0, '', 'sandbox_endpoints',\n                                                                            )}\n                                                                            disabled={\n                                                                                (isRestricted(\n                                                                                    ['apim:api_create'], api,\n                                                                                )\n                                                                                )\n                                                                            }\n                                                                            variant='outlined'\n                                                                        >\n                                                                            <Icon\n                                                                                className={classes.buttonIcon}\n                                                                            >\n                                                                                settings\n                                                                            </Icon>\n                                                                            <Typography>\n                                                                                <FormattedMessage\n                                                                                    id={'Apis.Details.Endpoints'\n                                                                                        + '.EndpointOverview.advance'\n                                                                                        + '.endpoint.configuration'}\n                                                                                    defaultMessage={'Advanced '\n                                                                                        + 'Configurations'}\n                                                                                />\n                                                                            </Typography>\n                                                                        </Button>\n                                                                    </InlineMessage>\n                                                                )\n                                                                : (\n                                                                    <GenericEndpoint\n                                                                        autoFocus\n                                                                        name='Sandbox Endpoint'\n                                                                        className={classes.defaultEndpointWrapper}\n                                                                        endpointURL={getEndpoints('sandbox_endpoints')}\n                                                                        type=''\n                                                                        index={0}\n                                                                        category='sandbox_endpoints'\n                                                                        editEndpoint={editEndpoint}\n                                                                        esCategory='sandbox'\n                                                                        setAdvancedConfigOpen={toggleAdvanceConfig}\n                                                                        setESConfigOpen={toggleEndpointSecurityConfig}\n                                                                        apiId={api.id}\n                                                                    />\n                                                                )}\n\n                                                        </Collapse>\n                                                    </div>\n                                                )}\n                                        </>\n                                    )}\n                            </Paper>\n                        )}\n                </Grid>\n                {endpointType.key === 'INLINE' || endpointType.key === 'prototyped' || endpointType.key === 'awslambda'\n                    || api.type === 'WS'\n                    ? <div />\n                    : (\n                        <Grid item xs={12}>\n                            <Typography variant='h4' align='left' className={classes.titleWrapper} gutterBottom>\n                                <FormattedMessage\n                                    id='Apis.Details.Endpoints.EndpointOverview.general.config.header'\n                                    defaultMessage='General Endpoint Configurations'\n                                />\n                            </Typography>\n                            <GeneralConfiguration\n                                epConfig={(cloneDeep(epConfig))}\n                                endpointType={endpointType}\n                                endpointsDispatcher={endpointsDispatcher}\n                            />\n                        </Grid>\n                    )}\n                {\n                    endpointType.key === 'INLINE'\n                        || endpointType.key === 'default'\n                        || endpointType.key === 'prototyped'\n                        || api.type === 'WS'\n                        || endpointType.key === 'awslambda'\n                        ? <div />\n                        : (\n                            <Grid item xs={12}>\n                                <Typography\n                                    variant='h4'\n                                    align='left'\n                                    className={classes.titleWrapper}\n                                    gutterBottom\n                                >\n                                    <FormattedMessage\n                                        id={'Apis.Details.Endpoints.'\n                                            + 'EndpointOverview.lb.failover.endpoints.header'}\n                                        defaultMessage='Load balance and Failover Configurations'\n                                    />\n                                </Typography>\n                                <LoadbalanceFailoverConfig\n                                    handleEndpointCategorySelect={handleEndpointCategorySelect}\n                                    toggleAdvanceConfig={toggleAdvanceConfig}\n                                    endpointsDispatcher={endpointsDispatcher}\n                                    epConfig={(cloneDeep(epConfig))}\n                                    endpointSecurityInfo={endpointSecurityInfo}\n                                    handleEndpointTypeSelect={handleEndpointTypeSelect}\n                                    globalEpType={endpointType}\n                                    apiType={api.type}\n                                />\n                            </Grid>\n                        )\n                }\n            </Grid>\n            <Dialog open={advanceConfigOptions.open}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.advance.endpoint.configuration'\n                            defaultMessage='Advanced Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <AdvanceEndpointConfig\n                        isSOAPEndpoint={endpointType.key === 'address'}\n                        advanceConfig={advanceConfigOptions.config}\n                        onSaveAdvanceConfig={saveAdvanceConfig}\n                        onCancel={closeAdvanceConfig}\n                    />\n                </DialogContent>\n            </Dialog>\n            <Dialog open={endpointSecurityConfig.open}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.security.configuration'\n                            defaultMessage='Endpoint Security Configurations'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    {endpointSecurityConfig.category === 'production' ? (\n                        <EndpointSecurity\n                            securityInfo={endpointSecurityInfo\n                                            && (endpointSecurityInfo.production\n                                                ? endpointSecurityInfo.production : endpointSecurityInfo)}\n                            onChangeEndpointAuth={handleEndpointSecurityChange}\n                            saveEndpointSecurityConfig={saveEndpointSecurityConfig}\n                            closeEndpointSecurityConfig={closeEndpointSecurityConfig}\n                            isProduction\n                        />\n                    ) : (\n                        <EndpointSecurity\n                            securityInfo={endpointSecurityInfo\n                                            && (endpointSecurityInfo.sandbox\n                                                ? endpointSecurityInfo.sandbox : endpointSecurityInfo)}\n                            onChangeEndpointAuth={handleEndpointSecurityChange}\n                            saveEndpointSecurityConfig={saveEndpointSecurityConfig}\n                            closeEndpointSecurityConfig={closeEndpointSecurityConfig}\n                        />\n                    )}\n                </DialogContent>\n            </Dialog>\n            <Dialog open={typeChangeConfirmation.openDialog}>\n                <DialogTitle>\n                    <Typography className={classes.configDialogHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.type.change.confirmation'\n                            defaultMessage='Change Endpoint Type'\n                        />\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    <Typography>\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.endpoint.type.change.confirmation.message'\n                            defaultMessage='Your current endpoint configuration will be lost.'\n                        />\n                    </Typography>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        onClick={() => { setTypeChangeConfirmation({ openDialog: false }); }}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints.EndpointOverview.change.type.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        onClick={() => { changeEndpointType(typeChangeConfirmation.type); }}\n                        color='primary'\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Endpoints..EndpointOverview.change.type.proceed'\n                            defaultMessage='Proceed'\n                        />\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nEndpointOverview.propTypes = {\n    classes: PropTypes.shape({\n        overviewWrapper: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        endpointName: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    endpointsDispatcher: PropTypes.func.isRequired,\n    swaggerDef: PropTypes.shape({}).isRequired,\n    updateSwagger: PropTypes.func.isRequired,\n    saveAndRedirect: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(EndpointOverview));\n","/**\n * Copyright (c)  WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, {\n    useContext, useEffect, useState, useReducer,\n} from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { Link, withRouter } from 'react-router-dom';\nimport NewEndpointCreate from 'AppComponents/Apis/Details/Endpoints/NewEndpointCreate';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport cloneDeep from 'lodash.clonedeep';\nimport { isRestricted } from 'AppData/AuthManager';\nimport EndpointOverview from './EndpointOverview';\nimport { createEndpointConfig, getEndpointTemplateByType } from './endpointUtils';\n\nconst styles = (theme) => ({\n    endpointTypesWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'row',\n        margin: '2px',\n    },\n    root: {\n        flexGrow: 1,\n        paddingRight: '10px',\n    },\n    buttonSection: {\n        marginTop: theme.spacing(2),\n    },\n    radioGroup: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginLeft: theme.spacing(2),\n    },\n    endpointValidityMessage: {\n        color: theme.palette.error.main,\n    },\n    errorMessageContainer: {\n        marginTop: theme.spacing(1),\n    },\n    implSelectRadio: {\n        padding: theme.spacing(1) / 2,\n    },\n});\n\nconst defaultSwagger = { paths: {} };\n\n/**\n * The base component of the endpoints view.\n * @param {any} props The props passed to the layout\n * @returns {any} HTML representation.\n */\nfunction Endpoints(props) {\n    const { classes, intl, history } = props;\n    const { api, updateAPI } = useContext(APIContext);\n    const [swagger, setSwagger] = useState(defaultSwagger);\n    const [endpointValidity, setAPIEndpointsValid] = useState({ isValid: true, message: '' });\n    const [isUpdating, setUpdating] = useState(false);\n\n    const apiReducer = (initState, configAction) => {\n        const tmpEndpointConfig = cloneDeep(initState.endpointConfig);\n        const { action, value } = configAction;\n        switch (action) {\n            case 'production_endpoints':\n            case 'sandbox_endpoints': {\n                if (value) {\n                    return { ...initState, endpointConfig: { ...tmpEndpointConfig, [action]: value } };\n                }\n                return { ...initState, endpointConfig: { ...tmpEndpointConfig } };\n            }\n            case 'select_endpoint_category': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'set_lb_config': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'add_endpoint': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'set_advance_config': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'remove_endpoint': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'endpointImplementationType': { // set implementation status\n                const { endpointType, implementationType } = value;\n                const config = createEndpointConfig(endpointType);\n                if (endpointType === 'prototyped') {\n                    if (implementationType === 'mock') {\n                        api.generateMockScripts(api.id).then((res) => { // generates mock/sample payloads\n                            setSwagger(res.obj);\n                        });\n                        return { ...initState, endpointConfig: config, endpointImplementationType: 'INLINE' };\n                    }\n                    return { ...initState, endpointConfig: config, endpointImplementationType: 'ENDPOINT' };\n                }\n                return { ...initState, endpointConfig: config };\n            }\n            case 'endpointSecurity': { // set endpoint security\n                const config = cloneDeep(initState.endpointConfig);\n                const tmpSecurityInfo = cloneDeep(value);\n                return { ...initState, endpointConfig: { ...config, endpoint_security: tmpSecurityInfo } };\n            }\n            case 'endpoint_type': { // set endpoint type\n                const config = getEndpointTemplateByType(\n                    value.category,\n                    value.endpointType === 'address',\n                    tmpEndpointConfig,\n                );\n                return { ...initState, endpointConfig: { ...config } };\n            }\n            case 'set_inline': {\n                const { endpointImplementationType, endpointConfig } = value;\n                api.generateMockScripts(api.id).then((res) => { // generates mock/sample payloads\n                    setSwagger(res.obj);\n                });\n                return { ...initState, endpointConfig, endpointImplementationType };\n            }\n            case 'set_prototyped': {\n                const { endpointImplementationType, endpointConfig } = value;\n                return {\n                    ...initState,\n                    endpointImplementationType,\n                    endpointConfig,\n                };\n            }\n            case 'set_awsCredentials': {\n                return { ...initState, endpointConfig: { ...value } };\n            }\n            case 'select_endpoint_type': {\n                const { endpointImplementationType, endpointConfig } = value;\n                let { endpointSecurity } = initState;\n                if (endpointSecurity && (endpointSecurity.username === '')) {\n                    endpointSecurity = null;\n                }\n                return {\n                    ...initState,\n                    endpointConfig,\n                    endpointImplementationType,\n                    endpointSecurity: null,\n                };\n            }\n            default: {\n                return initState;\n            }\n        }\n    };\n    const [apiObject, apiDispatcher] = useReducer(apiReducer, api.toJSON());\n\n\n    /**\n     * Method to update the api.\n     *\n     * @param {boolean} isRedirect Used for dynamic endpoints to redirect to the runtime config page.\n     */\n    const saveAPI = (isRedirect) => {\n        const { endpointConfig, endpointImplementationType, endpointSecurity } = apiObject;\n        setUpdating(true);\n        if (endpointImplementationType === 'INLINE') {\n            api.updateSwagger(swagger).then((resp) => {\n                setSwagger(resp.obj);\n            }).then(() => {\n                updateAPI({ endpointConfig, endpointImplementationType, endpointSecurity });\n            }).finally(() => {\n                setUpdating(false);\n                if (isRedirect) {\n                    history.push('/apis/' + api.id + '/runtime-configuration');\n                }\n            });\n        } else {\n            updateAPI(apiObject).finally(() => {\n                setUpdating(false);\n                if (isRedirect) {\n                    history.push('/apis/' + api.id + '/runtime-configuration');\n                }\n            });\n        }\n    };\n\n    /**\n     * Validate the provided endpoint config object.\n     *\n     * @param {any} endpointConfig The provided endpoint config for validation.\n     * @param {string} implementationType The api implementation type (INLINE/ ENDPOINT)\n     * @return {{isValid: boolean, message: string}} The endpoint validity information.\n     * */\n    const validate = (implementationType) => {\n        const { endpointConfig, endpointSecurity } = apiObject;\n        if (endpointSecurity) {\n            if (endpointSecurity.type === 'OAUTH') {\n                if (endpointSecurity.grantType === 'PASSWORD') {\n                    if (endpointSecurity.tokenUrl === null\n                        || endpointSecurity.apiKey === null\n                        || endpointSecurity.apiSecret === null\n                        || endpointSecurity.username === null\n                        || endpointSecurity.password === null) {\n                        return {\n                            isValid: false,\n                            message: intl.formatMessage({\n                                id: 'Apis.Details.Endpoints.Endpoints.missing.security.oauth.password.error',\n                                defaultMessage: 'Endpoint Security Token URL'\n                                        + '/API Key/API Secret/Username/Password should not be empty',\n                            }),\n                        };\n                    }\n                } else if (endpointSecurity.grantType === 'CLIENT_CREDENTIALS') {\n                    if (endpointSecurity.tokenUrl === null\n                        || endpointSecurity.apiKey === null\n                        || endpointSecurity.apiSecret === null) {\n                        return {\n                            isValid: false,\n                            message: intl.formatMessage({\n                                id: 'Apis.Details.Endpoints.Endpoints.missing.security.oauth.client.error',\n                                defaultMessage: 'Endpoint Security Token URL'\n                                        + '/API Key/API Secret should not be empty',\n                            }),\n                        };\n                    }\n                }\n            } else if (endpointSecurity.username === '' || endpointSecurity.password === null) {\n                return {\n                    isValid: false,\n                    message: intl.formatMessage({\n                        id: 'Apis.Details.Endpoints.Endpoints.missing.security.username.error',\n                        defaultMessage: 'Endpoint Security User Name/ Password should not be empty',\n                    }),\n                };\n            }\n        }\n        if (endpointConfig === null) {\n            return { isValid: true, message: '' };\n        }\n        const endpointType = endpointConfig.endpoint_type;\n        if (endpointType === 'awslambda') {\n            if (endpointConfig.access_method === 'stored') {\n                if (endpointConfig.amznAccessKey === '' || endpointConfig.amznSecretKey === ''\n                || endpointConfig.amznRegion === '') {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.accessKey.secretKey.error',\n                            defaultMessage: 'Access Key, Secret Key and Region should not be empty',\n                        }),\n                    };\n                }\n            }\n            if (endpointConfig.amznAccessKey !== '' && endpointConfig.amznSecretKey === 'AWS_SECRET_KEY') {\n                return {\n                    isValid: false,\n                    message: '',\n                };\n            }\n        } else if (endpointType === 'load_balance') {\n            /**\n             * Checklist:\n             *  production/ sandbox endpoints should be an array.\n             *  production/ sandbox endpoint [0] must be present.\n             * */\n            if (endpointConfig.production_endpoints && endpointConfig.production_endpoints.length > 0) {\n                if (!endpointConfig.production_endpoints[0].url\n                    || (endpointConfig.production_endpoints[0].url\n                        && endpointConfig.production_endpoints[0].url === '')) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.prod.endpoint.loadbalance',\n                            defaultMessage: 'Default Production Endpoint should not be empty',\n                        }),\n                    };\n                }\n            }\n            if (endpointConfig.sandbox_endpoints && endpointConfig.sandbox_endpoints.length > 0) {\n                if (!endpointConfig.sandbox_endpoints[0].url\n                    || (endpointConfig.sandbox_endpoints[0].url && endpointConfig.sandbox_endpoints[0].url === '')) {\n                    return {\n                        isValid: false,\n                        message: intl.formatMessage({\n                            id: 'Apis.Details.Endpoints.Endpoints.missing.sandbox.endpoint.loadbalance',\n                            defaultMessage: 'Default Sandbox Endpoint should not be empty',\n                        }),\n                    };\n                }\n            }\n        } else {\n            let isValidEndpoint = false;\n            if (endpointConfig.implementation_status === 'prototyped') {\n                if (implementationType === 'ENDPOINT') {\n                    if (endpointConfig.production_endpoints && endpointConfig.production_endpoints.url === '') {\n                        return {\n                            isValid: false,\n                            message: intl.formatMessage({\n                                id: 'Apis.Details.Endpoints.Endpoints.missing.prototype.url',\n                                defaultMessage: 'Prototype Endpoint URL should not be empty',\n                            }),\n                        };\n                    }\n                }\n                isValidEndpoint = true;\n            } else if (endpointConfig.production_endpoints && !endpointConfig.sandbox_endpoints) {\n                isValidEndpoint = endpointConfig.production_endpoints.url !== '';\n            } else if (endpointConfig.sandbox_endpoints && !endpointConfig.production_endpoints) {\n                isValidEndpoint = endpointConfig.sandbox_endpoints.url !== '';\n            } else if (!endpointConfig.sandbox_endpoints && !endpointConfig.production_endpoints) {\n                isValidEndpoint = false;\n            } else {\n                isValidEndpoint = endpointConfig.sandbox_endpoints.url !== ''\n                        || endpointConfig.production_endpoints.url !== '';\n            }\n            return !isValidEndpoint ? {\n                isValid: false,\n                message: intl.formatMessage({\n                    id: 'Apis.Details.Endpoints.Endpoints.missing.endpoint.error',\n                    defaultMessage: 'Either one of Production or Sandbox Endpoints should be added.',\n                }),\n            } : { isValid: true, message: '' };\n        }\n        return {\n            isValid: true,\n            message: '',\n        };\n    };\n\n    useEffect(() => {\n        if (api.type !== 'WS') {\n            api.getSwagger(apiObject.id).then((resp) => {\n                setSwagger(resp.obj);\n            }).catch((err) => {\n                console.err(err);\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        setAPIEndpointsValid(validate(apiObject.endpointImplementationType));\n    }, [apiObject]);\n\n    const saveAndRedirect = () => {\n        saveAPI(true);\n    };\n    /**\n     * Method to update the swagger object.\n     *\n     * @param {any} swaggerObj The updated swagger object.\n     * */\n    const changeSwagger = (swaggerObj) => {\n        setSwagger(swaggerObj);\n    };\n\n    /**\n     * Generate endpoint configuration based on the selected endpoint type and set to the api object.\n     *\n     * @param {string} endpointType The endpoint type.\n     * @param {string} implementationType The endpoint implementationType. (Required only for prototype endpoints)\n     * */\n    const generateEndpointConfig = (endpointType, implementationType) => {\n        apiDispatcher({ action: 'endpointImplementationType', value: { endpointType, implementationType } });\n    };\n\n    return (\n        <>\n            {/* Since the api is set to the state in component did mount, check both the api and the apiObject. */}\n            {(api.endpointConfig === null && apiObject.endpointConfig === null)\n                ? <NewEndpointCreate generateEndpointConfig={generateEndpointConfig} apiType={apiObject.type} />\n                : (\n                    <div className={classes.root}>\n                        <Typography variant='h4' align='left' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Endpoints.Endpoints.endpoints.header'\n                                defaultMessage='Endpoints'\n                            />\n                        </Typography>\n                        <div>\n                            <Grid container>\n                                <Grid item xs={12} className={classes.endpointsContainer}>\n                                    <EndpointOverview\n                                        swaggerDef={swagger}\n                                        updateSwagger={changeSwagger}\n                                        api={apiObject}\n                                        onChangeAPI={apiDispatcher}\n                                        endpointsDispatcher={apiDispatcher}\n                                        saveAndRedirect={saveAndRedirect}\n                                    />\n                                </Grid>\n                            </Grid>\n                            {\n                                endpointValidity.isValid\n                                    ? <div />\n                                    : (\n                                        <Grid item className={classes.errorMessageContainer}>\n                                            <Typography className={classes.endpointValidityMessage}>\n                                                {endpointValidity.message}\n                                            </Typography>\n                                        </Grid>\n                                    )\n                            }\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={1}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    <Button\n                                        disabled={isUpdating || !endpointValidity.isValid\n                                    || isRestricted(['apim:api_create'], api)}\n                                        type='submit'\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={() => saveAPI()}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Endpoints.Endpoints.save'\n                                            defaultMessage='Save'\n                                        />\n                                        {isUpdating && <CircularProgress size={24} />}\n                                    </Button>\n                                </Grid>\n                                <Grid item>\n                                    <Link to={'/apis/' + api.id + '/overview'}>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.Endpoints.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                                {isRestricted(['apim:api_create'], api)\n                                && (\n                                    <Grid item>\n                                        <Typography variant='body2' color='primary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Endpoints.Endpoints.update.not.allowed'\n                                                defaultMessage={'*You are not authorized to update endpoints of'\n                                                + ' the API due to insufficient permissions'}\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </div>\n                    </div>\n                )}\n        </>\n\n    );\n}\n\nEndpoints.propTypes = {\n    classes: PropTypes.shape({\n        root: PropTypes.shape({}),\n        buttonSection: PropTypes.shape({}),\n        endpointTypesWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(injectIntl(withStyles(styles)(Endpoints)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Paper from '@material-ui/core/Paper';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    mainTitle: {\n        paddingTop: theme.spacing(3),\n    },\n    gatewayPaper: {\n        marginTop: theme.spacing(2),\n    },\n    content: {\n        marginTop: theme.spacing(2),\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(3),\n    },\n}));\n\n/**\n * Renders Microgateway labels\n * @class MicroGateway\n * @param {*} props\n * @extends {React.Component}\n */\nexport default function MicroGateway(props) {\n    const classes = useStyles();\n    const { selectedMgLabel, setSelectedMgLabel, api } = props;\n    const restApi = new API();\n    const [mgLabels, setMgLabels] = useState([]);\n    useEffect(() => {\n        restApi.microgatewayLabelsGet()\n            .then((result) => {\n                setMgLabels(result.body.list);\n            });\n    }, []);\n\n    return (\n        <>\n            <Typography variant='h4' align='left' className={classes.mainTitle}>\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.GatewayLabels'\n                    defaultMessage='Gateway Labels'\n                />\n            </Typography>\n            {mgLabels.length > 0 ? (\n                <Paper className={classes.gatewayPaper}>\n                    <Table>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell />\n                                <TableCell align='left'>Label</TableCell>\n                                <TableCell align='left'>Description</TableCell>\n                                <TableCell align='left'>Access URL</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {mgLabels.map((row) => (\n                                <TableRow key={row.name}>\n                                    <TableCell padding='checkbox'>\n                                        <Checkbox\n                                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                            checked={selectedMgLabel.includes(row.name)}\n                                            onChange={\n                                                (event) => {\n                                                    const { checked, name } = event.target;\n                                                    if (checked) {\n                                                        setSelectedMgLabel([...selectedMgLabel, name]);\n                                                    } else {\n                                                        setSelectedMgLabel(\n                                                            selectedMgLabel.filter((env) => env !== name),\n                                                        );\n                                                    }\n                                                }\n                                            }\n                                            name={row.name}\n                                            color='primary'\n                                        />\n                                    </TableCell>\n                                    <TableCell component='th' scope='row' align='left'>\n                                        {row.name}\n                                    </TableCell>\n                                    <TableCell align='left'>{row.description}</TableCell>\n                                    <TableCell align='left'>{row.access_urls.join(', ')}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n            )\n                : (\n                    <InlineMessage type='info' height={100} className={classes.emptyBox}>\n                        <div className={classes.contentWrapper}>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Gateway.labels.emptym1'\n                                    defaultMessage='Gateway labels are not available.'\n                                />\n                                <FormattedMessage\n                                    id='Apis.Details.Environments.Gateway.labels.emptym2'\n                                    defaultMessage=' You can request the administrator to add labels.'\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                )}\n        </>\n    );\n}\nMicroGateway.defaultProps = {\n    api: {},\n};\nMicroGateway.propTypes = {\n    selectedMgLabel: PropTypes.arrayOf(PropTypes.string).isRequired,\n    setSelectedMgLabel: PropTypes.func.isRequired,\n    api: PropTypes.shape({}),\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { isRestricted } from 'AppData/AuthManager';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    mainTitle: {\n        paddingTop: theme.spacing(3),\n    },\n    gatewayPaper: {\n        marginTop: theme.spacing(2),\n    },\n    content: {\n        marginTop: theme.spacing(2),\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(3),\n    },\n}));\n\n/**\n * Renders deployments List\n * @class Kubernetes\n * @param {*} props\n * @extends {React.Component}\n */\nexport default function Kubernetes(props) {\n    const classes = useStyles();\n    const {\n        clusters, selectedDeployments, setSelectedDeployments, api,\n    } = props;\n\n    /**\n     * Handle the Deployment Environments onChange event\n     * @param {event} event onCheck event\n     * @param {clusterId} clusterId seletected clsuter Id\n     */\n    function handleEnvironmentsSelect(event, clusterId) {\n        const { checked } = event.target;\n        const selectedDeploymentCopy = cloneDeep(selectedDeployments);\n        if (selectedDeploymentCopy && selectedDeploymentCopy.length > 0) {\n            for (let dep = 0; dep < selectedDeploymentCopy.length; dep++) {\n                const deployment = selectedDeploymentCopy[dep];\n                if (deployment && deployment.type === 'Kubernetes') {\n                    if (deployment.clusterName && deployment.clusterName.length > 0) {\n                        const clusterNameFound = [];\n                        for (let cluster = 0; cluster < deployment.clusterName.length; cluster++) {\n                            const clusterName = deployment.clusterName[cluster];\n                            if (clusterName === clusterId) {\n                                clusterNameFound.push(clusterId);\n                            }\n                        }\n                        if (checked && !clusterNameFound.includes(clusterId)) {\n                            deployment.clusterName.push(clusterId);\n                        } else if (!checked && clusterNameFound.includes(clusterId)) {\n                            const index = deployment.clusterName.indexOf(clusterId);\n                            if (index > -1) {\n                                deployment.clusterName.splice(index, 1);\n                            }\n                        }\n                    } else if (deployment.clusterName && deployment.clusterName.length === 0) {\n                        deployment.clusterName.push(clusterId);\n                    }\n                }\n            }\n        } else {\n            selectedDeploymentCopy.push({\n                type: 'Kubernetes',\n                clusterName: [clusterId],\n            });\n        }\n        setSelectedDeployments(selectedDeploymentCopy);\n    }\n\n\n    /**\n     *\n     * Handle the Deployment Environments onCheck\n     * @param {*} clusterId selected cluster Id\n     * @returns {include} selected cluster alredy include in the response\n     */\n    function handleOnChecked(clusterId) {\n        let include = false;\n        if (selectedDeployments) {\n            const deploymentTypes = selectedDeployments.filter((deployment) => deployment.type === 'Kubernetes');\n            if (deploymentTypes && deploymentTypes.length > 0) {\n                const selectedClusters = deploymentTypes[0].clusterName.filter((cluster) => cluster === clusterId);\n                include = selectedClusters && selectedClusters.length > 0;\n            }\n        }\n        return include;\n    }\n\n    const generateElement = (key, value) => {\n        return (\n            <TableRow>\n                <TableCell align='left'>{key}</TableCell>\n                <TableCell align='left'>{value}</TableCell>\n            </TableRow>\n        );\n    };\n    /**\n     *\n     * Handle generating table with property data\n     * @param {*} data JSONObject with cluster propertues\n     * @returns {properties} rendered elements\n     */\n    function generatePropertyData(data) {\n        const properties = Object.keys(data).reduce((result, currentKey) => {\n            const elementToPush = generateElement(currentKey, data[currentKey]);\n            result.push(elementToPush);\n\n            return result;\n        }, []);\n        return properties;\n    }\n    return (\n        <>\n            <Typography variant='h4' gutterBottom align='left' className={classes.mainTitle}>\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.Kubernetes'\n                    defaultMessage='Kubernetes'\n                />\n            </Typography>\n\n            <Paper className={classes.gatewayPaper}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell />\n                            <TableCell align='left'>Name</TableCell>\n                            <TableCell align='left'>Properties</TableCell>\n                            <TableCell align='left'>Access URL</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {clusters.clusters.map((row) => (\n                            <TableRow key={row.clusterName}>\n                                <TableCell padding='checkbox'>\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        checked={handleOnChecked(row.clusterName)}\n                                        onChange={(e) => handleEnvironmentsSelect(e, row.clusterName)}\n                                        color='primary'\n                                    />\n                                </TableCell>\n                                <TableCell component='th' scope='row'>\n                                    {row.displayName}\n                                </TableCell>\n                                <TableCell align='left'>\n                                    <Table>\n                                        <TableBody>\n                                            {generatePropertyData(row.properties)}\n                                        </TableBody>\n                                    </Table>\n                                </TableCell>\n                                <TableCell align='left'>{row.accessURL}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n        </>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MicroGateway from 'AppComponents/Apis/Details/Environments/MicroGateway';\nimport Kubernetes from 'AppComponents/Apis/Details/Environments/Kubernetes';\nimport API from 'AppData/api';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    saveButton: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\n/**\n * Renders an Environments list\n * @class Environments\n * @extends {React.Component}\n */\nexport default function Environments() {\n    const classes = useStyles();\n    const { api, updateAPI } = useContext(APIContext);\n    const { settings } = useAppContext();\n    const [gatewayEnvironments, setGatewayEnvironments] = useState([...api.gatewayEnvironments]);\n    const [selectedMgLabel, setSelectedMgLabel] = useState([...api.labels]);\n    const [isUpdating, setUpdating] = useState(false);\n    const [selectedDeployments, setSelectedDeployments] = useState([...api.deploymentEnvironments]);\n\n    const restApi = new API();\n    const [allDeployments, setAllDeployments] = useState([]);\n    useEffect(() => {\n        restApi.getDeployments()\n            .then((result) => {\n                setAllDeployments(result.body.list);\n            });\n    }, []);\n\n    /**\n     *\n     * Handle the Environments save button action\n     */\n    function addEnvironments() {\n        setUpdating(true);\n        updateAPI({\n            gatewayEnvironments,\n            labels: selectedMgLabel,\n            deploymentEnvironments: selectedDeployments,\n        })\n            .then(() => Alert.info('API Update Successfully'))\n            .catch((error) => {\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while updating the environments');\n                }\n                console.error(error);\n            })\n            .finally(() => setUpdating(false));\n    }\n\n    return (\n        <>\n            <Typography variant='h4' gutterBottom>\n                <FormattedMessage\n                    id='Apis.Details.Environments.Environments.APIGateways'\n                    defaultMessage='API Gateways'\n                />\n            </Typography>\n            <Paper className={classes.saveButton}>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell />\n                            <TableCell align='left'>Name</TableCell>\n                            <TableCell align='left'>Type</TableCell>\n                            <TableCell align='left'>Server URL</TableCell>\n                            {api.isWebSocket() ? (\n                                <>\n                                    <TableCell align='left'>WS Endpoint</TableCell>\n                                    <TableCell align='left'>WSS Endpoint</TableCell>\n                                </>\n                            ) : (\n                                <>\n                                    <TableCell align='left'>HTTP Endpoint</TableCell>\n                                    <TableCell align='left'>HTTPS Endpoint</TableCell>\n                                </>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {settings.environment.map((row) => (\n                            <TableRow key={row.name}>\n                                <TableCell padding='checkbox'>\n                                    <Checkbox\n                                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                        checked={gatewayEnvironments.includes(row.name)}\n                                        onChange={\n                                            (event) => {\n                                                const { checked, name } = event.target;\n                                                if (checked) {\n                                                    setGatewayEnvironments([...gatewayEnvironments, name]);\n                                                } else {\n                                                    setGatewayEnvironments(\n                                                        gatewayEnvironments.filter((env) => env !== name),\n                                                    );\n                                                }\n                                            }\n                                        }\n                                        name={row.name}\n                                        color='primary'\n                                    />\n                                </TableCell>\n                                <TableCell component='th' scope='row'>\n                                    {row.name}\n                                </TableCell>\n                                <TableCell align='left'>{row.type}</TableCell>\n                                <TableCell align='left'>{row.serverUrl}</TableCell>\n\n                                {api.isWebSocket() ? (\n                                    <>\n                                        <TableCell align='left'>{row.endpoints.ws}</TableCell>\n                                        <TableCell align='left'>{row.endpoints.wss}</TableCell>\n                                    </>\n                                ) : (\n                                    <>\n                                        <TableCell align='left'>{row.endpoints.http}</TableCell>\n                                        <TableCell align='left'>{row.endpoints.https}</TableCell>\n                                    </>\n                                )}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </Paper>\n\n            {!api.isWebSocket()\n                && (\n                    <MicroGateway\n                        selectedMgLabel={selectedMgLabel}\n                        setSelectedMgLabel={setSelectedMgLabel}\n                        api={api}\n                    />\n                )}\n            {\n                allDeployments\n                 && (\n                     allDeployments.map((clusters) => (clusters.name.toLowerCase() === 'kubernetes' && (\n                         <Kubernetes\n                             clusters={clusters}\n                             selectedDeployments={selectedDeployments}\n                             setSelectedDeployments={setSelectedDeployments}\n                             api={api}\n                         />\n                     )))\n                 )\n            }\n\n            <Grid\n                container\n                direction='row'\n                alignItems='flex-start'\n                spacing={1}\n            >\n                <Grid item>\n                    <Button\n                        className={classes.saveButton}\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api) || isUpdating}\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        onClick={addEnvironments}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.save'\n                            defaultMessage='Save'\n                        />\n                        {isUpdating && <CircularProgress size={20} />}\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Link to={'/apis/' + api.id + '/overview'}>\n                        <Button className={classes.saveButton}>\n                            <FormattedMessage\n                                id='Apis.Details.Environments.Environments.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n            {isRestricted(['apim:api_create'], api) && (\n                <Grid item>\n                    <Typography variant='body2' color='primary'>\n                        <FormattedMessage\n                            id='Apis.Details.Environments.Environments.update.not.allowed'\n                            defaultMessage={\n                                '* You are not authorized to update particular fields of'\n                                + ' the API due to insufficient permissions'\n                            }\n                        />\n                    </Typography>\n                </Grid>\n            )}\n        </>\n    );\n}\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from 'mui-datatables';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { FormattedMessage } from 'react-intl';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\n\nconst columns = ['Name', 'Value'];\n\nconst options = {\n    filterType: 'checkbox',\n    sort: false,\n    search: false,\n    viewColumns: false,\n    filter: false,\n    selectableRowsHeader: false,\n    selectableRows: 'none',\n    pagination: false,\n    download: false,\n};\n\n// eslint-disable-next-line require-jsdoc\nfunction Invoice(props) {\n    const {\n        subscriptionId,\n        isMonetizedUsagePolicy,\n        isNotAuthorized,\n        api,\n    } = props;\n    const [showPopup, setShowPopup] = useState(false);\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    const [invoice, setInvoice] = useState(null);\n\n    /**\n   * Handle the popup for invoice\n   */\n    const handlePopup = () => {\n        setShowPopup(true);\n        setInvoice(null);\n        if (api.apiType === 'APIProduct') {\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            const promiseInvoice = apiProduct.getMonetizationInvoice(subscriptionId);\n            promiseInvoice.then((response) => {\n                const invoiceData = [];\n                Object.keys(response.properties).map((invoiceItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiceItem);\n                    insideArray.push(response.properties[invoiceItem]);\n                    invoiceData.push(insideArray);\n                    return true;\n                });\n                setInvoice(invoiceData);\n            }).catch((error) => {\n                console.error(error);\n                setShowErrorPopup(true);\n            });\n        } else {\n            const promiseInvoice = api.getMonetizationInvoice(subscriptionId);\n            promiseInvoice.then((response) => {\n                const invoiceData = [];\n                Object.keys(response.properties).map((invoiceItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiceItem);\n                    insideArray.push(response.properties[invoiceItem]);\n                    invoiceData.push(insideArray);\n                    return true;\n                });\n                setInvoice(invoiceData);\n            }).catch((error) => {\n                console.error(error);\n                setShowErrorPopup(true);\n            });\n        }\n    };\n\n    /**\n   * Handle closing the popup for invoice\n   */\n    const handleClose = () => {\n        setShowPopup(false);\n    };\n\n    const handleAlertClose = () => {\n        setShowErrorPopup(false);\n    };\n\n    return (\n        <>\n            <Button\n                variant='outlined'\n                size='small'\n                color='primary'\n                disabled={!isMonetizedUsagePolicy || isNotAuthorized}\n                onClick={handlePopup}\n            >\n                <FormattedMessage\n                    id='Applications.Details.Invoice.view.btn'\n                    defaultMessage='View Invoice'\n                />\n            </Button>\n            <Dialog open={showPopup} onClose={handleClose} fullWidth='true'>\n                {invoice && (\n                    <MUIDataTable\n                        title='Upcoming Invoice'\n                        data={invoice}\n                        columns={columns}\n                        options={options}\n                    />\n                )}\n            </Dialog>\n            <Dialog open={showErrorPopup} onClose={handleAlertClose} fullWidth='true'>\n                <DialogTitle>No Data Available</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id='invoice-dialog-description'>\n                        Pending invoice data not found for this subscription.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAlertClose} color='primary'>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nInvoice.propTypes = {\n    subscriptionId: PropTypes.string.isRequired,\n    isMonetizedUsagePolicy: PropTypes.string.isRequired,\n    isNotAuthorized: PropTypes.string.isRequired,\n    api: PropTypes.instanceOf(API).isRequired,\n};\n\nexport default Invoice;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport MUIDataTable from 'mui-datatables';\nimport InfoIcon from '@material-ui/icons/Info';\nimport UserIcon from '@material-ui/icons/Person';\n\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport { ScopeValidation, resourceMethod, resourcePath } from 'AppData/ScopeValidation';\nimport AuthManager from 'AppData/AuthManager';\nimport Invoice from './Invoice';\n\nconst styles = (theme) => ({\n    heading: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(2),\n    },\n    button: {\n        margin: theme.spacing(1),\n    },\n    headline: { paddingTop: theme.spacing(1.25), paddingLeft: theme.spacing(2.5) },\n    popupHeadline: {\n        alignItems: 'center',\n        borderBottom: '2px solid #40E0D0',\n        textAlign: 'center',\n    },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n    },\n    searchDiv: {\n        float: 'right',\n        paddingTop: theme.spacing(1.25),\n        paddingRight: theme.spacing(1.25),\n    },\n    searchRoot: {\n        paddingTop: theme.spacing(0.25),\n        paddingBottom: theme.spacing(0.25),\n        paddingRight: theme.spacing(0.5),\n        paddingLeft: theme.spacing(0.5),\n        display: 'flex',\n        alignItems: 'right',\n        width: theme.spacing(50),\n        borderBottom: '1px solid #E8E8E8',\n    },\n    searchInput: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    searchIconButton: {\n        padding: theme.spacing(1.25),\n    },\n    noDataMessage: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#888888',\n        width: '100%',\n    },\n    tableColumnSize: {\n        width: '14%',\n    },\n    tableColumnSize2: {\n        width: '30%',\n    },\n    dialogColumnSize: {\n        width: '50%',\n    },\n    dialog: {\n        float: 'center',\n        alignItems: 'center',\n    },\n    invoiceTable: {\n        '& td': {\n            fontSize: theme.typography.fontSize * 1.5,\n        },\n    },\n    uniqueCell: {\n        borderTop: '1px solid #000000',\n        fontWeight: 'bold',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n        marginTop: theme.spacing(3),\n    },\n    titleWrapper: {\n        marginBottom: theme.spacing(3),\n    },\n    typography: {\n        padding: theme.spacing(2),\n    },\n    root: {\n        flexGrow: 1,\n    },\n    InfoToolTip: {\n        backgroundColor: theme.custom.disableColor,\n        color: theme.palette.getContrastText(theme.custom.disableColor),\n        fontSize: theme.typography.fontSize,\n        fontWeight: theme.typography.h6.fontWeight,\n        border: 'solid 1px ' + theme.palette.grey,\n        borderRadius: theme.shape.borderRadius,\n        padding: theme.spacing(2),\n    },\n    subscriberHeader: {\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n});\n\nconst subscriptionStatus = {\n    BLOCKED: 'BLOCKED',\n    PROD_BLOCKED: 'PROD_ONLY_BLOCKED',\n};\n\n/**\n * Table pagination for subscriptions table\n *\n * @param props props used for SubscriptionTablePagination\n * @returns {*}\n */\nfunction SubscriptionTablePagination(props) {\n    const {\n        count, page, rowsPerPage, onChangePage,\n    } = props;\n\n    /**\n     * handleFirstPageButtonClick loads data of the first page\n     * */\n    function handleFirstPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(0);\n        }\n    }\n\n    /**\n     * handleBackButtonClick load data of the prev page\n     * */\n    function handleBackButtonClick() {\n        if (onChangePage) {\n            onChangePage(page - 1);\n        }\n    }\n\n    /**\n     * handleNextButtonClick load data of the next page\n     * */\n    function handleNextButtonClick() {\n        if (onChangePage) {\n            onChangePage(page + 1);\n        }\n    }\n\n    /**\n     * handleLastPageButtonClick load data of the last page\n     * */\n    function handleLastPageButtonClick() {\n        if (onChangePage) {\n            onChangePage(Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n        }\n    }\n\n    return (\n        <div\n            style={{ display: 'flex' }}\n        >\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n            >\n                <FirstPageIcon />\n            </IconButton>\n            <IconButton\n                onClick={handleBackButtonClick}\n                disabled={page === 0}\n            >\n                <KeyboardArrowLeft />\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            >\n                <KeyboardArrowRight />\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            >\n                <LastPageIcon />\n            </IconButton>\n        </div>\n    );\n}\n\nSubscriptionTablePagination.propTypes = {\n    count: PropTypes.number.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n};\n\n/**\n * Lists all subscriptions.\n *\n * @class SubscriptionsTable\n * @extends {React.Component}\n */\nclass SubscriptionsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.api = props.api;\n        this.state = {\n            subscriptions: null,\n            totalSubscription: 0,\n            page: 0,\n            rowsPerPage: 5,\n            searchQuery: null,\n            rowsPerPageOptions: [5, 10, 25, 50, 100],\n            emptyColumnHeight: 60,\n            policies: [],\n            subscriberClaims: null,\n        };\n        this.formatSubscriptionStateString = this.formatSubscriptionStateString.bind(this);\n        this.blockSubscription = this.blockSubscription.bind(this);\n        this.blockProductionOnly = this.blockProductionOnly.bind(this);\n        this.unblockSubscription = this.unblockSubscription.bind(this);\n        this.handleChangePage = this.handleChangePage.bind(this);\n        this.handleChangeRowsPerPage = this.handleChangeRowsPerPage.bind(this);\n        this.filterSubscriptions = this.filterSubscriptions.bind(this);\n        this.isMonetizedPolicy = this.isMonetizedPolicy.bind(this);\n        this.renderClaims = this.renderClaims.bind(this);\n        this.isNotCreator = AuthManager.isNotCreator();\n        this.isNotPublisher = AuthManager.isNotPublisher();\n    }\n\n    componentDidMount() {\n        this.fetchSubscriptionData();\n    }\n\n    /**\n     * Returns the set of action buttons based on the current subscription state\n     *\n     * @param {*} state State of the subscription (PROD_ONLY_BLOCKED/BLOCKED/ACTIVE)\n     * @param {*} subscriptionId Subscription ID\n     * @returns {JSX} Action buttons in JSX\n     * @memberof SubscriptionsTable\n     */\n    getSubscriptionBlockingButtons(state, subscriptionId) {\n        const { classes } = this.props;\n        if (state === subscriptionStatus.PROD_BLOCKED) {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        } else if (state === subscriptionStatus.BLOCKED) {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        } else {\n            return (\n                <dev>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockProductionOnly(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.production.only'\n                            defaultMessage='Block Production Only'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.blockSubscription(subscriptionId)}\n                        className={classes.button}\n                    >\n                        <FormattedMessage\n                            id='block.all'\n                            defaultMessage='Block All'\n                        />\n                    </Button>\n                    <Button\n                        size='small'\n                        variant='outlined'\n                        color='primary'\n                        onClick={() => this.unblockSubscription(subscriptionId)}\n                        className={classes.button}\n                        disabled='true'\n                    >\n                        <FormattedMessage\n                            id='unblock'\n                            defaultMessage='Unblock'\n                        />\n                    </Button>\n                </dev>\n            );\n        }\n    }\n\n    /**\n     * Returns subscription state string based on te current subscription state\n     *\n     * @param {*} state The current state of subscription\n     * @returns {JSX} Subscription state string\n     * @memberof SubscriptionsTable\n     */\n    formatSubscriptionStateString(state) {\n        if (state === subscriptionStatus.PROD_BLOCKED) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.production.only.subs.state'\n                    defaultMessage='Blocked Production Only'\n                />\n            );\n        } else if (state === subscriptionStatus.BLOCKED) {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.blocked.subs.state'\n                    defaultMessage='Blocked'\n                />\n            );\n        } else {\n            return (\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionsTable.active.subs.state'\n                    defaultMessage='Active'\n                />\n            );\n        }\n    }\n\n    /**\n     * Blocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked',\n                    defaultMessage: 'Subscription was blocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Blocks production only for the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    blockProductionOnly(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.blockSubscriptions(subscriptionId, subscriptionStatus.PROD_BLOCKED);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.blocked.prod.only',\n                    defaultMessage: 'Subscription was blocked for production only.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.block.prod.only',\n                        defaultMessage: 'Error: Unable to block subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Unblocks the given subscription\n     *\n     * @param {*} subscriptionId Subscription ID\n     * @memberof SubscriptionsTable\n     */\n    unblockSubscription(subscriptionId) {\n        const { intl } = this.props;\n        const api = new API();\n        const promisedSubscriptionUpdate = api.unblockSubscriptions(subscriptionId);\n        promisedSubscriptionUpdate\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscription.unblocked',\n                    defaultMessage: 'Subscription was unblocked.',\n                }));\n                this.fetchSubscriptionData();\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                const { message } = errorResponse.response.body;\n                const messages = defineMessages({\n                    errorMessage: {\n                        id: 'Apis.Details.Subscriptions.SubscriptionsTable.error.subscription.unblock',\n                        defaultMessage: 'Error: Unable to unblock subscription. (Reason: {message})',\n                    },\n                });\n                Alert.error(intl.formatMessage(messages.errorMessage, { message }));\n            });\n    }\n\n    /**\n     * Fetches subscription data\n     *\n     * @memberof SubscriptionsTable\n     */\n    fetchSubscriptionData() {\n        const api = new API();\n        const { page, rowsPerPage, searchQuery } = this.state;\n        const { intl } = this.props;\n        const promisedSubscriptions = api.subscriptions(this.api.id, page * rowsPerPage, rowsPerPage, searchQuery);\n        promisedSubscriptions\n            .then((response) => {\n                this.setState({\n                    subscriptions: response.body.list,\n                    totalSubscription: response.body.pagination.total,\n                });\n                for (let i = 0; i < response.body.list.length; i++) {\n                    const { subscriptionId } = response.body.list[i];\n                    const promisedInfo = api.getSubscriberInfo(subscriptionId);\n                    promisedInfo\n                        .then((resp) => {\n                            this.setState((prevState) => ({\n                                subscriberClaims: {\n                                    ...prevState.subscriberClaims,\n                                    [subscriptionId]: resp.body,\n                                },\n                            }));\n                        })\n                        .catch((errorMessage) => {\n                            console.error(errorMessage);\n                            Alert.error(intl.formatMessage({\n                                id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscriber.info.error',\n                                defaultMessage: 'Error while retrieving the subscriber information',\n                            }));\n                        });\n                }\n            })\n            .catch((errorMessage) => {\n                console.error(errorMessage);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Subscriptions.SubscriptionsTable.subscriptions.error',\n                    defaultMessage: 'Error while retrieving the subscriptions',\n                }));\n            });\n        api.getMonetization(this.props.api.id).then((status) => {\n            this.setState({ monetizationStatus: status.enabled });\n        });\n        api.getSubscriptionPolicies(this.api.id).then((policies) => {\n            const filteredPolicies = policies.filter((policy) => policy.tierPlan === 'COMMERCIAL');\n            this.setState({ policies: filteredPolicies });\n        });\n    }\n\n    /**\n     * handleChangePage handle change in selected page\n     *\n     * @param page selected page\n     * */\n    handleChangePage(page) {\n        this.setState({ page }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Checks whether the policy is a usage based monetization plan\n     *\n     * */\n    isMonetizedPolicy(policyName) {\n        const { policies, monetizationStatus } = this.state;\n        if (policies.length > 0) {\n            const filteredPolicies = policies.filter(\n                (policy) => policy.name === policyName && policy.monetizationAttributes.pricePerRequest != null,\n            );\n            return (filteredPolicies.length > 0 && monetizationStatus);\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * handleChangeRowsPerPage handle change in rows per page\n     *\n     * @param event rows per page change event\n     * */\n    handleChangeRowsPerPage(event) {\n        this.setState({ rowsPerPage: event.target.value, page: 0 }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Filter subscriptions based on user search value\n     *\n     * @param event onChange event of user search\n     */\n    filterSubscriptions(event) {\n        this.setState({ searchQuery: event.target.value }, this.fetchSubscriptionData);\n    }\n\n    /**\n     * Render claims based on the claim object\n     */\n    renderClaims(claimsObject) {\n        const { classes } = this.props;\n        if (claimsObject) {\n            return (\n                <div className={classes.root}>\n                    <Grid container spacing={1}>\n                        <Grid item>\n                            <UserIcon color='primary' />\n                        </Grid>\n                        <Grid item>\n                            {claimsObject.name}\n                        </Grid>\n                    </Grid>\n                    {claimsObject.claims && (\n                        <div>\n                            <Table className={classes.table}>\n                                <TableBody>\n                                    {claimsObject.claims.map((claim) => (\n                                        <TableRow hover>\n                                            <TableCell>{claim.name}</TableCell>\n                                            {claim.value ? (\n                                                <TableCell>{claim.value}</TableCell>\n                                            ) : (\n                                                <TableCell>Not Available</TableCell>\n                                            )}\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n                </div>\n            );\n        }\n        return (\n            <div>\n                <Typography className={classes.typography}>\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Subscriber.no.claims'\n                        defaultMessage='No subscriber claims data available'\n                    />\n                </Typography>\n            </div>\n        );\n    }\n\n\n    /**\n     *\n     */\n    render() {\n        const {\n            subscriptions, page, rowsPerPage, totalSubscription, rowsPerPageOptions, emptyColumnHeight,\n            subscriberClaims,\n        } = this.state;\n        const { classes, api } = this.props;\n        if (!subscriptions) {\n            return (\n                <Grid container direction='row' justify='center' alignItems='center'>\n                    <Grid item>\n                        <CircularProgress />\n                    </Grid>\n                </Grid>\n            );\n        }\n        const columns = [\n            {\n                name: 'subscriptionId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.applicationId',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.subscriber',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscriber'\n                        defaultMessage='Subscriber'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            return (\n                                <div>\n                                    <Tooltip\n                                        interactive\n                                        placement='top'\n                                        classes={{\n                                            tooltip: classes.InfoToolTip,\n                                        }}\n                                        title={(\n                                            <>\n                                                {subscriberClaims && (\n                                                    <div>\n                                                        {this.renderClaims(subscriberClaims[tableMeta.rowData[0]])}\n                                                    </div>\n                                                )}\n                                            </>\n                                        )}\n                                    >\n                                        <Grid container direction='row' alignItems='center' spacing={1}>\n                                            <Grid item>\n                                                <Typography>\n                                                    <InfoIcon color='action' />\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                {value}\n                                            </Grid>\n                                        </Grid>\n                                    </Tooltip>\n                                </div>\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n            {\n                name: 'applicationInfo.name',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.application'\n                        defaultMessage='Application'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'applicationInfo.description',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'applicationInfo.subscriptionCount',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'throttlingPolicy',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.throttling.tier'\n                        defaultMessage='Tier'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'subscriptionStatus',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.status'\n                        defaultMessage='Status'\n                    />\n                ),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'actions',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.actions'\n                        defaultMessage='Actions'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const status = tableMeta.rowData[7];\n                            const subscriptionId = tableMeta.rowData[0];\n                            return (\n                                <ScopeValidation\n                                    resourceMethod={resourceMethod.POST}\n                                    resourcePath={resourcePath.BLOCK_SUBSCRIPTION}\n                                >\n                                    {\n                                        this.getSubscriptionBlockingButtons(\n                                            status,\n                                            subscriptionId,\n                                        )\n                                    }\n                                </ScopeValidation>\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n            {\n                name: 'invoice',\n                label: (\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.Listing.column.header.subscription.invoice'\n                        defaultMessage='Invoice'\n                    />\n                ),\n                options: {\n                    sort: false,\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const throttlingPolicy = tableMeta.rowData[6];\n                            const subscriptionId = tableMeta.rowData[0];\n                            return (\n                                <Invoice\n                                    subscriptionId={subscriptionId}\n                                    isNotAuthorized={this.isNotCreator && this.isNotPublisher}\n                                    isMonetizedUsagePolicy={\n                                        this.isMonetizedPolicy(throttlingPolicy)\n                                    }\n                                    api={api}\n                                />\n                            );\n                        }\n                        return null;\n                    },\n                },\n            },\n        ];\n\n        const options = {\n            title: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            elevation: 1,\n            customToolbar: false,\n            search: false,\n            selectableRows: 'none',\n            rowsPerPageOptions: [5, 10, 25, 50, 100],\n            customFooter: () => {\n                return (\n                    <TablePagination\n                        rowsPerPageOptions={rowsPerPageOptions}\n                        colSpan={6}\n                        count={totalSubscription}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onChangePage={this.handleChangePage}\n                        onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                        ActionsComponent={SubscriptionTablePagination}\n                    />\n                );\n            },\n        };\n        const subMails = {};\n        const emails = subscriberClaims && Object.entries(subscriberClaims).map(([, v]) => {\n            let email = null;\n            if (!subMails[v.name]) {\n                email = v.claims.find((claim) => claim.URI === 'http://wso2.org/claims/emailaddress').value;\n                subMails[v.name] = email;\n            }\n            return email;\n        }).reduce((a, b) => {\n            return b !== null ? `${a || ''},${b}` : a;\n        });\n        let names = null;\n        if (subMails) {\n            Object.entries(subMails).map(([k, v]) => {\n                if (v) {\n                    if (names === null) {\n                        names = k;\n                    } else {\n                        names = `${names}, ${k}`;\n                    }\n                }\n                return null;\n            });\n        }\n        const Tip = names ? React.Fragment : Tooltip;\n        return (\n            <>\n                <div className={classes.heading}>\n                    <Typography variant='h4'>\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsTable.manage.subscriptions'\n                            defaultMessage='Manage Subscriptions'\n                        />\n                        {'   '}\n                        {subscriptions.length > 0 && (\n                            <Tip title='No contact details' placement='top'>\n                                <span>\n                                    <Button\n                                        target='_blank'\n                                        rel='noopener'\n                                        href={`mailto:?subject=Message from the API Publisher&cc=${emails}`\n                                            + `&body=Hi ${names},`}\n                                        size='small'\n                                        disabled={!names}\n                                        variant='outlined'\n                                    >\n                                        Contact Subscribers\n                                    </Button>\n                                </span>\n                            </Tip>\n                        )}\n                    </Typography>\n                    <Typography variant='caption' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.SubscriptionsTable.sub.heading'\n                            defaultMessage='Manage subscriptions of the API'\n                        />\n                    </Typography>\n                </div>\n                <Paper elevation={0}>\n                    {subscriptions.length > 0 ? (\n                        <div>\n                            <MUIDataTable title='' data={subscriptions} columns={columns} options={options} />\n                        </div>\n                    )\n                        : (\n                            <div className={classes.noDataMessage} style={{ height: rowsPerPage * emptyColumnHeight }}>\n                                <FormattedMessage\n                                    id='Apis.Details.Subscriptions.SubscriptionsTable.no.subscriptions'\n                                    defaultMessage='No subscriptions data available'\n                                />\n                            </div>\n                        )}\n                </Paper>\n            </>\n        );\n    }\n}\n\nSubscriptionsTable.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionsTable));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport API from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    subscriptionPoliciesPaper: {\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(2),\n    },\n    grid: {\n        margin: theme.spacing(1.25),\n    },\n    gridLabel: {\n        marginTop: theme.spacing(1.5),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n});\n\n/**\n * Manage subscription policies of the API\n * */\nclass SubscriptionPoliciesManage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subscriptionPolicies: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        API.policies('subscription')\n            .then((res) => {\n                this.setState({ subscriptionPolicies: res.body.list });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n            });\n    }\n\n    /**\n     * Handle onChange of selected subsription policies\n     *\n     * @param event onChange event\n     */\n    handleChange(event) {\n        const { name, checked } = event.target;\n        const { setPolices, policies } = this.props;\n        let newSelectedPolicies = [...policies];\n        if (checked) {\n            newSelectedPolicies.push(name);\n        } else {\n            newSelectedPolicies = policies.filter((policy) => policy !== name);\n        }\n        setPolices(newSelectedPolicies);\n    }\n\n    render() {\n        const { classes, api, policies } = this.props;\n        const { subscriptionPolicies } = this.state;\n\n        return (\n            <>\n                <Typography variant='h4'>\n                    <FormattedMessage\n                        id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.business.plans'\n                        defaultMessage='Business Plans'\n                    />\n                </Typography>\n                {api.apiType === API.CONSTS.APIProduct\n                    ? (\n                        <Typography variant='caption' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.APIProduct.sub.heading'\n                                defaultMessage='Attach business plans to API'\n                            />\n                        </Typography>\n                    )\n                    : (\n                        <Typography variant='caption' gutterBottom>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.SubscriptionPoliciesManage.sub.heading'\n                                defaultMessage='Attach business plans to API'\n                            />\n                        </Typography>\n                    )}\n                <Paper className={classes.subscriptionPoliciesPaper}>\n                    <FormControl className={classes.formControl}>\n                        <FormGroup>\n                            { subscriptionPolicies && Object.entries(subscriptionPolicies).map((value) => (\n                                <FormControlLabel\n                                    key={value[1].name}\n                                    control={(\n                                        <Checkbox\n                                            disabled={isRestricted(['apim:api_publish', 'apim:api_create'], api)}\n                                            color='primary'\n                                            checked={policies.includes(value[1].name)}\n                                            onChange={(e) => this.handleChange(e)}\n                                            name={value[1].name}\n                                        />\n                                    )}\n                                    label={value[1].name + ' : ' + value[1].description}\n                                />\n                            ))}\n                        </FormGroup>\n                    </FormControl>\n                </Paper>\n            </>\n        );\n    }\n}\n\nSubscriptionPoliciesManage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.array }).isRequired,\n    setPolices: PropTypes.func.isRequired,\n    policies: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SubscriptionPoliciesManage));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Chip from '@material-ui/core/Chip';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: 1,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n}));\n\n/**\n * Renders the input component\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    InputProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n};\n\n/**\n * Renders the suggestion component\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, tenantList,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n    const isSelected = (tenantList || '').indexOf(suggestion) > -1;\n\n    return (\n        <MenuItem\n            {...itemProps}\n            key={suggestion}\n            selected={isHighlighted}\n            component='div'\n            style={{\n                fontWeight: isSelected ? 500 : 400,\n            }}\n        >\n            {suggestion}\n        </MenuItem>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n    suggestion: PropTypes.string.isRequired,\n};\n\n/**\n * Gets suggestion list\n */\nfunction getSuggestions(value, suggestions, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : suggestions.filter((suggestion) => {\n            const keep = count < 15 && suggestion.slice(0, inputLength).toLowerCase() === inputValue;\n            if (keep) {\n                count += 1;\n            }\n            return keep;\n        });\n}\n\n/**\n * Downshift selection component\n */\nfunction DownshiftMultiple(props) {\n    const { tenantList, setTenantList } = props;\n    const { classes, suggestions } = props;\n    const [inputValue, setInputValue] = React.useState('');\n\n    function handleKeyDown(event) {\n        if (tenantList.length && !inputValue.length && event.key === 'Backspace') {\n            setTenantList(tenantList.slice(0, tenantList.length - 1));\n        }\n    }\n\n    function handleInputChange(event) {\n        setInputValue(event.target.value);\n    }\n\n    function handleChange(item) {\n        let newSelectedItem = [...tenantList];\n        if (newSelectedItem.indexOf(item) === -1) {\n            newSelectedItem = [...newSelectedItem, item];\n        }\n        setInputValue('');\n        setTenantList(newSelectedItem);\n    }\n\n    const handleDelete = (item) => () => {\n        const newSelectedItem = [...tenantList];\n        newSelectedItem.splice(newSelectedItem.indexOf(item), 1);\n        setTenantList(newSelectedItem);\n    };\n\n\n    return (\n        <Downshift\n            id='downshift-multiple'\n            inputValue={inputValue}\n            onChange={handleChange}\n            tenantList={tenantList}\n        >\n            {({\n                getInputProps,\n                getItemProps,\n                getLabelProps,\n                isOpen,\n                inputValue: inputValue2,\n                tenantList: tenantList2,\n                highlightedIndex,\n            }) => {\n                const {\n                    onBlur, onChange, onFocus, ...inputProps\n                } = getInputProps({\n                    onKeyDown: handleKeyDown,\n                    placeholder: 'Type and select tenants from the suggested list',\n                });\n\n                return (\n                    <div className={classes.container}>\n                        {renderInput({\n                            fullWidth: true,\n                            classes,\n                            label: 'Tenants',\n                            InputLabelProps: getLabelProps(),\n                            InputProps: {\n                                startAdornment: tenantList.map((item) => (\n                                    <Chip\n                                        key={item}\n                                        tabIndex={-1}\n                                        label={item}\n                                        className={classes.chip}\n                                        onDelete={handleDelete(item)}\n                                    />\n                                )),\n                                onBlur,\n                                onChange: (event) => {\n                                    handleInputChange(event);\n                                    onChange(event);\n                                },\n                                onFocus,\n                            },\n                            inputProps,\n                        })}\n\n                        {isOpen ? (\n                            <Paper className={classes.paper} square>\n                                {getSuggestions(inputValue2, suggestions).map((suggestion, index) => renderSuggestion({\n                                    suggestion,\n                                    index,\n                                    itemProps: getItemProps({ item: suggestion }),\n                                    highlightedIndex,\n                                    tenantList: tenantList2,\n                                }))}\n                            </Paper>\n                        ) : null}\n                    </div>\n                );\n            }}\n        </Downshift>\n    );\n}\n\nDownshiftMultiple.propTypes = {\n    classes: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    suggestions: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    api: PropTypes.shape({\n        policies: PropTypes.array,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n\n/**\n * Gets tenant list in order to populate suggestions list\n */\nexport default function IntegrationDownshift(props) {\n    const classes = useStyles();\n    const [suggestions, setsuggestions] = useState({});\n    const { setTenantList, api, tenantList } = props;\n\n    const restApi = new API();\n\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                const tenants = result.body.list;\n                const newSuggestions = tenants.map((tenant) => { return tenant.domain; });\n                setsuggestions(newSuggestions);\n            });\n    }, []);\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.divider} />\n            <DownshiftMultiple\n                classes={classes}\n                suggestions={suggestions}\n                tenantList={tenantList}\n                setTenantList={setTenantList}\n                api={api}\n            />\n            <div className={classes.divider} />\n        </div>\n    );\n}\n\nIntegrationDownshift.propTypes = {\n    setTenantList: PropTypes.shape({\n        type: PropTypes.string,\n        inputType: PropTypes.string,\n    }).isRequired,\n    api: PropTypes.shape({\n        policies: PropTypes.array,\n    }).isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport Select from '@material-ui/core/Select';\nimport TenantAutocomplete from 'AppComponents/Apis/Details/Subscriptions/TenantAutocomplete';\nimport { isRestricted } from 'AppData/AuthManager';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 400,\n    },\n    textControl: {\n        margin: theme.spacing(1),\n        minWidth: 300,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n    subscriptionAvailabilityPaper: {\n        marginTop: theme.spacing(2),\n        paddingLeft: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    grid: {\n        display: 'flex',\n        margin: theme.spacing(1.25),\n    },\n    gridLabel: {\n        marginTop: theme.spacing(3.5),\n    },\n    saveButton: {\n        marginTop: theme.spacing(2),\n    },\n    heading: {\n        marginTop: theme.spacing(3),\n    },\n    tenantsList: {\n        height: theme.spacing(12),\n    },\n}));\n\n/**\n * Allows user to select API availability for tenants\n * @export\n * @returns {React.Component} @inheritdoc\n */\nexport default function SimpleSelect(props) {\n    const classes = useStyles();\n    const {\n        api, setAvailability, tenantList, setTenantList,\n    } = props;\n    let currentAvailability;\n    if (api.subscriptionAvailability === null || api.subscriptionAvailability === 'CURRENT_TENANT') {\n        currentAvailability = 'currentTenant';\n    } else if (api.subscriptionAvailability === 'ALL_TENANTS') {\n        currentAvailability = 'allTenants';\n    } else if (api.subscriptionAvailability === 'SPECIFIC_TENANTS') {\n        currentAvailability = 'specificTenants';\n    }\n    const [values, setValues] = React.useState({\n        availability: currentAvailability,\n    });\n    const inputLabel = React.useRef(null);\n    const [labelWidth, setLabelWidth] = React.useState(0);\n    const isSpecificTenants = values.availability === 'specificTenants';\n    const isUIElementDisabled = isRestricted(['apim:api_publish', 'apim:api_create'], api);\n\n    React.useEffect(() => {\n        setLabelWidth(inputLabel.current.offsetWidth);\n    }, []);\n\n    /**\n     * Handle onchange for the subscription availability dropdown\n     * @param {string} value the new value selected for subscription availability\n     */\n    function subscriptionAvailableTenants(value) {\n        let availabilityValue;\n\n        setValues({\n            ...values,\n            availability: value,\n        });\n\n        if (value === 'currentTenant') {\n            availabilityValue = 'CURRENT_TENANT';\n            setTenantList([]);\n        } else if (value === 'allTenants') {\n            availabilityValue = 'ALL_TENANTS';\n            setTenantList([]);\n        } else if (value === 'specificTenants') {\n            availabilityValue = 'SPECIFIC_TENANTS';\n        }\n        setAvailability({\n            subscriptionAvailability: availabilityValue,\n        });\n    }\n\n    return (\n        <Grid item xs={12} md={12} lg={12}>\n            <Typography variant='h4' className={classes.heading}>\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionAvailability.subscription.availability'\n                    defaultMessage='Subscription Availability'\n                />\n            </Typography>\n            <Typography variant='caption' gutterBottom>\n                <FormattedMessage\n                    id='Apis.Details.Subscriptions.SubscriptionAvailability.sub.heading'\n                    defaultMessage='Make subscriptions available to tenants'\n                />\n            </Typography>\n            <Paper className={classes.subscriptionAvailabilityPaper}>\n                <form className={classes.root} autoComplete='off' onSubmit={(e) => { e.preventDefault(); }}>\n                    <Grid container xs={12} spacing={1} className={classes.grid}>\n                        <Grid item xs={10}>\n                            <FormControl\n                                variant='outlined'\n                                className={classes.formControl}\n                                disabled={isUIElementDisabled}\n                            >\n                                <InputLabel ref={inputLabel} htmlFor='outlined-age-simple' />\n                                <Select\n                                    value={values.availability}\n                                    onChange={({ target: { value } }) => {\n                                        subscriptionAvailableTenants(value);\n                                    }}\n                                    labelWidth={labelWidth}\n                                    displayEmpty\n                                    name='availability'\n                                    inputProps={{\n                                        name: 'availability',\n                                        id: 'outlined-availabi;ity-simple',\n                                    }}\n                                >\n                                    <MenuItem value='currentTenant'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.current.tenant.only'\n                                            defaultMessage='Available to current tenant only'\n                                        />\n                                    </MenuItem>\n                                    <MenuItem value='allTenants'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.all.tenants'\n                                            defaultMessage='Available to all the tenants'\n                                        />\n                                    </MenuItem>\n                                    <MenuItem value='specificTenants'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Subscriptions.SubscriptionAvailability.specific.tenants'\n                                            defaultMessage='Available to specific tenants'\n                                        />\n                                    </MenuItem>\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        {isSpecificTenants ? (\n                            <Grid item xs={8} className={classes.tenantsList}>\n                                <TenantAutocomplete setTenantList={setTenantList} tenantList={tenantList} api={api} />\n                            </Grid>\n                        ) : <Grid item xs={8} />}\n                    </Grid>\n                </form>\n            </Paper>\n        </Grid>\n    );\n}\nSimpleSelect.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    api: PropTypes.shape({ policies: PropTypes.array }).isRequired,\n    setAvailability: PropTypes.func.isRequired,\n    setTenantList: PropTypes.func.isRequired,\n    tenantList: PropTypes.shape([]).isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CircularProgress, Grid } from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api';\nimport CONSTS from 'AppData/Constants';\nimport Progress from 'AppComponents/Shared/Progress';\nimport { FormattedMessage } from 'react-intl';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport SubscriptionsTable from './SubscriptionsTable';\nimport SubscriptionPoliciesManage from './SubscriptionPoliciesManage';\nimport SubscriptionAvailability from './SubscriptionAvailability';\n\nconst useStyles = makeStyles((theme) => ({\n    buttonSection: {\n        marginTop: theme.spacing(2),\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\n/**\n * Subscriptions component\n *\n * @class Subscriptions\n * @extends {Component}\n */\nfunction Subscriptions(props) {\n    const classes = useStyles();\n    const [api] = useAPI();\n    const { updateAPI } = props;\n    const restApi = new API();\n    const [tenants, setTenants] = useState(null);\n    const [policies, setPolices] = useState({});\n    const [availability, setAvailability] = useState({ subscriptionAvailability: api.subscriptionAvailability });\n    const [tenantList, setTenantList] = useState(api.subscriptionAvailableTenants);\n    const [subscriptions, setSubscriptions] = useState(null);\n    const [updateInProgress, setUpdateInProgress] = useState(false);\n    const { settings } = useAppContext();\n\n    /**\n     * Save subscription information (policies, subscriptionAvailability, subscriptionAvailableTenants)\n     */\n    function saveAPI() {\n        setUpdateInProgress(true);\n        const { subscriptionAvailability } = availability;\n        const newApi = {\n            policies,\n            subscriptionAvailability,\n            subscriptionAvailableTenants: tenantList,\n        };\n        updateAPI(newApi)\n            .then(() => {\n                Alert.info('Subscription configurations updated successfully');\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error('Error occurred while updating subscription configurations');\n            }).finally(() => {\n                setUpdateInProgress(false);\n            });\n    }\n\n    useEffect(() => {\n        restApi.getTenantsByState(CONSTS.TENANT_STATE_ACTIVE)\n            .then((result) => {\n                setTenants(result.body.count);\n            });\n        restApi.subscriptions(api.id)\n            .then((result) => {\n                setSubscriptions(result.body.count);\n            });\n        setPolices([...api.policies]);\n    }, []);\n\n    if (typeof tenants !== 'number' || typeof subscriptions !== 'number') {\n        return (\n            <Grid container direction='row' justify='center' alignItems='center'>\n                <Grid item>\n                    <CircularProgress />\n                </Grid>\n            </Grid>\n        );\n    }\n    return (\n        <>\n            <SubscriptionPoliciesManage api={api} policies={policies} setPolices={setPolices} />\n            {tenants !== 0 && settings.crossTenantSubscriptionEnabled && (\n                <SubscriptionAvailability\n                    api={api}\n                    availability={availability}\n                    setAvailability={setAvailability}\n                    tenantList={tenantList}\n                    setTenantList={setTenantList}\n                />\n            )}\n            { updateInProgress && <Progress /> }\n            <Grid\n                container\n                direction='row'\n                alignItems='flex-start'\n                spacing={1}\n                className={classes.buttonSection}\n            >\n                <Grid item>\n                    <Button\n                        type='submit'\n                        variant='contained'\n                        color='primary'\n                        onClick={() => saveAPI()}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.Subscriptions.Subscriptions.save'\n                            defaultMessage='Save'\n                        />\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Link to={'/apis/' + api.id + '/overview'}>\n                        <Button>\n                            <FormattedMessage\n                                id='Apis.Details.Subscriptions.Subscriptions.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n            <SubscriptionsTable api={api} />\n        </>\n    );\n}\n\nSubscriptions.propTypes = {\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withStyles(makeStyles)(Subscriptions);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\n\nconst styles = (theme) => ({\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n        marginTop: theme.spacing(2),\n    },\n    textField: {\n        marginTop: 0,\n        width: '88%',\n    },\n    category: {\n        width: '12%',\n    },\n});\n\n/**\n   * Display a component to add a new comment\n   * @class CommmentAdd\n   * @extends {React.Component}\n   */\nclass CommentAdd extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: 'General',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleClickAddComment = this.handleClickAddComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.filterCommentToAddReply = this.filterCommentToAddReply.bind(this);\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentAdd\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to add a new comment when cancelled\n     * @memberof CommentAdd\n     */\n    handleClickCancel() {\n        const { toggleShowReply } = this.props;\n        toggleShowReply();\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentAdd\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Filters the comment to add the reply\n     * @memberof CommentAdd\n     */\n    filterCommentToAddReply(commentToFilter) {\n        const { parentCommentId } = this.props;\n        return commentToFilter.commentId === parentCommentId;\n    }\n\n    /**\n     * Handles adding a new comment\n     * @memberof CommentAdd\n     */\n    handleClickAddComment() {\n        const {\n            api, parentCommentId, allComments, toggleShowReply, commentsUpdate,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const apiId = api.id;\n        const comment = {\n            apiId: api.id,\n            category,\n            commentText: commentText.trim(),\n            parentCommentId,\n        };\n\n        // to check whether a string does not contain only white spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.addComment(apiId, comment)\n                .then((newComment) => {\n                    this.setState({ commentText: '', category: 'General' });\n                    const addedComment = newComment.body;\n                    if (parentCommentId === null) {\n                        allComments.push(addedComment);\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToAddReply);\n                        allComments[index].replies.push(addedComment);\n                        toggleShowReply();\n                    }\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error('Something went wrong while adding the comment');\n                    }\n                });\n        } else {\n            Alert.error('You cannot enter a blank comment');\n        }\n        this.setState({ currentLength: 0 });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentAdd\n     */\n    render() {\n        const { classes, cancelButton, theme } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <Grid container spacing={7} className={classes.contentWrapper}>\n\n                <Grid item xs zeroMinWidth>\n                    <FormControl className={classes.category}>\n                        <Select\n                            value={category}\n                            onChange={this.handleCategoryChange}\n                        >\n                            <MenuItem value='General'>General</MenuItem>\n                            <MenuItem value='Feature Request'>Feature Request</MenuItem>\n                            <MenuItem value='Bug Report'>Bug Report</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        id='standard-multiline-flexible'\n                        autoFocus\n                        multiline\n                        className={classes.textField}\n                        margin='normal'\n                        placeholder='Write a comment'\n                        inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                        value={commentText}\n                        onChange={this.inputChange}\n                    />\n                    <Typography className={classes.commentText} align='right'>\n                        {currentLength + '/' + theme.custom.maxCommentLength }\n                    </Typography>\n                    <Grid container spacing={2}>\n                        <Grid item>\n                            <Button variant='contained' color='primary' onClick={() => this.handleClickAddComment()}>\n                  Add Comment\n                            </Button>\n                        </Grid>\n                        {cancelButton\n                && (\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>Cancel</Button>\n                    </Grid>\n                )}\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCommentAdd.defaultProps = {\n    api: null,\n    parentCommentId: null,\n    toggleShowReply: null,\n    commentsUpdate: null,\n};\n\nCommentAdd.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    cancelButton: PropTypes.bool.isRequired,\n    api: PropTypes.instanceOf(Object),\n    parentCommentId: PropTypes.string,\n    toggleShowReply: PropTypes.func,\n    commentsUpdate: PropTypes.func,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentAdd);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\n\nconst styles = (theme) => ({\n    textField: {\n        marginTop: 0,\n        width: '87.5%',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n        marginTop: theme.spacing(2),\n    },\n    category: {\n        width: '12%',\n        marginRight: '0.5%',\n    },\n});\n\n/**\n * Display a component to edit a comment\n * @class CommmentEdit\n * @extends {React.Component}\n */\nclass CommentEdit extends React.Component {\n    /**\n     * Creates an instance of CommentEdit\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentEdit\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentText: '',\n            category: '',\n            currentLength: 0,\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.handleCategoryChange = this.handleCategoryChange.bind(this);\n        this.handleClickUpdateComment = this.handleClickUpdateComment.bind(this);\n        this.handleClickCancel = this.handleClickCancel.bind(this);\n        this.filterCommentToUpdate = this.filterCommentToUpdate.bind(this);\n        this.filterCommentToUpdateReply = this.filterCommentToUpdateReply.bind(this);\n    }\n\n    /**\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { comment } = this.props;\n        this.setState({\n            commentText: comment.commentText,\n            category: comment.category,\n            currentLength: comment.commentText.length,\n        });\n    }\n\n    /**\n     * Handles the comment text when input changes\n     * @param {Object} {target} target element\n     * @memberof CommentEdit\n     */\n    inputChange({ target }) {\n        this.setState({ commentText: target.value, currentLength: target.value.length });\n    }\n\n    /**\n     * Hides the component to edit a comment when cancelled\n     * @memberof CommentEdit\n     */\n    handleClickCancel() {\n        const { toggleShowEdit, commentsUpdate, allComments } = this.props;\n        toggleShowEdit();\n        commentsUpdate(allComments);\n    }\n\n    /**\n     * Handles category when the category is changed\n     * @param {any} event Drop down select event\n     * @memberof CommentEdit\n     */\n    handleCategoryChange(event) {\n        this.setState({ category: event.target.value });\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdate(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.commentId;\n    }\n\n    /**\n     * Filters the comment to update\n     * @memberof CommentAdd\n     */\n    filterCommentToUpdateReply(commentToFilter) {\n        const { comment } = this.props;\n        return commentToFilter.commentId === comment.parentCommentId;\n    }\n\n    /**\n     * Handles updating a comment\n     * @memberof CommentEdit\n     */\n    handleClickUpdateComment() {\n        const {\n            api, comment, allComments, toggleShowEdit, commentsUpdate,\n        } = this.props;\n        const { category, commentText } = this.state;\n        const Api = new API();\n        const apiId = api.id;\n        const commentToEdit = comment;\n        commentToEdit.commentText = commentText.trim();\n        commentToEdit.category = category;\n\n        // to check whether a string does not contain only whitehis spaces\n        if (comment.commentText.replace(/\\s/g, '').length) {\n            Api.updateComment(apiId, commentToEdit.commentId, commentToEdit)\n                .then((result) => {\n                    const updatedComment = result.body;\n                    if (commentToEdit.parentCommentId === undefined) {\n                        const index = allComments.findIndex(this.filterCommentToUpdate);\n                        allComments[index].category = updatedComment.category;\n                        allComments[index].commentText = updatedComment.commentText;\n                    } else {\n                        const index = allComments.findIndex(this.filterCommentToUpdateReply);\n                        const replyIndex = allComments[index].replies.findIndex(this.filterCommentToUpdate);\n                        allComments[index].replies[replyIndex] = updatedComment;\n                    }\n                    toggleShowEdit();\n                    commentsUpdate(allComments);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    if (error.response) {\n                        Alert.error(error.response.body.message);\n                    } else {\n                        Alert.error('Something went wrong while adding the comment');\n                    }\n                });\n        } else {\n            Alert.error('You cannot enter a blank comment');\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentEdit\n     */\n    render() {\n        const { classes, theme } = this.props;\n        const { category, commentText, currentLength } = this.state;\n        return (\n            <div>\n                <FormControl className={classes.category}>\n                    <Select value={category} onChange={this.handleCategoryChange}>\n                        <MenuItem value='General'>General</MenuItem>\n                        <MenuItem value='Feature Request'>Feature Request</MenuItem>\n                        <MenuItem value='Bug Report'>Bug Report</MenuItem>\n                    </Select>\n                </FormControl>\n                <TextField\n                    id='multiline-static'\n                    autoFocus\n                    multiline\n                    className={classes.textField}\n                    margin='normal'\n                    placeholder='Write a comment'\n                    inputProps={{ maxLength: theme.custom.maxCommentLength }}\n                    value={commentText}\n                    onChange={this.inputChange}\n                />\n                <Typography className={classes.commentText} align='right'>\n                    {currentLength + '/' + theme.custom.maxCommentLength}\n                </Typography>\n                <Grid container spacing={2}>\n                    <Grid item>\n                        <Button variant='contained' color='primary' onClick={() => this.handleClickUpdateComment()}>\n                            Save\n                        </Button>\n                    </Grid>\n                    <Grid item>\n                        <Button onClick={() => this.handleClickCancel()} className={classes.button}>\n                            Cancel\n                        </Button>\n                    </Grid>\n                </Grid>\n            </div>\n        );\n    }\n}\n\nCommentEdit.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    toggleShowEdit: PropTypes.func.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentEdit);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport { Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport AuthManager from 'AppData/AuthManager';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    time: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing(0.3),\n    },\n    verticalSpace: {\n        marginTop: theme.spacing(0.2),\n    },\n    disable: {\n        color: theme.custom.disableColor,\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n    },\n});\n\n/**\n * Component to display options of the comment\n * @class CommentOptions\n * @extends {React.Component}\n */\nclass CommentOptions extends React.Component {\n    /**\n     * Creates an instance of CommentAdd\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentAdd\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentOptions\n     */\n    showAddComment(index) {\n        const { editIndex, showAddComment } = this.props;\n        if (editIndex === -1) {\n            showAddComment(index);\n        }\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex, showEditComment } = this.props;\n        if (editIndex === -1) {\n            showEditComment(index);\n        }\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex, handleClickOpen } = this.props;\n        if (editIndex === -1) {\n            handleClickOpen(comment);\n        }\n    }\n\n    /**\n     * Returns the date and time in a particular format\n     * @param {any} timestamp Timestamp that has to be formatted\n     * @memberof CommentOptions\n     */\n    displayDate(timestamp) {\n        const localDate = new Date(timestamp);\n        const localDateString = localDate.toLocaleDateString(undefined, {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n        });\n        const localTimeString = localDate.toLocaleTimeString(undefined, {\n            hour: '2-digit',\n            minute: '2-digit',\n        });\n\n        return localDateString + ' ' + localTimeString;\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentOptions\n     */\n    render() {\n        const {\n            classes, comment, editIndex, index, theme,\n        } = this.props;\n        const canDelete = (comment.createdBy === AuthManager.getUser().name)\n            || (AuthManager.getUser().name === theme.custom.adminRole);\n        const canModify = comment.createdBy === AuthManager.getUser().name && comment.entryPoint === 'APIPublisher';\n        return (\n            <Grid container spacing={2} className={classes.verticalSpace} key={comment.commentId}>\n                {comment.parentCommentId == null && [\n                    <Grid item key='key-reply'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.showAddComment(index)}\n                        >\n                            Reply\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-reply-vertical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]}\n\n                {/* only the comment owner or admin can delete a comment */}\n                {canDelete && [\n                    <Grid item key='key-delete'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.handleClickOpen(comment)}\n                        >\n                            Delete\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-delete-vertical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]}\n\n                {/* only the comment owner can modify the comment from the exact entry point */}\n                {canModify && [\n                    <Grid item key='key-edit'>\n                        <Typography\n                            component='a'\n                            className={editIndex === -1 ? classes.link : classes.disable}\n                            onClick={() => this.showEditComment(index)}\n                        >\n                            Edit\n                        </Typography>\n                    </Grid>,\n                    <Grid item key='key-edit-verical-divider'>\n                        <VerticalDivider height={15} />\n                    </Grid>,\n                ]}\n                <Grid item className={classes.time}>\n                    <Typography component='a' variant='caption'>\n                        {this.displayDate(comment.createdTime)}\n                    </Typography>\n                </Grid>\n\n                {editIndex === index\n                    ? null\n                    : [\n                        <Grid item key='key-category-vertical-divider'>\n                            <VerticalDivider height={15} />\n                        </Grid>,\n                        <Grid item className={classes.time} key='key-category'>\n                            <Typography component='a' variant='caption'>\n                                {comment.category}\n                            </Typography>\n                        </Grid>,\n                    ]}\n            </Grid>\n        );\n    }\n}\n\nCommentOptions.defaultProps = {\n    showAddComment: null,\n};\n\nCommentOptions.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    editIndex: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n    comment: PropTypes.instanceOf(Object).isRequired,\n    handleClickOpen: PropTypes.func.isRequired,\n    showEditComment: PropTypes.func.isRequired,\n    showAddComment: PropTypes.func,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(CommentOptions);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport API from 'AppData/api';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing(1),\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(1),\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class CommentReply\n * @extends {React.Component}\n */\nclass CommentReply extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof CommentReply\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.keyCount = 0;\n        this.getKey = this.getKey.bind(this);\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n    }\n\n    /**\n     * Genereates unique keys for comments\n     * @memberof Comment\n     */\n    getKey() {\n        return this.keyCount++;\n    }\n\n    /**\n     * Filters the comments to be remained\n     * @memberof CommentReply\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId !== deleteComment.commentId;\n    }\n\n    /**\n     * Filters the comments to be deleted\n     * @memberof CommentReply\n     */\n    filterCommentToDelete(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId === deleteComment.parentCommentId;\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentReply\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof CommentReply\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof CommentReply\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof CommentReply\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} bool properies passed by the Confirm Dialog\n     * @memberof CommentReply\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof CommentReply\n     */\n    handleClickDeleteComment() {\n        const Api = new API();\n        const { deleteComment } = this.state;\n        const { api, allComments, commentsUpdate } = this.props;\n        const commentIdOfCommentToDelete = deleteComment.commentId;\n        const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        const apiId = api.id;\n        this.handleClose();\n\n        Api.deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                if (parentCommentIdOfCommentToDelete === undefined) {\n                    const remainingComments = allComments.filter(this.filterRemainingComments);\n                    commentsUpdate(remainingComments);\n                } else {\n                    const index = allComments.findIndex(this.filterCommentToDelete);\n                    const remainingReplies = allComments[index].replies.filter(this.filterRemainingComments);\n                    allComments[index].replies = remainingReplies;\n                    commentsUpdate(allComments);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error(`Something went wrong while deleting comment - ${commentIdOfCommentToDelete}`);\n                }\n            });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof CommentReply\n     */\n    render() {\n        const {\n            classes, comments, api, allComments, commentsUpdate,\n        } = this.props;\n        const { editIndex, openDialog } = this.state;\n        const props = { api, allComments, commentsUpdate };\n        return [\n            comments\n                && comments.map((comment, index) => (\n                    <div key={this.getKey()} className={classes.contentWrapper}>\n                        <Grid container spacing={2} className={classes.root}>\n                            <Grid item>\n                                <AccountBox className={classes.commentIcon} />\n                            </Grid>\n                            <Grid item xs zeroMinWidth>\n                                <Typography noWrap className={classes.commentText} variant='body1'>\n                                    {comment.createdBy}\n                                </Typography>\n\n                                {index !== editIndex && (\n                                    <Typography className={classes.commentText}>{comment.commentText}</Typography>\n                                )}\n\n                                {index === editIndex && (\n                                    <CommentEdit {...props} comment={comment} toggleShowEdit={this.handleShowEdit} />\n                                )}\n                                <CommentOptions\n                                    classes={classes}\n                                    comment={comment}\n                                    editIndex={editIndex}\n                                    index={index}\n                                    showAddComment={this.showAddComment}\n                                    handleClickOpen={this.handleClickOpen}\n                                    showEditComment={this.showEditComment}\n                                />\n                            </Grid>\n                        </Grid>\n                    </div>\n                )),\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel='Cancel'\n                title='Confirm Delete'\n                message='Are you sure you want to delete this comment?'\n                labelOk='Yes'\n                callback={this.handleConfirmDialog}\n                open={openDialog}\n            />,\n        ];\n    }\n}\n\nCommentReply.defaultProps = {\n    api: null,\n};\n\nCommentReply.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object),\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default withStyles(styles)(CommentReply);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Typography } from '@material-ui/core/';\nimport { withStyles } from '@material-ui/core/styles';\nimport AccountBox from '@material-ui/icons/AccountBox';\nimport Grid from '@material-ui/core/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport API from 'AppData/api';\nimport CommentAdd from './CommentAdd';\nimport CommentEdit from './CommentEdit';\nimport CommentOptions from './CommentOptions';\nimport CommentReply from './CommentReply';\n\nconst styles = (theme) => ({\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    commentIcon: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    commentText: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        marginTop: theme.spacing.unig,\n        width: '100%',\n        whiteSpace: 'pre-wrap',\n        overflowWrap: 'break-word',\n    },\n    root: {\n        marginTop: theme.spacing(2.5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n    },\n});\n\n/**\n * Display a particular comment and details\n * @class Comment\n * @extends {React.Component}\n */\nclass Comment extends React.Component {\n    /**\n     * Creates an instance of Comment\n     * @param {*} props properies passed by the parent element\n     * @memberof Comment\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            replyIndex: -1,\n            editIndex: -1,\n            deleteComment: null,\n        };\n        this.keyCount = 0;\n        this.getKey = this.getKey.bind(this);\n        this.handleClickDeleteComment = this.handleClickDeleteComment.bind(this);\n        this.handleShowEdit = this.handleShowEdit.bind(this);\n        this.handleShowReply = this.handleShowReply.bind(this);\n        this.handleClickOpen = this.handleClickOpen.bind(this);\n        this.showAddComment = this.showAddComment.bind(this);\n        this.showEditComment = this.showEditComment.bind(this);\n        this.handleConfirmDialog = this.handleConfirmDialog.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.filterRemainingComments = this.filterRemainingComments.bind(this);\n        this.filterCommentToDelete = this.filterCommentToDelete.bind(this);\n    }\n\n    /**\n     * Genereates unique keys for comments\n     * @memberof Comment\n     */\n    getKey() {\n        return this.keyCount++;\n    }\n\n    /**\n     * Filters the comments to be remained\n     * @memberof Comment\n     */\n    filterRemainingComments(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId !== deleteComment.commentId;\n    }\n\n    /**\n     * Filters the comments to be deleted\n     * @memberof Comment\n     */\n    filterCommentToDelete(commentToFilter) {\n        const { deleteComment } = this.state;\n        return commentToFilter.commentId === deleteComment.parentCommentId;\n    }\n\n    /**\n     * Shows the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showAddComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ replyIndex: index });\n        }\n    }\n\n    /**\n     * Shows the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    showEditComment(index) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ editIndex: index });\n        }\n    }\n\n    /**\n     * Hides the component to edit a comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowEdit() {\n        this.setState({ editIndex: -1 });\n    }\n\n    /**\n     * Hides the component to add a new comment\n     * @param {any} index Index of comment in the array\n     * @memberof Comment\n     */\n    handleShowReply() {\n        this.setState({ replyIndex: -1 });\n    }\n\n    /**\n     * Shows the confimation dialog to delete a comment\n     * @param {Object} comment Comment that has to be deleted\n     * @memberof Comment\n     */\n    handleClickOpen(comment) {\n        const { editIndex } = this.state;\n        if (editIndex === -1) {\n            this.setState({ deleteComment: comment, openDialog: true });\n        }\n    }\n\n    /**\n     * Hides the confimation dialog to delete a comment\n     * @memberof Comment\n     */\n    handleClose() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Handles the Confirm Dialog\n     * @param {*} bool properies passed by the Confirm Dialog\n     * @memberof Comment\n     */\n    handleConfirmDialog(message) {\n        if (message) {\n            this.handleClickDeleteComment();\n        } else {\n            this.handleClose();\n        }\n    }\n\n    /**\n     * Handles deleting a comment\n     * @memberof Comment\n     */\n    handleClickDeleteComment() {\n        const Api = new API();\n        const { deleteComment } = this.state;\n        const { api, allComments, commentsUpdate } = this.props;\n        const commentIdOfCommentToDelete = deleteComment.commentId;\n        const parentCommentIdOfCommentToDelete = deleteComment.parentCommentId;\n        const apiId = api.id;\n        this.handleClose();\n\n        Api.deleteComment(apiId, commentIdOfCommentToDelete)\n            .then(() => {\n                if (parentCommentIdOfCommentToDelete === undefined) {\n                    const remainingComments = allComments.filter(this.filterRemainingComments);\n                    commentsUpdate(remainingComments);\n                } else {\n                    const index = allComments.findIndex(this.filterCommentToDelete);\n                    const remainingReplies = allComments[index].replies.filter(this.filterRemainingComments);\n                    allComments[index].replies = remainingReplies;\n                    commentsUpdate(allComments);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error(`Something went wrong while deleting comment - ${commentIdOfCommentToDelete}`);\n                }\n            });\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comment\n     */\n    render() {\n        const {\n            classes, comments, api, allComments, commentsUpdate,\n        } = this.props;\n        const { editIndex, replyIndex, openDialog } = this.state;\n        const props = { api, allComments, commentsUpdate };\n        return [\n            comments\n                && comments\n                    .slice(0)\n                    .reverse()\n                    .map((comment, index) => (\n                        <div key={this.getKey()} className={classes.contentWrapper}>\n                            <Grid container spacing={2} className={classes.root}>\n                                <Grid item>\n                                    <AccountBox className={classes.commentIcon} />\n                                </Grid>\n                                <Grid item xs zeroMinWidth>\n                                    <Typography noWrap className={classes.commentText} variant='body1'>\n                                        {comment.createdBy}\n                                    </Typography>\n\n                                    {index !== editIndex && (\n                                        <Typography className={classes.commentText}>{comment.commentText}</Typography>\n                                    )}\n\n                                    {index === editIndex && (\n                                        <CommentEdit\n                                            {...props}\n                                            comment={comment}\n                                            toggleShowEdit={this.handleShowEdit}\n                                        />\n                                    )}\n\n                                    <CommentOptions\n                                        classes={classes}\n                                        comment={comment}\n                                        editIndex={editIndex}\n                                        index={index}\n                                        showAddComment={this.showAddComment}\n                                        handleClickOpen={this.handleClickOpen}\n                                        showEditComment={this.showEditComment}\n                                    />\n\n                                    {index === replyIndex && (\n                                        <CommentAdd\n                                            {...props}\n                                            parentCommentId={comment.commentId}\n                                            toggleShowReply={this.handleShowReply}\n                                            cancelButton\n                                        />\n                                    )}\n                                    {comment.replies.length !== 0 && (\n                                        <CommentReply {...props} classes={classes} comments={comment.replies} />\n                                    )}\n                                </Grid>\n                            </Grid>\n                        </div>\n                    )),\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel='Cancel'\n                title='Confirm Delete'\n                message='Are you sure you want to delete this comment?'\n                labelOk='Yes'\n                callback={this.handleConfirmDialog}\n                open={openDialog}\n            />,\n        ];\n    }\n}\n\nComment.defaultProps = {\n    api: null,\n};\n\nComment.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object),\n    allComments: PropTypes.instanceOf(Array).isRequired,\n    commentsUpdate: PropTypes.func.isRequired,\n    comments: PropTypes.instanceOf(Array).isRequired,\n};\n\nexport default withStyles(styles)(Comment);\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport ArrowDropDownCircleOutlined from '@material-ui/icons/ArrowDropDownCircleOutlined';\nimport ArrowDropDown from '@material-ui/icons/ArrowDropDown';\nimport { Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid/Grid';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n        paddingLeft: theme.spacing(2),\n        paddingTop: theme.spacing.unig,\n    },\n    titleSub: {\n        cursor: 'pointer',\n    },\n    link: {\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        cursor: 'pointer',\n    },\n    verticalSpace: {\n        marginTop: theme.spacing(0.2),\n    },\n    loadMoreLink: {\n        textDecoration: 'underline',\n    },\n});\n\n/**\n * Display a comment list\n * @class Comments\n * @extends {React.Component}\n */\nclass Comments extends Component {\n    /**\n     * Creates an instance of Comments\n     * @param {*} props properies passed by the parent element\n     * @memberof Comments\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            expanded: true,\n            allComments: [],\n            comments: [],\n            totalComments: 0,\n            startCommentsToDisplay: 0,\n        };\n        this.updateCommentList = this.updateCommentList.bind(this);\n        this.handleExpandClick = this.handleExpandClick.bind(this);\n        this.handleLoadMoreComments = this.handleLoadMoreComments.bind(this);\n    }\n\n    /**\n     * Gets all the comments for a particular API, when component mounts\n     * @memberof Comments\n     */\n    componentDidMount() {\n        const { api, theme } = this.props;\n        const Api = new API();\n        Api.getAllComments(api.id)\n            .then((result) => {\n                const commentList = result.body.list;\n                this.setState({ allComments: commentList, totalComments: commentList.length });\n                if (commentList.length < theme.custom.commentsLimit) {\n                    this.setState({ startCommentsToDisplay: 0, comments: commentList.slice(0, commentList.length) });\n                } else {\n                    this.setState({\n                        startCommentsToDisplay: commentList.length - theme.custom.commentsLimit,\n                        comments: commentList.slice(\n                            commentList.length - theme.custom.commentsLimit,\n                            commentList.length,\n                        ),\n                    });\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.message);\n                } else {\n                    Alert.error('Something went wrong while retrieving comments');\n                }\n            });\n    }\n\n    /**\n     * Handles loading the previous comments\n     * @memberof Comments\n     */\n    handleLoadMoreComments() {\n        const { totalComments, startCommentsToDisplay, allComments } = this.state;\n        const { theme } = this.props;\n        if (startCommentsToDisplay - theme.custom.commentsLimit <= 0) {\n            this.setState({ startCommentsToDisplay: 0, comments: allComments.slice(0, totalComments) });\n        } else {\n            this.setState({\n                startCommentsToDisplay: startCommentsToDisplay - theme.custom.commentsLimit,\n                comments: allComments.slice(startCommentsToDisplay - theme.custom.commentsLimit, totalComments),\n            });\n        }\n    }\n\n    /**\n     * Handles expanding the comment section\n     * @memberof Comments\n     */\n    handleExpandClick() {\n        const { expanded } = this.state;\n        this.setState({ expanded: !expanded });\n    }\n\n    /**\n     * Updates the comment list, This is passed through props to child component\n     * @param {any} comments Updated comment list\n     * @memberof Comments\n     */\n    updateCommentList(comments) {\n        const { startCommentsToDisplay, totalComments } = this.state;\n        const { theme } = this.props;\n        let newStart;\n        let difference;\n        let newTotal;\n        this.setState({ allComments: comments });\n        if (totalComments < theme.custom.commentsLimit) {\n            newTotal = comments.length;\n            this.setState({ startCommentsToDisplay: 0, totalComments: newTotal, comments });\n        } else if (totalComments <= comments.length) {\n            difference = comments.length - totalComments;\n            newStart = startCommentsToDisplay + difference;\n            newTotal = comments.length;\n            this.setState({\n                startCommentsToDisplay: newStart,\n                totalComments: newTotal,\n                comments: comments.slice(newStart, newTotal),\n            });\n        } else {\n            difference = totalComments - comments.length;\n            if (startCommentsToDisplay === 0) {\n                newStart = startCommentsToDisplay;\n            } else {\n                newStart = startCommentsToDisplay - difference;\n            }\n            newTotal = comments.length;\n            this.setState({\n                startCommentsToDisplay: newStart,\n                totalComments: newTotal,\n                comments: comments.slice(newStart, newTotal),\n            });\n        }\n    }\n\n    /**\n     * Render method of the component\n     * @returns {React.Component} Comment html component\n     * @memberof Comments\n     */\n    render() {\n        const { classes, api } = this.props;\n        const {\n            comments, expanded, allComments, startCommentsToDisplay, totalComments,\n        } = this.state;\n        return (\n            <div className={classes.contentWrapper}>\n                <div className={classes.root}>\n                    <ArrowDropDownCircleOutlined onClick={this.handleExpandClick} aria-expanded={expanded} />\n                    <Typography onClick={this.handleExpandClick} variant='h4' className={classes.titleSub}>\n                        Comments\n                    </Typography>\n                </div>\n                <Collapse in={expanded} timeout='auto' unmountOnExit>\n                    <CommentAdd\n                        api={api}\n                        commentsUpdate={this.updateCommentList}\n                        allComments={allComments}\n                        parentCommentId={null}\n                        cancelButton={false}\n                    />\n                    <Comment\n                        comments={comments}\n                        api={api}\n                        commentsUpdate={this.updateCommentList}\n                        allComments={allComments}\n                    />\n                    {startCommentsToDisplay !== 0 && (\n                        <div className={classes.contentWrapper}>\n                            <Grid container spacing={8} className={classes.root}>\n                                <Grid item>\n                                    <Typography\n                                        className={classes.verticalSpace}\n                                        variant='body1'\n                                        onClick={this.handleLoadMoreComments}\n                                    >\n                                        <a className={classes.link + ' ' + classes.loadMoreLink}>\n                                            Load Previous Comments\n                                        </a>\n                                    </Typography>\n                                </Grid>\n                                <Grid>\n                                    <ArrowDropDown\n                                        onClick={this.handleLoadMoreComments}\n                                        className={classes.link + ' ' + classes.verticalSpace}\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <Typography className={classes.verticalSpace} variant='body1'>\n                                        Showing comments\n                                        {totalComments + -startCommentsToDisplay + ' of ' + totalComments}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </div>\n                    )}\n                </Collapse>\n            </div>\n        );\n    }\n}\n\nComments.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    api: PropTypes.instanceOf(Object).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Comments);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport base64url from 'base64url';\nimport Error from '@material-ui/icons/Error';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Chip from '@material-ui/core/Chip';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { red } from '@material-ui/core/colors/';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Api from 'AppData/api';\nimport { isRestricted } from 'AppData/AuthManager';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    FormControl: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlLabel: {\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n    },\n    buttonSection: {\n        paddingTop: theme.spacing(3),\n    },\n    saveButton: {\n        marginRight: theme.spacing(1),\n    },\n    helpText: {\n        color: theme.palette.text.hint,\n        marginTop: theme.spacing(1),\n    },\n    extraPadding: {\n        paddingLeft: theme.spacing(2),\n    },\n    addNewOther: {\n        paddingTop: 40,\n    },\n    titleGrid: {\n        ' & .MuiGrid-item': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n    descriptionForm: {\n        marginTop: theme.spacing(1),\n    },\n    progress: {\n        marginLeft: theme.spacing(1),\n    },\n});\n\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass CreateScope extends React.Component {\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const valid = [];\n        valid.name = {\n            invalid: false,\n            error: '',\n        };\n        valid.description = {\n            invalid: false,\n            error: '',\n        };\n        this.state = {\n            apiScopes: null,\n            apiScope: {},\n            validRoles: [],\n            valid,\n            roleValidity: true,\n            invalidRoles: [],\n            scopeAddDisabled: false,\n        };\n        this.addScope = this.addScope.bind(this);\n        this.validateScopeName = this.validateScopeName.bind(this);\n        this.handleScopeNameInput = this.handleScopeNameInput.bind(this);\n        this.validateScopeDescription = this.validateScopeDescription.bind(this);\n        this.handleRoleAddition = this.handleRoleAddition.bind(this);\n        this.handleRoleDeletion = this.handleRoleDeletion.bind(this);\n    }\n\n\n    handleRoleDeletion = (role) => {\n        const { validRoles, invalidRoles } = this.state;\n        if (invalidRoles.includes(role)) {\n            const invalidRolesArray = invalidRoles.filter((existingRole) => existingRole !== role);\n            this.setState({ invalidRoles: invalidRolesArray });\n            if (invalidRolesArray.length === 0) {\n                this.setState({ roleValidity: true });\n            }\n        } else {\n            this.setState({ validRoles: validRoles.filter((existingRole) => existingRole !== role) });\n        }\n    };\n\n    handleRoleAddition(role) {\n        const { validRoles, invalidRoles } = this.state;\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise\n            .then(() => {\n                this.setState({\n                    roleValidity: true,\n                    validRoles: [...validRoles, role],\n                });\n            })\n            .catch((error) => {\n                if (error.status === 404) {\n                    this.setState({\n                        roleValidity: false,\n                        invalidRoles: [...invalidRoles, role],\n                    });\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating role ' + error);\n                }\n            });\n    }\n\n    validateScopeDescription({ target: { id, value } }) {\n        const { valid, apiScope } = this.state;\n        const { intl } = this.props;\n        apiScope[id] = value;\n        if (value && value.length !== '' && value.length >= 512) {\n            valid[id].invalid = true;\n            valid[id].error = intl.formatMessage({\n                id: 'Scopes.Create.Scope.description.length.exceeded',\n                defaultMessage: 'Exceeds maximum length limit of 512 characters',\n            });\n        } else {\n            valid[id].invalid = false;\n            valid[id].error = '';\n        }\n        this.setState({\n            valid,\n            apiScope,\n        });\n    }\n\n    validateScopeName(id, value) {\n        const { valid, apiScope } = this.state;\n        const {\n            api: { scopes },\n        } = this.props;\n\n        apiScope[id] = value;\n        valid[id].invalid = !(value && value.length > 0);\n        // length validation\n        if (valid[id].invalid) {\n            valid[id].error = 'Scope name cannot be empty';\n        }\n        valid[id].invalid = !(value && value.length <= 60);\n        if (valid[id].invalid) {\n            valid[id].error = 'Scope name cannot be more than 60 characters';\n        }\n\n        if (/\\s/.test(value)) {\n            valid[id].invalid = true;\n            valid[id].error = 'Scope name cannot have spaces';\n        }\n\n        const exist = scopes.find((scope) => {\n            return scope.name === value;\n        });\n        if (!valid[id].invalid && exist) {\n            valid[id].invalid = true;\n            valid[id].error = 'Scope name already exist';\n        }\n        if (!valid[id].invalid && /[!@#$%^&*(),?\"{}[\\]|<>\\t\\n]|(^apim:)/i.test(value)) {\n            valid[id].invalid = true;\n            valid[id].error = 'Field contains special characters';\n        }\n        if (!valid[id].invalid) {\n            const promise = APIValidation.scope.validate(base64url.encode(value));\n            promise\n                .then(() => {\n                    valid[id].invalid = true;\n                    valid[id].error = 'Scope name is already used by another API';\n                    this.setState({\n                        valid,\n                    });\n                })\n                .catch((error) => {\n                    if (error.status === 404) {\n                        valid[id].invalid = false;\n                        valid[id].error = '';\n                        this.setState({\n                            valid,\n                        });\n                    } else {\n                        Alert.error('Error when validating scope: ' + value);\n                        console.error('Error when validating scope ' + error);\n                    }\n                });\n        }\n        if (!valid[id].invalid) {\n            valid[id].error = '';\n        }\n        this.setState({\n            valid,\n            apiScope,\n        });\n        return valid[id].invalid;\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    addScope() {\n        const {\n            intl, api, history, updateAPI,\n        } = this.props;\n        const urlPrefix = api.apiType === 'APIProduct' ? 'api-products' : 'apis';\n        if (this.validateScopeName('name', this.state.apiScope.name)) {\n            // return status of the validation\n            return;\n        }\n        const scope = this.state.apiScope;\n        scope.bindings = this.state.validRoles;\n        const scopes = api.scopes.map((aScope) => {\n            return aScope;\n        });\n        scopes.push({\n            scope,\n            shared: false,\n        });\n        const updateProperties = { scopes };\n        const promisedApiUpdate = updateAPI(updateProperties);\n        this.setState({ scopeAddDisabled: true });\n        promisedApiUpdate\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Scopes.CreateScope.scope.added.successfully',\n                    defaultMessage: 'Scope added successfully',\n                }));\n                const { apiScopes } = this.state;\n                const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n                history.push(redirectURL);\n                this.setState({\n                    apiScopes,\n                    apiScope: {},\n                    validRoles: [],\n                });\n            })\n            .catch((error) => {\n                const { response } = error;\n                if (response.body) {\n                    const { description } = response.body;\n                    Alert.error(description);\n                }\n            })\n            .finally(() => {\n                this.setState({ scopeAddDisabled: false });\n            });\n    }\n\n    handleScopeNameInput({ target: { id, value } }) {\n        this.validateScopeName(id, value);\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof CreateScope\n     */\n    render() {\n        const { classes, api } = this.props;\n        const urlPrefix = api.apiType === 'APIProduct' ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        const {\n            roleValidity, validRoles, invalidRoles, scopeAddDisabled,\n        } = this.state;\n\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5} className={classes.titleGrid}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={url} className={classes.titleLink}>\n                                    <Typography variant='h4'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                            defaultMessage='Scopes'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h4'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.CreateScope.create.new.scope'\n                                        defaultMessage='Create New Scope'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0} className={classes.root}>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='name'\n                                        label='Name'\n                                        placeholder='Scope Name'\n                                        error={this.state.valid.name.invalid}\n                                        helperText={\n                                            this.state.valid.name.invalid ? (\n                                                this.state.valid.name.error\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.short.description.name'\n                                                    defaultMessage='Enter Scope Name ( E.g.,: creator )'\n                                                />\n                                            )\n                                        }\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={this.state.apiScope.name || ''}\n                                        onChange={this.handleScopeNameInput}\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal' classes={{ root: classes.descriptionForm }}>\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        placeholder='Short description about the scope'\n                                        error={this.state.valid.description.invalid}\n                                        helperText={\n                                            this.state.valid.description.invalid ? (\n                                                this.state.valid.description.error\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.description.about.the.scope'\n                                                    defaultMessage='Short description about the scope'\n                                                />\n                                            )\n                                        }\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.validateScopeDescription}\n                                        value={this.state.apiScope.description || ''}\n                                        multiline\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <ChipInput\n                                        label='Roles'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant='outlined'\n                                        value={validRoles.concat(invalidRoles)}\n                                        alwaysShowPlaceholder={false}\n                                        placeholder='Enter roles and press Enter'\n                                        blurBehavior='clear'\n                                        InputProps={{\n                                            endAdornment: !roleValidity && (\n                                                <InputAdornment position='end'>\n                                                    <Error color='error' />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onAdd={this.handleRoleAddition}\n                                        error={!roleValidity}\n                                        helperText={\n                                            !roleValidity ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.Roles.Invalid'\n                                                    defaultMessage='Role is invalid'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.roles.help'\n                                                    defaultMessage='Enter a valid role and press `Enter`.'\n                                                />\n                                            )\n                                        }\n                                        chipRenderer={({ value }, key) => (\n                                            <Chip\n                                                key={key}\n                                                label={value}\n                                                onDelete={() => {\n                                                    this.handleRoleDeletion(value);\n                                                }}\n                                                style={{\n                                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                                    margin: '8px 8px 8px 0',\n                                                    float: 'left',\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.addScope}\n                                        disabled={\n                                            isRestricted(['apim:api_create'], api)\n                                            || this.state.valid.name.invalid\n                                            || invalidRoles.length !== 0\n                                            || scopeAddDisabled\n                                            || this.state.valid.description.invalid\n                                        }\n                                        className={classes.saveButton}\n                                    >\n                                        {scopeAddDisabled ? (\n                                            <>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.CreateScope.saving'\n                                                    defaultMessage='Saving'\n                                                />\n                                                <CircularProgress size={16} classes={{ root: classes.progress }} />\n                                            </>\n                                        ) : (\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.save'\n                                                defaultMessage='Save'\n                                            />\n                                        )}\n                                    </Button>\n                                    <Link to={url}>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.CreateScope.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nCreateScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nCreateScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withStyles(styles)(CreateScope));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport ChipInput from 'material-ui-chip-input';\nimport APIValidation from 'AppData/APIValidation';\nimport Chip from '@material-ui/core/Chip';\nimport { red } from '@material-ui/core/colors/';\nimport Icon from '@material-ui/core/Icon';\nimport base64url from 'base64url';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Error from '@material-ui/core/SvgIcon/SvgIcon';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        padding: 20,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(3),\n    },\n    titleLink: {\n        color: theme.palette.primary.main,\n        marginRight: theme.spacing(1),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    FormControl: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: `0 0 0 ${theme.spacing(1)}px`,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlLabel: {\n        marginBottom: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        fontSize: theme.typography.caption.fontSize,\n    },\n    buttonSection: {\n        paddingTop: theme.spacing(3),\n    },\n    saveButton: {\n        marginRight: theme.spacing(2),\n    },\n    helpText: {\n        color: theme.palette.text.hint,\n        marginTop: theme.spacing(1),\n    },\n    extraPadding: {\n        paddingLeft: theme.spacing(2),\n    },\n    addNewOther: {\n        paddingTop: 40,\n    },\n    titleGrid: {\n        ' & .MuiGrid-item': {\n            padding: 0,\n            margin: 0,\n        },\n    },\n});\n\n/**\n * Create new scopes for an API\n * @class CreateScope\n * @extends {Component}\n */\nclass EditScope extends React.Component {\n    constructor(props) {\n        super(props);\n        // this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        const { api, location } = this.props;\n        const thisScope = api.scopes.find((apiScope) => {\n            return apiScope.scope.name === location.state.scopeName;\n        });\n        this.state = {\n            apiScope: { ...thisScope },\n            validRoles: thisScope.scope.bindings,\n            invalidRoles: [],\n            roleValidity: true,\n        };\n        this.updateScope = this.updateScope.bind(this);\n        this.handleInputs = this.handleInputs.bind(this);\n        this.handleRoleDeletion = this.handleRoleDeletion.bind(this);\n        this.handleRoleAddition = this.handleRoleAddition.bind(this);\n        this.validateScopeDescription = this.validateScopeDescription.bind(this);\n    }\n\n\n    handleRoleDeletion = (role) => {\n        const { validRoles, invalidRoles } = this.state;\n        if (invalidRoles.includes(role)) {\n            const invalidRolesArray = invalidRoles.filter((existingRole) => existingRole !== role);\n            this.setState({ invalidRoles: invalidRolesArray });\n            if (invalidRolesArray.length === 0) {\n                this.setState({ roleValidity: true });\n            }\n        } else {\n            this.setState({ validRoles: validRoles.filter((existingRole) => existingRole !== role) });\n        }\n    };\n\n    /**\n     * Handle api scope addition event\n     * @param {any} event Button Click event\n     * @memberof Scopes\n     */\n    handleInputs(event) {\n        if (Array.isArray(event)) {\n            const { apiScope } = this.state;\n            apiScope.scope.bindings = event;\n            this.setState({\n                apiScope,\n            });\n        } else {\n            const input = event.target;\n            const { apiScope } = this.state;\n            apiScope[input.id] = input.value;\n            this.setState({\n                apiScope,\n            });\n        }\n    }\n\n    /**\n     * Add new scope\n     * @memberof Scopes\n     */\n    updateScope() {\n        const { apiScope, validRoles } = this.state;\n        const {\n            intl, api, history, updateAPI,\n        } = this.props;\n        const originalScope = apiScope.scope;\n        apiScope.scope = {\n            id: originalScope.id,\n            name: originalScope.name,\n            description: originalScope.description,\n            bindings: validRoles,\n        };\n        const urlPrefix = api.apiType === 'APIProduct' ? 'api-products' : 'apis';\n        const scopes = api.scopes.map((scopeObj) => {\n            if (scopeObj.scope.name === apiScope.scope.name) {\n                return apiScope;\n            } else {\n                return scopeObj;\n            }\n        });\n        const updateProperties = { scopes };\n        const promisedApiUpdate = updateAPI(updateProperties);\n        promisedApiUpdate.then(() => {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.Scopes.CreateScope.scope.updated.successfully',\n                defaultMessage: 'Scope updated successfully',\n            }));\n            const redirectURL = '/' + urlPrefix + '/' + api.id + '/scopes/';\n            history.push(redirectURL);\n        });\n        promisedApiUpdate.catch((error) => {\n            const { response } = error;\n            if (response.body) {\n                const { description } = response.body;\n                Alert.error(description);\n            }\n        });\n    }\n\n    handleRoleAddition(role) {\n        const { validRoles, invalidRoles } = this.state;\n        const promise = APIValidation.role.validate(base64url.encode(role));\n        promise\n            .then(() => {\n                this.setState({\n                    roleValidity: true,\n                    validRoles: [...validRoles, role],\n                });\n            })\n            .catch((error) => {\n                if (error.status === 404) {\n                    this.setState({\n                        roleValidity: false,\n                        invalidRoles: [...invalidRoles, role],\n                    });\n                } else {\n                    Alert.error('Error when validating role: ' + role);\n                    console.error('Error when validating role ' + error);\n                }\n            });\n    }\n\n    validateScopeDescription({ target: { value } }) {\n        const { apiScope } = this.state;\n        const originalScope = apiScope.scope;\n        apiScope.scope = {\n            id: originalScope.id,\n            name: originalScope.name,\n            description: value,\n            bindings: originalScope.bindings,\n        };\n        this.setState({\n            apiScope,\n        });\n    }\n\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const {\n            apiScope, roleValidity, validRoles, invalidRoles,\n        } = this.state;\n        const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n        const url = `/${urlPrefix}/${api.id}/scopes`;\n        return (\n            <Grid container spacing={3}>\n                <Grid item sm={12} md={12} />\n                {/*\n            Following two grids control the placement of whole create page\n            For centering the content better use `container` props, but instead used an empty grid item for flexibility\n             */}\n                <Grid item sm={0} md={0} lg={2} />\n                <Grid item sm={12} md={12} lg={8}>\n                    <Grid container spacing={5} className={classes.titleGrid}>\n                        <Grid item md={12}>\n                            <div className={classes.titleWrapper}>\n                                <Link to={url} className={classes.titleLink}>\n                                    <Typography variant='h4'>\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                            defaultMessage='Scopes'\n                                        />\n                                    </Typography>\n                                </Link>\n                                <Icon>keyboard_arrow_right</Icon>\n                                <Typography variant='h4'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Scopes.EditScope.update.scope'\n                                        defaultMessage='Update Scope'\n                                    />\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item md={12}>\n                            <Paper elevation={0} className={classes.root}>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='name'\n                                        label='Name'\n                                        fullWidth\n                                        margin='normal'\n                                        variant='outlined'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        value={apiScope.scope.name}\n                                        onChange={this.handleScopeNameInput}\n                                        disabled\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <TextField\n                                        id='description'\n                                        label='Description'\n                                        variant='outlined'\n                                        placeholder='Short description about the scope'\n                                        helperText={(\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.EditScope.short.description.about.the.scope'\n                                                defaultMessage='Short description about the scope'\n                                            />\n                                        )}\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        onChange={this.validateScopeDescription}\n                                        value={apiScope.scope.description || ''}\n                                        multiline\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal'>\n                                    <ChipInput\n                                        label='Roles'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        variant='outlined'\n                                        value={validRoles.concat(invalidRoles)}\n                                        alwaysShowPlaceholder={false}\n                                        placeholder='Enter roles and press Enter'\n                                        blurBehavior='clear'\n                                        InputProps={{\n                                            endAdornment: !roleValidity && (\n                                                <InputAdornment position='end'>\n                                                    <Error color='error' />\n                                                </InputAdornment>\n                                            ),\n                                        }}\n                                        onAdd={this.handleRoleAddition}\n                                        error={!roleValidity}\n                                        helperText={\n                                            !roleValidity ? (\n                                                <FormattedMessage\n                                                    id='Apis.Details.EditScopes.Roles.Invalid'\n                                                    defaultMessage='Role is invalid'\n                                                />\n                                            ) : (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Scopes.EditScopes.roles.help'\n                                                    defaultMessage='Enter a valid role and press `Enter`.'\n                                                />\n                                            )\n                                        }\n                                        chipRenderer={({ value }, key) => (\n                                            <Chip\n                                                key={key}\n                                                label={value}\n                                                onDelete={() => {\n                                                    this.handleRoleDeletion(value);\n                                                }}\n                                                style={{\n                                                    backgroundColor: invalidRoles.includes(value) ? red[300] : null,\n                                                    margin: '8px 8px 8px 0',\n                                                    float: 'left',\n                                                }}\n                                            />\n                                        )}\n                                    />\n                                </FormControl>\n                                <div className={classes.addNewOther}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        onClick={this.updateScope}\n                                        disabled={invalidRoles.length !== 0}\n                                        className={classes.saveButton}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.EditScope.update'\n                                            defaultMessage='Update'\n                                        />\n                                    </Button>\n                                    <Link to={url}>\n                                        <Button variant='contained'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Scopes.EditScope.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nEditScope.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    location: PropTypes.shape({\n        state: PropTypes.shape({\n            scopeName: PropTypes.string,\n        }),\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nEditScope.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(EditScope)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ConfirmDialog from 'AppComponents/Shared/ConfirmDialog';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Delete(props) {\n    const [api, updateAPI] = useAPI();\n    const { intl } = props;\n    const [open, setOpen] = useState(false);\n    const toggleOpen = () => {\n        setOpen(!open);\n    };\n    const deleteScope = () => {\n        const { scopeName } = props;\n        const ops = api.operations && JSON.parse(JSON.stringify(api.operations));\n        const operations = ops && ops.map((op) => {\n            // eslint-disable-next-line no-param-reassign\n            op.scopes = op.scopes.filter((scope) => {\n                return scope !== scopeName;\n            });\n            return op;\n        });\n        const scopes = api.scopes.filter((apiScope) => {\n            return apiScope.scope.name !== scopeName;\n        });\n        const updateProperties = { scopes, operations };\n        const setOpenLocal = setOpen; // Need to copy this to access inside the promise.then\n        const promisedUpdate = updateAPI(updateProperties);\n        promisedUpdate\n            .then(() => {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.api.scope.deleted.successfully',\n                    defaultMessage: 'API Scope deleted successfully!',\n                }));\n                setOpenLocal(!open);\n            })\n            .catch((errorResponse) => {\n                console.error(errorResponse);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Resources.Resources.something.went.wrong.while.updating.the.api',\n                    defaultMessage: 'Error occurred while updating API',\n                }));\n            });\n    };\n\n    const runAction = (confirm) => {\n        if (confirm) {\n            deleteScope();\n        } else {\n            setOpen(!open);\n        }\n    };\n    const { scopeName } = props;\n\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create'], api)}>\n                <Icon>delete_forever</Icon>\n                <FormattedMessage\n                    id='Apis.Details.Documents.Delete.document.delete'\n                    defaultMessage='Delete'\n                />\n            </Button>\n            <ConfirmDialog\n                key='key-dialog'\n                labelCancel={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.cancel'\n                        defaultMessage='Cancel'\n                    />\n                )}\n                title={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.delete.confirm'\n                        defaultMessage='Confirm Delete'\n                    />\n                )}\n                message={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.ok.confirm'\n                        defaultMessage='Are you sure you want to delete scope {scope} ?'\n                        values={{ scope: scopeName }}\n                    />\n                )}\n                labelOk={(\n                    <FormattedMessage\n                        id='Apis.Details.Documents.Delete.document.listing.label.ok.yes'\n                        defaultMessage='Yes'\n                    />\n                )}\n                callback={runAction}\n                open={open}\n            />\n        </div>\n    );\n}\nDelete.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    scopeName: PropTypes.string.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Delete));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Api from 'AppData/api';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { Link } from 'react-router-dom';\nimport { List, ListItem, ListItemText } from '@material-ui/core';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport MUIDataTable from 'mui-datatables';\nimport Icon from '@material-ui/core/Icon';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Grid from '@material-ui/core/Grid';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport Delete from './Delete';\n\nconst styles = (theme) => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n    },\n    buttonProgress: {\n        position: 'relative',\n        margin: theme.spacing(1),\n    },\n    headline: { paddingTop: theme.spacing(1.25), paddingLeft: theme.spacing(2.5) },\n    heading: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginBottom: theme.spacing(2),\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    button: {\n        textDecoration: 'none',\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n        marginLeft: theme.spacing(1),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    content: {\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`,\n    },\n    head: {\n        fontWeight: 200,\n    },\n});\n/**\n * Generate the scopes UI in API details page.\n * @class Scopes\n * @extends {React.Component}\n */\nclass Scopes extends React.Component {\n    /**\n     * Creates an instance of Scopes.\n     * @param {any} props Generic props\n     * @memberof Scopes\n     */\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.api_uuid = props.match.params.api_uuid;\n        this.api_data = props.api;\n    }\n\n    /**\n     * Render Scopes section\n     * @returns {React.Component} React Component\n     * @memberof Scopes\n     */\n    render() {\n        const {\n            intl, classes, api,\n        } = this.props;\n        const urlPrefix = (api.apiType === 'APIProduct') ? 'api-products' : 'apis';\n        const { scopes } = api;\n        const url = `/${urlPrefix}/${api.id}/scopes/create`;\n        const editUrl = `/${urlPrefix}/${api.id}/scopes/edit`;\n        const columns = [\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.name',\n                defaultMessage: 'Name',\n            }),\n            intl.formatMessage({\n                id: 'Apis.Details.Scopes.Scopes.table.header.description',\n                defaultMessage: 'Description',\n            }),\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const roles = value || [];\n                            return roles.join(',');\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.roles'\n                            defaultMessage='Roles'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (value && tableMeta.rowData) {\n                            return (\n                                <List component='nav' className={classes.root}>\n                                    {value.map((resource) => (\n                                        <ListItem button>\n                                            <ListItemText primary={resource} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.usages'\n                            defaultMessage='Used In'\n                        />\n                    ),\n                },\n            },\n            {\n                options: {\n                    customBodyRender: (value, tableMeta) => {\n                        if (tableMeta.rowData) {\n                            const scopeName = tableMeta.rowData[0];\n                            return (\n                                <table className={classes.actionTable}>\n                                    <tr>\n                                        <td>\n                                            <Link\n                                                to={\n                                                    !isRestricted(['apim:api_create'], api) && {\n                                                        pathname: editUrl,\n                                                        state: {\n                                                            scopeName,\n                                                        },\n                                                    }\n                                                }\n                                            >\n                                                <Button\n                                                    disabled={isRestricted(\n                                                        ['apim:api_create'],\n                                                        api,\n                                                    )}\n                                                >\n                                                    <Icon>edit</Icon>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Documents.Edit.documents.text.editor.edit'\n                                                        defaultMessage='Edit'\n                                                    />\n                                                </Button>\n                                            </Link>\n                                        </td>\n                                        <td>\n                                            <Delete scopeName={scopeName} api={api} isAPIProduct />\n                                        </td>\n                                    </tr>\n                                </table>\n                            );\n                        }\n                        return false;\n                    },\n                    filter: false,\n                    sort: false,\n                    label: (\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.table.header.actions'\n                            defaultMessage='Actions'\n                        />\n                    ),\n                },\n            },\n        ];\n        const options = {\n            filterType: 'multiselect',\n            selectableRows: false,\n            title: false,\n            filter: false,\n            sort: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n        };\n        const scopesList = api.scopes.filter((apiScope) => {\n            return !apiScope.shared;\n        }).map((apiScope) => {\n            const aScope = [];\n            aScope.push(apiScope.scope.name);\n            aScope.push(apiScope.scope.description);\n            aScope.push(apiScope.scope.bindings);\n            const resources = api.operations && api.operations\n                .filter((op) => {\n                    return op.scopes.includes(apiScope.scope.name);\n                })\n                .map((op) => {\n                    return op.target + ' ' + op.verb;\n                });\n            aScope.push(resources);\n            return aScope;\n        });\n\n        if (!scopes) {\n            return <Progress />;\n        }\n\n        if (scopes.length === 0) {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                                defaultMessage='Local Scopes'\n                            />\n                        </Typography>\n                        <Tooltip\n                            title={(\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.heading.scope.title.tooltip'\n                                    defaultMessage='Manage scopes that are local to this API'\n                                />\n                            )}\n                            placement='top-end'\n                            aria-label='Local Scopes'\n                        >\n                            <IconButton size='small' aria-label='delete'>\n                                <HelpOutlineIcon fontSize='small' />\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.create.scopes.title'\n                                    defaultMessage='Create API Local Scopes'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.scopes.enable.fine.gained.access.control'\n                                    defaultMessage={\n                                        'Scopes enable fine-grained access control to API resources'\n                                        + ' based on user roles.'\n                                    }\n                                />\n                            </Typography>\n                            <div className={classes.actions}>\n                                <Link to={!isRestricted(['apim:api_create'], api) && url}>\n                                    <Button\n                                        variant='contained'\n                                        color='primary'\n                                        className={classes.button}\n                                        disabled={isRestricted(['apim:api_create'], api)}\n                                    >\n                                        <FormattedMessage\n                                            id='Apis.Details.Scopes.Scopes.create.scopes.button'\n                                            defaultMessage='Create Scopes'\n                                        />\n                                    </Button>\n                                </Link>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            );\n        }\n\n        return (\n            <div className={classes.heading}>\n                <div className={classes.titleWrapper}>\n                    <Typography variant='h4' align='left' className={classes.mainTitle}>\n                        <FormattedMessage\n                            id='Apis.Details.Scopes.Scopes.heading.scope.heading'\n                            defaultMessage='Local Scopes'\n                        />\n                    </Typography>\n                    <Tooltip\n                        title={(\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.title.tooltip2'\n                                defaultMessage='Manage scopes that are local to this API'\n                            />\n                        )}\n                        placement='top-end'\n                        aria-label='Local Scopes'\n                    >\n                        <IconButton size='small' aria-label='delete'>\n                            <HelpOutlineIcon fontSize='small' />\n                        </IconButton>\n                    </Tooltip>\n                    <Link to={!isRestricted(['apim:api_create'], api) && url}>\n                        <Button\n                            size='small'\n                            className={classes.button}\n                            disabled={isRestricted(['apim:api_create'], api)}\n                        >\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Scopes.Scopes.heading.scope.add_new'\n                                defaultMessage='Add New Local Scope'\n                            />\n                        </Button>\n                    </Link>\n                    {isRestricted(['apim:api_create'], api) && (\n                        <Grid item>\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.Scopes.Scopes.update.not.allowed'\n                                    defaultMessage={\n                                        '*You are not authorized to update scopes of'\n                                        + ' the API due to insufficient permissions'\n                                    }\n                                />\n                            </Typography>\n                        </Grid>\n                    )}\n                </div>\n\n                <MUIDataTable title={false} data={scopesList} columns={columns} options={options} />\n            </div>\n        );\n    }\n}\n\nScopes.propTypes = {\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }),\n    api: PropTypes.instanceOf(Object).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nScopes.defaultProps = {\n    match: { params: {} },\n};\n\nexport default injectIntl(withAPI(withStyles(styles)(Scopes)));\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CreateScope from './CreateScope';\nimport EditScope from './EditScope';\nimport Scopes from './Scopes';\n\nconst Scope = () => {\n    const [api, updateAPI] = useAPI();\n    const urlPrefix = api.isAPIProduct() ? 'api-products' : 'apis';\n    return (\n        <Switch>\n            <Route exact path={'/' + urlPrefix + '/:api_uuid/scopes/'} component={Scopes} />\n            <Route\n                exact\n                path={'/' + urlPrefix + '/:api_uuid/scopes/create'}\n                component={(props) => <CreateScope api={api} {...props} updateAPI={updateAPI} />}\n            />\n            <Route\n                exact\n                path={'/' + urlPrefix + '/:api_uuid/scopes/edit'}\n                component={(props) => <EditScope api={api} {...props} updateAPI={updateAPI} />}\n            />\n            <Route component={ResourceNotFound} />\n        </Switch>\n    );\n};\n\nScope.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        additionalProperties: PropTypes.shape({\n            key: PropTypes.string,\n            value: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n};\n\nexport default Scope;\n","/*\n * Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = theme => ({\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass AddPolicy extends Component {\n    state = {\n        selectedPolicy: {\n            uuid: '',\n            name: 'Select',\n            policy: '',\n            type: '',\n        },\n        policies: [],\n    };\n\n    componentDidMount() {\n        const api = new API();\n        const promisedPolicies = api.getThreatProtectionPolicies();\n        promisedPolicies.then((response) => {\n            this.setState({ policies: response.obj.list });\n        });\n        const promisedApi = api.get(this.props.id);\n        promisedApi.then((response) => {\n            this.setState({ currentApi: response.obj });\n        });\n    }\n\n    handlePolicyAdd() {\n        const { intl } = this.props;\n        const policy = this.state.selectedPolicy;\n        if (policy.uuid === '' || policy.name === '') {\n            Alert.error(intl.formatMessage({\n                id: 'Apis.Details.Security.AddPolicy.select.policy',\n                defaultMessage: 'Please select a policy',\n            }));\n            return;\n        }\n\n        if (this.state.currentApi) {\n            const { currentApi } = this.state;\n            const api = new API();\n            const promisedPolicyAdd = api.addThreatProtectionPolicyToApi(currentApi.id, this.state.selectedPolicy.uuid);\n            promisedPolicyAdd.then((response) => {\n                if (response.status === 200) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.success',\n                        defaultMessage: 'Threat protection policy added successfully.',\n                    }));\n                    this.props.updateData();\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Security.AddPolicy.threat.protection.policy.add.failure',\n                        defaultMessage: 'Failed to add threat protection policy.',\n                    }));\n                }\n            });\n        }\n    }\n\n    handleChange = () => (event) => {\n        const policyId = event.target.value;\n        const api = new API();\n        const promisedPolicy = api.getThreatProtectionPolicy(policyId);\n        promisedPolicy.then((response) => {\n            this.setState({ selectedPolicy: response.obj });\n        });\n    }\n\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.contentWrapper}>\n                <div className={classes.addNewWrapper}>\n                    <Typography className={classes.addNewHeader}>\n                        <FormattedMessage\n                            id='Apis.Details.Security.AddPolicy.add.threat.protection.policy'\n                            defaultMessage='Add New Threat Protection Policy'\n                        />\n                    </Typography>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <InputLabel htmlFor='selectedPolicy'>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy'\n                                defaultMessage='Policy'\n                            />\n                        </InputLabel>\n                        &nbsp;&nbsp;\n                        <Select\n                            value={this.state.selectedPolicy.uuid}\n                            onChange={this.handleChange('selectedPolicy')}\n                            input={<Input name='selectedPolicy' id='selectedPolicy' />}\n                        >\n                            {this.state.policies.map((n) => {\n                                return (\n                                    <MenuItem key={n.uuid} value={n.uuid}>{n.name}</MenuItem>\n                                );\n                            })};\n                        </Select>\n                        <br />\n                        <br />\n                        <p>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.policy.type.label'\n                                defaultMessage='Policy Type: '\n                            />\n                            {this.state.selectedPolicy.type}\n                        </p>\n                        <div>\n                            <p>\n                                <FormattedMessage\n                                    id='Apis.Details.Security.AddPolicy.policy.label'\n                                    defaultMessage='Policy: '\n                                />\n                            </p>\n                            <div className={classes.addJsonContent}>\n                                {this.formatPolicy(this.state.selectedPolicy.policy)}\n                            </div>\n                        </div>\n                    </div>\n                    <Divider className={classes.divider} />\n                    <div className={classes.addNewOther}>\n                        <Button variant='contained' color='primary' onClick={() => this.handlePolicyAdd()}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.add.policy.to.api'\n                                defaultMessage='Add Policy to API'\n                            />\n                        </Button>\n                        <Button className={classes.button} onClick={this.props.toggleShowAddPolicy}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.AddPolicy.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddPolicy.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    toggleShowAddPolicy: PropTypes.func.isRequired,\n    id: PropTypes.string.isRequired,\n    updateData: PropTypes.func.isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(AddPolicy));\n\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\n\nimport Api from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Divider from '@material-ui/core/Divider';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport AddPolicy from './AddPolicy';\n\nconst styles = theme => ({\n    root: {\n        flexGrow: 1,\n        marginTop: 10,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    mainTitle: {\n        paddingLeft: 0,\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    table: {\n        '& td': {\n            fontSize: theme.typography.fontSize,\n        },\n        '& th': {\n            fontSize: theme.typography.fontSize * 1.2,\n        },\n        tableLayout: 'fixed',\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    addJsonContent: {\n        whiteSpace: 'pre',\n    },\n});\n\nclass SecurityOverview extends Component {\n    constructor(props) {\n        super(props);\n        this.api = new Api();\n        this.state = {\n            api: {\n                name: '',\n            },\n            policies: [],\n            showAddPolicy: false,\n        };\n        this.updateData = this.updateData.bind(this);\n        this.toggleShowAddPolicy = this.toggleShowAddPolicy.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        this.updateData();\n    }\n\n    updateData() {\n        const promisedApi = this.api.get(this.props.match.params.api_uuid);\n        promisedApi.then((response) => {\n            this.setState({ api: response.obj });\n            this.updatePolicyData();\n        });\n    }\n\n    updatePolicyData() {\n        this.setState({ policies: [] });\n        const policyIds = this.state.api.threatProtectionPolicies.list;\n        for (let i = 0; i < policyIds.length; i++) {\n            const id = policyIds[i].policyId;\n            const promisedPolicies = this.api.getThreatProtectionPolicy(id);\n            promisedPolicies.then((response) => {\n                const updatedPolicies = this.state.policies;\n                updatedPolicies.push(response.obj);\n                this.setState({ policies: updatedPolicies });\n            });\n        }\n    }\n\n    deletePolicy(id) {\n        const { intl } = this.props;\n        const associatedApi = this.state.api;\n        const promisedPolicyDelete = this.api.deleteThreatProtectionPolicyFromApi(associatedApi.id, id);\n        promisedPolicyDelete.then((response) => {\n            if (response.status === 200) {\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.success',\n                    defaultMessage: 'Policy removed successfully.',\n                }));\n\n                //   remove policy from local api\n                const index = associatedApi.threatProtectionPolicies.list.indexOf({ policyId: id });\n                associatedApi.threatProtectionPolicies.list.splice(index, 1);\n                this.setState({ api: associatedApi });\n                this.updatePolicyData();\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.Security.SecurityOverview.policy.remove.failure',\n                    defaultMessage: 'Failed to remove policy.',\n                }));\n            }\n        });\n    }\n\n    toggleShowAddPolicy = () => {\n        this.setState({ showAddPolicy: !this.state.showAddPolicy });\n    }\n\n    formatPolicy = (policy) => {\n        let formattedPolicy = policy;\n        formattedPolicy = formattedPolicy.replace(':', ' : ');\n        formattedPolicy = formattedPolicy.split(',').join(',\\n');\n        return formattedPolicy;\n    }\n\n    render() {\n        let data = [];\n        if (this.state.policies) {\n            data = this.state.policies;\n        }\n        const { classes } = this.props;\n        const { showAddPolicy } = this.state;\n\n        return (\n            <div className={classes.root}>\n                <div className={classes.contentWrapper}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.threat.protection.policies'\n                                defaultMessage='Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Button size='small' className={classes.button} onClick={this.toggleShowAddPolicy}>\n                            <AddCircle className={classes.buttonIcon} />\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.add.threat.protection.policy'\n                                defaultMessage='Add New Threat Protection Policy'\n                            />\n                        </Button>\n                    </div>\n                </div>\n                <div className={classes.contentWrapper}>\n                    {showAddPolicy &&\n                    <AddPolicy\n                        id={this.state.api.id}\n                        toggleShowAddPolicy={this.toggleShowAddPolicy}\n                        updateData={this.updateData}\n                    />\n                    }\n                </div>\n                <br />\n                <div className={classes.contentWrapper}>\n                    <div className={classes.addNewWrapper}>\n                        <Typography className={classes.addNewHeader}>\n                            <FormattedMessage\n                                id='Apis.Details.Security.SecurityOverview.manage.threat.protection.policies'\n                                defaultMessage='Manage Threat Protection Policies'\n                            />\n                        </Typography>\n                        <Divider className={classes.divider} />\n                        <Table className={classes.table}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.name'\n                                            defaultMessage='Policy Name'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy.type'\n                                            defaultMessage='Policy Type'\n                                        />\n                                    </TableCell>\n                                    <TableCell>\n                                        <FormattedMessage\n                                            id='Apis.Details.Security.SecurityOverview.policy'\n                                            defaultMessage='Policy'\n                                        />\n                                    </TableCell>\n                                    <TableCell />\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {data.map((n) => {\n                                    return (\n                                        <TableRow key={n.uuid}>\n                                            <TableCell>{n.name + (n.uuid === 'GLOBAL-JSON' ? ' (GLOBAL)' : '')}</TableCell>\n                                            <TableCell>{n.type}</TableCell>\n                                            <TableCell>\n                                                <div className={classes.addJsonContent}>\n                                                    {this.formatPolicy(n.policy)}\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <span>\n                                                    <Button color='accent' onClick={() => this.deletePolicy(n.uuid)} >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Security.SecurityOverview.delete'\n                                                            defaultMessage='Delete'\n                                                        />\n                                                    </Button>\n                                                </span>\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            </TableBody>\n                        </Table>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSecurityOverview.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            api_uuid: PropTypes.string,\n        }),\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\n\nexport default injectIntl(withStyles(styles)(SecurityOverview));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport SecurityOverview from './SecurityOverview';\n\nconst Security = () => {\n    return (\n        <Switch>\n            <Route path='/apis/:api_uuid/security' component={SecurityOverview} />\n        </Switch>\n    );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport API from 'AppData/api';\nimport PropTypes from 'prop-types';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Button from '@material-ui/core/Button';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { CircularProgressbarWithChildren } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles, createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { Line } from 'rc-progress';\nimport Progress from 'AppComponents/Shared/Progress';\nimport { withRouter } from 'react-router';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\n\nimport MUIDataTable from 'mui-datatables';\n\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport MonacoEditor from 'react-monaco-editor';\n\nconst styles = (theme) => ({\n    rootPaper: {\n        padding: theme.spacing(3),\n        margin: theme.spacing(2),\n    },\n    inlineDecoration: {\n        background: '#FF0000',\n    },\n    contentLine: {\n        background: '#add8e6',\n    },\n    htmlToolTip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n        'margin-left': 10,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    tableRow: {\n        'background-color': '#d3d3d3',\n    },\n    referenceErrorTypography: {\n        width: '70%',\n        marginTop: '15%',\n    },\n    referenceTypography: {\n        width: '70%',\n    },\n    subheadingTypography: {\n        paddingTop: 30,\n        paddingLeft: 20,\n    },\n    paperDiv: {\n        marginTop: 30,\n    },\n    sectionHeadingTypography: {\n        marginBottom: 18,\n    },\n    auditSummaryDiv: {\n        display: 'flex',\n        marginTop: 25,\n    },\n    auditSummarySubDiv: {\n        width: 250,\n        marginLeft: 40,\n        marginRight: 40,\n        display: 'table',\n    },\n    circularProgressBarScore: {\n        fontSize: 70,\n        color: '#3d98c7',\n        marginTop: 18,\n    },\n    circularProgressBarScoreFooter: {\n        fontSize: 18,\n        marginTop: 10,\n    },\n    auditSummaryDivRight: {\n        flexGrow: 1,\n        marginLeft: 200,\n        marginTop: 10,\n    },\n    columnOne: {\n        display: 'block',\n        width: '50%',\n        float: 'left',\n    },\n    columnTwo: {\n        width: '40%',\n        float: 'right',\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    linkText: {\n        float: 'right',\n    },\n});\n\n\n/**\n * This Component hosts the API Security Audit Component\n * More specifically, rendering of the Security Audit\n * Report.\n */\nclass APISecurityAudit extends Component {\n    /**\n     * @inheritdoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            report: null,\n            overallScore: 0,\n            numErrors: 0,\n            externalApiId: null,\n            loading: false,\n            apiDefinition: null,\n        };\n        this.criticalityObject = {\n            1: 'INFO',\n            2: 'LOW',\n            3: 'MEDIUM',\n            4: 'HIGH',\n            5: 'CRITICAL',\n        };\n        this.searchTerm = null;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        this.setState({ loading: true });\n        const { apiId, history, intl } = this.props;\n        const currentApi = new API();\n        const promisedDefinition = currentApi.getSwagger(apiId);\n        promisedDefinition.then((response) => {\n            this.setState({\n                apiDefinition: JSON.stringify(response.obj, null, 1),\n            });\n        })\n            .catch((error) => {\n                console.log(error);\n            });\n\n        currentApi.getSecurityAuditReport(apiId)\n            .then((response) => {\n                this.setState({\n                    report: response.body.report,\n                    overallScore: response.body.grade,\n                    numErrors: response.body.numErrors,\n                    externalApiId: response.body.externalApiId,\n                    loading: false,\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n                this.setState({ loading: false });\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.AuditApi.GetReportError',\n                    defaultMessage: 'Something went wrong while retrieving the API Security Report',\n                }));\n                const redirectUrl = '/apis/' + apiId + '/api definition';\n                history.push(redirectUrl);\n            });\n    }\n\n    getMuiTheme = () => createMuiTheme({\n        typography: {\n            useNextVariants: true,\n        },\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: '30%',\n                },\n            },\n            MUIDataTableSelectCell: {\n                root: {\n                    display: 'none',\n                },\n            },\n            MUIDataTableToolbarSelect: {\n                title: {\n                    display: 'none',\n                },\n            },\n        },\n    });\n\n    getErrorMuiTheme = () => createMuiTheme({\n        typography: {\n            useNextVariants: true,\n        },\n        overrides: {\n            MUIDataTableBodyCell: {\n                root: {\n                    width: '100%',\n                },\n            },\n            MUIDataTableSelectCell: {\n                root: {\n                    display: 'none',\n                },\n            },\n            MUIDataTableToolbarSelect: {\n                title: {\n                    display: 'none',\n                },\n            },\n        },\n    });\n\n    /**\n     * Get Row data for MUI Table\n     * @param {*} issues Issues array\n     * @param {String} category The category of the issue\n     * @param {*} rowType The type of row - normal or error\n     * @return {*} dataObject The dataObject array\n     */\n    getRowData(issues, category, rowType) {\n        const dataObject = [];\n        for (const item in issues) {\n            if ({}.hasOwnProperty.call(issues, item)) {\n                for (let i = 0; i < issues[item].issues.length; i++) {\n                    const rowObject = [];\n                    if (rowType === 'error') {\n                        if (issues[item].issues[i].specificDescription) {\n                            rowObject.push(\n                                issues[item].issues[i].specificDescription, issues[item].issues[i].pointer,\n                                category, rowType, item,\n                            );\n                        } else {\n                            rowObject.push(\n                                issues[item].description, issues[item].issues[i].pointer,\n                                category, rowType, item,\n                            );\n                        }\n                    } else if (rowType === 'normal') {\n                        if (issues[item].issues[i].specificDescription) {\n                            rowObject.push(\n                                this.criticalityObject[issues[item].criticality],\n                                issues[item].issues[i].specificDescription,\n                                this.roundScore(issues[item].issues[i].score), issues[item].issues[i].pointer,\n                                issues[item].issues[i].tooManyImpacted,\n                                issues[item].issues[i].pointersAffected, category, issues[item].tooManyError,\n                                rowType, item,\n                            );\n                        } else {\n                            rowObject.push(\n                                this.criticalityObject[issues[item].criticality],\n                                issues[item].description, this.roundScore(issues[item].issues[i].score),\n                                issues[item].issues[i].pointer, issues[item].issues[i].tooManyImpacted,\n                                issues[item].issues[i].pointersAffected, category, issues[item].tooManyError,\n                                rowType, item,\n                            );\n                        }\n                    }\n                    dataObject.push(rowObject);\n                }\n            }\n        }\n        return dataObject;\n    }\n\n    /**\n     * Method to get the URL to display for each issue\n     * @param {*} category Category of the issue\n     * @returns {*} String URL\n     */\n    getMoreDetailUrl(category) {\n        const baseUrl = 'https://apisecurity.io/ref/';\n        let url = '';\n\n        switch (category) {\n            case 'OpenAPI Format Requirements':\n                url = baseUrl + 'oasconformance/';\n                break;\n            case 'Security':\n                url = baseUrl + 'security/';\n                break;\n            case 'Data Validation':\n                url = baseUrl + 'datavalidation/datavalidation/';\n                break;\n            default:\n                url = baseUrl;\n        }\n        return url;\n    }\n\n    /**\n     * editorDidMount method for Monaco Editor\n     * @param {*} editor Monaco Editor editor\n     * @param {*} monaco Monaco Editor monaco\n     * @param {String} searchTerm SearchTerm for pointer\n     */\n    editorDidMount = (editor, monaco, searchTerm) => {\n        const { classes } = this.props;\n        if (searchTerm !== '') {\n            const lastTerms = [];\n            const termObject = searchTerm.split('/');\n            const regexPatterns = [];\n            for (let i = 0; i < termObject.length; i++) {\n                if (termObject[i] !== '' && termObject[i] !== '0') {\n                    let appendedString = '\"' + termObject[i] + '\":';\n                    if (appendedString.includes('~1')) {\n                        appendedString = appendedString.replace(/~1/i, '/');\n                    }\n                    regexPatterns.push(appendedString);\n                }\n            }\n\n            for (let j = 0; j < regexPatterns.length; j++) {\n                if (regexPatterns[j] !== '') {\n                    if (j !== 0 && lastTerms.length !== 0 && lastTerms[lastTerms.length - 1] !== null) {\n                        lastTerms.push(editor.getModel().findNextMatch(\n                            regexPatterns[j],\n                            { lineNumber: lastTerms[lastTerms.length - 1].range.endLineNumber, column: 1 },\n                            true, true, null, false,\n                        ));\n                    } else {\n                        lastTerms.push(editor.getModel().findNextMatch(regexPatterns[j], 1, true, true, null, true));\n                    }\n                }\n            }\n            const finalMatchIndex = lastTerms.length - 1;\n            if (lastTerms[finalMatchIndex] != null) {\n                editor.revealLineInCenter(lastTerms[finalMatchIndex].range.startLineNumber);\n                editor.deltaDecorations([], [\n                    {\n                        range: new monaco.Range(\n                            lastTerms[finalMatchIndex].range.startLineNumber,\n                            lastTerms[finalMatchIndex].range.startColumn,\n                            lastTerms[finalMatchIndex].range.endLineNumber,\n                            lastTerms[finalMatchIndex].range.endColumn,\n                        ),\n                        options: {\n                            isWholeLine: true,\n                            className: classes.inlineDecoration,\n                            glyphMarginClassName: classes.contentLine,\n                        },\n                    },\n                ]);\n            }\n        }\n    }\n\n    /**\n     * Method to round off the score of a section of the report\n     * @param {*} score Score of section\n     * @returns {*} roundScore Rounded off score\n     */\n    roundScore(score) {\n        if (score !== 0) {\n            return Math.round(score * 100) / 100;\n        } else {\n            return 0;\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const { classes } = this.props;\n        const {\n            report, overallScore, numErrors, externalApiId, loading, apiDefinition,\n        } = this.state;\n\n        const reportObject = JSON.parse(report);\n        const linkToDetailedReport = 'https://platform.42crunch.com/apis/' + externalApiId + '/security-audit-report';\n        if (loading) {\n            return (\n                <div>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography\n                                variant='h5'\n                                component='h3'\n                                className={classes.head}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.AuditApi.WaitForReport'\n                                    defaultMessage='Please wait...'\n                                />\n                            </Typography>\n                            <Typography component='p' className={classes.content}>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.AuditApi.WaitForReport.Content'\n                                    defaultMessage='Auditing an API for the first time will take some time'\n                                />\n                            </Typography>\n                        </div>\n                    </InlineMessage>\n                    <Progress />\n                </div>\n            );\n        }\n        const columns = [\n            {\n                name: 'Severity',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Description',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Score Impact',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Pointer',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Too Many Impacted',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Pointers Affected',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Issue Category',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Too Many Errors',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'isError',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'ReferenceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n        ];\n\n        const errorColumns = [\n            {\n                name: 'Description',\n                options: {\n                    filter: true,\n                    sort: true,\n                },\n            },\n            {\n                name: 'Pointer',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'Issue Category',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'isError',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n            {\n                name: 'ReferenceUrl',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                    sort: false,\n                },\n            },\n        ];\n\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n            glyphMargin: true,\n        };\n\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            print: false,\n            download: false,\n            selectableRows: false,\n            expandableRows: true,\n            expandableRowsOnClick: true,\n            renderExpandableRow: (rowData) => {\n                let searchTerm = null;\n                if (rowData[3] === 'error') {\n                    searchTerm = reportObject.index[rowData[1]];\n\n                    return (\n                        <TableRow className={classes.tableRow}>\n                            <TableCell className={classes.columnOne}>\n                                <MonacoEditor\n                                    height='250px'\n                                    theme='vs-dark'\n                                    value={apiDefinition}\n                                    options={editorOptions}\n                                    editorDidMount={(editor, monaco) => this.editorDidMount(editor, monaco, searchTerm)}\n                                />\n                            </TableCell>\n                            <TableCell className={classes.columnTwo}>\n                                <Typography variant='body1' className={classes.referenceErrorTypography}>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.AuditApi.ReferenceSection'\n                                        description='Link to visit for detail on how to remedy issue'\n                                        defaultMessage='Visit this {link} to view a detailed description, possible\n                                        exploits and remediation for this issue.'\n                                        values={{\n                                            link: (\n                                                <strong>\n                                                    <a\n                                                        href={this.getMoreDetailUrl(rowData[2])}\n                                                        target='_blank'\n                                                        rel='noopener noreferrer'\n                                                    >\n                                                        link\n                                                    </a>\n                                                </strong>),\n                                        }}\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    );\n                } else {\n                    searchTerm = reportObject.index[rowData[3]];\n                    return (\n                        <TableRow className={classes.tableRow}>\n                            <TableCell colSpan='2'>\n                                <MonacoEditor\n                                    width='85%'\n                                    height='250px'\n                                    theme='vs-dark'\n                                    value={apiDefinition}\n                                    options={editorOptions}\n                                    editorDidMount={(editor, monaco) => this.editorDidMount(editor, monaco, searchTerm)}\n                                />\n                            </TableCell>\n                            <TableCell>\n                                <Typography variant='body1' className={classes.referenceTypography}>\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.AuditApi.ReferenceSection'\n                                        description='Link to visit for detail on how to remedy issue'\n                                        defaultMessage='Visit this {link} to view a detailed description, possible\n                                        exploits and remediation for this issue.'\n                                        values={{\n                                            link: (\n                                                <strong>\n                                                    <a\n                                                        href={this.getMoreDetailUrl(rowData[6])}\n                                                        target='_blank'\n                                                        rel='noopener noreferrer'\n                                                    >\n                                                        link\n                                                    </a>\n                                                </strong>),\n                                        }}\n                                    />\n                                </Typography>\n                            </TableCell>\n                        </TableRow>\n                    );\n                }\n            },\n        };\n        return (\n            <div>\n                {report && (\n                    <div\n                        width='100%'\n                        height='calc(100vh - 51px)'\n                    >\n                        <Typography variant='h4' className={classes.subheadingTypography}>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.AuditApi.ApiSecurityAuditReport'\n                                defaultMessage='API Security Audit Report'\n                            />\n                        </Typography>\n                        <div className={classes.paperDiv}>\n                            <Paper elevation={1} className={classes.rootPaper}>\n                                <div>\n                                    <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.AuditApi.AuditScoreSummary'\n                                            defaultMessage='Audit Score and Summary'\n                                        />\n                                    </Typography>\n                                    <Typography variant='body1' className={classes.linkText}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.AuditApi.LinkToDetailedReport'\n                                            defaultMessage='{linkToDetailedReportText} {link} {afterLinkText}'\n                                            values={{\n                                                linkToDetailedReportText: 'Check out the ',\n                                                link: (\n                                                    <b>\n                                                        <a\n                                                            href={linkToDetailedReport}\n                                                            target='_blank'\n                                                            rel='noopener noreferrer'\n                                                        >\n                                                        detailed Report\n                                                        </a>\n                                                    </b>),\n                                                afterLinkText: ' from 42Crunch',\n                                            }}\n                                        />\n                                    </Typography>\n                                    <div className={classes.auditSummaryDiv}>\n                                        <div className={classes.auditSummarySubDiv}>\n                                            <CircularProgressbarWithChildren\n                                                value={overallScore}\n                                            >\n                                                <Typography\n                                                    variant='body1'\n                                                    className={classes.circularProgressBarScore}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi\n                                                                    .OverallScoreProgress'\n                                                        defaultMessage='{overallScore}'\n                                                        values={{\n                                                            overallScore: (\n                                                                <strong>{Math.round(overallScore)}</strong>\n                                                            ),\n                                                        }}\n                                                    />\n                                                </Typography>\n                                                <Typography\n                                                    variant='body1'\n                                                    className={classes.circularProgressBarScoreFooter}\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.ScoreFooter'\n                                                        defaultMessage='out of 100'\n                                                    />\n                                                </Typography>\n                                            </CircularProgressbarWithChildren>\n                                        </div>\n                                        <div className={classes.auditSummaryDivRight}>\n                                            {{}.hasOwnProperty.call(reportObject, 'score')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.overallScore'\n                                                            defaultMessage='{overallScoreText} {overallScore} / 100'\n                                                            values={{\n                                                                overallScoreText: <strong>Overall Score:</strong>,\n                                                                overallScore: this.roundScore(overallScore),\n                                                            }}\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {numErrors !== null\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.TotalNumOfErrors'\n                                                            defaultMessage='{totalNumOfErrorsText} {totalNumOfErrors}'\n                                                            values={{\n                                                                totalNumOfErrorsText: (\n                                                                    <strong>Total Number of Errors: </strong>\n                                                                ),\n                                                                totalNumOfErrors: numErrors,\n                                                            }}\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'criticality')\n                                                && (\n                                                    <>\n                                                        <Typography variant='body1'>\n                                                            <FormattedMessage\n                                                                id={'Apis.Details.APIDefinition'\n                                                                + '.AuditApi.OverallCriticality'}\n                                                                defaultMessage={\n                                                                    '{overallCriticalityText} {overallCriticality}'\n                                                                }\n                                                                values={{\n                                                                    overallCriticalityText: (\n                                                                        <strong>Overall Severity:</strong>\n                                                                    ),\n                                                                    overallCriticality: (\n                                                                        this.criticalityObject[reportObject.criticality]\n                                                                    ),\n                                                                }}\n                                                            />\n                                                            <Tooltip\n                                                                placement='right'\n                                                                classes={{\n                                                                    tooltip: classes.htmlTooltip,\n                                                                }}\n                                                                title={(\n                                                                    <>\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                            defaultMessage='Severity ranges from: '\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                            defaultMessage='1. INFO'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                            defaultMessage='2. LOW'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                            defaultMessage='3. MEDIUM'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                            defaultMessage='4. HIGH'\n                                                                        />\n                                                                        <br />\n                                                                        <FormattedMessage\n                                                                            id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                            defaultMessage='5. CRITICAL'\n                                                                        />\n                                                                        <br />\n                                                                    </>\n                                                                )}\n                                                            >\n                                                                <Button className={classes.helpButton}>\n                                                                    <HelpOutline className={classes.helpIcon} />\n                                                                </Button>\n                                                            </Tooltip>\n                                                        </Typography>\n                                                    </>\n                                                )}\n                                            <hr />\n                                            {{}.hasOwnProperty.call(reportObject, 'security')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.APIDefinition.AuditApi.SecuritySummary'\n                                                            defaultMessage='{securitySummary}'\n                                                            values={{\n                                                                securitySummary: (\n                                                                    <strong>\n                                                                    Security -\n                                                                    (\n                                                                        {\n                                                                            this.roundScore(reportObject.security.score)\n                                                                        }\n                                                                        {' '}\n                                                                        / 30)\n                                                                    </strong>\n                                                                ),\n                                                            }}\n                                                        />\n                                                        <Line\n                                                            percent={((this.roundScore(reportObject.security.score)\n                                                                / 30\n                                                            ) * 100)}\n                                                            strokeColor='#3d98c7'\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'data')\n                                                && (\n                                                    <Typography variant='body1'>\n                                                        <FormattedMessage\n                                                            id={'Apis.Details.APIDefinition'\n                                                            + '.AuditApi.DataValidationSummary'}\n                                                            defaultMessage='{dataValidationSummary}'\n                                                            values={{\n                                                                dataValidationSummary: (\n                                                                    <strong>\n                                                                    Data Validation -\n                                                                    (\n                                                                        {this.roundScore(reportObject.data.score)}\n                                                                        {' '}\n                                                                        / 70)\n                                                                    </strong>\n                                                                ),\n                                                            }}\n                                                        />\n                                                        <Line\n                                                            percent={((this.roundScore(reportObject.data.score) / 70\n                                                            ) * 100)}\n                                                            strokeColor='#3d98c7'\n                                                        />\n                                                    </Typography>\n                                                )}\n                                            {{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                                && (\n                                                    <InlineMessage type='warning' height={140}>\n                                                        <div className={classes.contentWrapper}>\n                                                            <Typography\n                                                                variant='h5'\n                                                                component='h3'\n                                                                className={classes.head}\n                                                            >\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                    + '.AuditApi.FailedToValidate.Heading'}\n                                                                    defaultMessage='Failed to Validate OpenAPI File'\n                                                                />\n                                                            </Typography>\n                                                            <Typography component='p' className={classes.content}>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                    + '.AuditApi.FailedToValidate.Content'}\n                                                                    defaultMessage={'Fix the critical errors '\n                                                                    + 'shown below and run the audit again.'}\n                                                                />\n                                                            </Typography>\n                                                        </div>\n                                                    </InlineMessage>\n                                                )}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Paper>\n                        </div>\n                        {\n                            <div className={classes.paperDiv}>\n                                <Paper elevation={1} className={classes.rootPaper}>\n                                    <div>\n                                        <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                            <FormattedMessage\n                                                id='Apis.Details.APIDefinition.AuditApi.OpenApiFormatRequirements'\n                                                defaultMessage='OpenAPI Format Requirements'\n                                            />\n                                        </Typography>\n                                        {{}.hasOwnProperty.call(reportObject, 'semanticErrors')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Semantic Errors'\n                                                                    data={this.getRowData(\n                                                                        reportObject.semanticErrors.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getErrorMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Structural Errors'\n                                                                    data={this.getRowData(\n                                                                        reportObject.validationErrors.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {{}.hasOwnProperty.call(reportObject, 'warnings')\n                                            && (\n                                                <>\n                                                    <div>\n                                                        <Typography variant='body1'>\n                                                            <MuiThemeProvider theme={this.getErrorMuiTheme()}>\n                                                                <MUIDataTable\n                                                                    title='Best Practices Issues'\n                                                                    data={this.getRowData(\n                                                                        reportObject.warnings.issues,\n                                                                        'OpenAPI Format Requirements',\n                                                                        'error',\n                                                                    )}\n                                                                    columns={errorColumns}\n                                                                    options={options}\n                                                                />\n                                                            </MuiThemeProvider>\n                                                        </Typography>\n                                                    </div>\n                                                </>\n                                            )}\n                                        {!{}.hasOwnProperty.call(reportObject, 'validationErrors')\n                                        && !{}.hasOwnProperty.call(reportObject, 'semanticErrors')\n                                        && !{}.hasOwnProperty.call(reportObject, 'warnings')\n                                        && (\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.OASNoIssuesFound'\n                                                    defaultMessage='No Issues Found'\n                                                />\n                                            </Typography>\n                                        )}\n                                    </div>\n                                </Paper>\n                            </div>\n                        }\n                        {{}.hasOwnProperty.call(reportObject, 'security')\n                            && (\n                                <div className={classes.paperDiv}>\n                                    <Paper elevation={1} className={classes.rootPaper}>\n                                        <div>\n                                            <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.Security'\n                                                    defaultMessage='Security'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.SecurityNumOfIssues'\n                                                    defaultMessage='{securityNumOfIssuesText} {securityNumOfIssues}'\n                                                    values={{\n                                                        securityNumOfIssuesText: (\n                                                            <strong>Number of Issues:</strong>\n                                                        ),\n                                                        securityNumOfIssues: reportObject.security.issueCounter,\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.SecurityScore'\n                                                    defaultMessage='{securityScoreText} {securityScore}  / 30'\n                                                    values={{\n                                                        securityScoreText: (\n                                                            <strong>Score:</strong>\n                                                        ),\n                                                        securityScore: (\n                                                            (Math.round(reportObject.security.score * 100) / 100)\n                                                        ),\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <>\n                                                <Typography variant='body1'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.securityCriticality'\n                                                        defaultMessage='{securityCriticalityText} {securityCriticality}'\n                                                        values={{\n                                                            securityCriticalityText: (\n                                                                <strong>Severity:</strong>\n                                                            ),\n                                                            securityCriticality: (\n                                                                // eslint-disable-next-line max-len\n                                                                this.criticalityObject[reportObject.security.criticality]\n                                                            ),\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        placement='right'\n                                                        classes={{\n                                                            tooltip: classes.htmlTooltip,\n                                                        }}\n                                                        title={(\n                                                            <>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                    defaultMessage='Severity ranges from: '\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                    defaultMessage='1. INFO'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                    defaultMessage='2. LOW'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                    defaultMessage='3. MEDIUM'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                    defaultMessage='4. HIGH'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                    defaultMessage='5. CRITICAL'\n                                                                />\n                                                                <br />\n                                                            </>\n                                                        )}\n                                                    >\n                                                        <Button className={classes.helpButton}>\n                                                            <HelpOutline className={classes.helpIcon} />\n                                                        </Button>\n                                                    </Tooltip>\n                                                </Typography>\n                                            </>\n                                            {(reportObject.security.issueCounter !== 0)\n                                            && (\n                                                <div>\n                                                    <hr />\n                                                    <Typography variant='body1'>\n                                                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                            <MUIDataTable\n                                                                title='Issues'\n                                                                data={this.getRowData(\n                                                                    reportObject.security.issues,\n                                                                    'Security',\n                                                                    'normal',\n                                                                )}\n                                                                columns={columns}\n                                                                options={options}\n                                                            />\n                                                        </MuiThemeProvider>\n                                                    </Typography>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </Paper>\n                                </div>\n                            )}\n                        {{}.hasOwnProperty.call(reportObject, 'data')\n                            && (\n                                <div className={classes.paperDiv}>\n                                    <Paper elevation={1} className={classes.rootPaper}>\n                                        <div>\n                                            <Typography variant='h5' className={classes.sectionHeadingTypography}>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidation'\n                                                    defaultMessage='Data Validation'\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidationNumOfIssues'\n                                                    defaultMessage='{dataNumOfIssuesText} {dataNumOfIssues}'\n                                                    values={{\n                                                        dataNumOfIssuesText: (\n                                                            <strong>Number of Issues:</strong>\n                                                        ),\n                                                        dataNumOfIssues: reportObject.data.issueCounter,\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <Typography variant='body1'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.APIDefinition.AuditApi.DataValidationScore'\n                                                    defaultMessage='{dataScoreText} {dataScore}  / 70'\n                                                    values={{\n                                                        dataScoreText: (\n                                                            <strong>Score:</strong>\n                                                        ),\n                                                        dataScore: (\n                                                            (Math.round(reportObject.data.score * 100) / 100)\n                                                        ),\n                                                    }}\n                                                />\n                                            </Typography>\n                                            <>\n                                                <Typography variant='body1'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.APIDefinition.AuditApi.dataCriticality'\n                                                        defaultMessage='{dataCriticalityText} {dataCriticality}'\n                                                        values={{\n                                                            dataCriticalityText: (\n                                                                <strong>Severity:</strong>\n                                                            ),\n                                                            dataCriticality: (\n                                                                this.criticalityObject[reportObject.data.criticality]\n                                                            ),\n                                                        }}\n                                                    />\n                                                    <Tooltip\n                                                        placement='right'\n                                                        classes={{\n                                                            tooltip: classes.htmlTooltip,\n                                                        }}\n                                                        title={(\n                                                            <>\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.severity'}\n                                                                    defaultMessage='Severity ranges from: '\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.info'}\n                                                                    defaultMessage='1. INFO'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.low'}\n                                                                    defaultMessage='2. LOW'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.medium'}\n                                                                    defaultMessage='3. MEDIUM'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.high'}\n                                                                    defaultMessage='4. HIGH'\n                                                                />\n                                                                <br />\n                                                                <FormattedMessage\n                                                                    id={'Apis.Details.APIDefinition'\n                                                                            + '.AuditApi.tooltip.critical'}\n                                                                    defaultMessage='5. CRITICAL'\n                                                                />\n                                                                <br />\n                                                            </>\n                                                        )}\n                                                    >\n                                                        <Button className={classes.helpButton}>\n                                                            <HelpOutline className={classes.helpIcon} />\n                                                        </Button>\n                                                    </Tooltip>\n                                                </Typography>\n                                            </>\n                                            {(reportObject.data.issueCounter !== 0)\n                                            && (\n                                                <div>\n                                                    <hr />\n                                                    <Typography variant='body1'>\n                                                        <MuiThemeProvider theme={this.getMuiTheme()}>\n                                                            <MUIDataTable\n                                                                title='Issues'\n                                                                data={this.getRowData(\n                                                                    reportObject.data.issues,\n                                                                    'Data Validation',\n                                                                    'normal',\n                                                                )}\n                                                                columns={columns}\n                                                                options={options}\n                                                            />\n                                                        </MuiThemeProvider>\n                                                    </Typography>\n                                                </div>\n                                            )}\n                                        </div>\n                                    </Paper>\n                                </div>\n                            )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nAPISecurityAudit.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    apiId: PropTypes.string.isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withRouter(injectIntl(withStyles(styles)(APISecurityAudit)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useReducer, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { Typography } from '@material-ui/core';\nimport CloudUploadRounded from '@material-ui/icons/CloudUploadRounded';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api.js';\nimport { isRestricted } from 'AppData/AuthManager';\nimport { useAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport ProvideWSDL from 'AppComponents/Apis/Create/WSDL/Steps/ProvideWSDL';\nimport ProvideOpenAPI from '../../Create/OpenAPI/Steps/ProvideOpenAPI';\nimport ProvideGraphQL from '../../Create/GraphQL/Steps/ProvideGraphQL';\n\n\nconst useStyles = makeStyles(() => ({\n    importDefinitionDialogHeader: {\n        fontWeight: '600',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n}));\n\n/**\n *\n *\n * @export\n * @param {*} props\n * @returns\n */\nexport default function ImportDefinition(props) {\n    const { setSchemaDefinition } = props;\n    const classes = useStyles();\n    const [openAPIDefinitionImport, setOpenAPIDefinitionImport] = useState(false);\n    const [isImporting, setIsImporting] = useState(false);\n    const [api] = useAPI();\n    const intl = useIntl();\n    const isGraphQL = api.isGraphql();\n    const isSOAP = api.isSOAP();\n\n    const handleAPIDefinitionImportOpen = () => {\n        setOpenAPIDefinitionImport(true);\n    };\n\n    const handleAPIDefinitionImportCancel = () => {\n        setOpenAPIDefinitionImport(false);\n    };\n\n    function apiInputsReducer(currentState, inputAction) {\n        const { action, value } = inputAction;\n        switch (action) {\n            case 'inputValue':\n            case 'isFormValid':\n                return { ...currentState, [action]: value };\n            case 'inputType':\n                return { ...currentState, [action]: value, inputValue: value === 'url' ? '' : null };\n            case 'preSetAPI':\n                return {\n                    ...currentState,\n                    content: value.content,\n                };\n            default:\n                return currentState;\n        }\n    }\n\n    const [apiInputs, inputsDispatcher] = useReducer(apiInputsReducer, {\n        type: '',\n        inputType: 'url',\n        inputValue: '',\n        formValidity: false,\n        mode: 'update',\n    });\n\n    /**\n     * Updates OpenAPI definition\n     */\n    function updateOASDefinition() {\n        setIsImporting(true);\n        const {\n            inputValue, inputType, content,\n        } = apiInputs;\n        const isFileInput = inputType === 'file';\n        if (isFileInput) {\n            const reader = new FileReader();\n            const contentType = inputValue.type.includes('yaml') ? 'yaml ' : 'json';\n            reader.onloadend = (event) => {\n                setSchemaDefinition(event.currentTarget.result, contentType);\n            };\n            reader.readAsText(inputValue);\n        }\n        const newAPI = new API();\n        const promisedResponse = isFileInput ? newAPI.updateAPIDefinitionByFile(api.id, inputValue)\n            : newAPI.updateAPIDefinitionByUrl(api.id, inputValue);\n        promisedResponse\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.api.definition.updated.successfully',\n                    defaultMessage: 'API Definition Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                if (!isFileInput) {\n                    // Test to starting the content with'{' character ignoring white spaces\n                    const isJSONRegex = RegExp(/^\\s*{/); // TODO: not a solid test need to support from REST API ~tmkb\n                    const contentType = isJSONRegex.test(content) ? 'json' : 'yaml';\n                    setSchemaDefinition(content, contentType);\n                }\n            })\n            .catch((error) => {\n                console.error(error);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error while updating the API Definition',\n                }));\n            }).finally(() => setIsImporting(false));\n    }\n\n    /**\n     * Update the graphQL api with its operation\n     * @param {*}  api\n     * @param {*}  graphQLInfo\n     */\n    function updateGraphQLAPIDefinition(graphQLSchema) {\n        const promisedAPI = api.updateGraphQLAPIDefinition(api.id, graphQLSchema);\n        promisedAPI\n            .then((response) => {\n                api.operations = response.obj;\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.graphQLDefinition.updated.successfully',\n                    defaultMessage: 'Schema Definition Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                setSchemaDefinition(graphQLSchema);\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.updating.graphQL.schema',\n                    defaultMessage: 'Error while updating GraphQL schema',\n                }));\n            });\n    }\n\n\n    /**\n     * Updates GraphQL schema definition\n     */\n    function updateGraphQLSchema() {\n        const {\n            inputValue,\n        } = apiInputs;\n\n        const promisedValidation = API.validateGraphQLFile(inputValue);\n        promisedValidation\n            .then((response) => {\n                const { isValid, graphQLInfo } = response.obj;\n                if (isValid === true) {\n                    updateGraphQLAPIDefinition(graphQLInfo.graphQLSchema.schemaDefinition);\n                }\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Error.while.validating.the.imported.graphQLSchema',\n                    defaultMessage: 'Error while validating the imported schema',\n                }));\n            });\n    }\n\n    /**\n     * Updates WSDL definition\n     */\n    function updateWSDL() {\n        const {\n            inputType, inputValue,\n        } = apiInputs;\n        const isFileInput = inputType === 'file';\n        let promisedAPI;\n        if (isFileInput) {\n            promisedAPI = api.updateWSDLByFileOrArchive(api.id, inputValue);\n        } else {\n            promisedAPI = api.updateWSDLByUrl(api.id, inputValue);\n        }\n        promisedAPI\n            .then(() => {\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.ImportDefinition.WSDL.updated.successfully',\n                    defaultMessage: 'WSDL Updated Successfully',\n                }));\n                setOpenAPIDefinitionImport(false);\n                setSchemaDefinition(isFileInput && inputValue.type === 'application/zip');\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.ImportDefinition.error.updating.WSDL',\n                    defaultMessage: 'Error while updating WSDL',\n                }));\n            });\n    }\n\n    /**\n     * Handles API definition import\n     */\n    function importDefinition() {\n        if (isGraphQL) {\n            updateGraphQLSchema();\n        } else if (isSOAP) {\n            updateWSDL();\n        } else {\n            updateOASDefinition();\n        }\n    }\n    /**\n     *\n     * Set the validity of the API definition imports\n     * @param {*} isValidForm\n     * @param {*} validationState\n     */\n    function handleOnValidate(isFormValid) {\n        inputsDispatcher({\n            action: 'isFormValid',\n            value: isFormValid,\n        });\n    }\n\n    let dialogTitle = (\n        <FormattedMessage\n            id='Apis.Details.APIDefinition.APIDefinition.import.definition.oas'\n            defaultMessage='Import OpenAPI Definition'\n        />\n    );\n    let dialogContent = (\n        <ProvideOpenAPI\n            onValidate={handleOnValidate}\n            apiInputs={apiInputs}\n            inputsDispatcher={inputsDispatcher}\n        />\n    );\n    let btnText = (\n        <FormattedMessage\n            id='Apis.Details.APIDefinition.APIDefinition.import.definition'\n            defaultMessage='Import Definition'\n        />\n    );\n    if (isGraphQL) {\n        dialogTitle = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.definition.graphql'\n                defaultMessage='Import GraphQL Schema Definition'\n            />\n        );\n        dialogContent = (\n            <ProvideGraphQL\n                onValidate={handleOnValidate}\n                apiInputs={apiInputs}\n                inputsDispatcher={inputsDispatcher}\n            />\n        );\n    }\n    if (isSOAP) {\n        dialogTitle = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.definition.wsdl'\n                defaultMessage='Import WSDL'\n            />\n        );\n        dialogContent = (\n            <ProvideWSDL\n                onValidate={handleOnValidate}\n                apiInputs={apiInputs}\n                inputsDispatcher={inputsDispatcher}\n            />\n        );\n        btnText = (\n            <FormattedMessage\n                id='Apis.Details.APIDefinition.APIDefinition.import.wsdl'\n                defaultMessage='Import WSDL'\n            />\n        );\n    }\n\n    return (\n        <>\n            <Button\n                size='small'\n                className={classes.button}\n                onClick={handleAPIDefinitionImportOpen}\n                disabled={isRestricted(['apim:api_create'], api)}\n            >\n                <CloudUploadRounded className={classes.buttonIcon} />\n                {btnText}\n            </Button>\n            <Dialog onBackdropClick={setOpenAPIDefinitionImport} open={openAPIDefinitionImport}>\n                <DialogTitle>\n                    <Typography className={classes.importDefinitionDialogHeader}>\n                        {dialogTitle}\n                    </Typography>\n                </DialogTitle>\n                <DialogContent>\n                    {dialogContent}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleAPIDefinitionImportCancel}>\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.APIDefinition.import.definition.cancel'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                    <Button\n                        onClick={importDefinition}\n                        variant='contained'\n                        color='primary'\n                        disabled={!apiInputs.isFormValid || isImporting}\n                    >\n                        <FormattedMessage\n                            id='Apis.Details.APIDefinition.APIDefinition.import.definition.import'\n                            defaultMessage='Import'\n                        />\n                        {isImporting && <CircularProgress size={20} />}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\n\nImportDefinition.propTypes = {\n    setSchemaDefinition: PropTypes.func.isRequired,\n};\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport EditRounded from '@material-ui/icons/EditRounded';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport LockRounded from '@material-ui/icons/LockRounded';\nimport SwapHorizontalCircle from '@material-ui/icons/SwapHorizontalCircle';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport YAML from 'js-yaml';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api.js';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { withRouter } from 'react-router';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport APISecurityAudit from './APISecurityAudit';\nimport ImportDefinition from './ImportDefinition';\n\nconst EditorDialog = lazy(() => import('./SwaggerEditorDrawer' /* webpackChunkName: \"EditorDialog\" */));\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\nconst styles = (theme) => ({\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    swaggerEditorWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    topBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: theme.spacing(2),\n    },\n    converterWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: '1',\n        fontSize: '0.6964285714285714rem',\n    },\n    downloadLink: {\n        color: 'black',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    progressLoader: {\n        marginLeft: theme.spacing(1),\n    },\n});\n/**\n * This component holds the functionality of viewing the api definition content of an api. The initial view is a\n * read-only representation of the api definition file.\n * Users can either edit the content by clicking the 'Edit' button or upload a new api definition file by clicking\n * 'Import API Definition'.\n * */\nclass APIDefinition extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openEditor: false,\n            swagger: null,\n            swaggerModified: null,\n            graphQL: null,\n            format: null,\n            convertTo: null,\n            isAuditApiClicked: false,\n            securityAuditProperties: [],\n            isSwaggerValid: true,\n            isUpdating: false,\n        };\n        this.handleNo = this.handleNo.bind(this);\n        this.handleOk = this.handleOk.bind(this);\n        this.openEditor = this.openEditor.bind(this);\n        this.transition = this.transition.bind(this);\n        this.closeEditor = this.closeEditor.bind(this);\n        this.hasJsonStructure = this.hasJsonStructure.bind(this);\n        this.getConvertToFormat = this.getConvertToFormat.bind(this);\n        this.onAuditApiClick = this.onAuditApiClick.bind(this);\n        this.onChangeFormatClick = this.onChangeFormatClick.bind(this);\n        this.openUpdateConfirmation = this.openUpdateConfirmation.bind(this);\n        this.updateSwaggerDefinition = this.updateSwaggerDefinition.bind(this);\n        this.onChangeSwaggerContent = this.onChangeSwaggerContent.bind(this);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        const { settings } = this.context;\n        let promisedApi;\n        if (api.type === 'GRAPHQL') {\n            promisedApi = api.getSchema(api.id);\n        } else {\n            promisedApi = api.getSwagger(api.id);\n        }\n\n        this.setState({ securityAuditProperties: settings.securityAuditProperties });\n\n        promisedApi\n            .then((response) => {\n                if (api.type === 'GRAPHQL') {\n                    this.setState({\n                        graphQL: response.obj.schemaDefinition,\n                        format: 'txt',\n                    });\n                } else {\n                    this.setState({\n                        swagger: YAML.safeDump(YAML.safeLoad(response.data)),\n                        swaggerModified: YAML.safeDump(YAML.safeLoad(response.data)),\n                        format: 'yaml',\n                        convertTo: this.getConvertToFormat('yaml'),\n                    });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    }\n\n\n    /**\n      * Set isAuditApiClicked to true when Audit API is clicked\n      */\n    onAuditApiClick() {\n        this.setState({ isAuditApiClicked: true });\n    }\n\n    /**\n     * Toggle the format of the api definition.\n     * JSON -> YAML, YAML -> JSON\n     */\n    onChangeFormatClick() {\n        const { format, swagger, convertTo } = this.state;\n        let formattedString = '';\n        if (convertTo === 'json') {\n            formattedString = JSON.stringify(YAML.load(swagger), null, 1);\n        } else {\n            formattedString = YAML.safeDump(YAML.safeLoad(swagger));\n        }\n        this.setState({\n            swagger: formattedString,\n            swaggerModified: formattedString,\n            format: convertTo,\n            convertTo: format,\n        });\n    }\n\n    /**\n     * Method to handle swagger content change\n     *\n     * @param {string} modifiedContent : The modified swagger content.\n     * */\n    onChangeSwaggerContent(modifiedContent) {\n        const { format } = this.state;\n        /**\n         * Validate for the basic json/ yaml format.\n         * */\n        try {\n            if (format === 'json') {\n                JSON.parse(modifiedContent, null);\n            } else {\n                YAML.load(modifiedContent);\n            }\n            this.setState({ isSwaggerValid: true, swaggerModified: modifiedContent });\n        } catch (e) {\n            this.setState({ isSwaggerValid: false, swaggerModified: modifiedContent });\n        }\n    }\n\n    setSchemaDefinition = (schemaContent, contentType) => {\n        const { api } = this.props;\n        const isGraphql = api.isGraphql();\n        if (isGraphql) {\n            this.setState({ graphQL: schemaContent });\n        } else {\n            this.setState({\n                swagger: schemaContent,\n                swaggerModified: schemaContent,\n                convertTo: this.getConvertToFormat(contentType),\n                format: contentType,\n            });\n        }\n    };\n\n    /**\n     * Util function to get the format which the definition can be converted to.\n     * @param {*} format : The current format of definition.\n     * @returns {string} The possible conversion format.\n     */\n    getConvertToFormat(format) {\n        return format === 'json' ? 'yaml' : 'json';\n    }\n\n    /**\n     * Checks whether the swagger content is json type.\n     * @param {string} definition The swagger string.\n     * @return {boolean} Whether the content is a json or not.\n     * */\n    hasJsonStructure(definition) {\n        if (typeof definition !== 'string') return false;\n        try {\n            const result = JSON.parse(definition);\n            return result && typeof result === 'object';\n        } catch (err) {\n            return false;\n        }\n    }\n\n    /**\n     * Handles the yes button action of the save api definition confirmation dialog box.\n     */\n    handleOk() {\n        const { swaggerModified } = this.state;\n        this.setState({ openDialog: false }, () => this.updateSwaggerDefinition(swaggerModified, '', ''));\n    }\n\n    /**\n     * Handles the No button action of the save api definition confirmation dialog box.\n     */\n    handleNo() {\n        this.setState({ openDialog: false });\n    }\n\n    /**\n     * Method to set the state for opening the swagger editor drawer.\n     * Swagger editor loads the definition content from the local storage. Hence we set the swagger content to the\n     * local storage.\n     * */\n    openEditor() {\n        this.setState({ openEditor: true });\n    }\n\n    /**\n     * Sets the state to close the swagger-editor drawer.\n     * */\n    closeEditor() {\n        this.setState({ openEditor: false });\n        const { intl, api, history } = this.props;\n        const { isAuditApiClicked } = this.state;\n        if (isAuditApiClicked === true) {\n            Alert.info(intl.formatMessage({\n                id: 'Apis.Details.APIDefinition.info.updating.auditapi',\n                defaultMessage: 'To reflect the changes made, you need to click Audit API',\n            }));\n            const redirectUrl = '/apis/' + api.id + '/api definition';\n            history.push(redirectUrl);\n        }\n    }\n\n    /**\n     * Handles the transition of the drawer.\n     * @param {object} props list of props\n     * @return {object} The Slide transition component\n     * */\n    transition(props) {\n        return <Slide direction='up' {...props} />;\n    }\n\n    /**\n     * Updates swagger content in the local storage.\n     * */\n    openUpdateConfirmation() {\n        this.setState({ openDialog: true });\n    }\n\n    /**\n     * Updates swagger definition of the api.\n     * @param {string} swaggerContent The swagger file that needs to be updated.\n     * @param {string} specFormat The current format of the definition\n     * @param {string} toFormat The format it can be converted to.\n     * */\n    updateSwaggerDefinition(swaggerContent, specFormat, toFormat) {\n        const { api, intl, updateAPI } = this.props;\n        this.setState({ isUpdating: true });\n        let parsedContent = {};\n        if (this.hasJsonStructure(swaggerContent)) {\n            parsedContent = JSON.parse(swaggerContent);\n        } else {\n            try {\n                parsedContent = YAML.load(swaggerContent);\n            } catch (err) {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error occurred while updating the API Definition',\n                }));\n                return;\n            }\n        }\n        const promise = api.updateSwagger(parsedContent);\n        promise\n            .then((response) => {\n                const { endpointImplementationType } = api;\n                if (endpointImplementationType === 'INLINE') {\n                    api.generateMockScripts(api.id);\n                }\n                if (response) {\n                    Alert.success(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.APIDefinition.api.definition.updated.successfully',\n                        defaultMessage: 'API Definition updated successfully',\n                    }));\n                    if (specFormat && toFormat) {\n                        this.setState({ swagger: swaggerContent, format: specFormat, convertTo: toFormat });\n                    } else {\n                        this.setState({ swagger: swaggerContent });\n                    }\n                }\n                /*\n                 *updateAPI() will make a /GET call to get the latest api once the swagger definition is updated.\n                 *Otherwise, we need to refresh the page to get changes.\n                 */\n                updateAPI();\n                this.setState({ isUpdating: false });\n            })\n            .catch((err) => {\n                console.log(err);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.APIDefinition.error.while.updating.api.definition',\n                    defaultMessage: 'Error occurred while updating the API Definition',\n                }));\n                this.setState({ isUpdating: false });\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            swagger, graphQL, openEditor, openDialog, format, convertTo, notFound, isAuditApiClicked,\n            securityAuditProperties, isSwaggerValid, swaggerModified, isUpdating,\n        } = this.state;\n        const { classes, resourceNotFountMessage, api } = this.props;\n        let downloadLink;\n        let fileName;\n        let isGraphQL = 0;\n\n        if (graphQL !== null) {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(graphQL);\n            fileName = api.provider + '-' + api.name + '-' + api.version + '.graphql';\n            isGraphQL = 1;\n        } else {\n            downloadLink = 'data:text/' + format + ';charset=utf-8,' + encodeURIComponent(swagger);\n            fileName = 'swagger.' + format;\n        }\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n        };\n\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n        if (!swagger && !graphQL && api === 'undefined') {\n            return <Progress />;\n        }\n\n        return (\n            <>\n                <div className={classes.topBar}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4'>\n                            {graphQL ? (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.schema.definition'\n                                    defaultMessage='Schema Definition'\n                                />\n                            ) : (\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.api.definition'\n                                    defaultMessage='API Definition'\n                                />\n                            )}\n                        </Typography>\n                        {!(graphQL || api.type === 'APIProduct') && (\n                            <Button\n                                size='small'\n                                className={classes.button}\n                                onClick={this.openEditor}\n                                disabled={isRestricted(['apim:api_create'], api)}\n                            >\n                                <EditRounded className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.edit'\n                                    defaultMessage='Edit'\n                                />\n                            </Button>\n                        )}\n                        {api.type !== 'APIProduct' && (\n                            <ImportDefinition setSchemaDefinition={this.setSchemaDefinition} />\n                        )}\n                        <a className={classes.downloadLink} href={downloadLink} download={fileName}>\n                            <Button size='small' className={classes.button}>\n                                <CloudDownloadRounded className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.download.definition'\n                                    defaultMessage='Download Definition'\n                                />\n                            </Button>\n                        </a>\n\n                        {(securityAuditProperties.apiToken && securityAuditProperties.collectionId\n                        && api.type !== 'GRAPHQL')\n                            && (\n                                <Button size='small' className={classes.button} onClick={this.onAuditApiClick}>\n                                    <LockRounded className={classes.buttonIcon} />\n                                    <FormattedMessage\n                                        id='Apis.Details.APIDefinition.APIDefinition.audit.api'\n                                        defaultMessage='Audit API'\n                                    />\n                                </Button>\n                            )}\n\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.update.not.allowed'\n                                    defaultMessage='Unauthorized: Insufficient permissions to update API Definition'\n                                />\n                            </Typography>\n                        )}\n                    </div>\n                    {isGraphQL === 0 && (\n                        <div className={classes.titleWrapper}>\n                            <Button size='small' className={classes.button} onClick={this.onChangeFormatClick}>\n                                <SwapHorizontalCircle className={classes.buttonIcon} />\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.convert.to'\n                                    defaultMessage='Convert to'\n                                />\n                                {' '}\n                                {convertTo}\n                            </Button>\n                        </div>\n                    )}\n                </div>\n                <div>\n                    <Suspense fallback={<Progress />}>\n                        {isAuditApiClicked ? (\n                            <APISecurityAudit apiId={api.id} />\n                        ) : (\n                            <MonacoEditor\n                                language={format}\n                                width='100%'\n                                height='calc(100vh - 51px)'\n                                theme='vs-dark'\n                                value={swagger !== null ? swagger : graphQL}\n                                options={editorOptions}\n                            />\n                        )}\n                    </Suspense>\n                </div>\n                <Dialog fullScreen open={openEditor} onClose={this.closeEditor} TransitionComponent={this.transition}>\n                    <Paper square className={classes.popupHeader}>\n                        <IconButton\n                            className={classes.button}\n                            color='inherit'\n                            onClick={this.closeEditor}\n                            aria-label={(\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.APIDefinition.btn.close'\n                                    defaultMessage='Close'\n                                />\n                            )}\n                        >\n                            <Icon>close</Icon>\n                        </IconButton>\n\n                        <Button\n                            className={classes.button}\n                            variant='contained'\n                            color='primary'\n                            onClick={this.openUpdateConfirmation}\n                            disabled={!isSwaggerValid || isUpdating}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.documents.swagger.editor.update.content'\n                                defaultMessage='Update Content'\n                            />\n                            {isUpdating && <CircularProgress className={classes.progressLoader} size={24} />}\n                        </Button>\n                    </Paper>\n                    <Suspense\n                        fallback={(\n                            <Progress />\n                        )}\n                    >\n                        <EditorDialog\n                            swagger={swaggerModified}\n                            language={format}\n                            onEditContent={this.onChangeSwaggerContent}\n                        />\n                    </Suspense>\n                </Dialog>\n                <Dialog\n                    open={openDialog}\n                    onClose={this.handleNo}\n                    aria-labelledby='alert-dialog-title'\n                    aria-describedby='alert-dialog-description'\n                >\n                    <DialogTitle id='alert-dialog-title'>\n                        <Typography align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.save.api.definition'\n                                defaultMessage='Save API Definition'\n                            />\n                        </Typography>\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText id='alert-dialog-description'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.api.definition.save.confirmation'\n                                defaultMessage={\n                                    'Are you sure you want to save the API Definition? This might affect the'\n                                    + ' existing resources.'\n                                }\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleNo} color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.btn.no'\n                                defaultMessage='CANCEL'\n                            />\n                        </Button>\n                        <Button onClick={this.handleOk} color='primary' autoFocus variant='contained'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.APIDefinition.btn.yes'\n                                defaultMessage='SAVE'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nAPIDefinition.contextType = AppContext;\nAPIDefinition.propTypes = {\n    classes: PropTypes.shape({\n        button: PropTypes.shape({}),\n        popupHeader: PropTypes.shape({}),\n        buttonIcon: PropTypes.shape({}),\n        root: PropTypes.shape({}),\n        topBar: PropTypes.shape({}),\n        titleWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n        converterWrapper: PropTypes.shape({}),\n        dropzone: PropTypes.shape({}),\n        downloadLink: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({\n        updateSwagger: PropTypes.func,\n        getSwagger: PropTypes.func,\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    resourceNotFountMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\nexport default withRouter(injectIntl(withStyles(styles, { withTheme: true })(APIDefinition)));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Progress } from 'AppComponents/Shared';\nimport Typography from '@material-ui/core/Typography';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport API from 'AppData/api.js';\nimport { withRouter } from 'react-router';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ResourceNotFound from '../../../Base/Errors/ResourceNotFound';\nimport ImportDefinition from './ImportDefinition';\n\nconst MonacoEditor = lazy(() => import('react-monaco-editor' /* webpackChunkName: \"APIDefMonacoEditor\" */));\n\nconst styles = (theme) => ({\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    swaggerEditorWrapper: {\n        height: '100vh',\n        overflowY: 'auto',\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    topBar: {\n        display: 'flex',\n        flexDirection: 'row',\n        marginBottom: theme.spacing(2),\n    },\n    converterWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        flex: '1',\n        fontSize: '0.6964285714285714rem',\n    },\n    downloadLink: {\n        color: 'black',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n});\n\n/**\n * This component holds the functionality of viewing the WSDL content of an api. The view is a\n * read-only representation of the WSDL file. If the API has a WSDL ZIP archive, the preview will not be\n * available and it will be indicated in the UI.\n * Users can upload a new api definition file by clicking 'Import WSDL'.\n *\n * @class WSDL\n * @extends {Component}\n * */\nclass WSDL extends React.Component {\n    /**\n     * @inheritDoc\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isArchive: false,\n            wsdl: null,\n        };\n        this.loadWSDLInEditor = this.loadWSDLInEditor.bind(this);\n        this.handleDownloadWSDLZip = this.handleDownloadWSDLZip.bind(this);\n    }\n\n    /**\n     * @inheritdoc\n     */\n    componentDidMount() {\n        const { api, intl } = this.props;\n        const promisedWSDLInfo = api.getWSDLInfo(api.id);\n        promisedWSDLInfo\n            .then((response) => {\n                const wsdlType = response.obj.type;\n                if (wsdlType === 'WSDL') {\n                    this.loadWSDLInEditor(api);\n                } else {\n                    this.setState({ isArchive: true, wsdl: null });\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.WSDL.error.loading.wsdl.info',\n                        defaultMessage: 'Error loading WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads and loads the API's WSDL in the editor. If the WSDL is ZIP, the operation is skipped\n     * and it is indicated in the UI.\n     *\n     *  @param {boolean} isArchive states whether the WSDL is a ZIP\n     */\n    setSchemaDefinition = (isArchive) => {\n        this.setState({ isArchive, wsdl: null });\n        if (!isArchive) {\n            const { api } = this.props;\n            this.loadWSDLInEditor(api);\n        }\n    }\n\n    /**\n     * Downloads and loads the API's WSDL in the editor.\n     *\n     * @param {*} api API\n     */\n    loadWSDLInEditor(api) {\n        const { intl } = this.props;\n        const promisedApi = api.getWSDL(api.id);\n\n        promisedApi\n            .then((response) => {\n                response.data.text().then((text) => {\n                    this.setState({\n                        isArchive: false,\n                        wsdl: text,\n                    });\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.APIDefinition.WSDL.error.loading.wsdl',\n                        defaultMessage: 'Error loading WSDL',\n                    }));\n                }\n            });\n    }\n\n    /**\n     * Downloads WSDL ZIP file.\n     *\n     */\n    handleDownloadWSDLZip() {\n        const { api, intl } = this.props;\n        const wsdlZipContent = api.getWSDL(api.id);\n        wsdlZipContent.then((response) => {\n            Utils.forceDownload(response);\n        })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.APIDefinition.WSDL.download.error',\n                    defaultMessage: 'Error downloading WSDL ZIP file',\n                }));\n            });\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            wsdl, notFound, isArchive,\n        } = this.state;\n        const { classes, resourceNotFountMessage, api } = this.props;\n\n        const editorOptions = {\n            selectOnLineNumbers: true,\n            readOnly: true,\n            smoothScrolling: true,\n            wordWrap: 'on',\n            cursorStyle: 'line-thin',\n        };\n\n        if (notFound) {\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        if (!isArchive && !wsdl) {\n            return <Progress />;\n        }\n\n        let downloadWidget;\n        const downloadButtonContent = (\n            <>\n                <CloudDownloadRounded className={classes.buttonIcon} />\n                <FormattedMessage\n                    id='Apis.Details.APIDefinition.WSDL.download.definition'\n                    defaultMessage='Download WSDL'\n                />\n            </>\n        );\n        if (!isArchive) {\n            const downloadLink = 'data:text/xml;charset=utf-8,' + encodeURIComponent(wsdl);\n            const fileName = api.name + '-' + api.version + '.wsdl';\n            downloadWidget = (\n                <a className={classes.downloadLink} href={downloadLink} download={fileName}>\n                    <Button size='small' className={classes.button}>\n                        {downloadButtonContent}\n                    </Button>\n                </a>\n            );\n        } else {\n            downloadWidget = (\n                <Button size='small' className={classes.button} onClick={this.handleDownloadWSDLZip}>\n                    {downloadButtonContent}\n                </Button>\n            );\n        }\n\n        return (\n            <>\n                <div className={classes.topBar}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDefinition.WSDL.wsdl.definition'\n                                defaultMessage='WSDL Definition'\n                            />\n                        </Typography>\n                        <ImportDefinition setSchemaDefinition={this.setSchemaDefinition} />\n                        {downloadWidget}\n                        {isRestricted(['apim:api_create'], api) && (\n                            <Typography variant='body2' color='primary'>\n                                <FormattedMessage\n                                    id='Apis.Details.APIDefinition.WSDL.update.not.allowed'\n                                    defaultMessage='Unauthorized: Insufficient permissions to update WSDL Definition'\n                                />\n                            </Typography>\n                        )}\n                    </div>\n                </div>\n                <div>\n                    <Suspense fallback={<Progress />}>\n                        {isArchive ? (\n                            <InlineMessage type='info' height={80} className={classes.emptyBox}>\n                                <div className={classes.contentWrapper}>\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.APIDefinition.WSDL.preview.not.available'\n                                            defaultMessage='The API has a WSDL ZIP hence the preview is not available.'\n                                        />\n                                    </Typography>\n                                </div>\n                            </InlineMessage>\n                        ) : (\n                            <MonacoEditor\n                                language='xml'\n                                width='100%'\n                                height='calc(100vh - 51px)'\n                                theme='vs-dark'\n                                value={wsdl}\n                                options={editorOptions}\n                            />\n                        )}\n\n                    </Suspense>\n                </div>\n            </>\n        );\n    }\n}\n\nWSDL.contextType = AppContext;\nWSDL.propTypes = {\n    classes: PropTypes.shape({\n        button: PropTypes.shape({}),\n        popupHeader: PropTypes.shape({}),\n        buttonIcon: PropTypes.shape({}),\n        root: PropTypes.shape({}),\n        topBar: PropTypes.shape({}),\n        titleWrapper: PropTypes.shape({}),\n        mainTitle: PropTypes.shape({}),\n        converterWrapper: PropTypes.shape({}),\n        dropzone: PropTypes.shape({}),\n        downloadLink: PropTypes.shape({}),\n    }).isRequired,\n    api: PropTypes.shape({\n        updateSwagger: PropTypes.func,\n        getSwagger: PropTypes.func,\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    resourceNotFountMessage: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default withRouter(injectIntl(withStyles(styles, { withTheme: true })(WSDL)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nconst suggestions = {\n    common: [\n        {\n            label: 'Overview',\n            route: 'overview',\n        },\n        {\n            label: 'MetaData',\n            route: 'overview',\n        },\n        {\n            label: 'Runtime Configurations',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Transport Level Security',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Mutual SSL',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Design Configurations',\n            route: 'configuration',\n        },\n        {\n            label: 'Manage SSL Certificates',\n            route: 'configuration',\n        },\n        {\n            label: 'HTTP HTTPS enable disable',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Application Level Security',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable OAuth2',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable Basic Auth',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Enable/Disable Api Key',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Authorization Headers',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'CORS Configuration',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Backend Throughput',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Message Mediation',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Response',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Request',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Backend',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Access Control Allow Origins',\n            route: 'configuration',\n        },\n        {\n            label: 'Access Control Allow Headers',\n            route: 'configuration',\n        },\n        {\n            label: 'Access Control Allow Credentials',\n            route: 'configuration',\n        },\n        {\n            label: 'Response caching',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Publisher Access Control',\n            route: 'configuration',\n        },\n        {\n            label: 'Developer Portal Visibility',\n            route: 'configuration',\n        },\n        {\n            label: 'Tags',\n            route: 'configuration',\n        },\n        {\n            label: 'Default Version',\n            route: 'configuration',\n        },\n        {\n            label: 'Image',\n            route: 'configuration',\n        },\n        {\n            label: 'Description',\n            route: 'configuration',\n        },\n        {\n            label: 'Documents',\n            route: 'documents',\n        },\n        {\n            label: 'Add New Documents',\n            route: 'documents',\n        },\n        {\n            label: 'API Help',\n            route: 'documents',\n        },\n        {\n            label: 'Markdown Documents',\n            route: 'documents',\n        },\n        {\n            label: 'Business Information',\n            route: 'business info',\n        },\n        {\n            label: 'Business Owner',\n            route: 'business info',\n        },\n        {\n            label: 'Technical Owner',\n            route: 'business info',\n        },\n        {\n            label: 'Properties',\n            route: 'business info',\n        },\n        {\n            label: 'Subscriptions',\n            route: 'subscriptions',\n        },\n        {\n            label: 'Subscription Policies',\n            route: 'subscriptions',\n        },\n        {\n            label: 'Subscription Availability',\n            route: 'subscriptions',\n        },\n    ],\n    apiOnly: [\n        {\n            label: 'API Gateways',\n            route: 'environments',\n        },\n        {\n            label: 'Microgateway Labels',\n            route: 'environments',\n        },\n        {\n            label: 'Environments',\n            route: 'environments',\n        },\n        {\n            label: 'Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Publish API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Block API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Depricate API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Change Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Deploy as a Prototype API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Requirements',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Mediation Policies',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Monetization',\n            route: 'monetization',\n        },\n        {\n            label: 'Monetization Properties',\n            route: 'monetization',\n        },\n        {\n            label: 'Commercial Policies',\n            route: 'monetization',\n        },\n        {\n            label: 'Create New Version',\n            route: 'new_version',\n        },\n        {\n            label: 'Prototyped API',\n            route: 'endpoints',\n        },\n        {\n            label: 'AWS Lambda Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/HTTPS Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/SOAP Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Dynamic Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoint Security',\n            route: 'endpoints',\n        },\n        {\n            label: 'Certificates',\n            route: 'endpoints',\n        },\n        {\n            label: 'Production Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Sandbox Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Failover Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Load Balance Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Import API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Download API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Import Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Download Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Resources',\n            route: 'resources',\n        },\n        {\n            label: 'Resources Configuration',\n            route: 'resources',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'resources',\n        },\n        {\n            label: 'Operation Governance',\n            route: 'resources',\n        },\n        {\n            label: 'Scopes',\n            route: 'scopes',\n        },\n        {\n            label: 'Add New Scope',\n            route: 'scopes',\n        },\n        {\n            label: 'Schema validation',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Properties',\n            route: 'properties',\n        },\n    ],\n    productOnly: [\n        {\n            label: 'Product only feature',\n            route: 'configuration',\n        },\n        {\n            label: 'API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Import API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Download API Definition',\n            route: 'api definition',\n        },\n        {\n            label: 'Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Import Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'Download Swagger',\n            route: 'api definition',\n        },\n        {\n            label: 'OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OAS',\n            route: 'api definition',\n        },\n        {\n            label: 'OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Import OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Download OpenAPI',\n            route: 'api definition',\n        },\n        {\n            label: 'Resources',\n            route: 'resources',\n        },\n        {\n            label: 'Resources Configuration',\n            route: 'resources',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'resources',\n        },\n        {\n            label: 'Operation Governance',\n            route: 'resources',\n        },\n        {\n            label: 'Schema validation',\n            route: 'runtime-configuration',\n        },\n    ],\n    graphqlOnly: [\n        {\n            label: 'Operations',\n            route: 'operations',\n        },\n        {\n            label: 'Operation Type',\n            route: 'operations',\n        },\n        {\n            label: 'Operations Configuration',\n            route: 'operations',\n        },\n        {\n            label: 'Rate Limiting',\n            route: 'operations',\n        },\n        {\n            label: 'Schema Definition',\n            route: 'schema definition',\n        },\n        {\n            label: 'Scopes',\n            route: 'scopes',\n        },\n        {\n            label: 'Add New Scope',\n            route: 'scopes',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Environments',\n            route: 'environments',\n        },\n        {\n            label: 'API Gateways',\n            route: 'environments',\n        },\n        {\n            label: 'Microgateway Labels',\n            route: 'environments',\n        },\n        {\n            label: 'Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Publish API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Block API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Depricate API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Change Lifecycle',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Deploy as a Prototype API',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Requirements',\n            route: 'lifecycle',\n        },\n        {\n            label: 'Monetization',\n            route: 'monetization',\n        },\n        {\n            label: 'Monetization Properties',\n            route: 'monetization',\n        },\n        {\n            label: 'Commercial Policies',\n            route: 'monetization',\n        },\n        {\n            label: 'Create New Version',\n            route: 'new_version',\n        },\n        {\n            label: 'Prototyped API',\n            route: 'endpoints',\n        },\n        {\n            label: 'AWS Lambda Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/HTTPS Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'HTTP/SOAP Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Dynamic Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoint Security',\n            route: 'endpoints',\n        },\n        {\n            label: 'Certificates',\n            route: 'endpoints',\n        },\n        {\n            label: 'Production Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Sandbox Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Failover Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Load Balance Endpoint',\n            route: 'endpoints',\n        },\n        {\n            label: 'Endpoints',\n            route: 'endpoints',\n        },\n        {\n            label: 'Fault',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Endpoints',\n            route: 'runtime-configuration',\n        },\n        {\n            label: 'Properties',\n            route: 'properties',\n        },\n    ],\n};\nexport default suggestions;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint object-shorthand: 0 */\n/* eslint jsx-a11y/click-events-have-key-events: 0 */\n\n/* eslint no-unused-expressions: 0 */\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport deburr from 'lodash/deburr';\nimport Downshift from 'downshift';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport suggestions from './RouteMappings';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        height: 250,\n    },\n    container: {\n        flexGrow: 1,\n        position: 'relative',\n    },\n    paper: {\n        position: 'absolute',\n        zIndex: theme.zIndex.goToSearch,\n        marginTop: theme.spacing(1),\n        left: 0,\n        right: 0,\n    },\n    chip: {\n        margin: theme.spacing(0.5, 0.25),\n    },\n    inputRoot: {\n        flexWrap: 'wrap',\n    },\n    inputInput: {\n        width: 'auto',\n        flexGrow: 1,\n    },\n    divider: {\n        height: theme.spacing(2),\n    },\n    linkButton: {\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        padding: 10,\n        cursor: 'pointer',\n        minWidth: 30,\n    },\n    goToWrapper: {\n        position: 'relative',\n    },\n    downshiftWrapper: {\n        position: 'absolute',\n        padding: theme.spacing(1),\n        right: 60,\n        top: 0,\n        width: 300,\n        background: 'white',\n        border: 'solid 1px #ccc',\n        borderRadius: 5,\n    },\n}));\n\n/**\n * Method to render the input of the user\n * @param {*} inputProps inputProps\n * @returns {*} TextField\n */\nfunction renderInput(inputProps) {\n    const {\n        InputProps, classes, ref, ...other\n    } = inputProps;\n\n    return (\n        <TextField\n            autoFocus\n            InputProps={{\n                inputRef: ref,\n                classes: {\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                },\n                ...InputProps,\n            }}\n            {...other}\n        />\n    );\n}\n\nrenderInput.propTypes = {\n    /**\n     * Override or extend the styles applied to the component.\n     */\n    classes: PropTypes.shape({}).isRequired,\n    InputProps: PropTypes.shape({}).isRequired,\n};\n\n/**\n * Method to render the suggestions\n * @param {*} suggestionProps suggestionProps\n * @returns {*} ListItem list of suggestions\n */\nfunction renderSuggestion(suggestionProps) {\n    const {\n        suggestion, index, itemProps, highlightedIndex, api, isAPIProduct, handleClickAway,\n    } = suggestionProps;\n    const isHighlighted = highlightedIndex === index;\n\n    const route = (isAPIProduct\n        ? (`/api-products/${api.id}/${suggestion.route}`)\n        : (`/apis/${api.id}/${suggestion.route}`));\n    return (\n        <Link\n            to={route}\n            onClick={handleClickAway}\n        >\n            <ListItem\n                key={suggestion.label}\n                {...itemProps}\n                selected={isHighlighted}\n                button\n                aria-haspopup='true'\n                aria-controls='lock-menu'\n                aria-label='when device is locked'\n            >\n                <ListItemText primary={suggestion.label} secondary={suggestion.route} />\n            </ListItem>\n        </Link>\n    );\n}\n\nrenderSuggestion.propTypes = {\n    highlightedIndex: PropTypes.oneOfType([PropTypes.oneOf([null]), PropTypes.number]).isRequired,\n    index: PropTypes.number.isRequired,\n    itemProps: PropTypes.shape({}).isRequired,\n    selectedItem: PropTypes.string.isRequired,\n    suggestion: PropTypes.shape({\n        label: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\n/**\n * Method to retrieve suggestions\n * @param {*} value Value of suggestion\n * @param {*} isAPIProduct Boolean to check if it is an APIProduct\n * @param {*} param2 showEmpty\n * @returns {*} filter\n */\nfunction getSuggestions(value, isAPIProduct, isGraphQL, { showEmpty = false } = {}) {\n    const inputValue = deburr(value.trim()).toLowerCase();\n    const inputLength = inputValue.length;\n    let count = 0;\n    const newSuggestions = [...suggestions.common];\n\n    if (isAPIProduct) {\n        newSuggestions.push(...suggestions.productOnly);\n    } else if (isGraphQL) {\n        newSuggestions.push(...suggestions.graphqlOnly);\n    } else {\n        newSuggestions.push(...suggestions.apiOnly);\n    }\n\n    return inputLength === 0 && !showEmpty\n        ? []\n        : newSuggestions.filter((suggestion) => {\n            const keep = count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\n\n            if (keep) {\n                count += 1;\n            }\n\n            return keep;\n        });\n}\n\n\n/**\n * Method to render the GoTo search feature\n * @param {*} props props param\n * @returns {*} Downshift element\n */\nfunction GoTo(props) {\n    const { isAPIProduct, api } = props;\n    const classes = useStyles();\n    const [showSearch, setShowSearch] = useState(false);\n    let isGraphQL = false;\n\n    if (api.type === 'GRAPHQL') {\n        isGraphQL = true;\n    }\n    const toggleSearch = () => {\n        setShowSearch(!showSearch);\n    };\n    const handleClickAway = () => {\n        setShowSearch(false);\n    };\n\n    return (\n        <ClickAwayListener onClickAway={handleClickAway}>\n            <div className={classes.goToWrapper}>\n                <a className={classes.linkButton} onClick={toggleSearch}>\n                    <Icon>find_in_page</Icon>\n                    <Typography variant='caption'>\n                        <FormattedMessage id='Apis.Details.GoTo.GoTo.btn' defaultMessage='Go To' />\n                    </Typography>\n                </a>\n                {showSearch && (\n                    <div className={classes.downshiftWrapper}>\n                        <Downshift id='downshift-simple'>\n                            {({\n                                getInputProps,\n                                getItemProps,\n                                getLabelProps,\n                                getMenuProps,\n                                highlightedIndex,\n                                inputValue,\n                                isOpen,\n                                selectedItem,\n                            }) => {\n                                const { onBlur, onFocus, ...inputProps } = getInputProps({\n                                    placeholder: 'Type what you want to do..',\n                                });\n\n                                return (\n                                    <div className={classes.container}>\n                                        {renderInput({\n                                            fullWidth: true,\n                                            classes,\n                                            label: 'Go to menu item',\n                                            InputLabelProps: getLabelProps({ shrink: true }),\n                                            InputProps: { onBlur, onFocus },\n                                            inputProps,\n                                        })}\n\n                                        <div {...getMenuProps()}>\n                                            {isOpen ? (\n                                                <Paper className={classes.paper} square>\n                                                    {getSuggestions(inputValue, isAPIProduct, isGraphQL)\n                                                        .map((suggestion, index) => renderSuggestion({\n                                                            suggestion,\n                                                            index,\n                                                            itemProps: getItemProps({ item: suggestion.label }),\n                                                            highlightedIndex,\n                                                            selectedItem,\n                                                            handleClickAway: handleClickAway,\n                                                            ...props,\n                                                        }))}\n                                                </Paper>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                );\n                            }}\n                        </Downshift>\n                    </div>\n                )}\n            </div>\n        </ClickAwayListener>\n    );\n}\n\nGoTo.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default GoTo;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n\nimport LibraryAdd from '@material-ui/icons/LibraryAdd';\nimport PropTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\n\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    createNewVersionWrapper: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    createNewVersion: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        color: theme.custom.createNewVersionButtonColor || 'inherit',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n});\n\n/**\n *\n * Function to create a 'CreateNewVersion' button\n *\n * @param {any} props props\n * @returns {*} React CreateNewVersion function component\n * @constructor\n */\nfunction CreateNewVersionButton(props) {\n    const { api, classes } = props;\n    return (\n        <>\n            {/* allowing create new version based on scopes */}\n            <ScopeValidation resourceMethod={resourceMethod.POST} resourcePath={resourcePath.API_COPY}>\n                <div className={classes.createNewVersionWrapper}>\n                    <VerticalDivider height={70} />\n                    <Link\n                        className={classes.createNewVersion}\n                        to={'/apis/' + api.id + '/new_version'}\n                        style={{ minWidth: 95 }}\n                    >\n\n                        <div>\n                            <LibraryAdd />\n                        </div>\n                        <Typography variant='caption'>\n                            <FormattedMessage\n                                id='Apis.Details.components.CreateNewVersionButton.create.new.version'\n                                defaultMessage='Create New Version'\n                            />\n                        </Typography>\n                    </Link>\n                </div>\n            </ScopeValidation>\n        </>\n    );\n}\n\nCreateNewVersionButton.propTypes = {\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(CreateNewVersionButton));\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nimport Utils from 'AppData/Utils';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport CloudDownloadRounded from '@material-ui/icons/CloudDownloadRounded';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport ApiContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport ThumbnailView from 'AppComponents/Apis/Listing/components/ImageGenerator/ThumbnailView';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport GoTo from 'AppComponents/Apis/Details/GoTo/GoTo';\nimport API from 'AppData/api';\nimport DeleteApiButton from './DeleteApiButton';\nimport CreateNewVersionButton from './CreateNewVersionButton';\n\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    viewInStoreLauncher: {\n        display: 'flex',\n        flexDirection: 'column',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        textAlign: 'center',\n        justifyContent: 'center',\n        height: 70,\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n    dateWrapper: {\n        flex: 1,\n        alignSelf: 'center',\n    },\n    lastUpdatedTypography: {\n        display: 'inline-block',\n        minWidth: 30,\n    },\n    apiName: {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    downloadApi: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        height: 70,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    downloadApiFlex: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n});\n\n\nconst APIDetailsTopMenu = (props) => {\n    const {\n        classes, theme, api, isAPIProduct, imageUpdate, intl,\n    } = props;\n    const isVisibleInStore = ['PROTOTYPED', 'PUBLISHED'].includes(api.lifeCycleStatus);\n    /**\n * The component for advanced endpoint configurations.\n * @param {string} name The name of the\n * @param {string} version Version of the API\n * @param {string} provider Provider of the API\n * @param {string} format Weather to recive files in YALM of JSON format\n * @returns {zip} Zpi file containing the API directory.\n */\n    function exportAPI() {\n        const restApi = new API();\n        return restApi.exportApi(api.id).then((zipFile) => {\n            return Utils.forceDownload(zipFile);\n        }).catch((error) => {\n            if (error.response) {\n                Alert.error(error.response.body.description);\n            } else {\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.components.APIDetailsTopMenu.error',\n                    defaultMessage: 'Something went wrong while downloading the API.',\n                }));\n            }\n            console.error(error);\n        });\n    }\n\n    const isDownlodable = ['API'].includes(api.apiType);\n    const { settings, user } = useAppContext();\n    const { tenantList } = useContext(ApiContext);\n    const userNameSplit = user.name.split('@');\n    const tenantDomain = userNameSplit[userNameSplit.length - 1];\n    let devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview`;\n    if (tenantList && tenantList.length > 0) {\n        devportalUrl = `${settings.storeUrl}/apis/${api.id}/overview?tenant=${tenantDomain}`;\n    }\n    // todo: need to support rev proxy ~tmkb\n    return (\n        <div className={classes.root}>\n            <Link\n                to={isAPIProduct\n                    ? `/api-products/${api.id}/overview`\n                    : `/apis/${api.id}/overview`}\n                className={classes.backLink}\n            >\n                <ThumbnailView api={api} width={70} height={50} imageUpdate={imageUpdate} />\n                <div style={{ marginLeft: theme.spacing(1), maxWidth: 500 }}>\n                    <Typography variant='h4' className={classes.apiName}>\n                        {api.name}\n                        {' '}\n                        {isAPIProduct ? '' : ':' + api.version}\n                    </Typography>\n                    <Typography variant='caption' gutterBottom align='left'>\n                        <FormattedMessage\n                            id='Apis.Details.components.APIDetailsTopMenu.created.by'\n                            defaultMessage='Created by:'\n                        />\n                        {' '}\n                        {api.provider}\n                    </Typography>\n                </div>\n            </Link>\n            <VerticalDivider height={70} />\n            <div className={classes.infoItem}>\n                <Typography variant='subtitle1'>{isAPIProduct ? api.state : api.lifeCycleStatus}</Typography>\n                <Typography variant='caption' align='left'>\n                    <FormattedMessage\n                        id='Apis.Details.components.APIDetailsTopMenu.state'\n                        defaultMessage='State'\n                    />\n                </Typography>\n            </div>\n            <div className={classes.dateWrapper} />\n            <VerticalDivider height={70} />\n            <GoTo api={api} isAPIProduct={isAPIProduct} />\n            {(isVisibleInStore || isAPIProduct) && <VerticalDivider height={70} />}\n            {(isVisibleInStore || isAPIProduct) && (\n                <a\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    href={devportalUrl}\n                    className={classes.viewInStoreLauncher}\n                    style={{ minWidth: 90 }}\n                >\n                    <div>\n                        <LaunchIcon />\n                    </div>\n                    <Typography variant='caption'>\n                        <FormattedMessage\n                            id='Apis.Details.components.APIDetailsTopMenu.view.in.portal'\n                            defaultMessage='View in Dev Portal'\n                        />\n                    </Typography>\n                </a>\n            )}\n            {/* Page error banner */}\n            {/* end of Page error banner */}\n            {isAPIProduct ? null : <CreateNewVersionButton buttonClass={classes.viewInStoreLauncher} api={api} />}\n            {(isDownlodable) && <VerticalDivider height={70} />}\n            <div className={classes.downloadApi}>\n                {(isDownlodable) && (\n                    <a\n                        onClick={exportAPI}\n                        onKeyDown='null'\n                        className={classes.downloadApiFlex}\n                    >\n                        <div>\n                            <CloudDownloadRounded />\n                        </div>\n                        <Typography variant='caption' align='left'>\n                            <FormattedMessage\n                                id='Apis.Details.APIDetailsTopMenu.download.api'\n                                defaultMessage='Download API'\n                            />\n                        </Typography>\n                    </a>\n                )}\n            </div>\n            <DeleteApiButton buttonClass={classes.viewInStoreLauncher} api={api} isAPIProduct={isAPIProduct} />\n        </div>\n    );\n};\n\nAPIDetailsTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({}).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    imageUpdate: PropTypes.number.isRequired,\n};\n\n\n// export default withStyles(styles, { withTheme: true })(APIDetailsTopMenu);\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(APIDetailsTopMenu));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api.js';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport APIValidation from 'AppData/APIValidation';\n\nconst styles = (theme) => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    paperRoot: {\n        padding: 20,\n        marginTop: 20,\n    },\n});\n\n/**\n *\n *\n * @class BusinessInformation\n * @extends {React.Component}\n */\nclass BusinessInformation extends React.Component {\n    /**\n     *Creates an instance of BusinessInformation.\n     * @param {*} props\n     * @memberof BusinessInformation\n     */\n    constructor(props) {\n        super(props);\n        const {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        } = this.props.api.businessInformation;\n        this.state = {\n            businessOwner,\n            businessOwnerEmail,\n            technicalOwner,\n            technicalOwnerEmail,\n        };\n        this.isFormUpdated = false;\n        this.isValidBusinessOwnerEmail = true;\n        this.isValidTechnicalOwnerEmail = true;\n    }\n\n    isValid = () => {\n        return (this.isValidBusinessOwnerEmail && this.isValidTechnicalOwnerEmail && this.isFormUpdated);\n    }\n\n    handleChange = (name) => (event) => {\n        let { value } = event.target;\n        const { checked } = event.target;\n        if (name === 'accessControlRoles' || name === 'visibleRoles') {\n            value = value.split(',');\n        } else if (name === 'isDefaultVersion') {\n            value = value === 'yes';\n        } else if (name === 'responseCaching') {\n            value = checked ? 'Enabled' : 'Disabled';\n        }\n        // Validate whether given email addresses are valid.\n        if (name === 'businessOwnerEmail') {\n            const emailStatus = APIValidation.email.validate(value).error;\n            this.isValidBusinessOwnerEmail = (emailStatus === null || value === '');\n        }\n        if (name === 'technicalOwnerEmail') {\n            const emailStatus = APIValidation.email.validate(value).error;\n            this.isValidTechnicalOwnerEmail = (emailStatus === null || value === '');\n        }\n        this.isFormUpdated = true;\n        this.setState({ [name]: value });\n    };\n\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof BusinessInformation\n     */\n    handleSubmit(updateAPI) {\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n        const businessInformation = {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        };\n        updateAPI({ businessInformation });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns\n     * @memberof BusinessInformation\n     */\n    render() {\n        const { classes, api, updateAPI } = this.props;\n        const {\n            businessOwner, businessOwnerEmail, technicalOwner, technicalOwnerEmail,\n        } = this.state;\n\n        return (\n            <>\n                <Container maxWidth='md'>\n                    <Box mb={3}>\n                        <Typography variant='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.BusinessInformation.BusinessInformation.business.info'\n                                defaultMessage='Business Information'\n                            />\n                        </Typography>\n                        {api.apiType === API.CONSTS.APIProduct\n                            ? (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.BusinessInformation.BusinessInformation.APIProduct.sub.heading'\n                                        defaultMessage='Business Information of the API'\n                                    />\n                                </Typography>\n                            )\n                            : (\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        id='Apis.Details.BusinessInformation.BusinessInformation.sub.heading'\n                                        defaultMessage='Business Information of the API'\n                                    />\n                                </Typography>\n                            )}\n                    </Box>\n                    <Paper elevation={0}>\n                        <Box px={8} py={5}>\n                            <form noValidate autoComplete='off'>\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                    + '.business.owner.name'\n                                                }\n                                                defaultMessage='Business Owner'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the business owner'\n                                        />\n                                    )}\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    variant='outlined'\n                                    value={businessOwner}\n                                    onChange={this.handleChange('businessOwner')}\n                                    autoFocus\n                                />\n                                <TextField\n                                    error={!this.isValidBusinessOwnerEmail}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation.'\n                                                    + 'business.owner.email'\n                                                }\n                                                defaultMessage='Business Owner Email'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={this.isValidBusinessOwnerEmail\n                                        ? (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.email.helper.text'\n                                                }\n                                                defaultMessage='Provide the email of the business owner'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.business.owner.email.helper.text'\n                                                + '.error'\n                                                }\n                                                defaultMessage='Please enter a valid email address'\n                                            />\n                                        )}\n                                    type='email'\n                                    name='name'\n                                    margin='normal'\n                                    value={businessOwnerEmail}\n                                    onChange={this.handleChange('businessOwnerEmail')}\n                                    variant='outlined'\n                                />\n                                <TextField\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <>\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                    + '.technical.owner.name'\n                                                }\n                                                defaultMessage='Technical Owner'\n                                            />\n                                        </>\n                                    )}\n                                    helperText={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.name.helper.text'\n                                            }\n                                            defaultMessage='Provide the name of the technical owner'\n                                        />\n                                    )}\n                                    type='text'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwner}\n                                    onChange={this.handleChange('technicalOwner')}\n                                    variant='outlined'\n                                />\n                                <TextField\n                                    error={!this.isValidTechnicalOwnerEmail}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                    fullWidth\n                                    id='name'\n                                    label={(\n                                        <FormattedMessage\n                                            id={\n                                                'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email'\n                                            }\n                                            defaultMessage='Technical Owner Email'\n                                        />\n                                    )}\n                                    helperText={this.isValidTechnicalOwnerEmail\n                                        ? (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email.helper.text'\n                                                }\n                                                defaultMessage='Provide the email of the technical owner'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                id={\n                                                    'Apis.Details.BusinessInformation.BusinessInformation'\n                                                + '.technical.owner.email.helper.text'\n                                                + '.error'\n                                                }\n                                                defaultMessage='Please enter a valid email address'\n                                            />\n                                        )}\n                                    type='email'\n                                    name='name'\n                                    margin='normal'\n                                    value={technicalOwnerEmail}\n                                    onChange={this.handleChange('technicalOwnerEmail')}\n                                    variant='outlined'\n                                />\n                            </form>\n                            <div className={classes.buttonWrapper}>\n                                <Grid\n                                    container\n                                    direction='row'\n                                    alignItems='flex-start'\n                                    spacing={1}\n                                    className={classes.buttonSection}\n                                >\n                                    <Grid item>\n                                        <div>\n                                            <Button\n                                                variant='contained'\n                                                color='primary'\n                                                onClick={() => this.handleSubmit(updateAPI)}\n                                                disabled={\n                                                    isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                                    || !this.isValid()\n                                                }\n                                            >\n                                                <FormattedMessage id='save' defaultMessage='Save' />\n                                            </Button>\n                                        </div>\n                                    </Grid>\n                                    <Grid item>\n                                        <Link\n                                            to={\n                                                (api.apiType === API.CONSTS.APIProduct ? '/api-products/' : '/apis/')\n                                                + api.id\n                                                + '/overview'\n                                            }\n                                        >\n                                            <Button>\n                                                <FormattedMessage id='cancel' defaultMessage='Cancel' />\n                                            </Button>\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        </Box>\n                    </Paper>\n                </Container>\n            </>\n        );\n    }\n}\n\nBusinessInformation.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        businessInformation: PropTypes.shape({\n            businessOwner: PropTypes.string,\n            businessOwnerEmail: PropTypes.string,\n            technicalOwner: PropTypes.string,\n            technicalOwnerEmail: PropTypes.string,\n            apiType: PropTypes.oneOf([API.CONSTS.API, API.CONSTS.APIProduct]),\n        }).isRequired,\n    }).isRequired,\n    updateAPI: PropTypes.func.isRequired,\n};\n\nexport default withAPI(withStyles(styles)(BusinessInformation));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { injectIntl } from 'react-intl';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles(() => ({\n    link: {\n        cursor: 'pointer',\n    },\n}));\n\n/**\n *\n * @param {*} props properties\n */\nfunction EditableRow(props) {\n    const {\n        oldKey, oldValue, handleUpdateList, handleDelete, apiAdditionalProperties, intl, setEditing, isRestricted, api,\n    } = props;\n    const [newKey, setKey] = useState(oldKey);\n    const [newValue, setValue] = useState(oldValue);\n    const [editMode, setEditMode] = useState(false);\n\n    const updateEditMode = function () {\n        setEditMode(!editMode);\n        setEditing(true);\n    };\n    const handleKeyChange = (event) => {\n        const { value } = event.target;\n        setKey(value);\n    };\n    const handleValueChange = (event) => {\n        const { value } = event.target;\n        setValue(value);\n    };\n    const validateEmpty = function (itemValue) {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n    const saveRow = function () {\n        const oldRow = { oldKey, oldValue };\n        const newRow = { newKey: newKey || oldKey, newValue: newValue || oldValue };\n        handleUpdateList(oldRow, newRow);\n        setEditMode(false);\n        setEditing(false);\n    };\n    const deleteRow = function () {\n        handleDelete(apiAdditionalProperties, oldKey);\n    };\n    const handleKeyDown = function (e) {\n        if (e.key === 'Enter') {\n            saveRow();\n        }\n    };\n    const classes = useStyles();\n\n    return (\n        <TableRow>\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Properties.Properties.editable.row.property.name',\n                            defaultMessage: 'Property Name',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newKey}\n                        onChange={handleKeyChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newKey)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldKey}</TableCell>\n            )}\n            {editMode ? (\n                <TableCell>\n                    <TextField\n                        fullWidth\n                        required\n                        id='outlined-required'\n                        label={intl.formatMessage({\n                            id: 'Apis.Details.Properties.Properties.editable.row.edit.mode.property.name',\n                            defaultMessage: 'Property Name',\n                        })}\n                        margin='normal'\n                        variant='outlined'\n                        className={classes.addProperty}\n                        value={newValue}\n                        onChange={handleValueChange}\n                        onKeyDown={handleKeyDown}\n                        error={validateEmpty(newValue)}\n                    />\n                </TableCell>\n            ) : (\n                <TableCell>{oldValue}</TableCell>\n            )}\n            <TableCell align='right'>\n                {editMode ? (\n                    <>\n                        <IconButton\n                            className={classes.link}\n                            aria-label='save'\n                            onClick={saveRow}\n                            onKeyDown={() => {}}\n                            disabled={validateEmpty(newKey) || validateEmpty(newValue)}\n                            color='inherit'\n                        >\n                            <SaveIcon className={classes.buttonIcon} />\n                        </IconButton>\n                    </>\n                ) : (\n                    <IconButton\n                        className={classes.link}\n                        aria-label='edit'\n                        onClick={updateEditMode}\n                        onKeyDown={() => {}}\n                        color='inherit'\n                        disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <EditIcon className={classes.buttonIcon} />\n                    </IconButton>\n                )}\n                <IconButton\n                    className={classes.link}\n                    aria-label='remove'\n                    onClick={deleteRow}\n                    onKeyDown={() => {}}\n                    color='inherit'\n                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                >\n                    <DeleteForeverIcon className={classes.buttonIcon} />\n                </IconButton>\n            </TableCell>\n        </TableRow>\n    );\n}\nEditableRow.propTypes = {\n    oldKey: PropTypes.shape({}).isRequired,\n    oldValue: PropTypes.shape({}).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    handleUpdateList: PropTypes.shape({}).isRequired,\n    handleDelete: PropTypes.shape({}).isRequired,\n    apiAdditionalProperties: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    setEditing: PropTypes.func.isRequired,\n};\n\nexport default injectIntl(EditableRow);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable react/jsx-no-bind */\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport cloneDeep from 'lodash.clonedeep';\nimport isEmpty from 'lodash.isempty';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport AddCircle from '@material-ui/icons/AddCircle';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport APIContext, { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport API from 'AppData/api.js';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport { isRestricted } from 'AppData/AuthManager';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport EditableRow from './EditableRow';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingTop: 0,\n        paddingLeft: 0,\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    titleWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    button: {\n        marginLeft: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.primary.main),\n    },\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 0,\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    buttonWrapper: {\n        paddingTop: theme.spacing(3),\n    },\n    paperRoot: {\n        padding: theme.spacing(3),\n        marginTop: theme.spacing(3),\n    },\n    addNewHeader: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.grey['300'],\n        fontSize: theme.typography.h6.fontSize,\n        color: theme.typography.h6.color,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    addNewOther: {\n        padding: theme.spacing(2),\n    },\n    addNewWrapper: {\n        backgroundColor: theme.palette.background.paper,\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px ' + theme.palette.grey['300'],\n        borderRadius: theme.shape.borderRadius,\n        marginTop: theme.spacing(2),\n    },\n    addProperty: {\n        marginRight: theme.spacing(2),\n    },\n    buttonIcon: {\n        marginRight: theme.spacing(1),\n    },\n    link: {\n        cursor: 'pointer',\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    marginRight: {\n        marginRight: theme.spacing(1),\n    },\n    helpText: {\n        paddingTop: theme.spacing(1),\n    },\n}));\n\n/**\n *\n *\n * @class Properties\n * @extends {React.Component}\n */\nfunction Properties(props) {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     */\n    const { api, updateAPI } = useContext(APIContext);\n    const additionalPropertiesTemp = cloneDeep(api.additionalProperties);\n\n    const [additionalProperties, setAdditionalProperties] = useState(additionalPropertiesTemp);\n    const [showAddProperty, setShowAddProperty] = useState(false);\n    const [propertyKey, setPropertyKey] = useState(null);\n    const [propertyValue, setPropertyValue] = useState(null);\n    const [updating, setUpdating] = useState(false);\n    const [editing, setEditing] = useState(false);\n    const [isAdditionalPropertiesStale, setIsAdditionalPropertiesStale] = useState(false);\n    const iff = (condition, then, otherwise) => (condition ? then : otherwise);\n\n    let isKeyWord = false;\n    const keywords = ['provider', 'version', 'context', 'status', 'description',\n        'subcontext', 'doc', 'lcState', 'name', 'tags'];\n    if (keywords.includes(propertyKey)) {\n        isKeyWord = true;\n    } else {\n        isKeyWord = false;\n    }\n\n    const toggleAddProperty = () => {\n        setShowAddProperty(!showAddProperty);\n    };\n    const handleChange = (name) => (event) => {\n        const { value } = event.target;\n        if (name === 'propertyKey') {\n            setPropertyKey(value);\n        } else if (name === 'propertyValue') {\n            setPropertyValue(value);\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} itemValue\n     * @returns\n     * @memberof Properties\n     */\n    const validateEmpty = (itemValue) => {\n        if (itemValue === null) {\n            return false;\n        } else if (itemValue === '') {\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} oldAPI\n     * @param {*} updateAPI\n     * @memberof Properties\n     */\n    const handleSubmit = () => {\n        setUpdating(true);\n        const updatePromise = updateAPI({ additionalProperties });\n        updatePromise\n            .then(() => {\n                setUpdating(false);\n            })\n            .catch((error) => {\n                setUpdating(false);\n                if (process.env.NODE_ENV !== 'production') console.log(error);\n                const { status } = error;\n                if (status === 401) {\n                    doRedirectToLogin();\n                }\n            });\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldKey\n     * @memberof Properties\n     */\n    const handleDelete = (apiAdditionalProperties, oldKey) => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesCopy, oldKey)) {\n            delete additionalPropertiesCopy[oldKey];\n        }\n        setAdditionalProperties(additionalPropertiesCopy);\n\n        if (additionalPropertiesCopy !== additionalProperties) {\n            setIsAdditionalPropertiesStale(true);\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @param {*} oldRow\n     * @param {*} newRow\n     * @memberof Properties\n     */\n    const handleUpdateList = (oldRow, newRow) => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n\n        const { oldKey, oldValue } = oldRow;\n        const { newKey, newValue } = newRow;\n\n        if (Object.prototype.hasOwnProperty.call(additionalPropertiesCopy, newKey) && oldKey === newKey) {\n            // Only the value is updated\n            if (newValue && oldValue !== newValue) {\n                additionalPropertiesCopy[oldKey] = newValue;\n            }\n        } else {\n            delete additionalPropertiesCopy[oldKey];\n            additionalPropertiesCopy[newKey] = newValue;\n        }\n        setAdditionalProperties(additionalPropertiesCopy);\n    };\n\n    /**\n     *\n     *\n     * @param {*} apiAdditionalProperties\n     * @memberof Properties\n     */\n    const handleAddToList = () => {\n        const additionalPropertiesCopy = JSON.parse(JSON.stringify(additionalProperties));\n        if (additionalPropertiesCopy[propertyKey] != null) {\n            Alert.warning('Property name already exists');\n        } else {\n            additionalPropertiesCopy[propertyKey] = propertyValue;\n            setAdditionalProperties(additionalPropertiesCopy);\n            setPropertyKey(null);\n            setPropertyValue(null);\n        }\n    };\n\n    /**\n     *\n     *\n     * @memberof Properties\n     */\n    const handleKeyDown = (event) => {\n        if (event.key === 'Enter') {\n            handleAddToList();\n        }\n    };\n\n    /**\n     *\n     *\n     * @param {*} additionalProperties\n     * @param {*} apiAdditionalProperties\n     * @returns\n     * @memberof Properties\n     */\n    const renderAdditionalProperties = () => {\n        const items = [];\n        for (const key in additionalProperties) {\n            if (Object.prototype.hasOwnProperty.call(additionalProperties, key)) {\n                items.push(<EditableRow\n                    oldKey={key}\n                    oldValue={additionalProperties[key]}\n                    handleUpdateList={handleUpdateList}\n                    handleDelete={handleDelete}\n                    apiAdditionalProperties={additionalProperties}\n                    {...props}\n                    setEditing={setEditing}\n                    isRestricted={isRestricted}\n                    api={api}\n                />);\n            }\n        }\n        return items;\n    };\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Properties\n     */\n    const { intl } = props;\n    const classes = useStyles();\n\n    return (\n        <>\n            <div className={classes.titleWrapper}>\n                {api.apiType === API.CONSTS.APIProduct\n                    ? (\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Properties.Properties.api.product.properties'\n                                defaultMessage='API Properties'\n                            />\n                        </Typography>\n                    )\n                    : (\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.Properties.Properties.api.properties'\n                                defaultMessage='API Properties'\n                            />\n                        </Typography>\n                    )}\n\n                {(!isEmpty(additionalProperties) || showAddProperty) && (\n                    <Button\n                        size='small'\n                        className={classes.button}\n                        onClick={toggleAddProperty}\n                        disabled={showAddProperty || isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                    >\n                        <AddCircle className={classes.buttonIcon} />\n                        <FormattedMessage\n                            id='Apis.Details.Properties.Properties.add.new.property'\n                            defaultMessage='Add New Property'\n                        />\n                    </Button>\n                )}\n            </div>\n            <Typography variant='caption' component='div' className={classes.helpText}>\n                <FormattedMessage\n                    id='Apis.Details.Properties.Properties.help.main'\n                    defaultMessage={`Usually, APIs have a pre-defined set of properties such as \n                        the name, version, context, etc. API Properties allows you to \n                         add specific custom properties to the API.`}\n                />\n            </Typography>\n            {isEmpty(additionalProperties) && !isAdditionalPropertiesStale && !showAddProperty && (\n                <div className={classes.messageBox}>\n                    <InlineMessage type='info' height={140}>\n                        <div className={classes.contentWrapper}>\n                            <Typography variant='h5' component='h3' className={classes.head}>\n                                <FormattedMessage\n                                    id='Apis.Details.Properties.Properties.add.new.property.message.title'\n                                    defaultMessage='Create Additional Properties'\n                                />\n                            </Typography>\n                            {api.apiType === API.CONSTS.APIProduct\n                                ? (\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.APIProduct.\n                                            add.new.property.message.content'\n                                            defaultMessage={\n                                                'Add specific custom properties to your '\n                                        + 'API here.'\n                                            }\n                                        />\n                                    </Typography>\n                                )\n                                : (\n                                    <Typography component='p' className={classes.content}>\n                                        <FormattedMessage\n                                            id='Apis.Details.Properties.Properties.add.new.property.message.content'\n                                            defaultMessage={\n                                                'Add specific custom properties to your '\n                                        + 'API here.'\n                                            }\n                                        />\n                                    </Typography>\n                                )}\n                            <div className={classes.actions}>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    className={classes.button}\n                                    onClick={toggleAddProperty}\n                                    disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                >\n                                    <FormattedMessage\n                                        id='Apis.Details.Properties.Properties.add.new.property'\n                                        defaultMessage='Add New Property'\n                                    />\n                                </Button>\n                            </div>\n                        </div>\n                    </InlineMessage>\n                </div>\n            )}\n            {(!isEmpty(additionalProperties) || showAddProperty || isAdditionalPropertiesStale) && (\n                <Grid container spacing={7}>\n                    <Grid item xs={12}>\n                        <Paper className={classes.paperRoot}>\n                            <Table className={classes.table}>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.table'\n                                                defaultMessage='Property Name'\n                                            />\n                                        </TableCell>\n                                        <TableCell>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.add.new.property.value'\n                                                defaultMessage='Property Value'\n                                            />\n                                        </TableCell>\n                                        <TableCell />\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {showAddProperty && (\n                                        <>\n                                            <TableRow>\n                                                <TableCell>\n                                                    <TextField\n                                                        fullWidth\n                                                        required\n                                                        id='outlined-required'\n                                                        label={intl.formatMessage({\n                                                            id: `Apis.Details.Properties.Properties.\n                                                                show.add.property.property.name`,\n                                                            defaultMessage: 'Name',\n                                                        })}\n                                                        margin='normal'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={propertyKey === null ? '' : propertyKey}\n                                                        onChange={handleChange('propertyKey')}\n                                                        onKeyDown={handleKeyDown('propertyKey')}\n                                                        helperText={validateEmpty(propertyKey) ? ''\n                                                            : iff(isKeyWord, 'Invalid property name', '')}\n                                                        error={validateEmpty(propertyKey) || isKeyWord}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell>\n                                                    <TextField\n                                                        fullWidth\n                                                        required\n                                                        id='outlined-required'\n                                                        label={intl.formatMessage({\n                                                            id: 'Apis.Details.Properties.Properties.property.value',\n                                                            defaultMessage: 'Value',\n                                                        })}\n                                                        margin='normal'\n                                                        variant='outlined'\n                                                        className={classes.addProperty}\n                                                        value={propertyValue === null ? '' : propertyValue}\n                                                        onChange={handleChange('propertyValue')}\n                                                        onKeyDown={handleKeyDown('propertyValue')}\n                                                        error={validateEmpty(propertyValue)}\n                                                        disabled={isRestricted(\n                                                            ['apim:api_create', 'apim:api_publish'],\n                                                            api,\n                                                        )}\n                                                    />\n                                                </TableCell>\n                                                <TableCell align='right'>\n                                                    <Button\n                                                        variant='contained'\n                                                        color='primary'\n                                                        disabled={\n                                                            !propertyValue\n                                                            || !propertyKey\n                                                            || isRestricted(\n                                                                ['apim:api_create', 'apim:api_publish'], api,\n                                                            )\n                                                            || isKeyWord\n                                                        }\n                                                        onClick={handleAddToList}\n                                                        className={classes.marginRight}\n                                                    >\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.add'\n                                                            defaultMessage='Add'\n                                                        />\n                                                    </Button>\n\n                                                    <Button onClick={toggleAddProperty}>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.cancel'\n                                                            defaultMessage='Cancel'\n                                                        />\n                                                    </Button>\n                                                </TableCell>\n                                            </TableRow>\n                                            <TableRow>\n                                                <TableCell colSpan={3}>\n                                                    <Typography variant='caption'>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.Properties.Properties.help'\n                                                            defaultMessage={\n                                                                'Property name should be unique, should not contain '\n                                                                + 'spaces and cannot be any '\n                                                                + 'of the following reserved keywords : '\n                                                                + 'provider, version, context, status, description, '\n                                                                + 'subcontext, doc, lcState, name, tags.'\n                                                            }\n                                                        />\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        </>\n                                    )}\n                                    {renderAdditionalProperties()}\n                                </TableBody>\n                            </Table>\n                        </Paper>\n                        <div className={classes.buttonWrapper}>\n                            <Grid\n                                container\n                                direction='row'\n                                alignItems='flex-start'\n                                spacing={1}\n                                className={classes.buttonSection}\n                            >\n                                <Grid item>\n                                    <div>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            onClick={handleSubmit}\n                                            disabled={\n                                                editing || updating || (isEmpty(additionalProperties)\n                                                && !isAdditionalPropertiesStale)\n                                                || isRestricted(['apim:api_create', 'apim:api_publish'], api)\n                                            }\n                                        >\n                                            {updating && (\n                                                <>\n                                                    <CircularProgress size={20} />\n                                                    <FormattedMessage\n                                                        id='Apis.Details.Properties.Properties.updating'\n                                                        defaultMessage='Updating ...'\n                                                    />\n                                                </>\n                                            )}\n                                            {!updating && (\n                                                <FormattedMessage\n                                                    id='Apis.Details.Properties.Properties.save'\n                                                    defaultMessage='Save'\n                                                />\n                                            )}\n                                        </Button>\n                                    </div>\n                                </Grid>\n                                <Grid item>\n                                    <Link to={'/apis/' + api.id + '/overview'}>\n                                        <Button>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.cancel'\n                                                defaultMessage='Cancel'\n                                            />\n                                        </Button>\n                                    </Link>\n                                </Grid>\n                                {isRestricted(['apim:api_create', 'apim:api_publish'], api) && (\n                                    <Grid item xs={12}>\n                                        <Typography variant='body2' color='primary'>\n                                            <FormattedMessage\n                                                id='Apis.Details.Properties.Properties.update.not.allowed'\n                                                defaultMessage='*You are not authorized to update properties of\n                                                    the API due to insufficient permissions'\n                                            />\n                                        </Typography>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        </div>\n                    </Grid>\n                </Grid>\n            )}\n        </>\n    );\n}\n\nProperties.propTypes = {\n    state: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\nexport default withAPI(injectIntl(Properties));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Grid, Typography } from '@material-ui/core';\nimport Box from '@material-ui/core/Box';\nimport CheckIcon from '@material-ui/icons/Check';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Table from '@material-ui/core/Table';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport API from 'AppData/api';\nimport Banner from 'AppComponents/Shared/Banner';\nimport { Progress } from 'AppComponents/Shared';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n        paddingBottom: '10px',\n    },\n    margin: {\n        margin: theme.spacing(),\n    },\n    rightDataColumn: {\n        display: 'flex',\n        flex: 1,\n    },\n    grid: {\n        marginTop: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n    },\n    box: {\n        display: 'block',\n    },\n    tableCel: {\n        width: 50,\n    },\n    table: {\n        width: '100%',\n        border: 'solid 1px #ccc',\n    },\n    tableHeadCell: {\n        color: 'black',\n        background: theme.palette.grey[200],\n    },\n    stateWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    tableHeadTitle: {\n        flex: 1,\n        fontWeight: 'bold',\n    },\n});\n\n/**\n *\n *\n * @class BusinessPlans\n * @extends {Component}\n */\nclass BusinessPlans extends Component {\n    /**\n     *Creates an instance of BusinessPlans.\n     * @param {Object} props\n     * @memberof BusinessPlans\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            policies: [],\n            monetizedPolices: null,\n        };\n        this.monetizationQuery = this.monetizationQuery.bind(this);\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @memberof BusinessPlans\n     */\n    componentDidMount() {\n        const { api } = this.props;\n        api.getSubscriptionPolicies(api.id).then((policies) => {\n            const filteredPolicies = policies.filter((policy) => policy.tierPlan === 'COMMERCIAL');\n            this.setState({ policies: filteredPolicies });\n        });\n        api.getMonetization(api.id).then((status) => {\n            this.setState({ monetizedPolices: status.properties });\n        });\n    }\n\n    monetizationQuery(policyName) {\n        const { monetizedPolices } = this.state;\n        return policyName in monetizedPolices;\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} Policies / Business plans list\n     * @memberof BusinessPlans\n     */\n    render() {\n        const { policies, monetizedPolices } = this.state;\n        const { classes } = this.props;\n        if (monetizedPolices === null) {\n            return <Progress />;\n        }\n        const policiesList = policies.map((policy) => (\n            <Grid item xs={12}>\n                <Table className={classes.table}>\n                    <TableRow>\n                        <TableCell variant='head' colSpan={2} className={classes.tableHeadCell}>\n                            <Box display='flex'>\n                                <Typography component='div' className={classes.tableHeadTitle} variant='subtitle1'>\n                                    {policy.name}\n                                </Typography>\n                                {\n                                    this.monetizationQuery(policy.name) ? (\n                                        <div className={classes.stateWrapper}>\n                                            <div><CheckIcon color='primary' /></div>\n                                            <Typography component='div'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Monetization.BusinessPlans.monetized'\n                                                    defaultMessage='Monetized'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    ) : (\n                                        <div className={classes.stateWrapper}>\n                                            <div><CloseIcon color='error' /></div>\n                                            <Typography component='div'>\n                                                <FormattedMessage\n                                                    id='Apis.Details.Monetization.BusinessPlans.not.monetized'\n                                                    defaultMessage='Not Monetized'\n                                                />\n                                            </Typography>\n                                        </div>\n                                    )\n                                }\n                            </Box>\n                        </TableCell>\n                    </TableRow>\n                    {Object.keys(policy.monetizationAttributes).map((key) => {\n                        if (policy.monetizationAttributes[key] !== null) {\n                            return (\n                                <TableRow>\n                                    <TableCell className={classes.tableCel} align='left'>\n                                        <Typography component='p' variant='subtitle2'>\n                                            {key}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell align='left'>\n                                        {policy.monetizationAttributes[key]}\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        } else {\n                            return false;\n                        }\n                    })}\n\n                </Table>\n            </Grid>\n        ));\n        return (\n            <Grid container spacing={1}>\n                <Grid item xs={12}>\n                    <Typography variant='h6'>\n                        <FormattedMessage\n                            id='Apis.Details.Monetization.BusinessPlans.commercial.policies'\n                            defaultMessage='Commercial Policies'\n                        />\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container direction='row' spacing={3}>\n                        {policiesList}\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    {\n                        (policies.length > 0) ? (\n                            <Banner\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='info'\n                                message='Click Save to monetize all unmonetized policies'\n                            />\n                        ) : (\n                            <Banner\n                                disableActions\n                                dense\n                                paperProps={{ elevation: 1 }}\n                                type='info'\n                                message='No commercial policies to monetize'\n                            />\n                        )\n                    }\n                </Grid>\n            </Grid>\n        );\n    }\n}\n\nBusinessPlans.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(BusinessPlans);\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, Paper, Typography } from '@material-ui/core';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { isRestricted } from 'AppData/AuthManager';\n\nimport BusinessPlans from './BusinessPlans';\n\nconst styles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    margin: {\n        margin: theme.spacing(),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'left',\n        color: theme.palette.text.secondary,\n        paddingBottom: '10px',\n    },\n    grid: {\n        paddingLeft: '10px',\n        paddingRight: '10px',\n        paddingBottom: '10px',\n        minWidth: '50%',\n    },\n    button: {\n        margin: theme.spacing(),\n    },\n});\n\n/**\n *\n *\n * @class Monetization\n * @extends {Component}\n */\nclass Monetization extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            monetizationAttributes: [],\n            monStatus: null,\n            property: {},\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getMonetizationData();\n    }\n\n    getMonetizationData() {\n        const { api } = this.props;\n        if (api.apiType === 'APIProduct') {\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            apiProduct.getSettings().then((settings) => {\n                if (settings.monetizationAttributes != null) {\n                    this.setState({ monetizationAttributes: settings.monetizationAttributes });\n                }\n            });\n            apiProduct.getMonetization(this.props.api.id).then((status) => {\n                this.setState({ monStatus: status.enabled });\n            });\n        } else {\n            api.getSettings().then((settings) => {\n                if (settings.monetizationAttributes != null) {\n                    this.setState({ monetizationAttributes: settings.monetizationAttributes });\n                }\n            });\n            api.getMonetization(this.props.api.id).then((status) => {\n                this.setState({ monStatus: status.enabled });\n            });\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({ monStatus: event.target.checked });\n    };\n\n    handleInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState((oldState) => {\n            const { property } = oldState;\n            property[name] = value;\n            return { property };\n        });\n    };\n\n    /**\n     * Handles the submit action for configuring monetization\n     */\n    handleSubmit() {\n        const { api, intl } = this.props;\n        if (api.apiType === 'APIProduct') {\n            const properties = this.state.property;\n            const enabled = this.state.monStatus;\n            const body = {\n                enabled,\n                properties,\n            };\n            const apiProduct = new APIProduct(api.name, api.context, api.policies);\n            const promisedMonetization = apiProduct.configureMonetizationToApiProduct(api.id, body);\n            promisedMonetization.then((response) => {\n                const status = JSON.parse(response.data);\n                if (status.enabled) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.configured.successfully',\n                        defaultMessage: 'Monetization Enabled Successfully',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.disabled.successfully',\n                        defaultMessage: 'Monetization Disabled Successfully',\n                    }));\n                }\n                this.setState((cState) => ({ monStatus: !cState.monStatus }));\n            }).catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                        defaultMessage: 'Something went wrong while configuring monetization',\n                    }));\n                }\n            });\n        } else {\n            const properties = this.state.property;\n            const enabled = this.state.monStatus;\n            const body = {\n                enabled,\n                properties,\n            };\n            const promisedMonetizationConf = api.configureMonetizationToApi(this.props.api.id, body);\n            promisedMonetizationConf.then((response) => {\n                const status = JSON.parse(response.data);\n                if (status.enabled) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.configured.successfully',\n                        defaultMessage: 'Monetization Enabled Successfully',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.monetization.disabled.successfully',\n                        defaultMessage: 'Monetization Disabled Successfully',\n                    }));\n                }\n                this.setState((cState) => ({ monStatus: !cState.monStatus }));\n            }).catch((error) => {\n                console.error(error);\n                if (error.response) {\n                    Alert.error(error.response.body.description);\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.Monetization.Index.something.went.wrong.while.configuring.monetization',\n                        defaultMessage: 'Something went wrong while configuring monetization',\n                    }));\n                }\n            });\n        }\n    }\n\n    render() {\n        const { api, classes } = this.props;\n        const { monetizationAttributes, monStatus } = this.state;\n        if (api && isRestricted(['apim:api_publish'], api)) {\n            return (\n                <Grid\n                    container\n                    direction='row'\n                    alignItems='center'\n                    spacing={4}\n                    style={{ marginTop: 20 }}\n                >\n                    <Grid item>\n                        <Typography variant='body2' color='primary'>\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.update.not.allowed'\n                                defaultMessage={'* You are not authorized to update API monetization'\n                                    + ' due to insufficient permissions'}\n                            />\n                        </Typography>\n                    </Grid>\n                </Grid>\n            );\n        }\n        if (!monetizationAttributes || monStatus === null) {\n            return <Progress />;\n        }\n        return (\n            <form method='post' onSubmit={this.handleSubmit}>\n                <Grid container xs={6} spacing={2}>\n                    <Grid item xs={12}>\n                        <Typography variant='h4'>\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.monetization'\n                                defaultMessage='Monetization'\n                            />\n                        </Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <FormControlLabel\n                            control={(\n                                <Checkbox\n                                    disabled={isRestricted(['apim:api_publish'], api)}\n                                    id='monStatus'\n                                    name='monStatus'\n                                    checked={monStatus}\n                                    onChange={this.handleChange}\n                                    value={monStatus}\n                                    color='primary'\n                                />\n                            )}\n                            label='Enable Monetization'\n                        />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.root}>\n                            <Grid item xs={12} className={classes.grid}>\n                                <Typography className={classes.heading} variant='h6'>\n                                    <FormattedMessage\n                                        id='Apis.Details.Monetization.Index.monetization.properties'\n                                        defaultMessage='Monetization Properties'\n                                    />\n                                </Typography>\n                                {\n                                    (monetizationAttributes.length > 0) ? (\n                                        (monetizationAttributes.map((monetizationAttribute, i) => (\n                                            <TextField\n                                                disabled={isRestricted(['apim:api_publish'], api)}\n                                                fullWidth\n                                                id={'attribute' + i}\n                                                label={monetizationAttribute.displayName}\n                                                placeholder={monetizationAttribute.displayName}\n                                                name={monetizationAttribute.name}\n                                                type='text'\n                                                margin='normal'\n                                                variant='outlined'\n                                                required={monetizationAttribute.required}\n                                                onChange={this.handleInputChange}\n                                                autoFocus\n                                            />\n                                        )))\n                                    ) : (\n                                        <Typography>\n                                            <FormattedMessage\n                                                id={'Apis.Details.Monetization.Index.there.are.no'\n                                                   + ' .monetization.properties.configured'}\n                                                defaultMessage='There are no monetization properties configured'\n                                            />\n                                        </Typography>\n                                    )\n                                }\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Paper className={classes.root}>\n                            <Grid item xs={12} className={classes.grid}>\n                                <BusinessPlans api={api} monStatus={monStatus} />\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Button\n                            onClick={this.handleSubmit}\n                            color='primary'\n                            variant='contained'\n                            className={classes.button}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.Monetization.Index.save'\n                                defaultMessage='Save'\n                            />\n                        </Button>\n                        <Link to={'/apis/' + api.id + '/overview'}>\n                            <Button>\n                                <FormattedMessage\n                                    id='Apis.Details.Monetization.Index.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Button>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </form>\n        );\n    }\n}\n\nMonetization.propTypes = {\n    api: PropTypes.instanceOf(API).isRequired,\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(Monetization)));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport { APIContext } from 'AppComponents/Apis/Details/components/ApiContext';\nimport { useAppContext } from 'AppComponents/Shared/AppContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport { FormattedMessage, useIntl, defineMessages } from 'react-intl';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Alert from 'AppComponents/Shared/Alert';\nimport Paper from '@material-ui/core/Paper';\nimport API from '../../../../data/api';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: theme.custom.contentAreaWidth,\n        marginTop: theme.spacing(3),\n        overflowX: 'auto',\n    },\n    table: {\n        minWidth: 650,\n    },\n    viewInExStoreLink: {\n        color: theme.palette.common.black,\n        textDecoration: 'underline',\n    },\n}));\n\n/**\n * Renders an External Store list\n * @class ExternalStores\n * @extends {React.Component}\n */\nexport default function ExternalStores() {\n    const { api } = useContext(APIContext);\n    const { settings } = useAppContext();\n    const [allExternalStores, setAllExternalStores] = useState([]);\n    const [publishedExternalStores, setPublishedExternalStores] = useState([]);\n    const [isUpdating, setUpdating] = useState(false);\n    const classes = useStyles();\n    const intl = useIntl();\n    if (!settings.externalStoresEnabled) {\n        const resourceNotFoundMessageText = defineMessages({\n            titleMessage: {\n                id: 'Apis.Details.ExternalStores.ExternalStores.external.stores.not.found.title',\n                defaultMessage: 'External Developert Portals not found for the API : {apiUUID}',\n            },\n            bodyMessage: {\n                id: 'Apis.Details.ExternalStores.ExternalStores.external.stores.not.found.body',\n                defaultMessage: 'No External Developer Portals configured for the current tenant',\n            },\n        });\n        const resourceNotFountMessage = {\n            title: intl.formatMessage(resourceNotFoundMessageText.titleMessage, {\n                apiUUID: `${api.id}`,\n            }),\n            body: intl.formatMessage(resourceNotFoundMessageText.bodyMessage),\n        };\n        return <ResourceNotFound message={resourceNotFountMessage} />;\n    }\n\n    /**\n     * Gets published external stores\n     */\n    function getPublishedExternalStores() {\n        API.getPublishedExternalStores(api.id)\n            .then((response) => {\n                const publishedStoreIds = response.body.list.map((store) => store.id);\n                setPublishedExternalStores(publishedStoreIds);\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.getting.published.external.stores',\n                    defaultMessage: 'Error while getting published external developer portals!! {reason}',\n                }, { reason }));\n            });\n    }\n\n    useEffect(() => {\n        API.getAllExternalStores().then((response) => {\n            setAllExternalStores([...response.body.list]);\n        });\n        getPublishedExternalStores();\n    }, []);\n\n    /**\n     * Handle publish to external store button action\n     */\n    function updateStores() {\n        setUpdating(true);\n        API.publishAPIToExternalStores(api.id, publishedExternalStores)\n            .then((response) => {\n                const successfulStores = response.body.list.map((store) => store.id);\n                Alert.success(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.successfully.published.to.external.stores',\n                    defaultMessage: 'Successfully Published to external developer portals: {successfulStores}',\n                }, { successfulStores }));\n            })\n            .catch((error) => {\n                const response = error.response && error.response.obj;\n                const reason = response && ('[' + response.message + '] ' + response.description);\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.ExternalStores.ExternalStores.error.while.updating.external.stores',\n                    defaultMessage: 'Error while updating external developer portals!! {reason}',\n                }, { reason }));\n            })\n            .finally(() => {\n                setUpdating(false);\n                getPublishedExternalStores();\n            });\n    }\n\n    return (\n        <div>\n            <div>\n                <Typography variant='h4' align='left'>\n                    <FormattedMessage\n                        id='Apis.Details.ExternalStores.ExternalStores.external-stores'\n                        defaultMessage='External Developer Portals'\n                    />\n                </Typography>\n                <Paper className={classes.root}>\n                    <Table className={classes.table}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell />\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.name'\n                                            defaultMessage='Name'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.type'\n                                            defaultMessage='Type'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                                <TableCell>\n                                    <Typography>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.endpoint'\n                                            defaultMessage='Endpoint'\n                                        />\n                                    </Typography>\n                                </TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {allExternalStores.map((row) => (\n                                <TableRow key={row.id}>\n                                    <TableCell padding='checkbox'>\n                                        <Checkbox\n                                            checked={publishedExternalStores.includes(row.id)}\n                                            disabled={api.lifeCycleStatus !== 'PUBLISHED'\n                                                || isRestricted(['apim:api_publish'], api)}\n                                            onChange={\n                                                (event) => {\n                                                    const { checked, name } = event.target;\n                                                    if (checked) {\n                                                        if (!publishedExternalStores.includes(name)) {\n                                                            setPublishedExternalStores([\n                                                                ...publishedExternalStores, name]);\n                                                        }\n                                                    } else {\n                                                        setPublishedExternalStores(publishedExternalStores\n                                                            .filter((store) => store !== name));\n                                                    }\n                                                }\n                                            }\n                                            name={row.id}\n                                            color='primary'\n                                        />\n                                    </TableCell>\n                                    <TableCell component='th' scope='row'>\n                                        <Typography>\n                                            {' '}\n                                            {row.displayName}\n                                            {' '}\n                                        </Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        {' '}\n                                        <Typography>{row.type}</Typography>\n                                    </TableCell>\n                                    <TableCell>\n                                        <a\n                                            target='_blank'\n                                            rel='noopener noreferrer'\n                                            href={row.endpoint}\n                                            className={classes.viewInExStoreLink}\n                                        >\n                                            <Typography>\n                                                {row.endpoint}\n                                            </Typography>\n                                        </a>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n                <Grid container>\n                    <Grid\n                        container\n                        direction='row'\n                        alignItems='center'\n                        spacing={4}\n                        style={{ marginTop: 20 }}\n                    >\n                        <Grid item>\n                            <Button\n                                type='submit'\n                                variant='contained'\n                                color='primary'\n                                disabled={isUpdating || api.lifeCycleStatus !== 'PUBLISHED'\n                                    || isRestricted(['apim:api_publish'], api)}\n                                onClick={updateStores}\n                            >\n                                <FormattedMessage\n                                    id='Apis.Details.ExternalStores.ExternalStores.save'\n                                    defaultMessage='Save'\n                                />\n                                {isUpdating && <CircularProgress size={20} />}\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Link to={'/apis/' + api.id + '/overview'}>\n                                <Button>\n                                    <FormattedMessage\n                                        id='Apis.Details.ExternalStores.ExternalStores.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                            </Link>\n                        </Grid>\n                        {(isRestricted(['apim:api_publish'], api))\n                            && (\n                                <Grid item>\n                                    <Typography variant='body2' color='primary'>\n                                        <FormattedMessage\n                                            id='Apis.Details.ExternalStores.ExternalStores.update.not.allowed'\n                                            defaultMessage={'* You are not authorized to publish the API'\n                                                + ' to external developer portals due to insufficient permissions'}\n                                        />\n                                    </Typography>\n                                </Grid>\n                            )}\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport FormControl from '@material-ui/core/FormControl';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\n\nconst styles = (theme) => ({\n    FormControl: {\n        padding: 0,\n        width: '100%',\n        marginTop: 20,\n    },\n    FormControlOdd: {\n        padding: 0,\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n        marginTop: 0,\n    },\n    FormLabel: {\n        transform: 'translate(0, 1.5px) scale(0.75)',\n        transformOrigin: 'top left',\n    },\n    buttonWrapper: {\n        paddingTop: 20,\n    },\n    root: {\n        padding: 20,\n        marginTop: 20,\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    helpButton: {\n        padding: 0,\n        minWidth: 20,\n    },\n    helpIcon: {\n        fontSize: 16,\n    },\n    htmlTooltip: {\n        backgroundColor: '#f5f5f9',\n        color: 'rgba(0, 0, 0, 0.87)',\n        maxWidth: 220,\n        fontSize: theme.typography.pxToRem(14),\n        border: '1px solid #dadde9',\n        '& b': {\n            fontWeight: theme.typography.fontWeightMedium,\n        },\n    },\n});\n\n/**\n * React component to create a new version of an API\n * @class CreateNewVersion\n * @extends {Component}\n */\nclass CreateNewVersion extends React.Component {\n    /**\n     * Creates an instance of CreateNewVersion.\n     * @param {any} props @inheritDoc\n     * @memberof CreateNewVersion\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            isDefaultVersion: 'no',\n            valid: { version: { empty: false, alreadyExists: false, hasSpecialChars: false } },\n        };\n    }\n\n    handleDefaultVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            isDefaultVersion: value,\n        });\n    };\n\n    handleVersionChange = () => (event) => {\n        const { value } = event.target;\n        this.setState({\n            newVersion: value,\n            valid: { version: { empty: !value, alreadyExists: false, hasSpecialChars: this.hasSpecialChars(value) } },\n        });\n    };\n\n    hasSpecialChars(value) {\n        if (/^[^~!@#;:%^*()+={}|\\\\<>\"',&/$]+$/.test(value)) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * Handles the submit action for new version creation\n     *\n     * @param {API} api current API\n     * @param {string} newVersion new version to create\n     * @param {string} isDefaultVersion specifies whether the new API should be marked as default version ('yes' | 'no')\n     */\n    handleSubmit(api, newVersion, isDefaultVersion) {\n        if (!newVersion) {\n            this.setState({ valid: { version: { empty: true } } });\n            return;\n        }\n        const isDefaultVersionBool = isDefaultVersion === 'yes';\n        const { intl } = this.props;\n        api.createNewAPIVersion(newVersion, isDefaultVersionBool)\n            .then((response) => {\n                this.setState({\n                    redirectToReferrer: true,\n                    apiId: response.obj.id,\n                });\n                Alert.error(intl.formatMessage({\n                    id: 'Apis.Details.NewVersion.NewVersion.success',\n                    defaultMessage: 'Successfully created new version',\n                }) + newVersion);\n            })\n            .catch((error) => {\n                if (error.status === 409) {\n                    this.setState({ valid: { version: { alreadyExists: true } } });\n                } else {\n                    Alert.error(intl.formatMessage({\n                        id: 'Apis.Details.NewVersion.NewVersion.error',\n                        defaultMessage: 'Something went wrong while creating a new version!. Error: ',\n                    }) + error.status);\n                }\n            });\n    }\n\n    /**\n     * Renders the CreateNewVersion component.\n     * Once new version is created, redirects to the overview page of the new API.\n     * @returns {*} CreateNewVersion component\n     */\n    render() {\n        const { classes, api } = this.props;\n        const {\n            isDefaultVersion, newVersion, redirectToReferrer, apiId, valid,\n        } = this.state;\n        if (redirectToReferrer) {\n            return <Redirect to={'/apis/' + apiId + '/overview'} />;\n        }\n\n        let helperText = '';\n        if (valid.version.empty) {\n            helperText = 'This field cannot be empty';\n        } else if (valid.version.alreadyExists) {\n            helperText = 'An API with version \"' + newVersion + '\" already exists.';\n        } else if (valid.version.hasSpecialChars) {\n            helperText = 'API Version should not contain special characters';\n        }\n\n        return (\n            <>\n                <Container maxWidth='md'>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.NewVersion.NewVersion.create.new.version'\n                                defaultMessage='Create New Version'\n                            />\n                        </Typography>\n                    </div>\n                    <Grid container spacing={7}>\n                        <Grid item xs={12}>\n                            <Paper className={classes.root} elevation={0}>\n                                <FormControl margin='normal' className={classes.FormControlOdd}>\n                                    <TextField\n                                        fullWidth\n                                        id='newVersion'\n                                        error={\n                                            valid.version.empty\n                                            || valid.version.alreadyExists\n                                            || valid.version.hasSpecialChars\n                                        }\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.NewVersion.NewVersion.new.version'\n                                                defaultMessage='New Version'\n                                            />\n                                        )}\n                                        helperText={\n                                            helperText\n                                        }\n                                        type='text'\n                                        name='newVersion'\n                                        placeholder='Eg: 2.0.0'\n                                        value={newVersion}\n                                        variant='outlined'\n                                        onChange={this.handleVersionChange()}\n                                        margin='normal'\n                                        InputLabelProps={{\n                                            shrink: true,\n                                        }}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin='normal' className={classes.FormControl}>\n                                    <FormLabel className={classes.FormLabel} component='legend'>\n                                        <FormattedMessage\n                                            id='Apis.Details.NewVersion.NewVersion.default'\n                                            defaultMessage='Make this the default version'\n                                        />\n                                        <Tooltip\n                                            placement='top'\n                                            classes={{\n                                                tooltip: classes.htmlTooltip,\n                                            }}\n                                            title={(\n                                                <>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.tooltip'\n                                                        defaultMessage={\n                                                            'Indicates if this is the default version of the API. '\n                                                            + 'If an API is invoked without specifying a version, '\n                                                            + 'the API Gateway will route the request to the default '\n                                                            + 'version of the API.'\n                                                        }\n                                                    />\n                                                </>\n                                            )}\n                                            interactive\n                                            aria-label='Default Version Selector'\n                                            tabIndex='-1'\n                                        >\n                                            <Button className={classes.helpButton}>\n                                                <HelpOutline className={classes.helpIcon} />\n                                            </Button>\n                                        </Tooltip>\n                                    </FormLabel>\n                                    <RadioGroup\n                                        name='isDefaultVersion'\n                                        id='isDefaultVersion'\n                                        className={classes.group}\n                                        value={isDefaultVersion}\n                                        onChange={this.handleDefaultVersionChange()}\n                                    >\n                                        <FormControlLabel value='yes' control={<Radio color='primary' />} label='Yes' />\n                                        <FormControlLabel value='no' control={<Radio color='primary' />} label='No' />\n                                    </RadioGroup>\n                                </FormControl>\n                                <div className={classes.buttonWrapper}>\n                                    <Grid\n                                        container\n                                        direction='row'\n                                        alignItems='flex-start'\n                                        spacing={1}\n                                        className={classes.buttonSection}\n                                    >\n                                        <Grid item>\n                                            <div>\n                                                <Button\n                                                    variant='contained'\n                                                    color='primary'\n                                                    id='createBtn'\n                                                    onClick={() => this.handleSubmit(api, newVersion, isDefaultVersion)}\n                                                    disabled={\n                                                        valid.version.empty\n                                                        || valid.version.alreadyExists\n                                                        || valid.version.hasSpecialChars\n                                                    }\n                                                >\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.create'\n                                                        defaultMessage='Create'\n                                                    />\n                                                </Button>\n                                            </div>\n                                        </Grid>\n                                        <Grid item>\n                                            <Link to={'/apis/' + api.id + '/overview'}>\n                                                <Button id='cancelBtn'>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.NewVersion.NewVersion.cancel'\n                                                        defaultMessage='Cancel'\n                                                    />\n                                                </Button>\n                                            </Link>\n                                        </Grid>\n                                    </Grid>\n                                </div>\n                            </Paper>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </>\n        );\n    }\n}\n\nCreateNewVersion.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n    }).isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\n\nexport default withAPI(withStyles(styles)(CreateNewVersion));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\n/**\n * Progress animation\n *\n * @returns { JSX }\n */\nconst Progress = () => {\n    return (\n        <div className='apim-dual-ring' />\n    );\n};\n\nexport default Progress;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Axios from \"axios\";\nimport Settings from 'Settings';\nimport AuthManager from \"./AuthManager\";\n\n/**\n * Utility class for Store application\n */\nclass Utils {\n\n    /**\n     * Get JavaScript accessible cookies saved in browser, by giving the cooke name.\n     * @param {String} cookieName : Name of the cookie which need to be retrived\n     * @param {String} environmentName : label of the environment of the cookie\n     * @returns {String|null} : If found a cookie with given name , return its value,Else null value is returned\n     */\n    static getCookie(cookieName, environmentName) {\n        environmentName = environmentName || Utils.getEnvironment().label;\n\n        let pairs = document.cookie.split(\";\");\n        let cookie = null;\n        for (let pair of pairs) {\n            pair = pair.split(\"=\");\n            let cookie_name = pair[0].trim();\n            let value = encodeURIComponent(pair[1]);\n            if (cookie_name === `${cookieName}_${environmentName}`) {\n                cookie = value;\n                break;\n            }\n        }\n        return cookie;\n    }\n\n     /**\n     * Get JavaScript accessible cookies saved in browser, by giving the cooke name.\n     * @param {String} name - Name of the cookie which need to be retrieved\n     * @returns {String|null} - If found a cookie with given name , return its value,Else null value is returned\n     */\n    static getCookieWithoutEnvironment(name) {\n        const pairs = document.cookie.split(';');\n        let cookie = null;\n        for (let pair of pairs) {\n            pair = pair.split('=');\n            const cookieName = pair[0].trim();\n            if (pair[1] !== 'undefined') {\n                const value = encodeURIComponent(pair[1]);\n                if (cookieName === name) {\n                    cookie = value;\n                    break;\n                }\n            }\n        }\n        return cookie;\n    }\n\n\n    /**\n     * Delete a browser cookie given its name\n     * @param {String} name : Name of the cookie which need to be deleted\n     * @param {String} path : Path of the cookie which need to be deleted\n     * @param {String} environmentName: label of the environment of the cookie\n     */\n    static deleteCookie(name, path, environmentName) {\n        environmentName = environmentName || Utils.getEnvironment().label;\n        document.cookie = `${name}_${environmentName}=; path=${path}; expires=Thu, 01 Jan 1970 00:00:01 GMT`;\n    }\n\n    /**\n     * Set a cookie with given name and value assigned to it. Cookies can be only set to the same origin,\n     * which the script is running\n     * @param {String} name : Name of the cookie which need to be set\n     * @param {String} value : Value of the cookie, expect it to be URLEncoded\n     * @param {number} validityPeriod :  (Optional) Validity period of the cookie in seconds\n     * @param {String} path : Path which needs to set the given cookie\n     * @param {boolean} secured : secured parameter is set\n     */\n    static setCookie(name, value, validityPeriod, path = \"/\", environmentName, secured = true) {\n        environmentName = environmentName || Utils.getEnvironment().label;\n        let expiresDirective = \"\";\n        const securedDirective = secured ? \"; Secure\" : \"\";\n        if (validityPeriod) {\n            const date = new Date();\n            date.setTime(date.getTime() + validityPeriod * 1000);\n            expiresDirective = \"; expires=\" + date.toUTCString();\n        }\n\n        document.cookie = `${name}_${environmentName}=${value}; path=${path}${expiresDirective}${securedDirective}`;\n    }\n\n    /**\n     * Given an object returns whether the object is empty or not\n     * @param {Object} object : Any JSON object\n     * @returns {boolean}\n     */\n    static isEmptyObject(object) {\n        return Object.keys(object).length === 0 && object.constructor === Object\n    }\n\n    /**\n     * Get the current environment from local-storage\n     * @returns {Object} environment: {label, host, loginTokenPath}\n     */\n    static getEnvironment() {\n        if (Utils._environment) {\n            return Utils._environment;\n        }\n\n        let environmentData = localStorage.getItem(Utils.CONST.LOCALSTORAGE_ENVIRONMENT);\n        if (!environmentData) {\n            return Utils.getDefaultEnvironment();\n        }\n\n        return JSON.parse(environmentData);\n    }\n\n    /**\n     * Get the current environment from local-storage\n     * @returns {Object} environment: {label, host, loginTokenPath}\n     */\n    static getCurrentEnvironment() {\n        if (Utils.environment) {\n            return Utils.environment;\n        }\n\n        const environmentData = localStorage.getItem(Utils.CONST.LOCAL_STORAGE_ENVIRONMENT);\n        if (!environmentData) {\n            return Utils.getDefaultEnvironment();\n        }\n\n        return JSON.parse(environmentData);\n    }\n\n    /**\n     * Get an environment object with default values.\n     * @returns {Object} environment: {label: string, host: string, loginTokenPath: string}\n     * @private\n     */\n    static getDefaultEnvironment() {\n        return {\n            label: 'Default',\n            host: window.location.host,\n            loginTokenPath: '/login/token',\n            refreshTokenPath: '/services/refresh/refresh.jag',\n        };\n    }\n\n    /**\n     * Get current environment's index from the given environment array\n     * @param {Array} environments\n     * @param {string} name: name of the environment [default]: current environment name\n     * @returns {number}\n     */\n    static getEnvironmentID(environments, name = Utils.getEnvironment().label) {\n        if (!name) {\n            return 0;\n        }\n\n        for (let i = 0; i < environments.length; i++) {\n            if (name === environments[i].label) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * Store the given environment in local-storage\n     * @param {object} environment\n     */\n    static setEnvironment(environment) {\n        if (!environment) {\n            environment = Utils.getDefaultEnvironment();\n        }\n\n        if (!environment.host) {\n            environment.host = window.location.host;\n        }\n        //Store environment.\n        Utils._environment = environment;\n        localStorage.setItem(Utils.CONST.LOCALSTORAGE_ENVIRONMENT, JSON.stringify(environment));\n    }\n\n    static getPromised_DCRappInfo(environment) {\n        return Axios.get(Utils.getDCRappInfoRequestURL(environment));\n    }\n\n    static getDCRappInfoRequestURL(environment = Utils.getEnvironment()) {\n        return `${Utils.CONST.PROTOCOL}${environment.host}${Utils.CONST.DCR_APP_INFO}${Settings.app.context}`;\n    }\n\n    static getAppLogoutURL() {\n        return Utils.CONST.PROTOCOL + Utils.getEnvironment().host + Utils.CONST.LOGOUT + Settings.app.context;\n    }\n\n    static getLoginTokenPath(environment = Utils.getEnvironment()) {\n        return `${Utils.CONST.PROTOCOL}${environment.host}${Utils.CONST.LOGIN_TOKEN_PATH}${Settings.app.context}`;\n    }\n\n    static getSignUpTokenPath(environment) {\n        return `${Utils.CONST.PROTOCOL}${environment.host}${Utils.CONST.LOGIN_SIGN_UP_PATH}${Settings.app.context}`;\n    }\n\n    static getSwaggerURL() {\n        return \"https://\" + Utils.getEnvironment().host + Utils.CONST.SWAGGER_YAML;\n    }\n\n    static downloadFile = (response) => {\n        let fileName = '';\n        const contentDisposition = response.headers['content-disposition'];\n\n        if (contentDisposition && contentDisposition.indexOf('attachment') !== -1) {\n            const fileNameReg = /filename[^;=\\n]*=((['\"]).*?\\2|[^;\\n]*)/;\n            const matches = fileNameReg.exec(contentDisposition);\n            if (matches != null && matches[1]) fileName = matches[1].replace(/['\"]/g, '');\n        }\n        const contentType = response.headers['content-type'];\n        const blob = new Blob([response.data], {\n            type: contentType,\n        });\n        if (typeof window.navigator.msSaveBlob !== 'undefined') {\n            window.navigator.msSaveBlob(blob, fileName);\n        } else {\n            const URL = window.URL || window.webkitURL;\n            const downloadUrl = URL.createObjectURL(blob);\n\n            if (fileName) {\n                const aTag = document.createElement('a');\n                if (typeof aTag.download === 'undefined') {\n                    window.location = downloadUrl;\n                } else {\n                    aTag.href = downloadUrl;\n                    aTag.download = fileName;\n                    document.body.appendChild(aTag);\n                    aTag.click();\n                }\n            } else {\n                window.location = downloadUrl;\n            }\n\n            setTimeout(() => {\n                URL.revokeObjectURL(downloadUrl);\n            }, 100);\n        }\n    };\n    static getBrowserLocal() {\n        const language = (navigator.languages && navigator.languages[0]) || navigator.language || navigator.userLanguage;\n        const languageWithoutRegionCode = language.toLowerCase().split(/[_-]+/)[0];\n        return(languageWithoutRegionCode || language);\n    }\n}\n\nUtils.CONST = {\n    LOCALSTORAGE_ENVIRONMENT: 'environment_store',\n    //TODO: fix/remove below wrong paths\n    DCR_APP_INFO: '/login/login',\n    LOGOUT: '/login/logout',\n    LOGIN_TOKEN_PATH: '/login/token',\n    LOGIN_SIGN_UP_PATH: '/login/signup',\n\n    LOGOUT_CALLBACK: '/services/auth/callback/logout',\n    SWAGGER_YAML: '/api/am/store/v1/swagger.yaml',\n    PROTOCOL: 'https://',\n};\n\n/**\n * Current environment\n * @type {object} environment object\n * @private\n */\nUtils._environment = undefined;\nexport default Utils;","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Utils from './Utils'\n\n/**\n * Represent an user logged in to the application, There will be allays one user per session and\n * this user details will be persist in browser localstorage.\n */\nexport default class User {\n    /**\n     * Create a user for the given environment\n     * @param {string} environment\n     * @param {string} name\n     * @param {string} id_token\n     * @param {boolean} remember\n     * @returns {User|null} user object\n     */\n    constructor(environment, name, id_token, remember = false) {\n        const user = User._userMap.get(environment);\n        if (user) {\n            return user;\n        }\n        this.name = name;\n        this._scopes = [];\n        this._idToken = id_token;\n        this._remember = remember;\n        this._isSideBarOpen = true;\n        User._userMap.set(environment, this);\n    }\n\n    /**\n     * OAuth scopes which are available for use by this user\n     * @returns {Array} : An array of scopes\n     */\n    get scopes() {\n        return this._scopes;\n    }\n\n    /**\n     * Set OAuth scopes available to be used by this user\n     * @param {Array} newScopes :  An array of scopes\n     */\n    set scopes(newScopes) {\n        Object.assign(this.scopes, newScopes);\n    }\n\n    /**\n     * Get the JS accessible access token fragment from cookie storage.\n     * @returns {String|null}\n     */\n    getPartialToken() {\n        return Utils.getCookie(User.CONST.WSO2_AM_TOKEN_1);\n    }\n\n    /**\n     * Get the JS accessible refresh token fragment from cookie storage.\n     * @returns {String|null}\n     */\n    getRefreshPartialToken() {\n        return Utils.getCookie(User.CONST.WSO2_AM_REFRESH_TOKEN_1);\n    }\n\n    /**\n     * Store the JavaScript accessible access token segment in cookie storage\n     * @param {String} newToken : Part of the access token which needs when accessing REST API\n     * @param {Number} validityPeriod : Validity period of the cookie in seconds\n     * @param path Path which need to be set to cookie\n     */\n    setPartialToken(newToken, validityPeriod, path) {\n        Utils.delete_cookie(User.CONST.WSO2_AM_TOKEN_1, path);\n        Utils.setCookie(User.CONST.WSO2_AM_TOKEN_1, newToken, validityPeriod, path);\n    }\n\n\n    get isSideBarOpen(){\n        return this._isSideBarOpen;\n    }\n\n    set isSideBarOpen(isSideBarOpen) {\n        this._isSideBarOpen = isSideBarOpen;\n    }\n\n    /**\n     *\n     * @param type\n     */\n    checkPermission(type) {\n        throw (\"Not implemented!\");\n    }\n\n    /**\n     * Provide user data in JSON structure.\n     * @returns {JSON} : JSON representation of the user object\n     */\n    toJson() {\n        return {\n            name: this.name,\n            scopes: this._scopes,\n            idToken: this._idToken,\n            remember: this._remember,\n            isSideBarOpen: this._isSideBarOpen,\n        };\n    }\n\n    /**\n     * User utility method to create an user from JSON object.\n     * @param {JSON} userJson : Need to provide user information in JSON structure to create an user object\n     * @returns {User} : An instance of User(this) class.\n     */\n    static fromJson(userJson) {\n        if (!userJson.name) {\n            throw \"Need to provide user `name` key in the JSON object, to create an user\";\n        }\n        const _user = new User(Utils.getEnvironment().label, userJson.name);\n        _user.scopes = userJson.scopes;\n        _user.idToken = userJson.idToken;\n        _user.rememberMe = userJson.remember;\n        _user.isSideBarOpen = userJson.isSideBarOpen;\n        return _user;\n    }\n}\n\nUser.CONST = {\n    WSO2_AM_TOKEN_MSF4J: \"WSO2_AM_TOKEN_MSF4J\",\n    WSO2_AM_TOKEN_1: \"WSO2_AM_TOKEN_1\",\n    WSO2_AM_REFRESH_TOKEN_1: 'WSO2_AM_REFRESH_TOKEN_1',\n    LOCALSTORAGE_USER: \"wso2_user_store\",\n    DEVPORTAL_CLIENT_ID: \"CLIENT_ID\",\n    DEVPORTAL_SESSION_STATE: \"devportal_session_state\"\n};\n/**\n * Map of users (key = environmentLabel, value = User instance)\n * @type {Map}\n * @private\n */\nUser._userMap = new Map();\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst CONSTS = {\n    HTTP_METHODS: ['get', 'put', 'post', 'delete', 'patch', 'head', 'options'],\n    errorCodes: {\n        INSUFFICIENT_PREVILEGES: '900403: Insufficient privileges to login',\n        INVALID_TOKEN: '900401: Invalid token',\n    },\n    ISLOGINPERMITTED: 'isLoginPermitted',\n    LOGINSTATUS: 'loginStatus',\n};\n\nexport default CONSTS;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport axios from 'axios';\nimport qs from 'qs';\nimport Settings from 'Settings';\nimport Utils from './Utils';\nimport User from './User';\nimport APIClient from './APIClient';\nimport APIClientFactory from './APIClientFactory';\nimport CONSTS from './Constants';\n\n\n/**\n * Manage the application authentication and authorization requirements.\n *\n * @class AuthManager\n */\nclass AuthManager {\n    constructor() {\n        this.isLogged = false;\n        this.username = null;\n    }\n\n    /**\n     * Static method to handle unauthorized user action error catch, It will look for response status code and skip !401 errors\n     * @param {object} error_response\n     */\n    static unauthorizedErrorHandler(error_response) {\n        if (error_response.status !== 401) {\n            /* Skip unrelated response code to handle in unauthorizedErrorHandler */\n            throw error_response;\n            /* re throwing the error since we don't handle it here and propagate to downstream error handlers in catch chain */\n        }\n        const message = 'The session has expired' + '.<br/> You will be redirect to the login page ...';\n        if (typeof noty !== 'undefined') {\n            noty({\n                text: message,\n                type: 'error',\n                dismissQueue: true,\n                modal: true,\n                progressBar: true,\n                timeout: 5000,\n                layout: 'top',\n                theme: 'relax',\n                maxVisible: 10,\n                callback: {\n                    afterClose() {\n                        window.location = loginPageUri;\n                    },\n                },\n            });\n        } else {\n            throw error_response;\n        }\n    }\n\n    /**\n     * An user object is return in present of user logged in user info in browser local storage, at the same time checks for partialToken in the cookie as well.\n     * This may give a partial indication(passive check not actually check the token validity via an API) of whether the user has logged in or not, The actual API call may get denied\n     * if the cookie stored access token is invalid/expired\n     * @param {string} environmentName: label of the environment, the user to be retrieved from\n     * @returns {User | null} Is any user has logged in or not\n     */\n    static getUser(environmentName = Utils.getCurrentEnvironment().label) {\n        const userData = localStorage.getItem(`${User.CONST.LOCALSTORAGE_USER}_${environmentName}`);\n        const partialToken = Utils.getCookie(User.CONST.WSO2_AM_TOKEN_1, environmentName);\n        const refreshToken = Utils.getCookie(User.CONST.WSO2_AM_REFRESH_TOKEN_1, environmentName);\n\n        const isLoginCookie = Utils.getCookie('IS_LOGIN', 'DEFAULT');\n        if (isLoginCookie) {\n            Utils.deleteCookie('IS_LOGIN', Settings.app.context, 'DEFAULT');\n            localStorage.removeItem(`${User.CONST.LOCALSTORAGE_USER}_${environmentName}`);\n            return null;\n        }\n        if (!(userData && (partialToken || refreshToken))) {\n            return null;\n        }\n\n        return User.fromJson(JSON.parse(userData), environmentName);\n    }\n\n    static hasBasicLoginPermission(scopes) {\n        return scopes.includes('apim:subscribe');\n    }\n\n    /**\n     * Do token introspection and Get the currently logged in user's details\n     * When user authentication happens via redirection flow, This method might get used to\n     * retrieve the user information\n     * after setting the access token parts in cookies, Because access token parts are stored in /publisher path ,\n     * just making an external request in same path will submit both cookies, allowing the service to build the\n     * complete access token and do the introspection.\n     * Return a promise resolving to user object iff introspect calls return active user else null\n     * @static\n     * @returns {Promise} fetch response promise resolving to introspect response JSON or null otherwise\n     * @memberof AuthManager\n     */\n    static getUserFromToken() {\n        const partialToken = Utils.getCookie(User.CONST.WSO2_AM_TOKEN_1);\n        if (!partialToken) {\n            return new Promise((resolve, reject) => reject(new Error('No partial token found')));\n        }\n        const promisedResponse = fetch(\n            Settings.app.context + '/services/auth/introspect',\n            { credentials: 'same-origin' },\n        );\n        return promisedResponse\n            .then((response) => response.json())\n            .then((data) => {\n                let user = null;\n                let username;\n                if (data.active) {\n                    const currentEnv = Utils.getCurrentEnvironment();\n                    username = data.username;\n                    user = new User(currentEnv.label, username);\n                    const scopes = data.scope.split(' ');\n                    if (this.hasBasicLoginPermission(scopes)) {\n                        user.scopes = scopes;\n                        AuthManager.setUser(user, currentEnv.label);\n                    } else {\n                        console.warn('The user with ' + partialToken + ' doesn\\'t have enough permission!');\n                        throw new Error(CONSTS.errorCodes.INSUFFICIENT_PREVILEGES);\n                    }\n                } else {\n                    console.warn('User with ' + partialToken + ' is not active!');\n                    throw new Error(CONSTS.errorCodes.INVALID_TOKEN);\n                }\n                return user;\n            });\n    }\n\n    /**\n     * Persist an user in browser local storage and in-memory, Since only one use can be logged\n     * into the application at a time,This method will override any previously persist user data.\n     * @param {User} user : An instance of the {User} class\n     * @param {string} environmentName: label of the environment to be set the user\n     */\n    static setUser(user, environmentName) {\n        environmentName = environmentName || Utils.getEnvironment().label;\n        if (!(user instanceof User)) {\n            throw new Error('Invalid user object');\n        }\n\n        if (user) {\n            localStorage.setItem(`${User.CONST.LOCALSTORAGE_USER}_${environmentName}`, JSON.stringify(user.toJson()));\n        }\n    }\n\n    /**\n     *\n     * Get scope for resources\n     * @static\n     * @param {String} resourcePath\n     * @param {String} resourceMethod\n     * @returns Boolean\n     * @memberof AuthManager\n     */\n    static hasScopes(resourcePath, resourceMethod) {\n        const user = AuthManager.getUser();\n        if (user) {\n            const userScopes = user.scopes;\n            const validScope = APIClient.getScopeForResource(resourcePath, resourceMethod);\n            return validScope.then((scope) => {\n                return userScopes.includes(scope);\n            });\n        }\n    }\n\n\n    /**\n     * By given username and password Authenticate the user, Since this REST API has no swagger definition,\n     * Can't use swaggerjs to generate client.Hence using Axios to make AJAX calls\n     * @param {String} username : Username of the user\n     * @param {String} password : Plain text password\n     * @param {Object} environment : environment object\n     * @returns {AxiosPromise} : Promise object with the login request made\n     */\n    authenticateUser(username, password, environment) {\n        const headers = {\n            Authorization: 'Basic deidwe',\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n        const data = {\n            username,\n            password,\n            grant_type: 'password',\n            validity_period: 3600,\n            scopes: 'apim:subscribe apim:signup apim:workflow_approve apim:sub_alert_manage',\n        };\n        const promised_response = axios(Utils.getLoginTokenPath(environment), {\n            method: 'POST',\n            data: qs.stringify(data),\n            headers,\n            withCredentials: true,\n        });\n        // Set the environment that user tried to authenticate\n        const previous_environment = Utils.getEnvironment();\n        Utils.setEnvironment(environment);\n\n        promised_response\n            .then((response) => {\n                const { validityPeriod } = response.data; // In seconds\n                const WSO2_AM_TOKEN_1 = response.data.partialToken;\n                const user = new User(Utils.getEnvironment().label, response.data.authUser, response.data.idToken);\n                user.setPartialToken(WSO2_AM_TOKEN_1, validityPeriod, Settings.app.context);\n                user.scopes = response.data.scopes.split(' ');\n                AuthManager.setUser(user);\n            })\n            .catch((error) => {\n                console.error('Authentication Error:\\n', error);\n                Utils.setEnvironment(previous_environment);\n            });\n        return promised_response;\n    }\n\n    /**\n     * Revoke the issued OAuth access token for currently logged in user and clear both cookie and localstorage data.\n     */\n    logout() {\n        const authHeader = 'Bearer ' + AuthManager.getUser().getPartialToken();\n        // TODO Will have to change the logout end point url to contain the app context(i.e. publisher/store, etc.)\n        const url = Utils.getAppLogoutURL();\n        const headers = {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            Authorization: authHeader,\n        };\n        const promisedLogout = axios.post(url, null, { headers });\n        return promisedLogout.then((response) => {\n            Utils.delete_cookie(User.CONST.WSO2_AM_TOKEN_1, Settings.app.context);\n            localStorage.removeItem(User.CONST.LOCALSTORAGE_USER);\n            new APIClientFactory().destroyAPIClient(Utils.getEnvironment().label); // Single client should be re initialize after log out\n        });\n    }\n\n    /**\n     * Call Token API with refresh token grant type\n     * @param {Object} environment - Name of the environment\n     * @return {AxiosPromise}\n     */\n    static refresh(environment) {\n        const params = {\n            refresh_token: AuthManager.getUser(environment.label).getRefreshPartialToken(),\n            validity_period: -1,\n            scopes: AuthManager.CONST.USER_SCOPES,\n        };\n        const referrer = document.referrer.indexOf('https') !== -1 ? document.referrer : null;\n        const url = Settings.app.context + environment.refreshTokenPath;\n        const headers = {\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'X-Alt-Referer': referrer,\n        };\n        return fetch(url, {\n            method: 'POST',\n            body: qs.stringify(params),\n            headers,\n        });\n    }\n\n    /**\n     * Register anonymous user by generating token using client_credentials grant type\n     * @param {Object} environment : environment object\n     * @returns {AxiosPromise} : Promise object with the request made\n     */\n    registerUser(environment) {\n        const headers = {\n            Accept: 'application/json',\n            'Content-Type': 'application/x-www-form-urlencoded',\n        };\n        const data = {\n            grant_type: 'client_credentials',\n            validity_period: 3600,\n            scopes: 'apim:self-signup',\n        };\n        const promised_response = axios(Utils.getSignUpTokenPath(environment), {\n            method: 'POST',\n            data: qs.stringify(data),\n            headers,\n            withCredentials: false,\n        });\n\n        promised_response\n            .then((response) => {\n                const { validityPeriod } = response.data;\n                const WSO2_AM_TOKEN_1 = response.data.partialToken;\n                const user = new User(Utils.getEnvironment().label, response.data.authUser, response.data.idToken);\n                user.setPartialToken(WSO2_AM_TOKEN_1, validityPeriod, Settings.app.context);\n                user.scopes = response.data.scopes;\n                AuthManager.setUser(user);\n            })\n            .catch((error) => {\n                console.error('Authentication Error: ', error);\n            });\n        return promised_response;\n    }\n}\n\n// TODO: derive this from swagger definitions ~tmkb\nAuthManager.CONST = {\n    USER_SCOPES:\n        'apim:api_key apim:app_manage apim:app_update apim:dedicated_gateway apim:self-signup '\n        + 'apim:store_settings apim:sub_alert_manage apim:sub_manage apim:subscribe openid',\n};\n\nexport default AuthManager;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n\nimport SwaggerClient from 'swagger-client';\nimport { Mutex } from 'async-mutex';\nimport Settings from 'Settings';\nimport queryString from 'query-string';\nimport AuthManager from './AuthManager';\nimport Utils from './Utils';\n\n/**\n * This class expose single swaggerClient instance created using the given swagger URL (Publisher, Store, ect ..)\n * it's highly unlikely to change the REST API Swagger definition (swagger.json) file on the fly,\n * Hence this singleton class help to preserve consecutive swagger client object creations saving redundant IO operations.\n */\nclass APIClient {\n    /**\n     * @param {String} host : Host of apis. Host for the swagger-client's spec property.\n     * @param {{}} args : Accept as an optional argument for APIClient constructor.Merge the given args with default args.\n     * @returns {APIClient|*|null}\n     */\n    constructor(host, args = {}) {\n        this.host = host || location.host;\n        this.environment = Utils.getCurrentEnvironment();\n        const authorizations = {\n            OAuth2Security: {\n                token: { access_token: AuthManager.getUser() ? AuthManager.getUser().getPartialToken() : '' },\n            },\n        };\n\n        SwaggerClient.http.withCredentials = true;\n        const promisedResolve = SwaggerClient.resolve({ url: Utils.getSwaggerURL(), requestInterceptor: (request) => { request.headers.Accept = 'text/yaml'; } });\n        APIClient.spec = promisedResolve;\n        this._client = promisedResolve.then((resolved) => {\n            const argsv = Object.assign(\n                args,\n                {\n                    spec: this._fixSpec(resolved.spec),\n                    authorizations,\n                    requestInterceptor: this._getRequestInterceptor(),\n                    responseInterceptor: this._getResponseInterceptor(),\n                },\n            );\n            SwaggerClient.http.withCredentials = true;\n            return new SwaggerClient(argsv);\n        });\n        this._client.catch(AuthManager.unauthorizedErrorHandler);\n        this.mutex = new Mutex();\n    }\n\n    /**\n     * Expose the private _client property to public\n     * @returns {APIClient} an instance of APIClient class\n     */\n    get client() {\n        return this._client;\n    }\n\n    /**\n     * Get the ETag of a given resource key from the session storage\n     * @param key {string} key of resource.\n     * @returns {string} ETag value for the given key\n     */\n    static getETag(key) {\n        return sessionStorage.getItem('etag_' + key);\n    }\n\n    /**\n     * Add an ETag to a given resource key into the session storage\n     * @param key {string} key of resource.\n     * @param etag {string} etag value to be stored against the key\n     */\n    static addETag(key, etag) {\n        sessionStorage.setItem('etag_' + key, etag);\n    }\n\n    /**\n     * Get Scope for a particular resource path\n     *\n     * @param resourcePath resource path of the action\n     * @param resourceMethod resource method of the action\n     */\n    static getScopeForResource(resourcePath, resourceMethod) {\n        if (!APIClient.spec) {\n            SwaggerClient.http.withCredentials = true;\n            APIClient.spec = SwaggerClient.resolve({ url: Utils.getSwaggerURL() });\n        }\n        return APIClient.spec.then((resolved) => {\n            return resolved.spec.paths[resourcePath] && resolved.spec.paths[resourcePath][resourceMethod] && resolved.spec.paths[resourcePath][resourceMethod].security[0].OAuth2Security[0];\n        });\n    }\n\n    /**\n     * Temporary method to fix the hostname attribute Till following issues get fixed ~tmkb\n     * https://github.com/swagger-api/swagger-js/issues/1081\n     * https://github.com/swagger-api/swagger-js/issues/1045\n     * @param spec {JSON} : Json object of the specification\n     * @returns {JSON} : Fixed specification\n     * @private\n     */\n    _fixSpec(spec) {\n        spec.host = this.host;\n        spec.security = [{ OAuth2Security: ['apim:api_subscribe'] }];\n        return spec;\n    }\n\n    _getResponseInterceptor() {\n        return (data) => {\n            if (data.headers.etag) {\n                APIClient.addETag(data.url, data.headers.etag);\n            }\n\n            // If an unauthenticated response is received, we check whether the token is valid by introspecting it.\n            // If it is not valid, we need to clear the stored tokens (in cookies etc) in the browser by redirecting the\n            //   user to logout.\n            if (data.status === 401 && data.obj != null && data.obj.description === 'Unauthenticated request') {\n                const userData = AuthManager.getUserFromToken();\n                const existingUser = AuthManager.getUser(this.environment.label);\n                if (existingUser) {\n                    userData.then((user) => {\n                        if (user) {\n                            window.location = Settings.app.context + Utils.CONST.LOGOUT_CALLBACK;\n                        }\n                    }).catch((error) => {\n                        console.error('Error occurred while checking token status. Hence redirecting to login', error);\n                        window.location = Settings.app.context + Utils.CONST.LOGOUT_CALLBACK;\n                    });\n                } else {\n                    console.error('Attempted a call to a protected API without a proper access token');\n                }\n            }\n            return data;\n        };\n    }\n\n    /**\n     * Interceptor for each request\n     * @returns {Object}\n     * @memberof APIClient\n     */\n    _getRequestInterceptor() {\n        return (request) => {\n            const { location } = window;\n            if (location) {\n                const { tenant } = queryString.parse(location.search);\n                if (tenant) {\n                    request.headers['X-WSO2-Tenant'] = tenant;\n                }\n            }\n\n            const existingUser = AuthManager.getUser(this.environment.label);\n            if (!existingUser) {\n                console.log('User not found. Token refreshing failed.');\n                return request;\n            }\n            let existingToken = AuthManager.getUser(this.environment.label).getPartialToken();\n            const refToken = AuthManager.getUser(this.environment.label).getRefreshPartialToken();\n            if (existingToken) {\n                request.headers.authorization = 'Bearer ' + existingToken;\n                return request;\n            } else {\n                console.log('Access token is expired. Trying to refresh.');\n                if (!refToken) {\n                    console.log('Refresh token not found. Token refreshing failed.');\n                    return request;\n                }\n            }\n\n            const env = this.environment;\n            const promise = this.mutex.acquire().then((release) => {\n                existingToken = AuthManager.getUser(env.label).getPartialToken();\n                if (existingToken) {\n                    request.headers.authorization = 'Bearer ' + existingToken;\n                    release();\n                    return request;\n                } else {\n                    return AuthManager.refresh(env).then((res) => res.json())\n                        .then(() => {\n                            request.headers.authorization = 'Bearer '\n                                + AuthManager.getUser(env.label).getPartialToken();\n                            return request;\n                        }).catch((error) => {\n                            console.error('Error:', error);\n                        })\n                        .finally(() => {\n                            release();\n                        });\n                }\n            });\n\n            if (APIClient.getETag(request.url)\n                && (request.method === 'PUT' || request.method === 'DELETE' || request.method === 'POST')) {\n                request.headers['If-Match'] = APIClient.getETag(request.url);\n            }\n            return promise;\n        };\n    }\n}\n\nAPIClient.spec = null;\n\nexport default APIClient;\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\"use strict\";\nimport APIClient from \"./APIClient\";\nimport Utils from \"./Utils\";\n\nclass APIClientFactory {\n    constructor() {\n        if (APIClientFactory._instance) {\n            return APIClientFactory._instance;\n        }\n\n        this._APIClientMap = new Map();\n        APIClientFactory._instance = this;\n    }\n\n    getAPIClient(environmentLabel) {\n        let api_Client = this._APIClientMap.get(environmentLabel);\n\n        if (api_Client) {\n            return api_Client;\n        }\n\n        api_Client = new APIClient(Utils.getEnvironment().host);\n        this._APIClientMap.set(environmentLabel, api_Client);\n        return api_Client;\n    }\n\n    destroyAPIClient(environmentLabel) {\n        this._APIClientMap.delete(environmentLabel);\n    }\n}\n\nAPIClientFactory._instance = null;\n\nexport default APIClientFactory;","/**\n * Copyright (c) 2017, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\"use strict\";\n\nimport AuthManager from './AuthManager'\n\n/***\n * Abstract resource representation, Host for generic resource related methods\n */\nexport default class Resource {\n\n    /**\n     * @param data\n     * @returns {object} Metadata for API request\n     */\n    static _requestMetaData(data = {}) {\n        /* TODO: This should be moved to an interceptor ~tmkb*/\n        return {\n            requestContentType: data['Content-Type'] || \"application/json\"\n        };\n    }\n}","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * API client for WSDL related operations\n */\nclass Wsdl extends Resource {\n    /**\n     * Constructor of the WSDL API client\n     * @param {*} client SwaggerClient object\n     */\n    constructor(client = null) {\n        super();\n        if (client == null) {\n            this.apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        } else {\n            this.apiClient = client;\n        }\n    }\n\n    /**\n     * Download the WSDL of an API for the given gateway environment\n     *\n     * @static\n     * @param {string} apiId API UUID\n     * @param {string} environmentName name of the gateway environment\n     * @returns {*} WSDL validation response\n     * @memberof Wsdl\n     */\n    downloadWSDLForEnvironment(apiId, environmentName = null) {\n        return this.apiClient.then((client) => {\n            return client.apis.APIs.getWSDLOfAPI({ apiId, environmentName });\n        });\n    }\n}\n\nexport default Wsdl;\n","/**\n * Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport CONSTS from 'AppData/Constants';\nimport APIClientFactory from './APIClientFactory';\nimport Resource from './Resource';\nimport Wsdl from './Wsdl';\nimport Utils from './Utils';\n\n/**\n * An abstract representation of an API\n */\nexport default class API extends Resource {\n    /**\n     * @constructor\n     * @param {string} access_key - Access key for invoking the backend REST API call.\n     */\n    constructor() {\n        super();\n        this.client = new APIClientFactory().getAPIClient(Utils.getEnvironment().label).client;\n        this.wsdlClient = new Wsdl(this.client);\n        this._requestMetaData = Resource._requestMetaData;\n    }\n\n    /**\n     * (TODO: need to ask for fallback sequence as well tmkb)\n     * Get list of all the available APIs, If the call back is given\n     * It will be invoked upon receiving the response from REST service.Else will return a promise.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getAllAPIs(params = {}, callback = null) {\n        const promiseGetAll = this.client.then((client) => {\n            return client.apis.APIs.get_apis(params, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGetAll.then(callback);\n        } else {\n            return promiseGetAll;\n        }\n    }\n\n    /**\n     * Get details of a given API\n     * @param id {string} UUID of the api.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getAPIById(id, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId_({ apiId: id }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /*\n     Get the inline content of a given document\n     */\n    getInlineContentOfDocument(api_id, docId) {\n        const promised_getDocContent = this.client.then((client) => {\n            const payload = {\n                apiId: api_id,\n                documentId: docId,\n            };\n            return client.apis['API Documents'].get_apis__apiId__documents__documentId__content(payload);\n        });\n        return promised_getDocContent;\n    }\n\n    /**\n     * Get the Documents of an API\n     * @param id {String} UUID of the API in which the documents needed\n     * @param callback {function} Function which needs to be called upon success of getting documents\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getDocumentsByAPIId(id, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis['API Documents'].get_apis__apiId__documents({ apiId: id }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the Documents of an API\n     * @param {string} apiId api id.\n     * @param {string} documentId document id.\n     * @returns {promise} promise to get the document.\n     */\n    getDocumentByDocId(apiId, documentId) {\n        const promiseGet = this.client.then((client) => {\n            const payload = {\n                apiId,\n                documentId,\n            };\n            return client.apis['Documents'].get_apis__apiId__documents__documentId_(payload, this._requestMetaData());\n        });\n        return promiseGet;\n    }\n\n    /**\n     * Get the Document content of an API by document Id\n     * @param api_id {String} UUID of the API in which the document needed\n     * @param docId {String} UUID of the Document need to view\n     * @param callback {function} Function which needs to be called upon success of of getting document.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getFileForDocument(api_id, docId) {\n        const promised_getDocContent = this.client.then((client) => {\n            const payload = {\n                apiId: api_id,\n                documentId: docId,\n                Accept: 'application/octet-stream',\n            };\n            return client.apis['API Documents'].get_apis__apiId__documents__documentId__content(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n        return promised_getDocContent;\n    }\n\n    /**\n     * Get the swagger of an API\n     * @param apiId {String} UUID of the API in which the swagger is needed\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSwaggerByAPIId(apiId, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__swagger({ apiId }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the schema of an GraphQL API\n     * @param apiId {String} UUID of the API in which the schema is needed\n     * @param callback {function} Function which needs to be called upon success of the retrieving schema\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getGraphQLSchemaByAPIId(apiId, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__graphql_schema({ apiId }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the swagger of an API\n     * @param apiId {String} UUID of the API in which the swagger is needed\n     * @param environmentName {String} API environment name\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSwaggerByAPIIdAndEnvironment(apiId, environmentName, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__swagger({ apiId, environmentName }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the swagger of an API\n     * @param apiId {String} UUID of the API in which the swagger is needed\n     * @param labelName {String} Micro gateway label\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSwaggerByAPIIdAndLabel(apiId, labelName, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__swagger({ apiId, labelName }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get the swagger of an API\n     * @param apiId {String} UUID of the API in which the swagger is needed\n     * @param clusterName {String} Container managed cluster name\n     * @param callback {function} Function which needs to be called upon success of the API deletion\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSwaggerByAPIIdAndClusterName(apiId, clusterName, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__swagger({ apiId, clusterName }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get application by id\n     * @param id {String} UUID of the application\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getApplication(id, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Applications.get_applications__applicationId_(\n                { applicationId: id },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get application by id\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated Use Application.all method instead\n     */\n    getAllApplications(callback = null, limit = 25) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Applications.get_applications({limit}, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get application by id\n     * @param policyLevel\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getAllTiers(policyLevel, callback = null) {\n        const promiseGetAll = this.client.then((client) => {\n            return client.apis['Throttling Policies'].get_throttling_policies__policyLevel_(\n                { policyLevel },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGetAll.then(callback);\n        } else {\n            return promiseGetAll;\n        }\n    }\n\n    /**\n     * Get all application attributes\n     * @param {function} callback which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getAllApplicationAttributes() {\n        return this.client.then((client) => {\n            return client.apis.Settings.get_settings_application_attributes(this._requestMetaData());\n        });\n    }\n\n    /**\n     * Create application\n     * @param {object} application content of the application\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    createApplication(application) {\n        return this.client.then((client) => {\n            const payload = { body: application };\n            const args = { 'Content-Type': 'application/json' };\n            return client.apis.Applications.post_applications(payload, args);\n        });\n    }\n\n    /**\n     * Update an application\n     * @param application content that need to updated with the application id\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    updateApplication(application, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            const payload = { applicationId: application.applicationId, body: application };\n            return client.apis.Applications.put_applications__applicationId_(payload, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Add new comment to an existing API\n     * @param apiId apiId of the api to which the comment is added\n     * @param comment comment text\n     */\n    addComment(apiId, comment) {\n        return this.client.then((client) => {\n            const payload = { apiId, body: comment };\n            return client.apis.Comments.addCommentToAPI(payload, this._requestMetaData());\n        });\n    }\n\n    /**\n     * Get all comments for a particular API\n     * @param apiId api id of the api to which the comment is added\n     */\n    getAllComments(apiId) {\n        return this.client.then((client) => {\n            return client.apis.Comments.getAllCommentsOfAPI({ apiId }, this._requestMetaData());\n        });\n    }\n\n    /**\n     * Delete a comment belongs to a particular API\n     * @param apiId api id of the api to which the comment belongs to\n     * @param commentId comment id of the comment which has to be deleted\n     */\n    deleteComment(apiId, commentId) {\n        return this.client.then((client) => {\n            return client.apis.Comments.deleteComment({ apiId, commentId }, this._requestMetaData());\n        });\n    }\n\n    /**\n     * Update a comment belongs to a particular API\n     * @param apiId apiId of the api to which the comment is added\n     * @param commentId comment id of the comment which has to be updated\n     * @param commentInfo comment text\n     */\n    updateComment(apiId, commentId, commentInfo, callback = null) {\n        const promise = this.client.then((client) => {\n            return client.apis['Comment (Individual)'].put_apis__apiId__comments__commentId_(\n                { apiId, commentId, body: commentInfo },\n                this._requestMetaData(),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n        if (callback) {\n            return promise.then(callback);\n        } else {\n            return promise;\n        }\n    }\n\n    /**\n     * Get Rating details for a partiuclar API\n     * @param {apiId} apiId of the api\n     * @returns {promise} promise\n     */\n    getRatingFromUser(apiId) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Ratings.get_apis__apiId__ratings({ apiId }, this._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promiseGet;\n    }\n\n    /**\n     * Remove Rating details for a partiuclar API for the logged in user\n     * @param {apiId} apiId of the api\n     * @returns {promise} promise\n     */\n    removeRatingOfUser(apiId) {\n        const promiseDelete = this.client.then((client) => {\n            return client.apis.Ratings.delete_apis__apiId__user_rating({ apiId }, this._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promiseDelete;\n    }\n\n    /**\n     * Add Rating for a partiuclar API by the logged in user\n     * @param {apiId} apiId of the api\n     * @param {ratingInfo} ratingInfo user rating for the api\n     * @returns {promise} promise\n     */\n    addRating(apiId, ratingInfo) {\n        const promise = this.client.then((client) => {\n            return client.apis.Ratings.put_apis__apiId__user_rating(\n                { apiId, body: ratingInfo },\n                this._requestMetaData(),\n            );\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promise;\n    }\n\n    /**\n     * Generate application keys\n     * @param applicationId id of the application that needs to generate the keys\n     * @param request_content payload of generate key request\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated Use Application.generateKeys() instead\n     */\n    generateKeys(applicationId, requestContent, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            const payload = { applicationId, body: requestContent };\n            return client.apis.Applications.post_applications__applicationId__generate_keys(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Generate token\n     * @param applicationId id of the application that needs to generate the token\n     * @param request_content payload of generate token request\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated Use Application.generateToken() instead\n     */\n    generateToken(applicationId, requestContent, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            const payload = { applicationId, body: requestContent };\n            return client.apis.Applications.post_applications__applicationId__generate_token(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Get keys of an application\n     * @param applicationId id of the application that needs to get the keys\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     * @deprecated Use Application.getKeys() instead\n     */\n    getKeys(applicationId, callback = null) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Applications.get_applications__applicationId__keys(\n                { applicationId },\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    generateApiKey(applicationId, keyType, validityPeriod, restrictions) {\n        const promiseGet = this.client.then((client) => {\n            const payload = {\n                applicationId, keyType,\n                body: {\n                    validityPeriod: validityPeriod,\n                    additionalProperties: restrictions\n                }\n            };\n            return client.apis['API Keys'].post_applications__applicationId__api_keys__keyType__generate(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        return promiseGet;\n    }\n\n    /**\n     * Get keys of an application\n     * @param applicationId id of the application that needs to get the keys\n     * @param callback {function} Function which needs to be called upon success\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getSubscriptions(apiId, applicationId, callback = null) {\n        const payload = { apiId };\n        if (applicationId) {\n            payload[applicationId] = applicationId;\n        }\n        const promisedGet = this.client.then((client) => {\n            return client.apis.Subscriptions.get_subscriptions(payload, this._requestMetaData());\n        });\n        if (callback) {\n            return promisedGet.then(callback);\n        } else {\n            return promisedGet;\n        }\n    }\n\n    /**\n     * Create a subscription\n     * @param {string} apiId id of the API that needs to be subscribed\n     * @param {string} applicationId id of the application that needs to be subscribed\n     * @param {string} policy throttle policy applicable for the subscription\n     * @param {function} callback callback url\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    subscribe(apiId, applicationId, policy, callback = null) {\n        const promiseCreateSubscription = this.client.then((client) => {\n            let subscriptionData = null;\n\n            subscriptionData = {\n                apiId, applicationId, throttlingPolicy: policy,\n            };\n\n            const payload = { body: subscriptionData };\n            return client.apis.Subscriptions.post_subscriptions(payload, { 'Content-Type': 'application/json' });\n        });\n        if (callback) {\n            return promiseCreateSubscription.then(callback);\n        } else {\n            return promiseCreateSubscription;\n        }\n    }\n\n    /**\n     * Get the available labels.\n     * @returns {Promise.<TResult>}\n     */\n    labels() {\n        const promiseLabels = this.client.then((client) => {\n            return client.apis['Label (Collection)'].get_labels(\n                {},\n                this._requestMetaData(),\n            );\n        });\n        return promiseLabels;\n    }\n\n    /**\n     * Get the SDK generation supported languages.\n     * @returns {Promise} List of languages that supports SDK generation by swagger-codegen\n     */\n    getSdkLanguages() {\n        const promiseLanguages = this.client.then((client) => {\n            return client.apis.SDKs.get_sdk_gen_languages({}, this._requestMetaData());\n        });\n        return promiseLanguages;\n    }\n\n    /**\n     * Get the SDK for the API with the specified apiId and language.\n     * @returns {Promise} Zip file for the generated SDK.\n     */\n    getSdk(apiId, language) {\n        const payload = { apiId, language };\n\n        const promiseSdk = this.client.then((client) => {\n            return client.apis.SDKs.get_apis__apiId__sdks__language_(payload, this._requestMetaData());\n        });\n        return promiseSdk;\n    }\n\n    /**\n     * Get details of a given throttling policy\n     * @param id {string} name of the tier.\n     * @param callback {function} A callback function to invoke after receiving successful response.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    getTierByName(name, level, callback = null) {\n        const payload = { policyId: name, policyLevel: level };\n        const promiseGet = this.client.then((client) => {\n            return client.apis['Throttling Policies'].get_throttling_policies__policyLevel___policyId_(\n                payload,\n                this._requestMetaData(),\n            );\n        });\n        if (callback) {\n            return promiseGet.then(callback);\n        } else {\n            return promiseGet;\n        }\n    }\n\n    /**\n     * Create new user\n     * @param body {JSON object} {username:\"\", password:\"\", firstName:\"\", lastName:\"\", email:\"\"}\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    createUser(body) {\n        const payload = { body };\n        const promise = this.client.then((client) => {\n            return client.apis['Sign Up'].post_self_signup(payload, { 'Content-Type': 'application/json' });\n        });\n        return promise;\n    }\n\n    /**\n     * Get all tags\n     * @returns {promise} promise all tags of APIs\n     */\n    getAllTags() {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Tags.get_tags(this._requestMetaData());\n        }).catch((error) => {\n            console.error(error);\n        });\n        return promiseGet;\n    }\n\n    /**\n     * Get the thumnail of an API\n     *\n     * @param id {string} UUID of the api\n     */\n    getAPIThumbnail(id) {\n        const promised_getAPIThumbnail = this.client.then((client) => {\n            return client.apis.APIs.get_apis__apiId__thumbnail({\n                apiId: id,\n            },\n                this._requestMetaData());\n        });\n\n        return promised_getAPIThumbnail;\n    }\n\n    /**\n     * method to search apis and documents based on content\n     * @param {Object} params APIs, Documents filtering parameters i:e { \"name\": \"MyBank API\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     * @memberof API\n     */\n    search(params) {\n        return this.client.then((client) => {\n            return client.apis['Unified Search'].get_search(params, Resource._requestMetaData());\n        });\n    }\n\n\n    /**\n     * Returns the WSDL API client\n     *\n     * @return {Wsdl} WSDL API client\n     */\n    getWsdlClient() {\n        return this.wsdlClient;\n    }\n\n    /**\n     * method to get store settings such as grant types, scopes, application sharing settings etc\n     * Settings API can be invoked with and without access token, When a token is not present it will return the public\n     * settings info, when a valid token is present it will return all the settings info.\n     * @returns {Promise} promise object return from SwaggerClient-js\n     * @memberof API\n     */\n    getSettings() {\n        return this.client.then((client) => {\n            return client.apis.Settings.get_settings(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Get the registered key managers.\n     * @return {Promise}\n     * */\n    getKeyManagers() {\n        return this.client.then((client) => {\n            return client.apis['Key Managers (Collection)'].get_key_managers(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Get the supported alert types by the publisher.\n     * @return {Promise}\n     * */\n    getSupportedAlertTypes() {\n        return this.client.then((client) => {\n            return client.apis.Alerts.getStoreAlertTypes(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Get the subscribed alert types by the current user.\n     * @returns {Promise}\n     * */\n    getSubscribedAlertTypesByUser() {\n        return this.client.then((client) => {\n            return client.apis['Alert Subscriptions'].getSubscribedAlertTypes(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Subscribe to the provided set of alerts.\n     * @return {Promise}\n     * */\n    subscribeAlerts(alerts) {\n        return this.client.then((client) => {\n            return client.apis['Alert Subscriptions'].subscribeToAlerts({ body: alerts }, this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Unsubscribe from all the alerts.\n     * @return {Promise}\n     * */\n    unsubscribeAlerts() {\n        return this.client.then((client) => {\n            return client.apis['Alert Subscriptions'].unsubscribeAllAlerts(this._requestMetaData());\n        });\n    }\n\n    /**\n     * @static\n     * Get the configuration for the given alert type.\n     * @param {string} alertType The alert type name.\n     * @return {Promise}\n     * */\n    getAlertConfigurations(alertType) {\n        return this.client.then((client) => {\n            return client.apis['Alert Configuration'].getAllAlertConfigs(\n                {\n                    alertType,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * @static\n     * Add configuration for the given alert type.\n     * @param {string} alertType The alert type name.\n     * @param {object} alertConfig Alert configurations.\n     * @param {string} configId The alert configuration id.\n     * @return {Promise}\n     * */\n    putAlertConfiguration(alertType, alertConfig, configId) {\n        return this.client.then((client) => {\n            return client.apis['Alert Configuration'].addAlertConfig(\n                {\n                    alertType,\n                    body: alertConfig,\n                    configurationId: configId,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * @static\n     * Delete configuration.\n     * @param {string} alertType The alert type name.\n     * @param {string} configId The alert configuration id.\n     * @return {Promise}\n     * */\n    deleteAlertConfiguration(alertType, configId) {\n        return this.client.then((client) => {\n            return client.apis['Alert Configuration'].deleteAlertConfig(\n                {\n                    alertType,\n                    configurationId: configId,\n                },\n                this._requestMetaData(),\n            );\n        });\n    }\n\n    /**\n     * @static\n     * Get all API Categories of the given tenant\n     * @return {Promise}\n     * */\n    apiCategories(params) {\n        return this.client.then((client) => {\n            return client.apis['API Category (Collection)'].get_api_categories(\n                params, this._requestMetaData());\n        });\n    }\n\n    /**\n     * Get API recommendations for a given user.\n     * @param {string} userId The username.\n     * @return {Promise}\n     * */\n    getApiRecommendations(params = {}) {\n        const promiseGet = this.client.then((client) => {\n            return client.apis.Recommendations.get_recommendations(params, this._requestMetaData());\n        });\n        return promiseGet;\n    }\n    /**\n     * Get the complexity related details of an API\n     */\n\n    getGraphqlPoliciesComplexity(id) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['GraphQL Policies'].get_apis__apiId__graphql_policies_complexity(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    /**\n     * Retrieve all types and fields of a GraphQL Schema\n     */\n    getGraphqlPoliciesComplexityTypes(id) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['GraphQL Policies'].get_apis__apiId__graphql_policies_complexity_types(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    /**\n     * Change password\n     */\n    changePassword(currentPwd, newPwd, callback = null) {\n        const promiseChangePassword = this.client.then((client) => {\n            const payload = { currentPassword: currentPwd, newPassword: newPwd };\n            return client.apis.Users.changeUserPassword({ body: payload }, this._requestMetaData());\n        });\n        if (callback) {\n            return promiseChangePassword.then(callback);\n        } else {\n            return promiseChangePassword;\n        }\n    }\n}\n","/**\n * Copyright (c) 2017, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\nimport APIClientFactory from './APIClientFactory';\nimport Resource from './Resource';\nimport Utils from './Utils';\n\n/**\n * Class to expose Application {Resource} related operations i:e: Get all Application , Delete, Generate Keys ect..\n * @param {string} name Application name\n * @param {string} description Application description\n * @param {string} throttlingTier Application throttling tier\n * @param {string} kwargs Arguments\n */\nexport default class Application extends Resource {\n    constructor(name, description, throttlingTier, kwargs) {\n        super();\n        this.id = kwargs ? kwargs.applicationId : null;\n        this.client = new APIClientFactory().getAPIClient(Utils.getEnvironment().label).client;\n        this.productionKeys = new Map();\n        this.sandboxKeys = new Map();\n        this.productionTokens = new Map();\n        this.sandboxTokens = new Map();\n        for (const key in kwargs) {\n            if (kwargs.hasOwnProperty(key)) {\n                if (key === 'keys') {\n                    this._setKeys(kwargs[key]);\n                    continue;\n                }\n                this[key] = kwargs[key];\n            }\n        }\n    }\n\n    /** *\n     * Set this.keys object by iterating the keys array received from REST API\n     * @param {Array} keys  An array of keys object containing either PRODUCTION or/and SANDBOX key information\n     * @private\n     */\n    _setKeys(keys) {\n        for (const keyObj of keys) {\n            if (keyObj.keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyObj.keyManager, keyObj);\n            } else {\n                this.sandboxKeys.set(keyObj.keyManager, keyObj);\n            }\n        }\n    }\n\n    /** *\n     * Set this.tokens object by iterating the keys array received from REST API\n     * @param {Array} keys  An array of keys object containing either PRODUCTION or/and SANDBOX key information\n     * @private\n     */\n    _setTokens(keys) {\n        for (const keyObj of keys) {\n            if (keyObj.keyType === 'PRODUCTION') {\n                this.productionTokens.set(keyObj.keyManager, keyObj.token);\n            } else {\n                this.sandboxTokens.set(keyObj.keyManager, keyObj.token);\n            }\n        }\n    }\n\n    /** *\n     * Get keys of the current instance of an application\n     * @param  {string} keyType Key type either `Production` or `SandBox`\n     * @returns {promise} Set the fetched CS/CK into current instance and return keys array as Promise object\n     */\n    getKeys(keyType) {\n        return this.client.then((client) => client.apis['Application Keys']\n            .get_applications__applicationId__oauth_keys({ applicationId: this.applicationId }))\n            .then((keysResponse) => {\n                const keys = keysResponse.obj.list;\n                this._setKeys(keys);\n                this._setTokens(keys);\n                if (keyType === 'PRODUCTION'){\n                    return this.productionKeys;\n                } else {\n                    return this.sandboxKeys;\n                }         \n            });\n    }\n\n    /** *\n     * Generate token for this application instance\n     * @param {string} type token type\n     * @param {string} validityPeriod token validityPeriod\n     * @param {string} selectedScopes token scopes\n     * @returns {promise} Set the generated token into current\n     * instance and return tokenObject received as Promise object\n     */\n    generateToken(selectedTab, type, validityPeriod, selectedScopes) {\n        const promiseToken = this.getKeys()\n            .then(() => this.client)\n            .then((client) => {\n                let keys;\n                if (type === 'PRODUCTION') {\n                    keys = this.productionKeys.get(selectedTab); \n                } else {\n                    keys = this.sandboxKeys.get(selectedTab); \n                }\n                const keyMappingId = keys.keyMappingId;\n                let accessToken;\n                if (type === 'PRODUCTION') {\n                    accessToken = this.productionTokens.get(selectedTab); \n                } else {\n                    accessToken = this.sandboxTokens.get(selectedTab); \n                }\n                const requestContent = {\n                    consumerSecret: keys.consumerSecret,\n                    validityPeriod,\n                    revokeToken: accessToken.accessToken,\n                    scopes: selectedScopes,\n                    additionalProperties: keys.additionalProperties,\n                };\n                const payload = { applicationId: this.id, keyMappingId: keyMappingId, body: requestContent };\n                return client.apis['Application Tokens']\n                    .post_applications__applicationId__oauth_keys__keyMappingId__generate_token(payload);\n            });\n        return promiseToken.then((tokenResponse) => {\n            const token = tokenResponse.obj;\n            if (type === 'PRODUCTION') {\n                this.productionTokens.set(selectedTab, token);\n            } else {\n                this.sandboxTokens.set(selectedTab, token);\n            }\n            return token;\n        });\n    }\n\n    /** *\n     * Generate Consumer Secret and Consumer Key for this application instance\n     * @param {string} keyType Key type either `Production` or `SandBox`\n     * @param {string[]} supportedGrantTypes Grant types supported\n     * @param  {string} callbackUrl callback url\n     * @param  {string} tokenType Token type either `OAUTH` or `JWT`\n     * @param {string} additionalProperties additional properties that needed for application.\n     * @returns {promise} Set the generated token into current instance and return tokenObject\n     * received as Promise object\n     */\n    generateKeys(keyType, supportedGrantTypes, callbackUrl, additionalProperties, keyManager) {\n        const promisedKeys = this.client.then((client) => {\n            const requestContent = {\n                keyType, /* TODO: need to support dynamic key types ~tmkb */\n                grantTypesToBeSupported: supportedGrantTypes,\n                callbackUrl,\n                additionalProperties,\n                keyManager,\n                validityTime: 3600,\n                scopes: ['default'],\n            };\n            const payload = { applicationId: this.id, body: requestContent };\n            return client.apis['Application Keys'].post_applications__applicationId__generate_keys(payload);\n        });\n        return promisedKeys.then((keysResponse) => {\n            if (keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyManager, keysResponse.obj);\n                return this.productionKeys.get(keyManager);\n            } else {\n                this.sandboxKeys.set(keyManager, keysResponse.obj);\n                return this.sandboxKeys.get(keyManager);\n            }\n        });\n    }\n\n    /** *\n     * Cleanup Consumer Secret and Consumer Key for this application instance\n     * @param {string} keyType Key type either `Production` or `SandBox`\n     * @returns {promise} Set the generated token into current instance and return tokenObject\n     * received as Promise object\n     */\n    cleanUpKeys(keyType, keyManager, keyMappingId) {\n        const requestContent = {\n            keyType, \n            keyMappingId,\n            keyManager,\n        };\n        const payload = { applicationId: this.id, keyMappingId, body: requestContent };\n        return this.client.then((client) => client.apis['Application Keys']\n            .post_applications__applicationId__oauth_keys__keyMappingId__clean_up(payload))\n            .then((response) => {\n                if (keyType === 'PRODUCTION') {\n                    this.productionKeys = new Map();\n                } else {\n                    this.sandboxKeys = new Map();\n                }\n                return response.ok;\n            });\n    }\n\n    /** *\n     * Generate Consumer Secret and Consumer Key for this application instance\n     * @param  {string} tokenType Token Type either `OAUTH` or `JWT`\n     * @param  {string} keyType Key type either `Production` or `SandBox`\n     * @param {string[]} supportedGrantTypes Grant types supported\n     * @param  {string} callbackUrl callback url\n     * @param  {String} consumerKey Consumer key of application\n     * @param  {String} consumerSecret Consumer secret of application\n     * @param  {String} additionalProperties Additional properties for the oauth application\n     * @returns {promise} Update the callbackURL and/or supportedGrantTypes\n     */\n    updateKeys(tokenType, keyType, supportedGrantTypes, callbackUrl, consumerKey, consumerSecret, additionalProperties, keyManager, keyMappingId) {\n        const promisedPut = this.client.then((client) => {\n            const requestContent = {\n                keyManager,\n                keyMappingId,\n                consumerKey,\n                consumerSecret,\n                supportedGrantTypes,\n                callbackUrl,\n                keyType,\n                tokenType,\n                additionalProperties\n            };\n            const payload = { applicationId: this.id, keyMappingId, body: requestContent };\n            return client.apis['Application Keys'].put_applications__applicationId__oauth_keys__keyMappingId_(payload);\n        });\n        return promisedPut.then((keysResponse) => {\n            if (keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyManager, keysResponse.obj);\n                return this.productionKeys.get(keyManager);\n            } else {\n                this.sandboxKeys.set(keyManager, keysResponse.obj);\n                return this.sandboxKeys.get(keyManager);\n            }\n        });\n    }\n\n    /**\n     * Regenerate Consumer Secret for this application instance\n     * @param {String} consumerKey Consumer key of application\n     * @param {string} keyType Key type either `Production` or `SandBox`\n     * @returns {promise} Update the consumerSecret\n     */\n    regenerateSecret(consumerKey, keyType, keyMappingId, keyManager) {\n        const requestContent = {\n            keyManager,\n            keyMappingId,\n            consumerKey,\n            keyType,\n        };\n        const promisedPost = this.client.then((client) => {\n            const payload = { applicationId: this.id, keyMappingId, body: requestContent };\n            return client.apis['Application Keys']\n                .post_applications__applicationId__oauth_keys__keyMappingId__regenerate_secret(payload);\n        });\n        return promisedPost.then((secretResponse) => {\n            const secret = secretResponse.obj;\n            if (keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyManager, secretResponse.obj);\n            } else {\n                this.sandboxKeys.set(keyManager, secretResponse.obj);\n            }\n            return secret;\n        });\n    }\n\n    /**\n     * Provide Consumer Key and Secret of Existing OAuth Apps\n     *\n     * @param keyType           key type, either PRODUCTION or SANDBOX\n     * @param consumerKey       consumer key of the OAuth app\n     * @param consumerSecret    consumer secret of the OAuth app\n     * @returns {*}\n     */\n    provideKeys(keyType, consumerKey, consumerSecret, keyManager) {\n        const promisedKeys = this.client.then((client) => {\n            const requestContent = { consumerKey, consumerSecret, keyType, keyManager};\n            const payload = { applicationId: this.id, body: requestContent };\n            return client.apis['Application Keys'].post_applications__applicationId__map_keys(payload);\n        });\n        return promisedKeys.then((keysResponse) => {\n            if (keyType === 'PRODUCTION') {\n                this.productionKeys.set(keyManager, keysResponse.obj);\n                return this.productionKeys.get(keyManager);\n            } else {\n                this.sandboxKeys.set(keyManager, keysResponse.obj);\n                return this.sandboxKeys.get(keyManager);\n            }\n        });\n    }\n\n    static get(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getEnvironment());\n        const promisedGet = apiClient.client.then((client) => {\n            return client.apis.Applications.get_applications__applicationId_(\n                { applicationId: id },\n                this._requestMetaData(),\n            );\n        });\n        return promisedGet.then((response) => {\n            const appJson = response.obj;\n            return new Application(appJson.name, appJson.description, appJson.throttlingTier, appJson);\n        });\n    }\n\n    static all(limit = 3, offset = null, sortOrder = 'asc', sortBy = 'name', query = '') {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getEnvironment());\n        const promisedAll = apiClient.client.then((client) => {\n            return client.apis.Applications.get_applications({\n                limit, offset, sortOrder, sortBy, query,\n            }, this._requestMetaData());\n        });\n        return promisedAll.then((response) => response.obj);\n    }\n\n    static deleteApp(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getEnvironment());\n        const promisedDelete = apiClient.client.then((client) => {\n            return client.apis.Applications.delete_applications__applicationId_(\n                { applicationId: id },\n                this._requestMetaData(),\n            );\n        });\n        return promisedDelete.then((response) => response.ok);\n    }\n}\n\nApplication.KEY_TYPES = {\n    PRODUCTION: 'PRODUCTION',\n    SANDBOX: 'SANDBOX',\n};\n\nApplication.TOKEN_TYPES = {\n    JWT: { key: 'JWT', displayName: 'Self-contained (JWT)' },\n    OAUTH: { key: 'OAUTH', displayName: 'Reference (Opaque)' },\n};\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport {\n    Grid, FormControl, FormControlLabel, RadioGroup, Radio, Typography,\n} from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst styles = (theme) => ({\n    centerItems: {\n        margin: 'auto',\n    },\n    tryoutHeading: {\n        marginTop: theme.spacing(1),\n        fontWeight: 400,\n    },\n    menuItem: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n});\n\nconst SelectAppPanel = (props) => {\n    let {\n        selectedApplication, selectedKeyType,\n    } = props;\n\n    const {\n        subscriptions, handleChanges, classes,\n    } = props;\n\n    /**\n     * This method is used to handle the updating of key generation\n     * request object.\n     * @param {*} event event fired\n     */\n    const handleSelectPanelChange = (event) => {\n        const { target } = event;\n        const { name, value } = target;\n        switch (name) {\n            case 'selectedApplication':\n                selectedApplication = value;\n                break;\n            case 'selectedKeyType':\n                selectedKeyType = value;\n                break;\n            default:\n                break;\n        }\n        handleChanges(event);\n    };\n    return (\n        <>\n            <Grid x={12} md={6} className={classes.centerItems}>\n                <TextField\n                    fullWidth\n                    id='selected-application'\n                    select\n                    label={(\n                        <FormattedMessage\n                            defaultMessage='Applications'\n                            id='Apis.Details.ApiConsole.SelectAppPanel.applications'\n                        />\n                    )}\n                    value={selectedApplication}\n                    name='selectedApplication'\n                    onChange={handleSelectPanelChange}\n                    SelectProps={subscriptions}\n                    helperText={(\n                        <FormattedMessage\n                            defaultMessage='Subscribed applications'\n                            id='Apis.Details.ApiConsole.SelectAppPanel.select.subscribed.application'\n                        />\n                    )}\n                    margin='normal'\n                    variant='outlined'\n                >\n                    {subscriptions.map((sub) => (\n                        <MenuItem\n                            value={sub.applicationInfo.applicationId}\n                            key={sub.applicationInfo.applicationId}\n                            className={classes.menuItem}\n                        >\n                            {sub.applicationInfo.name}\n                        </MenuItem>\n                    ))}\n                </TextField>\n            </Grid>\n            <Grid x={12} md={6} className={classes.centerItems}>\n                <Typography variant='h6' color='textSecondary' className={classes.tryoutHeading}>\n                    <FormattedMessage\n                        id='Apis.Details.ApiConsole.SelectAppPanel.select.key.type.heading'\n                        defaultMessage='Key Type'\n                    />\n                </Typography>\n                <FormControl component='fieldKeyType'>\n                    <RadioGroup\n                        name='selectedKeyType'\n                        value={selectedKeyType}\n                        onChange={handleSelectPanelChange}\n                        row\n                    >\n                        {(subscriptions != null && subscriptions.find((sub) => sub.applicationId\n                                === selectedApplication).status === 'UNBLOCKED')\n                                && (\n                                    <FormControlLabel\n                                        value='PRODUCTION'\n                                        control={<Radio />}\n                                        label={(\n                                            <FormattedMessage\n                                                id='Apis.Details.ApiConsole.SelectAppPanel.production.radio'\n                                                defaultMessage='Production'\n                                            />\n                                        )}\n                                    />\n                                )}\n                        <FormControlLabel\n                            value='SANDBOX'\n                            control={<Radio />}\n                            label={(\n                                <FormattedMessage\n                                    id='Apis.Details.ApiConsole.SelectAppPanel.sandbox.radio'\n                                    defaultMessage='Sandbox'\n                                />\n                            )}\n                        />\n                    </RadioGroup>\n                </FormControl>\n            </Grid>\n        </>\n    );\n};\n\nexport default withStyles(styles)(SelectAppPanel);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, {\n    useEffect, useState,\n} from 'react';\nimport { FormattedMessage, IntlProvider } from 'react-intl';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport {\n    Radio, RadioGroup, FormControlLabel, FormControl, CircularProgress, Tooltip,\n} from '@material-ui/core';\nimport HelpOutline from '@material-ui/icons/HelpOutline';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Icon from '@material-ui/core/Icon';\nimport AuthManager from 'AppData/AuthManager';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport Progress from '../../../Shared/Progress';\nimport Api from '../../../../data/api';\nimport Application from '../../../../data/Application';\nimport SelectAppPanel from './SelectAppPanel';\n\n/**\n * @inheritdoc\n * @param {*} theme theme\n */\nconst styles = makeStyles((theme) => ({\n    centerItems: {\n        margin: 'auto',\n    },\n    tokenType: {\n        margin: 'auto',\n        display: 'flex',\n        '& .MuiButton-contained.Mui-disabled span.MuiButton-label': {\n            color: '#999999',\n        },\n    },\n    paper: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n    },\n    grid: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n        paddingRight: theme.spacing(2),\n        justifyContent: 'center',\n    },\n    tryoutHeading: {\n        fontWeight: 400,\n    },\n    genKeyButton: {\n        width: theme.spacing(20),\n        height: theme.spacing(5),\n        marginTop: theme.spacing(2.5),\n        marginLeft: theme.spacing(2),\n    },\n    gatewayEnvironment: {\n        marginTop: theme.spacing(4),\n    },\n    categoryHeading: {\n        marginBottom: theme.spacing(2),\n        marginLeft: theme.spacing(-5),\n    },\n    tooltip: {\n        marginLeft: theme.spacing(1),\n    },\n    menuItem: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n    warningIcon: {\n        color: '#ff9a00',\n        fontSize: 25,\n        marginRight: 10,\n    },\n}));\n\n/**\n * TryOut component\n *\n * @class TryOutController\n * @extends {Component}\n */\nfunction TryOutController(props) {\n    const {\n        securitySchemeType, selectedEnvironment, environments, containerMngEnvironments, labels,\n        productionAccessToken, sandboxAccessToken, selectedKeyType, setKeys, setSelectedKeyType,\n        setSelectedKeyManager,\n        setSelectedEnvironment, setProductionAccessToken, setSandboxAccessToken, scopes,\n        setSecurityScheme, setUsername, setPassword, username, password, updateSwagger,\n        setProductionApiKey, setSandboxApiKey, productionApiKey, sandboxApiKey, environmentObject, setURLs, api,\n    } = props;\n    let { selectedKeyManager } = props;\n    selectedKeyManager = selectedKeyManager || 'Resident Key Manager';\n\n    const classes = styles();\n    const [showToken, setShowToken] = useState(false);\n    const [isUpdating, setIsUpdating] = useState(false);\n    const [notFound, setNotFound] = useState(false);\n    const [subscriptions, setSubscriptions] = useState([]);\n    const [selectedApplication, setSelectedApplication] = useState([]);\n    const [keyManagers, setKeyManagers] = useState([]);\n    const [selectedKMObject, setSelectedKMObject] = useState(null);\n    const [ksGenerated, setKSGenerated] = useState(false);\n    const apiID = api.id;\n    const restApi = new Api();\n\n    useEffect(() => {\n        let subscriptionsList;\n        let newSelectedApplication;\n        let keys;\n        let selectedKeyTypes = 'PRODUCTION';\n        let accessToken;\n        if (api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() !== 'prototyped') {\n            const promiseSubscriptions = restApi.getSubscriptions(apiID);\n            promiseSubscriptions.then((subscriptionsResponse) => {\n                if (subscriptionsResponse !== null) {\n                    subscriptionsList = subscriptionsResponse.obj.list.filter((item) => item.status === 'UNBLOCKED'\n                        || item.status === 'PROD_ONLY_BLOCKED');\n\n                    if (subscriptionsList && subscriptionsList.length > 0) {\n                        newSelectedApplication = subscriptionsList[0].applicationId;\n                        Application.get(newSelectedApplication)\n                            .then((application) => {\n                                return application.getKeys();\n                            })\n                            .then((appKeys) => {\n                                if (appKeys.get(selectedKeyManager)\n                                    && appKeys.get(selectedKeyManager).keyType === 'SANDBOX') {\n                                    selectedKeyTypes = 'SANDBOX';\n                                    ({ accessToken } = appKeys.get(selectedKeyManager).token);\n                                } else if (appKeys.get(selectedKeyManager)\n                                    && appKeys.get(selectedKeyManager).keyType === 'PRODUCTION') {\n                                    selectedKeyTypes = 'PRODUCTION';\n                                    ({ accessToken } = appKeys.get(selectedKeyManager).token);\n                                }\n                                setSelectedApplication(newSelectedApplication);\n                                setSubscriptions(subscriptionsList);\n                                setKeys(appKeys);\n                                setSelectedEnvironment(selectedEnvironment, false);\n                                setSelectedKeyType(selectedKeyTypes, false);\n                                if (selectedKeyType === 'PRODUCTION') {\n                                    setProductionAccessToken(accessToken);\n                                } else {\n                                    setSandboxAccessToken(accessToken);\n                                }\n                            });\n                    } else {\n                        setSelectedApplication(newSelectedApplication);\n                        setSubscriptions(subscriptionsList);\n                        setKeys(keys);\n                        setSelectedEnvironment(selectedEnvironment, false);\n                        if (selectedKeyType === 'PRODUCTION') {\n                            setProductionAccessToken(accessToken);\n                        } else {\n                            setSandboxAccessToken(accessToken);\n                        }\n                        setSelectedKeyType(selectedKeyType, false);\n                    }\n                } else {\n                    setSelectedApplication(newSelectedApplication);\n                    setSubscriptions(subscriptionsList);\n                    setKeys(keys);\n                    setSelectedEnvironment(selectedEnvironment, false);\n                    if (selectedKeyType === 'PRODUCTION') {\n                        setProductionAccessToken(accessToken);\n                    } else {\n                        setSandboxAccessToken(accessToken);\n                    }\n                    setSelectedKeyType(selectedKeyType, false);\n                }\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                }\n            });\n            const promisedKeyManagers = restApi.getKeyManagers();\n            promisedKeyManagers\n                .then((response) => {\n                    const responseKeyManagerList = [];\n                    response.body.list.map((item) => responseKeyManagerList.push(item));\n                    setKeyManagers(responseKeyManagerList);\n                    const filteredKMs = (responseKeyManagerList.filter((km) => km.name === selectedKeyManager));\n                    if (filteredKMs && filteredKMs.length > 0) {\n                        setSelectedKMObject(filteredKMs[0]);\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        setNotFound(true);\n                    }\n                });\n        }\n    }, []);\n\n\n    /**\n     * Generate access token\n     * */\n    function generateAccessToken() {\n        if (api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() !== 'prototyped') {\n            setIsUpdating(true);\n            const applicationPromise = Application.get(selectedApplication);\n            applicationPromise\n                .then((application) => application.generateToken(\n                    selectedKeyManager,\n                    selectedKeyType,\n                    3600,\n                    scopes,\n                ))\n                .then((response) => {\n                    console.log('token generated successfully ' + response);\n                    setShowToken(false);\n                    if (selectedKeyType === 'PRODUCTION') {\n                        setProductionAccessToken(response.accessToken);\n                    } else {\n                        setSandboxAccessToken(response.accessToken);\n                    }\n                    setIsUpdating(false);\n                })\n                .catch((error) => {\n                    console.error(error);\n                    const { status } = error;\n                    if (status === 404) {\n                        setNotFound(true);\n                    }\n                    setIsUpdating(false);\n                });\n        }\n    }\n\n    /**\n     * Generate api key\n     * */\n    function generateApiKey() {\n        if (api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() !== 'prototyped') {\n            setIsUpdating(true);\n            const promisedKey = restApi.generateApiKey(selectedApplication, selectedKeyType, -1);\n            promisedKey\n                .then((response) => {\n                    console.log('Non empty response received', response);\n                    setShowToken(false);\n                    if (selectedKeyType === 'PRODUCTION') {\n                        setProductionApiKey(response.body.apikey);\n                    } else {\n                        setSandboxApiKey(response.body.apikey);\n                    }\n                    setIsUpdating(false);\n                })\n                .catch((error) => {\n                    console.log(error);\n                    const { status } = error;\n                    if (status === 404) {\n                        setNotFound(true);\n                    }\n                    setIsUpdating(false);\n                });\n        }\n    }\n\n    /**\n     *\n     * Handle onClick of shown access token\n     * @memberof TryOutController\n     */\n    function handleClickShowToken() {\n        setShowToken(!showToken);\n    }\n\n    /**\n     * Load the selected application information\n     * @memberof TryOutController\n     */\n    function updateApplication() {\n        if (api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() !== 'prototyped') {\n            let accessToken;\n            let keyType;\n            if (subscriptions !== null && subscriptions.length !== 0 && selectedApplication.length !== 0) {\n                if (subscriptions.find((sub) => sub.applicationId\n                    === selectedApplication).status === 'PROD_ONLY_BLOCKED') {\n                    setSelectedKeyType(selectedKeyType, false);\n                    keyType = 'SANDBOX';\n                } else {\n                    keyType = selectedKeyType;\n                }\n            }\n            Application.get(selectedApplication)\n                .then((application) => {\n                    return application.getKeys(keyType || 'PRODUCTION');\n                })\n                .then((appKeys) => {\n                    const selectedKeys = appKeys.get(selectedKeyManager);\n                    if (selectedKeys && selectedKeys.keyType === selectedKeyType) {\n                        ({ accessToken } = selectedKeys.token);\n                    }\n                    if (selectedKeys && selectedKeys.keyType === 'PRODUCTION') {\n                        setProductionAccessToken(accessToken);\n                    } else if (selectedKeys && selectedKeys.keyType === 'SANDBOX') {\n                        setSandboxAccessToken(accessToken);\n                    }\n                    if (selectedKeys && selectedKeys.consumerKey && selectedKeys.consumerKey !== '') {\n                        setKSGenerated(true);\n                    } else {\n                        setKSGenerated(false);\n                    }\n                    setKeys(appKeys);\n                });\n        }\n    }\n\n    useEffect(() => {\n        updateApplication();\n    }, [selectedApplication, selectedKeyType, selectedEnvironment, securitySchemeType]);\n\n    /**\n     * Handle onChange of inputs\n     * @param {*} event event\n     * @memberof TryOutController\n     */\n    function handleChanges(event) {\n        const { target } = event;\n        const { name, value } = target;\n        switch (name) {\n            case 'selectedEnvironment':\n                setSelectedEnvironment(value, true);\n                updateSwagger(value);\n                if (environmentObject) {\n                    const urls = environmentObject.find((elm) => value === elm.environmentName).URLs;\n                    setURLs(urls);\n                }\n                break;\n            case 'selectedApplication':\n                setProductionAccessToken('');\n                setSandboxAccessToken('');\n                setProductionApiKey('');\n                setSandboxApiKey('');\n                setSelectedApplication(value);\n                break;\n            case 'selectedKeyManager':\n                setSelectedKeyManager(value, true, selectedApplication);\n                break;\n            case 'selectedKeyType':\n                if (!productionAccessToken || !sandboxAccessToken) {\n                    setSelectedKeyType(value, true, selectedApplication);\n                } else {\n                    setSelectedKeyType(value, false, selectedApplication);\n                }\n                break;\n            case 'securityScheme':\n                setSecurityScheme(value);\n                break;\n            case 'username':\n                setUsername(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n            case 'accessToken':\n                if (securitySchemeType === 'API-KEY' && selectedKeyType === 'PRODUCTION') {\n                    setProductionApiKey(value);\n                } else if (securitySchemeType === 'API-KEY' && selectedKeyType === 'SANDBOX') {\n                    setSandboxApiKey(value);\n                } else if (selectedKeyType === 'PRODUCTION') {\n                    setProductionAccessToken(value);\n                } else {\n                    setSandboxAccessToken(value);\n                }\n                break;\n            default:\n        }\n    }\n\n    const user = AuthManager.getUser();\n    if (api == null) {\n        return <Progress />;\n    }\n    if (notFound) {\n        return 'API Not found !';\n    }\n    let isApiKeyEnabled = false;\n    let isBasicAuthEnabled = false;\n    let isOAuthEnabled = false;\n    let isTestKeyEnabled = false;\n    let authorizationHeader = api.authorizationHeader ? api.authorizationHeader : 'Authorization';\n    let prefix = 'Bearer';\n    if (api && api.securityScheme) {\n        isApiKeyEnabled = api.securityScheme.includes('api_key');\n        isBasicAuthEnabled = api.securityScheme.includes('basic_auth');\n        isOAuthEnabled = api.securityScheme.includes('oauth2');\n        isTestKeyEnabled = api.securityScheme.includes('test_auth');\n        if (isApiKeyEnabled && securitySchemeType === 'API-KEY') {\n            authorizationHeader = 'apikey';\n            prefix = '';\n        }\n        if (isTestKeyEnabled && securitySchemeType === 'TEST') {\n            authorizationHeader = 'testKey';\n            prefix = '';\n        }\n    }\n    const isPrototypedAPI = api.lifeCycleStatus && api.lifeCycleStatus.toLowerCase() === 'prototyped';\n    const isPublished = api.lifeCycleStatus.toLowerCase() === 'published';\n    const showSecurityType = isPublished || (isPrototypedAPI && api.enableStore === true);\n\n    let tokenValue = '';\n    if (securitySchemeType === 'API-KEY') {\n        tokenValue = selectedKeyType === 'PRODUCTION' ? productionApiKey : sandboxApiKey;\n    } else {\n        tokenValue = selectedKeyType === 'PRODUCTION' ? productionAccessToken : sandboxAccessToken;\n    }\n\n    // The rendering logic of container management menus items are done here\n    // because when grouping container management type and clusters with <> and </>\n    // the handleChange event is not triggered. Hence handle rendering logic here.\n    const containerMngEnvMenuItems = [];\n    if (containerMngEnvironments) {\n        containerMngEnvironments.filter((envType) => envType.clusterDetails.length > 0).forEach((envType) => {\n            // container management system type\n            containerMngEnvMenuItems.push(\n                <MenuItem value='' disabled className={classes.menuItem}>\n                    <em>\n                        {envType.deploymentEnvironmentName}\n                    </em>\n                </MenuItem>,\n            );\n            // clusters of the container management system type\n            envType.clusterDetails.forEach((cluster) => {\n                containerMngEnvMenuItems.push(\n                    <MenuItem\n                        value={cluster.clusterName}\n                        key={cluster.clusterName}\n                        className={classes.menuItem}\n                    >\n                        {cluster.clusterDisplayName}\n                    </MenuItem>,\n                );\n            });\n        });\n    }\n\n    const authHeader = `${authorizationHeader}: ${prefix}`;\n\n    return (\n        <IntlProvider locale='en'>\n            <Grid x={12} md={6} className={classes.centerItems}>\n                <Box>\n                    {securitySchemeType !== 'TEST' && (\n                        <>\n                            <Typography variant='h5' color='textPrimary' className={classes.categoryHeading}>\n                                <FormattedMessage\n                                    id='api.console.security.heading'\n                                    defaultMessage='Security'\n                                />\n                            </Typography>\n                            <Box mb={1}>\n                                <Typography variant='body1'>\n                                    <Box display='flex' alignItems='center'>\n                                        {(selectedKMObject && selectedKMObject.enabled) && (\n                                            <FormattedMessage\n                                                id='Apis.Details.ApiConsole.TryOutController.default.km.msg.one'\n                                                defaultMessage='The Resident Key Manager is selected for try out console.'\n                                            />\n                                        )}\n                                        {(selectedKMObject && !selectedKMObject.enabled) && (\n                                            <>\n                                                <WarningIcon className={classes.warningIcon} />\n                                                <div>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.ApiConsole.TryOutController.default.km.msg.two'\n                                                        defaultMessage={'Try it console is only accessible via the default key manager.'\n                                        + 'But the default key manager is disabled at the moment.'}\n                                                    />\n                                                </div>\n                                            </>\n                                        )}\n                                        {(selectedKMObject && selectedKMObject.length === 0) && (\n                                            <FormattedMessage\n                                                id='Apis.Details.ApiConsole.TryOutController.default.km.msg.three'\n                                                defaultMessage={'Try it console is only accessible via the default key manager.'\n                                        + 'Something went wrong while selecting the default Key manager.'}\n                                            />\n                                        )}\n                                    </Box>\n                                </Typography>\n                            </Box>\n                            <Typography variant='h6' color='textSecondary' className={classes.tryoutHeading}>\n                                <FormattedMessage\n                                    id='api.console.security.type.heading'\n                                    defaultMessage='Security Type'\n                                />\n                            </Typography>\n                        </>\n                    )}\n                    {((isApiKeyEnabled || isBasicAuthEnabled || isOAuthEnabled) && showSecurityType) && (\n                        <FormControl component='fieldset'>\n                            <RadioGroup\n                                name='securityScheme'\n                                value={securitySchemeType}\n                                onChange={handleChanges}\n                                row\n                            >\n                                <FormControlLabel\n                                    value='OAUTH'\n                                    disabled={!isOAuthEnabled}\n                                    control={<Radio />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.ApiConsole.security.scheme.oauth'\n                                            defaultMessage='OAuth'\n                                        />\n                                    )}\n                                />\n                                <FormControlLabel\n                                    value='API-KEY'\n                                    disabled={!isApiKeyEnabled}\n                                    control={<Radio />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.ApiConsole.security.scheme.apikey'\n                                            defaultMessage='API Key'\n                                        />\n                                    )}\n                                />\n                                <FormControlLabel\n                                    value='BASIC'\n                                    disabled={!isBasicAuthEnabled}\n                                    control={<Radio />}\n                                    label={(\n                                        <FormattedMessage\n                                            id='Apis.Details.ApiConsole.security.scheme.basic'\n                                            defaultMessage='Basic'\n                                        />\n                                    )}\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    )}\n                </Box>\n            </Grid>\n            {!isPrototypedAPI\n                && (\n                    <Grid xs={12} md={12} item>\n                        <Box display='block'>\n                            {user && subscriptions\n                                && subscriptions.length > 0 && securitySchemeType !== 'BASIC' && securitySchemeType !== 'TEST'\n                                && (\n                                    <SelectAppPanel\n                                        subscriptions={subscriptions}\n                                        handleChanges={handleChanges}\n                                        selectedApplication={selectedApplication}\n                                        selectedKeyManager={selectedKeyManager}\n                                        selectedKeyType={selectedKeyType}\n                                        keyManagers={keyManagers}\n                                    />\n                                )}\n                            {subscriptions && subscriptions.length === 0 && securitySchemeType !== 'TEST' ? (\n                                <Grid x={8} md={6} className={classes.tokenType} item>\n                                    <Box mb={1} alignItems='center'>\n                                        <Typography variant='body1'>\n                                            <Box display='flex'>\n                                                <WarningIcon className={classes.warningIcon} />\n                                                <div>\n                                                    <FormattedMessage\n                                                        id='Apis.Details.ApiConsole.ApiConsole.subscribe.to.application'\n                                                        defaultMessage='Please subscribe to an application'\n                                                    />\n                                                </div>\n                                            </Box>\n                                        </Typography>\n                                    </Box>\n                                </Grid>\n                            ) : (\n                                !ksGenerated && (\n                                    <Grid x={8} md={6} className={classes.tokenType} item>\n                                        <Box mb={1} alignItems='center'>\n                                            <Typography variant='body1'>\n                                                <Box display='flex'>\n                                                    <WarningIcon className={classes.warningIcon} />\n                                                    <div>\n                                                        <FormattedMessage\n                                                            id='Apis.Details.ApiConsole.ApiConsole.keys.not.generated'\n                                                            defaultMessage={'Consumer key and secret not generated for the selected'\n                                                            + ' application on the {what} environment. '}\n                                                            values={{ what: selectedKeyType }}\n                                                        />\n                                                    </div>\n                                                </Box>\n                                            </Typography>\n                                        </Box>\n                                    </Grid>\n                                )\n                            )}\n                            <Box display='block' justifyContent='center'>\n                                <Grid x={8} md={6} className={classes.tokenType} item>\n                                    {securitySchemeType === 'BASIC' && (\n                                        <>\n                                            <Grid x={12} md={12} item>\n                                                <TextField\n                                                    margin='normal'\n                                                    variant='outlined'\n                                                    label={(\n                                                        <FormattedMessage\n                                                            id='username'\n                                                            defaultMessage='Username'\n                                                        />\n                                                    )}\n                                                    name='username'\n                                                    onChange={handleChanges}\n                                                    value={username || ''}\n                                                    fullWidth\n                                                />\n                                                <TextField\n                                                    margin='normal'\n                                                    variant='outlined'\n                                                    label={(\n                                                        <FormattedMessage\n                                                            id='password'\n                                                            defaultMessage='Password'\n                                                        />\n                                                    )}\n                                                    name='password'\n                                                    onChange={handleChanges}\n                                                    value={password || ''}\n                                                    fullWidth\n                                                />\n                                            </Grid>\n                                        </>\n                                    )}\n\n                                    {securitySchemeType !== 'BASIC' && securitySchemeType !== 'TEST' && (\n                                        <TextField\n                                            fullWidth\n                                            margin='normal'\n                                            variant='outlined'\n                                            label={(\n                                                <FormattedMessage\n                                                    id='access.token'\n                                                    sdefaultMessage='Access Token'\n                                                />\n                                            )}\n                                            name='accessToken'\n                                            onChange={handleChanges}\n                                            type={showToken ? 'text' : 'password'}\n                                            value={tokenValue || ''}\n                                            helperText={(\n                                                <FormattedMessage\n                                                    id='enter.access.token'\n                                                    defaultMessage='Enter access Token'\n                                                />\n                                            )}\n                                            id='accessTokenInput'\n                                            InputProps={{\n                                                endAdornment: (\n                                                    <InputAdornment position='end'>\n                                                        <IconButton\n                                                            edge='end'\n                                                            aria-label='Toggle token visibility'\n                                                            onClick={handleClickShowToken}\n                                                        >\n                                                            {showToken ? <Icon>visibility_off</Icon>\n                                                                : <Icon>visibility</Icon>}\n                                                        </IconButton>\n                                                    </InputAdornment>\n                                                ),\n                                                startAdornment: (\n                                                    <InputAdornment\n                                                        style={{\n                                                            minWidth: (authHeader.length * 7),\n                                                        }}\n                                                        position='start'\n                                                    >\n                                                        {`${authorizationHeader}: ${prefix}`}\n                                                    </InputAdornment>\n                                                ),\n                                            }}\n                                        />\n                                    )}\n                                    {securitySchemeType !== 'BASIC' && securitySchemeType !== 'TEST' && (\n                                        <>\n                                            <Button\n                                                onClick={securitySchemeType === 'API-KEY' ? generateApiKey\n                                                    : generateAccessToken}\n                                                variant='contained'\n                                                className={classes.genKeyButton}\n                                                disabled={!user || (subscriptions && subscriptions.length === 0) || !ksGenerated}\n                                            >\n                                                {isUpdating && (\n                                                    <CircularProgress size={15} />\n                                                )}\n                                                <FormattedMessage\n                                                    id='Apis.Details.ApiCOnsole.generate.test.key'\n                                                    defaultMessage='GET TEST KEY '\n                                                />\n                                            </Button>\n                                            <Tooltip\n                                                placement='right'\n                                                interactive\n                                                title={(\n                                                    <FormattedMessage\n                                                        id='Apis.Details.TryOutConsole.access.token.tooltip'\n                                                        defaultMessage={\n                                                            'You can use your existing Access Token or '\n                                                            + 'you can generate a new Test Key.'\n                                                        }\n                                                    />\n                                                )}\n                                            >\n                                                <Box m={1} mt={2}>\n                                                    <IconButton\n                                                        aria-label='Use existing Access Token or generate a new Test Key'\n                                                    >\n                                                        <HelpOutline />\n                                                    </IconButton>\n                                                </Box>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                </Grid>\n                            </Box>\n                            <Box display='flex' justifyContent='center' className={classes.gatewayEnvironment}>\n                                <Grid xs={12} md={6} item>\n                                    {((environments && environments.length > 0) || (containerMngEnvMenuItems.length > 0)\n                                        || (labels && labels.length > 0))\n                                        && (\n                                            <>\n                                                <Typography\n                                                    variant='h5'\n                                                    color='textPrimary'\n                                                    className={classes.categoryHeading}\n                                                >\n                                                    <FormattedMessage\n                                                        id='api.console.gateway.heading'\n                                                        defaultMessage='Gateway'\n                                                    />\n                                                </Typography>\n                                                <TextField\n                                                    fullWidth\n                                                    select\n                                                    label={(\n                                                        <FormattedMessage\n                                                            defaultMessage='Environment'\n                                                            id='Apis.Details.ApiConsole.environment'\n                                                        />\n                                                    )}\n                                                    value={selectedEnvironment || (environments && environments[0])}\n                                                    name='selectedEnvironment'\n                                                    onChange={handleChanges}\n                                                    helperText={(\n                                                        <FormattedMessage\n                                                            defaultMessage='Please select an environment'\n                                                            id='Apis.Details.ApiConsole.SelectAppPanel.environment'\n                                                        />\n                                                    )}\n                                                    margin='normal'\n                                                    variant='outlined'\n                                                >\n                                                    {environments && environments.length > 0 && (\n                                                        <MenuItem value='' disabled className={classes.menuItem}>\n                                                            <em>\n                                                                <FormattedMessage\n                                                                    id='api.gateways'\n                                                                    defaultMessage='API Gateways'\n                                                                />\n                                                            </em>\n                                                        </MenuItem>\n                                                    )}\n                                                    {environments && (\n                                                        environments.map((env) => (\n                                                            <MenuItem\n                                                                value={env}\n                                                                key={env}\n                                                                className={classes.menuItem}\n                                                            >\n                                                                {env}\n                                                            </MenuItem>\n                                                        )))}\n                                                    {containerMngEnvMenuItems}\n                                                    {labels && labels.length > 0 && (\n                                                        <MenuItem value='' disabled>\n                                                            <em>\n                                                                <FormattedMessage\n                                                                    id='gateways'\n                                                                    defaultMessage='Gateways'\n                                                                    className={classes.menuItem}\n                                                                />\n                                                            </em>\n                                                        </MenuItem>\n                                                    )}\n                                                    {labels && (\n                                                        labels.map((label) => (\n                                                            <MenuItem\n                                                                value={label}\n                                                                key={label}\n                                                                className={classes.menuItem}\n                                                            >\n                                                                {label}\n                                                            </MenuItem>\n                                                        ))\n                                                    )}\n                                                </TextField>\n                                            </>\n                                        )}\n                                </Grid>\n                            </Box>\n                        </Box>\n                    </Grid>\n                )}\n        </IntlProvider>\n    );\n}\n\nTryOutController.propTypes = {\n    classes: PropTypes.shape({\n        paper: PropTypes.string.isRequired,\n        grid: PropTypes.string.isRequired,\n        inputAdornmentStart: PropTypes.string.isRequired,\n        centerItems: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(makeStyles)(TryOutController);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport 'swagger-ui-react/swagger-ui.css';\nimport SwaggerUILib from 'swagger-ui-react';\n\nconst disableAuthorizeAndInfoPlugin = function () {\n    return {\n        wrapComponents: {\n            info: () => () => null,\n            authorizeBtn: () => () => null,\n        },\n    };\n};\n/**\n *\n * @class SwaggerUI\n * @extends {Component}\n */\nconst SwaggerUI = (props) => {\n    const {\n        spec, accessTokenProvider, authorizationHeader, api, securitySchemeType,\n    } = props;\n\n    const componentProps = {\n        spec,\n        validatorUrl: null,\n        defaultModelsExpandDepth: -1,\n        docExpansion: 'list',\n        requestInterceptor: (req) => {\n            const { url } = req;\n            const { context } = api;\n            const patternToCheck = `${context}/*`;\n            if (authorizationHeader === 'apikey') {\n                req.headers[authorizationHeader] = accessTokenProvider();\n            } else if (securitySchemeType === 'BASIC') {\n                req.headers[authorizationHeader] = 'Basic ' + accessTokenProvider();\n            } else if (securitySchemeType === 'TEST') {\n                req.headers[authorizationHeader] = accessTokenProvider();\n            } else {\n                req.headers[authorizationHeader] = 'Bearer ' + accessTokenProvider();\n            }\n            if (url.endsWith(patternToCheck)) {\n                req.url = url.substring(0, url.length - 2);\n            } else if (url.includes(patternToCheck + '?')) { // Check for query parameters.\n                const splitTokens = url.split('/*?');\n                req.url = splitTokens.length > 1 ? splitTokens[0] + '?' + splitTokens[1] : splitTokens[0];\n            }\n            return req;\n        },\n        defaultModelExpandDepth: -1,\n        plugins: [disableAuthorizeAndInfoPlugin],\n    };\n    return <SwaggerUILib {...componentProps} />;\n};\n\nSwaggerUI.propTypes = {\n    accessTokenProvider: PropTypes.func.isRequired,\n    authorizationHeader: PropTypes.string.isRequired,\n    api: PropTypes.shape({\n        context: PropTypes.string.isRequired,\n    }).isRequired,\n    spec: PropTypes.string.isRequired,\n};\nexport default SwaggerUI;\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport 'AppComponents/Shared/testconsole.css';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Progress from 'AppComponents/Shared/Progress';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport Paper from '@material-ui/core/Paper';\nimport 'swagger-ui-react/swagger-ui.css';\nimport API from 'AppData/api';\nimport AuthManager, { isRestricted } from 'AppData/AuthManager';\nimport { TryOutController, SwaggerUI } from 'developer_portal';\nimport Button from '@material-ui/core/Button';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport Banner from 'AppComponents/Shared/Banner';\nimport ApiContext, { withAPI } from 'AppComponents/Apis/Details/components/ApiContext';\nimport uuid from 'uuid/v4';\n\n/**\n * @inheritdoc\n * @param {*} theme theme\n */\nconst styles = (theme) => ({\n    centerItems: {\n        margin: 'auto',\n    },\n    categoryHeading: {\n        marginBottom: theme.spacing(2),\n        marginLeft: theme.spacing(-5),\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth,\n    },\n    buttonIcon: {\n        marginRight: 10,\n    },\n    paper: {\n        margin: theme.spacing(1),\n        padding: theme.spacing(1),\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    grid: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4),\n        paddingRight: theme.spacing(2),\n        justifyContent: 'center',\n    },\n    userNotificationPaper: {\n        padding: theme.spacing(2),\n    },\n    titleSub: {\n        marginLeft: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n    },\n    tryoutHeading: {\n        fontWeight: 400,\n    },\n    noDataMessage: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: '#888888',\n        width: '100%',\n    },\n    swaggerUIPaper: {\n        showTryout: true,\n        swaggerUIBackground: '#efefef',\n        documentBackground: '#efefef',\n        tokenTextBoxBackground: '#efefef',\n    },\n    stateButton: {\n        marginRight: theme.spacing(),\n    },\n    head: {\n        fontWeight: 200,\n        marginBottom: 20,\n    },\n    emptyBox: {\n        marginTop: theme.spacing(2),\n    },\n    content: {\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        marginLeft: theme.custom.leftMenuWidth,\n        paddingBottom: theme.spacing(3),\n    },\n    actions: {\n        padding: '20px 0',\n        '& button': {\n            marginLeft: 0,\n        },\n    },\n    helpText: {\n        paddingTop: theme.spacing(1),\n    },\n    messageBox: {\n        marginTop: 20,\n    },\n});\n\n/**\n * @class TestConsole\n * @extends {React.Component}\n */\nclass TestConsole extends React.Component {\n    /**\n     *\n     * @param {*} props the props parameters\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            securitySchemeType: 'TEST',\n            username: '',\n            password: '',\n            scopes: [],\n            selectedKeyType: 'PRODUCTION',\n            keys: [],\n        };\n        this.accessTokenProvider = this.accessTokenProvider.bind(this);\n        this.updateSwagger = this.updateSwagger.bind(this);\n        this.setSecurityScheme = this.setSecurityScheme.bind(this);\n        this.setSelectedEnvironment = this.setSelectedEnvironment.bind(this);\n        this.setProductionAccessToken = this.setProductionAccessToken.bind(this);\n        this.setSandboxAccessToken = this.setSandboxAccessToken.bind(this);\n        this.setUsername = this.setUsername.bind(this);\n        this.setPassword = this.setPassword.bind(this);\n        this.setSelectedKeyType = this.setSelectedKeyType.bind(this);\n        this.setKeys = this.setKeys.bind(this);\n        this.updateAccessToken = this.updateAccessToken.bind(this);\n        this.WORKFLOW_STATUS = {\n            CREATED: 'CREATED',\n            APPROVED: 'APPROVED',\n        };\n    }\n\n    /**\n     * @memberof ApiConsole\n     */\n    componentDidMount() {\n        const { apiObj } = this.props;\n        let apiData;\n        let environments;\n        let labels;\n        let selectedEnvironment;\n        let swagger;\n        let productionAccessToken;\n        let sandboxAccessToken;\n        let apiID;\n        let urls;\n        let httpVal;\n        let httpsVal;\n        let basePath;\n        const user = AuthManager.getUser();\n        const promisedAPI = API.getAPIById(apiObj.id);\n        promisedAPI\n            .then((apiResponse) => {\n                apiID = apiResponse.obj.id;\n                apiData = apiResponse.obj;\n                if (apiData.gatewayEnvironments) {\n                    environments = apiData.gatewayEnvironments.map((endpoint) => { return endpoint; });\n                }\n                const securtySchemas = apiData.securityScheme;\n                securtySchemas.push('test_auth');\n                securtySchemas.shift();\n                if (apiData.endpointURLs) {\n                    environments = apiData.endpointURLs.map((endpoint) => { return endpoint.environmentName; });\n                }\n                if (apiData.labels) {\n                    labels = apiData.labels.map((label) => { return label.name; });\n                }\n                if (apiData.scopes) {\n                    const scopeList = apiData.scopes.map((scope) => { return scope.name; });\n                    this.setState({ scopes: scopeList });\n                }\n                if (environments && environments.length > 0) {\n                    [selectedEnvironment] = environments;\n                    return API.getSwaggerByAPIIdAndEnvironment(apiResponse.obj.id, selectedEnvironment);\n                } else if (labels && labels.length > 0) {\n                    [selectedEnvironment] = labels;\n                    return API.getSwaggerByAPIIdAndLabel(apiResponse.obj.id, selectedEnvironment);\n                } else {\n                    return API.getSwaggerByAPIId(apiResponse.obj.id);\n                }\n            })\n            .then((swaggerResponse) => {\n                swagger = swaggerResponse.obj;\n                if (user != null) {\n                    this.setState({\n                        api: apiData,\n                        swagger,\n                        environments,\n                        labels,\n                        productionAccessToken,\n                        sandboxAccessToken,\n                    });\n                    return API.getSubscriptions(apiID);\n                } else {\n                    return null;\n                }\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                this.setState({ serverError: `${error.statusCode} - ${error.response.body.description}` });\n            });\n        const settingPromise = API.getSettings();\n        const newServer = [];\n        settingPromise\n            .then((settingsNew) => {\n                if (settingsNew.environment) {\n                    urls = settingsNew.environment.map((endpoints) => { return endpoints.endpoints; });\n                    httpVal = urls.map((val) => { return val.http; });\n                    httpsVal = urls.map((value) => { return value.https; });\n                    basePath = apiData.context + '/' + apiData.version;\n                    newServer.push({ url: httpsVal + apiData.context + '/' + apiData.version });\n                    newServer.push({ url: httpVal + apiData.context + '/' + apiData.version });\n                }\n                this.setState({\n                    settings: newServer,\n                    host: httpsVal[0].split('//')[1],\n                    baseUrl: basePath,\n                });\n            });\n    }\n\n    /**\n     * Set SecurityScheme value\n     * @memberof ApiConsole\n     */\n    setSecurityScheme(securityScheme) {\n        this.setState({ securitySchemeType: securityScheme });\n    }\n\n    /**\n     * Set Selected Environment\n     * @memberof ApiConsole\n     */\n    setSelectedEnvironment(selectedEnvironment) {\n        this.setState({ selectedEnvironment });\n    }\n\n    /**\n     * Set Production Access Token\n     * @memberof ApiConsole\n     */\n    setProductionAccessToken(productionAccessToken) {\n        this.setState({ productionAccessToken });\n    }\n\n    /**\n     * Set Sandbox Access Token\n     * @memberof ApiConsole\n     */\n    setSandboxAccessToken(sandboxAccessToken) {\n        this.setState({ sandboxAccessToken });\n    }\n\n    /**\n     * Set Username\n     * @memberof ApiConsole\n     */\n    setUsername(username) {\n        this.setState({ username });\n    }\n\n    /**\n     * Set Password\n     * @memberof ApiConsole\n     */\n    setPassword(password) {\n        this.setState({ password });\n    }\n\n    /**\n     * Set Password\n     * @memberof ApiConsole\n     */\n    setSelectedKeyType(selectedKeyType, isUpdateToken) {\n        if (isUpdateToken) {\n            this.setState({ selectedKeyType }, this.updateAccessToken);\n        } else {\n            this.setState({ selectedKeyType });\n        }\n    }\n\n    /**\n     * Set Password\n     * @memberof ApiConsole\n     */\n    setKeys(keys) {\n        this.setState({ keys });\n    }\n\n\n    handleClick = () => {\n        const { apiObj } = this.props;\n        const action = 'Deploy as a Prototype';\n        const promisedUpdate = API.updateLcState(apiObj.id, action);\n        promisedUpdate\n            .then((response) => {\n                const newState = response.body.lifecycleState.state;\n                console.log('new life cycle state' + newState);\n                this.context.updateAPI();\n                // disable store\n                const promisedApi = API.get(apiObj.id);\n                promisedApi\n                    .then((getResponse) => {\n                        const apiData = getResponse;\n                        apiData.enableStore = false;\n                        const token = uuid();\n                        apiData.testKey = token;\n                        this.context.updateAPI({ enableStore: false, testKey: token });\n                    })\n                    .catch((errorResponse) => {\n                        console.error(errorResponse);\n                    });\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n    };\n\n    /**\n     * Load the swagger file of the selected environemnt\n     * @memberof ApiConsole\n     */\n    updateSwagger() {\n        const {\n            selectedEnvironment, api, environments,\n        } = this.state;\n        let promiseSwagger;\n\n        if (selectedEnvironment) {\n            if (environments.includes(selectedEnvironment)) {\n                promiseSwagger = API.getSwaggerByAPIIdAndEnvironment(api.id, selectedEnvironment);\n            } else {\n                promiseSwagger = API.getSwaggerByAPIIdAndLabel(api.id, selectedEnvironment);\n            }\n        } else {\n            promiseSwagger = API.getSwaggerByAPIId(api.id);\n        }\n        promiseSwagger.then((swaggerResponse) => {\n            this.setState({ swagger: swaggerResponse.obj });\n        });\n    }\n\n    /**\n     *\n     * Provids the access token to the Swagger UI\n     * @returns {*} access token\n     * @memberof ApiConsole\n     */\n    accessTokenProvider() {\n        const {\n            securitySchemeType, username, password, productionAccessToken, sandboxAccessToken, selectedKeyType,\n        } = this.state;\n        if (securitySchemeType === 'BASIC') {\n            const credentials = username + ':' + password;\n            return btoa(credentials);\n        }\n        if (securitySchemeType === 'TEST') {\n            return this.state.api.testKey;\n        }\n        if (selectedKeyType === 'PRODUCTION') {\n            return productionAccessToken;\n        } else {\n            return sandboxAccessToken;\n        }\n    }\n\n\n    /**\n     * Load the access token for given key type\n     * @memberof TryOutController\n     */\n    updateAccessToken() {\n        const {\n            keys, selectedKeyType,\n        } = this.state;\n        let accessToken;\n        if (keys.get(selectedKeyType)) {\n            ({ accessToken } = keys.get(selectedKeyType).token);\n        }\n        if (selectedKeyType === 'PRODUCTION') {\n            this.setProductionAccessToken(accessToken);\n        } else {\n            this.setSandboxAccessToken(accessToken);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     * @memberof ApiConsole\n     */\n    render() {\n        const { classes } = this.props;\n        const {\n            swagger, api, securitySchemeType, selectedEnvironment, productionAccessToken, sandboxAccessToken,\n            labels, environments, scopes, username, password, selectedKeyType, serverError, settings, host, baseUrl,\n        } = this.state;\n        if (serverError) {\n            return (\n                <Typography variant='h4' className={classes.titleSub}>\n                    {serverError}\n                </Typography>\n            );\n        }\n        if (!api || !swagger || !settings) {\n            return <Progress />;\n        }\n        let authorizationHeader = api.authorizationHeader ? api.authorizationHeader : 'Authorization';\n        authorizationHeader = 'testkey';\n        if (!swagger.openapi) {\n            swagger.host = host;\n            swagger.basePath = baseUrl;\n            swagger.schemes = ['https'];\n        } else {\n            swagger.servers = settings;\n        }\n        const isProtoTyped = api.lifeCycleStatus.toLowerCase() === 'prototyped';\n        const enableForTest = api.enableStore === false;\n        return (\n            <>\n                {!isProtoTyped && (\n                    <>\n                        <Typography variant='h4' align='left' className={classes.mainTitle}>\n                            <FormattedMessage\n                                id='Apis.Details.index.Tryout'\n                                defaultMessage='Test Console'\n                            />\n                        </Typography>\n                        <Typography variant='caption' component='div' className={classes.helpText}>\n                            <FormattedMessage\n                                id='APis.Details.tryout.help.main'\n                                defaultMessage='Test APIs while in the Development stage.'\n                            />\n                        </Typography>\n                        <div className={classes.messageBox}>\n                            <InlineMessage type='info' height={140}>\n                                <div className={classes.contentWrapper}>\n                                    <Typography variant='h5' component='h3' className={classes.head}>\n                                        <FormattedMessage\n                                            id='Apis.Details.tryout.title'\n                                            defaultMessage='Start Testing'\n                                        />\n                                    </Typography>\n                                    <Typography component='p'>\n                                        <FormattedMessage\n                                            id='Apis.Details.tryout.initialize.test'\n                                            defaultMessage='Initialize the API for the testing phase'\n                                        />\n                                    </Typography>\n                                    <div className={classes.actions}>\n                                        <Button\n                                            variant='contained'\n                                            color='primary'\n                                            className={classes.button}\n                                            disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}\n                                            onClick={this.handleClick}\n                                        >\n                                            <FormattedMessage\n                                                id='Apis.Details.index.initTest'\n                                                defaultMessage='Initialize test'\n                                            />\n                                        </Button>\n                                    </div>\n                                </div>\n                            </InlineMessage>\n                        </div>\n                    </>\n                )}\n                {(isProtoTyped && enableForTest) && (\n                    <Paper className={classes.paper}>\n                        <Typography variant='h4' className={classes.titleSub}>\n                            <FormattedMessage id='Apis.Details.index.Tryout' defaultMessage='Test Console' />\n                        </Typography>\n                        <TryOutController\n                            setSecurityScheme={this.setSecurityScheme}\n                            securitySchemeType={securitySchemeType}\n                            setSelectedEnvironment={this.setSelectedEnvironment}\n                            selectedEnvironment={selectedEnvironment}\n                            productionAccessToken={productionAccessToken}\n                            setProductionAccessToken={this.setProductionAccessToken}\n                            sandboxAccessToken={sandboxAccessToken}\n                            setSandboxAccessToken={this.setSandboxAccessToken}\n                            swagger={swagger}\n                            labels={labels}\n                            environments={environments}\n                            scopes={scopes}\n                            setUsername={this.setUsername}\n                            setPassword={this.setPassword}\n                            username={username}\n                            password={password}\n                            setSelectedKeyType={this.setSelectedKeyType}\n                            selectedKeyType={selectedKeyType}\n                            updateSwagger={this.updateSwagger}\n                            setKeys={this.setKeys}\n                            api={this.state.api}\n                        />\n                        <SwaggerUI\n                            api={this.state.api}\n                            accessTokenProvider={this.accessTokenProvider}\n                            spec={swagger}\n                            authorizationHeader={authorizationHeader}\n                            securitySchemeType={securitySchemeType}\n                        />\n                    </Paper>\n                )}\n                {(isProtoTyped && !enableForTest) && (\n                    <Banner\n                        disableActions\n                        dense\n                        paperProps={{ elevation: 1 }}\n                        type='info'\n                        message='API should be in prototype(testing) state. Please demote to created state and click\n                        on the initialize Test button in the Test Console left menu item.'\n                    />\n                )}\n            </>\n        );\n    }\n}\nTestConsole.propTypes = {\n    classes: PropTypes.shape({\n        paper: PropTypes.string.isRequired,\n        titleSub: PropTypes.string.isRequired,\n        grid: PropTypes.string.isRequired,\n        userNotificationPaper: PropTypes.string.isRequired,\n        buttonIcon: PropTypes.string.isRequired,\n        lcState: PropTypes.shape({}).isRequired,\n        theme: PropTypes.shape({}).isRequired,\n        intl: PropTypes.shape({\n            formatMessage: PropTypes.func,\n        }).isRequired,\n    }).isRequired,\n};\n\nTestConsole.contextType = ApiContext;\n\nexport default withAPI(withStyles(styles)(TestConsole));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isRestricted } from 'AppData/AuthManager';\nimport LifeCycleIcon from '@material-ui/icons/Autorenew';\nimport EndpointIcon from '@material-ui/icons/GamesOutlined';\nimport PersonPinCircleOutlinedIcon from '@material-ui/icons/PersonPinCircleOutlined';\nimport ResourcesIcon from '@material-ui/icons/VerticalSplit';\nimport ScopesIcon from '@material-ui/icons/VpnKey';\nimport DocumentsIcon from '@material-ui/icons/LibraryBooks';\nimport BusinessIcon from '@material-ui/icons/Business';\nimport CodeIcon from '@material-ui/icons/Code';\nimport ConfigurationIcon from '@material-ui/icons/Build';\nimport RuntimeConfigurationIcon from '@material-ui/icons/Settings';\nimport PropertiesIcon from '@material-ui/icons/List';\nimport SubscriptionsIcon from '@material-ui/icons/RssFeed';\nimport MonetizationIcon from '@material-ui/icons/LocalAtm';\nimport StoreIcon from '@material-ui/icons/Store';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport { withStyles } from '@material-ui/core/styles';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport {\n    Redirect, Route, Switch, Link, matchPath,\n} from 'react-router-dom';\nimport isEmpty from 'lodash/isEmpty';\nimport Utils from 'AppData/Utils';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport LeftMenuItem from 'AppComponents/Shared/LeftMenuItem';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport { Progress } from 'AppComponents/Shared';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { doRedirectToLogin } from 'AppComponents/Shared/RedirectToLogin';\nimport AppContext from 'AppComponents/Shared/AppContext';\nimport LastUpdatedTime from 'AppComponents/Apis/Details/components/LastUpdatedTime';\nimport Overview from './NewOverview/Overview';\nimport DesignConfigurations from './Configuration/DesignConfigurations';\nimport RuntimeConfiguration from './Configuration/RuntimeConfiguration';\nimport RuntimeConfigurationWebSocket from './Configuration/RuntimeConfigurationWebSocket';\nimport LifeCycle from './LifeCycle/LifeCycle';\nimport Documents from './Documents';\nimport Operations from './Operations/Operations';\nimport APIOperations from './Resources/APIOperations';\nimport APIProductOperations from './ProductResources/APIProductOperations';\nimport ProductResourcesEdit from './ProductResources/ProductResourcesEdit';\nimport Endpoints from './Endpoints/Endpoints';\nimport Environments from './Environments/Environments';\nimport Subscriptions from './Subscriptions/Subscriptions';\nimport Comments from './Comments/Comments';\nimport Scope from './Scopes';\nimport Security from './Security';\nimport APIDefinition from './APIDefinition/APIDefinition';\nimport WSDL from './APIDefinition/WSDL';\nimport APIDetailsTopMenu from './components/APIDetailsTopMenu';\nimport BusinessInformation from './BusinessInformation/BusinessInformation';\nimport Properties from './Properties/Properties';\nimport Monetization from './Monetization';\nimport ExternalStores from './ExternalStores/ExternalStores';\nimport { APIProvider } from './components/ApiContext';\nimport CreateNewVersion from './NewVersion/NewVersion';\nimport TestConsole from './TestConsole/TestConsole';\n\nconst styles = (theme) => ({\n    LeftMenu: {\n        backgroundColor: theme.palette.background.leftMenu,\n        width: theme.custom.leftMenuWidth,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n        overflowY: 'auto',\n    },\n    leftLInkMain: {\n        borderRight: 'solid 1px ' + theme.palette.background.leftMenu,\n        paddingBottom: theme.spacing(1),\n        paddingTop: theme.spacing(1),\n        cursor: 'pointer',\n        backgroundColor: theme.palette.background.leftMenuActive,\n        color: theme.palette.getContrastText(theme.palette.background.leftMenuActive),\n        textDecoration: 'none',\n    },\n    detailsContent: {\n        display: 'flex',\n        flex: 1,\n    },\n    content: {\n        display: 'flex',\n        flex: 1,\n        flexDirection: 'column',\n        marginLeft: theme.custom.leftMenuWidth,\n        paddingBottom: theme.spacing(3),\n    },\n    contentInside: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n    },\n});\n\n/**\n * Base component for API specific Details page,\n * What this component do is, Handle all the request coming under `/apis/:api_uuid` path, If the :api_uuid or\n *  the later part of the URL is not valid , This will return a `PageNotFound` component.\n * For valid API request , This component will fetch the API and pass the API response data to below components in `api`\n * prop name.\n * Note: If you want to add new route or new page under APIs detail, add the desired path to `PATHS` constant mapping.\n * This mapping will be used in parent component to directly return `PageNotFound` component, If user making a request\n * to an undefined path segment.\n */\nclass Details extends Component {\n    /**\n     * Return boolean , whether provided URL has a valid Route under the Details page.\n     * Check https://github.com/ReactTraining/react-router/blob/master/packages/react-router-dom/modules/NavLink.js\n     * code for the usage of public matchPath method\n     * @static\n     * @param {String} pathname location URL of an incoming request\n     * @memberof Details\n     * @returns {Boolean} whether URL matched with defined sub paths or not\n     */\n    static isValidURL(pathname) {\n        for (const [subPathKey, subPath] of Object.entries(Details.subPaths)) {\n            // Skip the BASE path , because it will match for any `/apis/:apiUUID/*` values\n            if ((subPathKey !== 'BASE') && (subPathKey !== 'BASE_PRODUCT')) {\n                const matched = matchPath(pathname, subPath);\n                if (matched) {\n                    return matched;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Creates an instance of Details.\n     * @param {any} props @inheritDoc\n     * @memberof Details\n     */\n    constructor(props) {\n        super(props);\n        const isAPIProduct = null;\n        this.state = {\n            api: null,\n            apiNotFound: false,\n            // updateAPI: this.updateAPI,\n            isAPIProduct,\n            imageUpdate: 0,\n        };\n        this.setAPI = this.setAPI.bind(this);\n        this.setAPIProduct = this.setAPIProduct.bind(this);\n        this.updateAPI = this.updateAPI.bind(this);\n        this.setImageUpdate = this.setImageUpdate.bind(this);\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof Details\n     */\n    componentDidMount() {\n        const {\n            location: { pathname },\n            isAPIProduct,\n        } = this.props;\n        // Load API data iff request page is valid\n        if (Details.isValidURL(pathname)) {\n            if (isAPIProduct) {\n                this.setAPIProduct();\n            } else {\n                this.setAPI();\n            }\n            const api = new API();\n            api.getTenantsByState('active')\n                .then((response) => {\n                    const { list } = response.body;\n                    this.setState({ tenantList: list });\n                }).catch((error) => {\n                    console.error('error when getting tenants ' + error);\n                });\n        }\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof Details\n     */\n    componentDidUpdate() {\n        const { api } = this.state;\n        const { match, isAPIProduct } = this.props;\n        const { apiUUID } = match.params;\n        const { apiProdUUID } = match.params;\n        if (!api || (api.id === apiUUID || api.id === apiProdUUID)) {\n            return;\n        }\n        if (isAPIProduct) {\n            this.setAPIProduct();\n        } else {\n            this.setAPI();\n        }\n    }\n\n    /**\n     *\n     * This method is a hack to update the image in the toolbar when a new image is uploaded\n     * @memberof Details\n     */\n    setImageUpdate() {\n        this.setState((previousState) => ({\n            imageUpdate: previousState.imageUpdate + 1,\n        }));\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPI(newAPI) {\n        if (newAPI) {\n            this.setState({ api: newAPI });\n        } else {\n            const { match } = this.props;\n            const { apiUUID } = match.params;\n            const promisedApi = API.get(apiUUID);\n            promisedApi\n                .then((api) => {\n                    this.setState({ api });\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.log(error);\n                    }\n                    const { status } = error;\n                    if (status === 404) {\n                        this.setState({ apiNotFound: true });\n                    } else if (status === 401) {\n                        doRedirectToLogin();\n                    }\n                });\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    setAPIProduct() {\n        const { match } = this.props;\n        const { apiProdUUID } = match.params;\n        const { isAPIProduct } = this.props;\n        const promisedApi = APIProduct.get(apiProdUUID);\n        promisedApi\n            .then((api) => {\n                this.setState({ isAPIProduct });\n                this.setState({ api });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    }\n\n    /**\n     *\n     * @returns\n     * @memberof Details\n     */\n    getLeftMenuItemForDefinitionByType(apiType) {\n        const { isAPIProduct } = this.state;\n        const { intl, match } = this.props;\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n        const apiDefinitionMenuItem = (\n            <LeftMenuItem\n                text={intl.formatMessage({\n                    id: 'Apis.Details.index.api.definition2',\n                    defaultMessage: 'API definition',\n                })}\n                route='api definition'\n                to={pathPrefix + 'api definition'}\n                Icon={<CodeIcon />}\n            />\n        );\n\n        switch (apiType) {\n            case 'GRAPHQL':\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.schema.definition',\n                                defaultMessage: 'Schema Definition',\n                            })}\n                            route='schema definition'\n                            to={pathPrefix + 'schema definition'}\n                            Icon={<CodeIcon />}\n                        />\n                    </>\n                );\n            case 'WS':\n                return '';\n            case 'SOAP':\n                return (\n                    <>\n                        {apiDefinitionMenuItem}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.wsdl.definition',\n                                defaultMessage: 'WSDL Definition',\n                            })}\n                            route='wsdl'\n                            to={pathPrefix + 'wsdl'}\n                            Icon={<CodeIcon />}\n                        />\n                    </>\n                );\n            default:\n                return (\n                    <>\n                        {apiDefinitionMenuItem}\n                    </>\n                );\n        }\n    }\n\n    getLeftMenuItemForResourcesByType(apiType) {\n        const { isAPIProduct } = this.state;\n        const { intl, match } = this.props;\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n\n        switch (apiType) {\n            case 'GRAPHQL':\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.operations',\n                                defaultMessage: 'operations',\n                            })}\n                            to={pathPrefix + 'operations'}\n                            Icon={<ResourcesIcon />}\n                        />\n                    </>\n                );\n            case 'WS':\n                return '';\n            default:\n                return (\n                    <>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.resources',\n                                defaultMessage: 'resources',\n                            })}\n                            to={pathPrefix + 'resources'}\n                            Icon={<ResourcesIcon />}\n                        />\n                    </>\n                );\n        }\n    }\n\n    /**\n     * This method is similar to ReactJS `setState` method, In this `updateAPI()` method, we accept partially updated\n     * API object or comple API object. When updating , the provided updatedAPI object will be merged with the existing\n     * API object in the state and use it as the payload in the /apis PUT operation.\n     *\n     * Partially updated API object means: {description: \"Here is my new description..\"} kind of object. It should have\n     * a key in API object and value contains the updated value of that property\n     * @param {Object} [_updatedProperties={}] Partially updated API object or complete API object\n     * (even an instance of API class is accepted here)\n     * @param {Boolean} isAPIProduct Whether the update operation should execute on an API or API Product\n     * @returns {Promise} promise object that resolve to update (/apis PUT operation) response\n     */\n    updateAPI(_updatedProperties = {}) {\n        const { api } = this.state;\n        let isAPIProduct = false;\n        if (api.apiType === 'APIProduct') {\n            isAPIProduct = true;\n        }\n        const updatedProperties = _updatedProperties instanceof API ? _updatedProperties.toJson() : _updatedProperties;\n        let promisedUpdate;\n        // TODO: Ideally, The state should hold the corresponding API object\n        // which we could call it's `update` method safely ~tmkb\n        if (!isEmpty(updatedProperties)) {\n            // newApi object has to be provided as the updatedProperties. Then api will be updated.\n            promisedUpdate = api.update(updatedProperties);\n        } else {\n            // Just like calling noArg `setState()` will just trigger a re-render without modifying the state,\n            // Calling `updateAPI()` without args wil return the API without any update.\n            // Just sync-up the api state with backend\n            promisedUpdate = API.get(api.id);\n        }\n        return promisedUpdate\n            .then((updatedAPI) => {\n                if (isAPIProduct) {\n                    Alert.info(`${updatedAPI.name} API updated successfully`);\n                    this.setState({ api: updatedAPI });\n                    return updatedAPI;\n                } else {\n                    Alert.info(`${updatedAPI.name} API updated successfully`);\n                    this.setState({ api: updatedAPI });\n                    return updatedAPI;\n                }\n            })\n            .catch((error) => {\n                // TODO: Should log and handle the error case by the original callee ~tmkb\n                console.error(error);\n                Alert.error(`Something went wrong while updating the ${api.name} API!!`);\n                // Kinda force render,Resting API object to old one\n                this.setState({ api });\n                throw error;\n            });\n    }\n\n    /**\n     * Renders Grid container layout with NavBar place static in LHS, Components which coming as children for\n     * Details page\n     * should wrap it's content with <Grid item > element\n     * @returns {Component} Render API Details page\n     */\n    render() {\n        const {\n            api, apiNotFound, isAPIProduct, imageUpdate, tenantList,\n        } = this.state;\n        const {\n            classes,\n            theme,\n            match,\n            intl,\n            location: pageLocation,\n            location: { pathname }, // nested destructuring\n        } = this.props;\n\n        const { settings: settingsContext } = this.context;\n\n        // pageLocation renaming is to prevent es-lint errors saying can't use global name location\n        if (!Details.isValidURL(pathname)) {\n            return <ResourceNotFound location={pageLocation} />;\n        }\n        const uuid = match.params.apiUUID || match.params.api_uuid || match.params.apiProdUUID;\n        const pathPrefix = '/' + (isAPIProduct ? 'api-products' : 'apis') + '/' + uuid + '/';\n        const redirectUrl = pathPrefix;\n        if (apiNotFound) {\n            const { apiUUID } = match.params;\n            const resourceNotFoundMessageText = defineMessages({\n                titleMessage: {\n                    id: 'Apis.Details.index.api.not.found.title',\n                    defaultMessage: 'API is not found in the {environmentLabel} Environment',\n                },\n                bodyMessage: {\n                    id: 'Apis.Details.index.api.not.found.body',\n                    defaultMessage: 'Cannot find the API with the given id',\n                },\n            });\n            const resourceNotFountMessage = {\n                title: intl.formatMessage(resourceNotFoundMessageText.titleMessage, {\n                    environmentLabel: `${Utils.getCurrentEnvironment().label}`,\n                }),\n                body: intl.formatMessage(resourceNotFoundMessageText.bodyMessage, { apiUUID: `${apiUUID}` }),\n            };\n            return <ResourceNotFound message={resourceNotFountMessage} />;\n        }\n\n        if (!api) {\n            return <Progress />;\n        }\n        const { leftMenuIconMainSize } = theme.custom;\n\n        return (\n            <>\n                <APIProvider\n                    value={{\n                        api,\n                        updateAPI: this.updateAPI,\n                        isAPIProduct,\n                        setAPI: this.setAPI,\n                        setImageUpdate: this.setImageUpdate,\n                        tenantList,\n                    }}\n                >\n                    <div className={classes.LeftMenu}>\n                        <Link to={'/' + (isAPIProduct ? 'api-products' : 'apis') + '/'}>\n                            <div className={classes.leftLInkMain}>\n                                <CustomIcon\n                                    width={leftMenuIconMainSize}\n                                    height={leftMenuIconMainSize}\n                                    icon={isAPIProduct ? 'api-product' : 'api'}\n                                />\n                            </div>\n                        </Link>\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.overview',\n                                defaultMessage: 'overview',\n                            })}\n                            to={pathPrefix + 'overview'}\n                            Icon={<DashboardIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.design.configs',\n                                defaultMessage: 'Design Configurations',\n                            })}\n                            route='configuration'\n                            to={pathPrefix + 'configuration'}\n                            Icon={<ConfigurationIcon />}\n                        />\n                        {!api.isWebSocket() && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.runtime.configs',\n                                    defaultMessage: 'Runtime Configurations',\n                                })}\n                                route='runtime-configuration'\n                                to={pathPrefix + 'runtime-configuration'}\n                                Icon={<RuntimeConfigurationIcon />}\n                            />\n                        )}\n                        {api.isWebSocket() && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.runtime.configs',\n                                    defaultMessage: 'Runtime Configurations',\n                                })}\n                                route='runtime-configuration'\n                                to={pathPrefix + 'runtime-configuration-websocket'}\n                                Icon={<RuntimeConfigurationIcon />}\n                            />\n                        )}\n                        {this.getLeftMenuItemForResourcesByType(api.type)}\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.endpoints',\n                                    defaultMessage: 'endpoints',\n                                })}\n                                to={pathPrefix + 'endpoints'}\n                                Icon={<EndpointIcon />}\n                            />\n                        )}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.subscriptions',\n                                defaultMessage: 'subscriptions',\n                            })}\n                            to={pathPrefix + 'subscriptions'}\n                            Icon={<SubscriptionsIcon />}\n                        />\n                        {!isAPIProduct && !isRestricted(['apim:api_publish'], api) && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.lifecycle',\n                                    defaultMessage: 'lifecycle',\n                                })}\n                                to={pathPrefix + 'lifecycle'}\n                                Icon={<LifeCycleIcon />}\n                            />\n                        )}\n                        {this.getLeftMenuItemForDefinitionByType(api.type)}\n                        {!isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.environments',\n                                    defaultMessage: 'environments',\n                                })}\n                                route='environments'\n                                to={pathPrefix + 'environments'}\n                                Icon={<PersonPinCircleOutlinedIcon />}\n                            />\n                        )}\n                        {!api.isWebSocket() && !isAPIProduct && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.left.menu.scope',\n                                    defaultMessage: 'Local Scopes',\n                                })}\n                                to={pathPrefix + 'scopes'}\n                                Icon={<ScopesIcon />}\n                            />\n                        )}\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.business.info',\n                                defaultMessage: 'business info',\n                            })}\n                            to={pathPrefix + 'business info'}\n                            Icon={<BusinessIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.properties',\n                                defaultMessage: 'properties',\n                            })}\n                            to={pathPrefix + 'properties'}\n                            Icon={<PropertiesIcon />}\n                        />\n                        <LeftMenuItem\n                            text={intl.formatMessage({\n                                id: 'Apis.Details.index.documents',\n                                defaultMessage: 'documents',\n                            })}\n                            to={pathPrefix + 'documents'}\n                            Icon={<DocumentsIcon />}\n                        />\n                        {!api.isWebSocket() && !isAPIProduct && !api.isGraphql() && !isRestricted(['apim:api_publish'],\n                            api) && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.Tryout',\n                                    defaultMessage: 'test console',\n                                })}\n                                to={pathPrefix + 'test-console'}\n                                iconText='test'\n                            />\n                        )}\n                        {!api.isWebSocket() && !isRestricted(['apim:api_publish'], api) && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.monetization',\n                                    defaultMessage: 'monetization',\n                                })}\n                                to={pathPrefix + 'monetization'}\n                                Icon={<MonetizationIcon />}\n                            />\n                        )}\n                        {!isAPIProduct && settingsContext.externalStoresEnabled && (\n                            <LeftMenuItem\n                                text={intl.formatMessage({\n                                    id: 'Apis.Details.index.external-stores',\n                                    defaultMessage: 'external dev portals',\n                                })}\n                                to={pathPrefix + 'external-devportals'}\n                                Icon={<StoreIcon />}\n                            />\n                        )}\n                    </div>\n                    <div className={classes.content}>\n                        <APIDetailsTopMenu api={api} isAPIProduct={isAPIProduct} imageUpdate={imageUpdate} />\n                        <div className={classes.contentInside}>\n                            <LastUpdatedTime lastUpdatedTime={api.lastUpdatedTime} />\n                            <Switch>\n                                <Redirect exact from={Details.subPaths.BASE} to={redirectUrl} />\n                                <Route\n                                    path={Details.subPaths.OVERVIEW_PRODUCT}\n                                    key={Details.subPaths.OVERVIEW_PRODUCT}\n                                    component={() => <Overview api={api} />}\n                                />\n                                <Route path={Details.subPaths.OVERVIEW} component={() => <Overview api={api} />} />\n                                <Route\n                                    path={Details.subPaths.API_DEFINITION}\n                                    component={() => <APIDefinition api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.WSDL}\n                                    component={() => <WSDL api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.API_DEFINITION_PRODUCT}\n                                    component={() => <APIDefinition api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SCHEMA_DEFINITION}\n                                    component={() => <APIDefinition api={api} />}\n                                />\n                                <Route path={Details.subPaths.LIFE_CYCLE} component={() => <LifeCycle api={api} />} />\n                                <Route\n                                    path={Details.subPaths.CONFIGURATION}\n                                    component={() => <DesignConfigurations api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.RUNTIME_CONFIGURATION}\n                                    component={() => <RuntimeConfiguration api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.RUNTIME_CONFIGURATION_WEBSOCKET}\n                                    component={() => <RuntimeConfigurationWebSocket api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.CONFIGURATION_PRODUCT}\n                                    component={() => <DesignConfigurations api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.RUNTIME_CONFIGURATION_PRODUCT}\n                                    component={() => <RuntimeConfiguration api={api} />}\n                                />\n                                <Route path={Details.subPaths.ENDPOINTS} component={() => <Endpoints api={api} />} />\n                                <Route\n                                    path={Details.subPaths.ENVIRONMENTS}\n                                    component={() => <Environments api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.OPERATIONS}\n                                    component={() => <Operations api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route\n                                    exact\n                                    path={Details.subPaths.RESOURCES_PRODUCT}\n                                    component={APIProductOperations}\n                                />\n                                <Route\n                                    path={Details.subPaths.RESOURCES_PRODUCT_EDIT}\n                                    component={ProductResourcesEdit}\n                                />\n\n                                <Route\n                                    path={Details.subPaths.RESOURCES}\n                                    key={Details.subPaths.RESOURCES}\n                                    component={APIOperations}\n                                />\n\n                                <Route path={Details.subPaths.SCOPES} component={() => <Scope api={api} />} />\n                                <Route path={Details.subPaths.DOCUMENTS} component={() => <Documents api={api} />} />\n                                <Route\n                                    path={Details.subPaths.DOCUMENTS_PRODUCT}\n                                    component={() => <Documents api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SUBSCRIPTIONS}\n                                    component={() => <Subscriptions api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.SUBSCRIPTIONS_PRODUCT}\n                                    component={() => <Subscriptions api={api} updateAPI={this.updateAPI} />}\n                                />\n                                <Route path={Details.subPaths.SECURITY} component={() => <Security api={api} />} />\n                                <Route path={Details.subPaths.COMMENTS} component={() => <Comments api={api} />} />\n                                <Route\n                                    path={Details.subPaths.BUSINESS_INFO}\n                                    component={() => <BusinessInformation api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.BUSINESS_INFO_PRODUCT}\n                                    component={() => <BusinessInformation api={api} />}\n                                />\n                                <Route path={Details.subPaths.PROPERTIES} component={() => <Properties api={api} />} />\n                                <Route\n                                    path={Details.subPaths.PROPERTIES_PRODUCT}\n                                    component={() => <Properties api={api} />}\n                                />\n                                <Route path={Details.subPaths.NEW_VERSION} component={() => <CreateNewVersion />} />\n                                <Route path={Details.subPaths.SUBSCRIPTIONS} component={() => <Subscriptions />} />\n                                <Route\n                                    path={Details.subPaths.MONETIZATION}\n                                    component={() => <Monetization api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.MONETIZATION_PRODUCT}\n                                    component={() => <Monetization api={api} />}\n                                />\n                                <Route\n                                    path={Details.subPaths.TRYOUT}\n                                    component={() => <TestConsole apiObj={api} />}\n                                />\n                                <Route path={Details.subPaths.EXTERNAL_STORES} component={ExternalStores} />\n                            </Switch>\n                        </div>\n                    </div>\n                </APIProvider>\n            </>\n        );\n    }\n}\n\nDetails.contextType = AppContext;\n// Add your path here and refer it in above <Route/> component,\n// Paths that are not defined here will be returned with Not Found error\n// key name doesn't matter here, Use an appropriate name as the key\nDetails.subPaths = {\n    BASE: '/apis/:api_uuid',\n    BASE_PRODUCT: '/api-products/:apiprod_uuid',\n    OVERVIEW: '/apis/:api_uuid/overview',\n    OVERVIEW_PRODUCT: '/api-products/:apiprod_uuid/overview',\n    API_DEFINITION: '/apis/:api_uuid/api definition',\n    WSDL: '/apis/:api_uuid/wsdl',\n    API_DEFINITION_PRODUCT: '/api-products/:apiprod_uuid/api definition',\n    SCHEMA_DEFINITION: '/apis/:api_uuid/schema definition',\n    LIFE_CYCLE: '/apis/:api_uuid/lifecycle',\n    CONFIGURATION: '/apis/:api_uuid/configuration',\n    RUNTIME_CONFIGURATION: '/apis/:api_uuid/runtime-configuration',\n    CONFIGURATION_PRODUCT: '/api-products/:apiprod_uuid/configuration',\n    RUNTIME_CONFIGURATION_PRODUCT: '/api-products/:apiprod_uuid/runtime-configuration',\n    RUNTIME_CONFIGURATION_WEBSOCKET: '/apis/:api_uuid/runtime-configuration-websocket',\n    ENDPOINTS: '/apis/:api_uuid/endpoints',\n    ENVIRONMENTS: '/apis/:api_uuid/environments',\n    OPERATIONS: '/apis/:api_uuid/operations',\n    RESOURCES: '/apis/:api_uuid/resources',\n    RESOURCES_PRODUCT: '/api-products/:apiprod_uuid/resources',\n    RESOURCES_PRODUCT_EDIT: '/api-products/:apiprod_uuid/resources/edit',\n    SCOPES: '/apis/:api_uuid/scopes',\n    DOCUMENTS: '/apis/:api_uuid/documents',\n    DOCUMENTS_PRODUCT: '/api-products/:apiprod_uuid/documents',\n    SUBSCRIPTIONS_PRODUCT: '/api-products/:apiprod_uuid/subscriptions',\n    SUBSCRIPTIONS: '/apis/:api_uuid/subscriptions',\n    SECURITY: '/apis/:api_uuid/security',\n    COMMENTS: '/apis/:api_uuid/comments',\n    BUSINESS_INFO: '/apis/:api_uuid/business info',\n    BUSINESS_INFO_PRODUCT: '/api-products/:apiprod_uuid/business info',\n    PROPERTIES: '/apis/:api_uuid/properties',\n    PROPERTIES_PRODUCT: '/api-products/:apiprod_uuid/properties',\n    NEW_VERSION: '/apis/:api_uuid/new_version',\n    MONETIZATION: '/apis/:api_uuid/monetization',\n    MONETIZATION_PRODUCT: '/api-products/:apiprod_uuid/monetization',\n    EXTERNAL_STORES: '/apis/:api_uuid/external-devportals',\n    TRYOUT: '/apis/:api_uuid/test-console',\n    QUERYANALYSIS: '/apis/:api_uuid/queryanalysis',\n};\n\n// To make sure that paths will not change by outsiders, Basically an enum\nObject.freeze(Details.paths);\n\nDetails.propTypes = {\n    classes: PropTypes.shape({\n        LeftMenu: PropTypes.string,\n        content: PropTypes.string,\n        leftLInkMain: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.object,\n    }).isRequired,\n    location: PropTypes.shape({\n        pathname: PropTypes.object,\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.object,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.shape({\n            leftMenuIconMainSize: PropTypes.number,\n        }),\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(Details));\n"],"sourceRoot":""}