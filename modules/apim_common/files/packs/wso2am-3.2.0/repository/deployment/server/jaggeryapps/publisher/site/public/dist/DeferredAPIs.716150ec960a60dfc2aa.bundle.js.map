{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/BaseThumbnail.jsx","webpack:///./source/src/app/components/Apis/Details/components/DeleteApiButton.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ImageGenerator.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/Background.jsx","webpack:///./node_modules/react-router-dom/Redirect.js","webpack:///./node_modules/react-router-dom/warnAboutDeprecatedCJSRequire.js","webpack:///./node_modules/react-router-dom/index.js","webpack:///./node_modules/react-router-dom/cjs/react-router-dom.min.js","webpack:///./node_modules/@material-ui/icons/GetApp.js","webpack:///./node_modules/@material-ui/icons/GridOn.js","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/ApiThumb.jsx","webpack:///./source/src/app/components/Apis/Listing/components/ImageGenerator/DocThumb.jsx","webpack:///./source/src/app/components/Shared/MenuButton.jsx","webpack:///./source/src/app/components/Apis/Listing/components/APICreateMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SamplePetStore.js","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPI.jsx","webpack:///./source/src/app/components/Apis/Listing/components/TopMenu.jsx","webpack:///./source/src/app/components/Apis/Listing/SampleAPI/SampleAPIProduct.jsx","webpack:///./source/src/app/components/Apis/Listing/TableView/TableView.jsx","webpack:///./source/src/app/components/Apis/Listing/Listing.jsx","webpack:///./source/src/app/components/Apis/Apis.jsx","webpack:///./source/src/app/data/APIProduct.js","webpack:///./node_modules/@material-ui/icons/Edit.js","webpack:///./source/src/app/data/ScopeValidation.jsx"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_1__","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_2__","_material_ui_icons_Edit__WEBPACK_IMPORTED_MODULE_2___default","_material_ui_core_ButtonBase__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_6__","prop_types__WEBPACK_IMPORTED_MODULE_6___default","AppData_api__WEBPACK_IMPORTED_MODULE_7__","AppData_APIProduct__WEBPACK_IMPORTED_MODULE_8__","_ImageGenerator__WEBPACK_IMPORTED_MODULE_9__","useStyles","makeStyles","theme","suppressLinkStyles","textDecoration","color","palette","text","disabled","thumbButton","position","left","right","top","bottom","display","alignItems","justifyContent","common","white","thumbBackdrop","backgroundColor","black","opacity","thumb","&:hover","zIndex","& $thumbBackdrop","media","objectFit","windowURL","window","URL","webkitURL","BaseThumbnail","props","api","width","height","thumbnail","thumbnailPop","selectedIcon","selectedIconProp","colorProp","backgroundIndex","backgroundIndexProp","category","categoryProp","isEditable","onClick","apiType","id","type","classes","iconJson","setIconJson","useState","setThumbnail","imageLoaded","setImageLoaded","useEffect","Api","CONSTS","APIProduct","getAPIProductThumbnail","getAPIThumbnail","then","response","data","headers","JSON","parse","size","url","createObjectURL","finally","a","createElement","className","overviewPath","concat","apiUUID","view","src","alt","fixedIcon","key","Fragment","focusRipple","component","variant","to","defaultProps","propTypes","PropTypes","shape","isRequired","number","bool","_material_ui_core___WEBPACK_IMPORTED_MODULE_1__","_material_ui_core___WEBPACK_IMPORTED_MODULE_2__","_material_ui_core___WEBPACK_IMPORTED_MODULE_3__","_material_ui_core___WEBPACK_IMPORTED_MODULE_4__","_material_ui_core___WEBPACK_IMPORTED_MODULE_5__","_material_ui_core___WEBPACK_IMPORTED_MODULE_6__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_7__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_8__","_material_ui_icons_Delete__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_Slide__WEBPACK_IMPORTED_MODULE_9__","prop_types__WEBPACK_IMPORTED_MODULE_10__","prop_types__WEBPACK_IMPORTED_MODULE_10___default","react_router_dom__WEBPACK_IMPORTED_MODULE_11__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_12__","AppData_api__WEBPACK_IMPORTED_MODULE_13__","AppData_ScopeValidation__WEBPACK_IMPORTED_MODULE_14__","AppComponents_Shared_Alert__WEBPACK_IMPORTED_MODULE_15__","AppComponents_Shared_VerticalDivider__WEBPACK_IMPORTED_MODULE_16__","react_intl__WEBPACK_IMPORTED_MODULE_17__","DeleteApiButton","React","Component","constructor","super","this","handleApiDelete","bind","handleRequestClose","handleRequestOpen","state","openMenu","setState","history","API","deleteProduct","status","console","log","Alert","error","success","name","push","catch","body","description","delete","render","version","deleteHandler","path","resourcePath","SINGLE_API","SINGLE_API_PRODUCT","resourceMethod","DELETE","deleteWrapper","onKeyDown","defaultMessage","open","transition","Slide","values","b","msg","dense","func","withRouter","withStyles","root","background","paper","borderBottom","grey","A200","backLink","backIcon","primary","main","fontSize","cursor","backText","fontFamily","typography","flex","paddingRight","spacing","flexDirection","textAlign","custom","deleteButtonColor","linkText","withTheme","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_2__","_material_ui_core_Icon__WEBPACK_IMPORTED_MODULE_3__","MaterialIcons__WEBPACK_IMPORTED_MODULE_4__","MaterialIcons__WEBPACK_IMPORTED_MODULE_4___default","_Background__WEBPACK_IMPORTED_MODULE_5__","ImageGenerator","PureComponent","count","colorPair","randomBackgroundIndex","IconElement","str","colorPairs","backgrounds","document","icon","MaterialIcons","categories","icons","length","randomIconIndex","charCodeAt","iconWrapper","style","marginLeft","iconSettings","& span","aHexToOpacity","aHex","substring","getColorWithoutAlpha","Background","thumbnailBoxChild","rects","i","j","sub","toString","_extends","fill","fillOpacity","x","y","primeColor","prime","svgImage","module","exports","Redirect","member","_interopDefault","t","default","Object","defineProperty","value","reactRouter","invariant","assign","e","arguments","r","o","prototype","hasOwnProperty","call","apply","_inheritsLoose","create","__proto__","_objectWithoutPropertiesLoose","keys","indexOf","BrowserRouter","Array","createBrowserHistory","Router","children","HashRouter","createHashHistory","Link","handleClick","preventDefault","defaultPrevented","button","target","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","replace","innerRef","__RouterContext","Consumer","createLocation","location","createHref","href","ref","forEach","NavLink","activeClassName","s","c","activeStyle","u","l","exact","p","isActive","h","f","strict","v","R","pathname","d","matchPath","filter","join","joinClassnames","aria-current","_interopRequireDefault","_react","_default","APIThumb","isHover","loading","toggleMouseOver","updateData","isAPIProduct","info","event","lifeCycleStatus","react_default","Card","onMouseOver","onFocus","onMouseOut","onBlur","raised","card","CardMedia","title","CardContent","apiDetails","textWrapper","react_router_dom","Typography","gutterBottom","thumbHeader","row","align","thumbBy","lib","provider","thumbInfo","thumbLeft","thumbRight","contextBox","context","CardActions","apiActions","Chip","label","transportType","thumbRightBy","undefined","CircularProgress","deleteProgress","string","injectIntl","margin","maxWidth","providerText","textTransform","padding","green","whiteSpace","secondary","overflow","textOverflow","padding-left","imageWrapper","thumbContent","alignSelf","padding-right","lineHeight","padding-top","padding-bottom","imageOverlap","contentBackgroundColor","margin-right","DocThumb","doc","docDetails","Grid","container","item","md","sourceType","apiName","apiVersion","docActions","MenuButton","handleToggle","handleClose","anchorEl","contains","menuList","buttonProps","Button","buttonRef","node","aria-owns","aria-haspopup","Popper","placement","disablePortal","_ref","TransitionProps","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","element","marginRight","apiCreateMenu","links","getContrastText","APICreateMenu","createTypes","List","ListItem","ListItemText","Divider","AuthManager","isNotCreator","Shared_MenuButton","APICreateMenu_extends","oneOfType","array","getSwagger","policyLevel","paths","/order","post","x-auth-type","x-throttling-tier","parameters","schema","$ref","required","in","responses","201","Location","Content-Type","400","415","/menu","get","200","items","304","406","/order/{orderId}","put","format","404","412","schemes","produces","swagger","definitions","ErrorListItem","properties","message","code","MenuItem","price","image","Order","customerName","delivered","address","pizzaType","creditCardNumber","quantity","orderId","Error","moreInfo","consumes","license","contact","email","SampleAPI","published","deploying","sampleApi","handleDeploySample","createSampleAPI","intl","swaggerUpdatePromise","sampleAPI","updateSwagger","getSampleSwagger","isNotPublisher","formatMessage","publish","transport","tags","policies","securityScheme","visibility","gatewayEnvironments","businessInformation","businessOwner","businessOwnerEmail","technicalOwner","technicalOwnerEmail","endpointConfig","endpoint_type","sandbox_endpoints","production_endpoints","operations","verb","throttlingPolicy","authType","save","Redirect_default","InlineMessage","contentWrapper","head","content","actions","components_APICreateMenu","buttonLeft","Create_default","GetApp_default","buttonProgress","headline","paddingTop","paddingLeft","paddingBottom","fontWeight","TopMenu","setListType","listType","showToggle","strokeColorMain","mainIconWrapper","CustomIcon","strokeColor","mainTitleWrapper","mainTitle","query","getTitleForArtifactType","VerticalDivider","createButton","buttonRight","IconButton","List_default","GridOn_default","rightIcon","marginBottom","ListingWrapper","flexGrow","TableView","_defineProperty","themeAdditions","muiTheme","overrides","MUIDataTable","boxShadow","tableRoot","& tbody","MUIDataTableBodyCell","flexWrap","& thead","createMuiTheme","xhrRequest","list","pagination","total","page","removeLocalStorage","getData","apisAndApiProducts","notFound","displayCount","paginationSufix","localStorage","removeItem","storedPagination","getItem","rowsPerPage","setItem","stringify","setLocalStorage","composeQuery","queryString","limit","offset","search","all","defaultApiView","getLocalStorage","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","_this","columns","options","customBodyRender","tableMeta","updateValue","tableViewObj","rowData","artifact","rowIndex","apiId","apiNameLink","Icon","sort","filterType","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","customRowRender","dataIndex","ImageGenerator_DocThumb","ApiThumb","print","download","viewColumns","customToolbar","Shared","per","ResourceNotFound","components_TopMenu","contentInside","ThemeProvider","getMuiTheme","dist_default","SampleAPIProduct","Listing_SampleAPI_SampleAPI","& > div[class^=\"MuiPaper-root-\"]","Listing","Listing_TableView_TableView","Details","lazy","Promise","DeferredDetails","react","fallback","Progress","APICreateRoutes","DeferredAPICreateRoutes","Apis","react_router","Date","now","Listing_Listing","Apis_extends","Resource","kwargs","isDefaultVersion","_data","getType","_requestMetaData","getSettings","client","apis","get_settings","getMonetization","get_apis__apiId__monetization","configureMonetizationToApiProduct","post_apis__apiId__monetize","getSubscriptionPolicies","get_apis__apiId__subscription_policies","getMonetizationInvoice","get_subscriptions__subscriptionId__usage","subscriptionId","saveProduct","spec","apiAttribute","payload","post_api_products","apiData","promise_create","toJSON","resource","userExcludes","copy","excludes","_toConsumableArray","prop","includes","[object Object]","APIClientFactory","getAPIClient","Utils","getCurrentEnvironment","get_api_products__apiProductId_","apiProductId","params","entries","get_api_products","obj","update","updatedProperties","updatedAPI","_objectSpread","put_api_products__apiProductId_","get_api_products__apiProductId__thumbnail","addAPIProductThumbnail","imageFile","file","put_api_products__apiProductId__thumbnail","delete_api_products__apiProductId_","addDocument","post_api_products__apiProductId__documents","getDocuments","get_api_products__apiProductId__documents","updateDocument","productId","docId","documentId","put_api_products__apiProductId__documents__documentId_","getDocument","get_api_products__apiProductId__documents__documentId_","addInlineContentToDocument","inlineContent","post_api_products__apiProductId__documents__documentId__content","getInlineContentOfDocument","get_api_products__apiProductId__documents__documentId__content","deleteDocument","delete_api_products__apiProductId__documents__documentId_","addFileToDocument","fileToDocument","apiDefinition","put_api_products__apiProductId__swagger","get_api_products__apiProductId__swagger","__webpack_exports__","ScopeValidation","AppData_APIClient__WEBPACK_IMPORTED_MODULE_2__","AppData_AuthManager__WEBPACK_IMPORTED_MODULE_3__","APIS","API_PRODUCTS","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","SUBSCRIPTIONS","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","POST","PUT","GET","currentResourcePath","currentResourceMethod","userScopes","getUser","scopes","APIClient","getScopeForResource","scope","hasScopes","haveScope"],"mappings":"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","file":"DeferredAPIs.716150ec960a60dfc2aa.bundle.js","sourcesContent":["/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\n\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport ImageGenerator from './ImageGenerator';\n\nconst useStyles = makeStyles((theme) => ({\n    suppressLinkStyles: {\n        textDecoration: 'none',\n        color: theme.palette.text.disabled,\n    },\n    thumbButton: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: theme.palette.common.white,\n    },\n    thumbBackdrop: {\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.4,\n    },\n    thumb: {\n        '&:hover': {\n            zIndex: 1,\n            '& $thumbBackdrop': {\n                opacity: 0.2,\n            },\n        },\n    },\n    media: {\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n}));\n\n\nconst windowURL = window.URL || window.webkitURL;\n\nconst BaseThumbnail = (props) => {\n    const {\n        api, width, height, thumbnail: thumbnailPop,\n        selectedIcon: selectedIconProp,\n        color: colorProp,\n        backgroundIndex: backgroundIndexProp,\n        category: categoryProp,\n        isEditable,\n        onClick,\n    } = props;\n    const { apiType, id, type } = api;\n    const classes = useStyles();\n    const [iconJson, setIconJson] = useState({});\n    const {\n        selectedIcon,\n        color,\n        backgroundIndex,\n        category,\n    } = iconJson;\n    const [thumbnail, setThumbnail] = useState(null);\n    const [imageLoaded, setImageLoaded] = useState(false);\n\n    useEffect(() => {\n        setIconJson({\n            selectedIcon: selectedIconProp,\n            color: colorProp,\n            backgroundIndex: backgroundIndexProp,\n            category: categoryProp,\n        });\n    }, [selectedIconProp, colorProp, backgroundIndexProp, categoryProp]);\n\n    useEffect(() => {\n        setThumbnail(thumbnailPop);\n    }, [thumbnailPop]);\n    /**\n     * Load the image from the backend and keeps in the component state\n     *\n     * @memberof ThumbnailView\n     */\n\n    useEffect(() => {\n        if (type !== 'DOC') {\n            const promisedThumbnail = apiType === Api.CONSTS.APIProduct\n                ? new APIProduct().getAPIProductThumbnail(id)\n                : new Api().getAPIThumbnail(id);\n\n            promisedThumbnail.then((response) => {\n                if (response && response.data) {\n                    if (response.headers['content-type'] === 'application/json') {\n                        setIconJson(JSON.parse(response.data));\n                    } else if (response && response.data.size > 0) {\n                        const url = windowURL.createObjectURL(response.data);\n                        setThumbnail(url);\n                    }\n                }\n            }).finally(() => {\n                setImageLoaded(true);\n            });\n        }\n    }, []);\n    if (!imageLoaded) {\n        return (\n            <div className='image-load-frame'>\n                <div className='image-load-animation1' />\n                <div className='image-load-animation2' />\n            </div>\n        );\n    }\n    let overviewPath = '';\n    if (apiType) {\n        overviewPath = apiType === Api.CONSTS.APIProduct\n            ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n    } else {\n        overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n    }\n    const view = thumbnail\n        ? <img height={height} width={width} src={thumbnail} alt='API Thumbnail' className={classes.media} />\n        : (\n            <ImageGenerator\n                width={width}\n                height={height}\n                api={api}\n                fixedIcon={{\n                    key: selectedIcon,\n                    color,\n                    backgroundIndex,\n                    category,\n                    api,\n                }}\n            />\n        );\n    return (\n        <>\n            {isEditable ? (\n                <ButtonBase\n                    focusRipple\n                    className={classes.thumb}\n                    onClick={onClick}\n                >\n                    {view}\n                    <span className={classes.thumbBackdrop} />\n                    <span className={classes.thumbButton}>\n                        <Typography component='span' variant='subtitle1' color='inherit'>\n                            <EditIcon />\n                        </Typography>\n                    </span>\n                </ButtonBase>\n            ) : (\n                <Link className={classes.suppressLinkStyles} to={overviewPath}>\n                    {view}\n                </Link>\n            )}\n        </>\n    );\n};\nBaseThumbnail.defaultProps = {\n    height: 190,\n    width: 250,\n    isEditable: false,\n};\nBaseThumbnail.propTypes = {\n    api: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    isEditable: PropTypes.bool,\n};\nexport default BaseThumbnail;\n","import React from 'react';\n\nimport {\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n} from '@material-ui/core/';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Slide from '@material-ui/core/Slide';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport API from 'AppData/api';\nimport { resourceMethod, resourcePath, ScopeValidation } from 'AppData/ScopeValidation';\nimport Alert from 'AppComponents/Shared/Alert';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport { FormattedMessage } from 'react-intl';\n\nconst styles = (theme) => ({\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backLink: {\n        alignItems: 'center',\n        textDecoration: 'none',\n        display: 'flex',\n    },\n    backIcon: {\n        color: theme.palette.primary.main,\n        fontSize: 56,\n        cursor: 'pointer',\n    },\n    backText: {\n        color: theme.palette.primary.main,\n        cursor: 'pointer',\n        fontFamily: theme.typography.fontFamily,\n    },\n    deleteWrapper: {\n        flex: 0,\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: theme.spacing(2),\n    },\n    delete: {\n        display: 'flex',\n        flexDirection: 'column',\n        textAlign: 'center',\n        color: theme.custom.deleteButtonColor,\n        justifyContent: 'center',\n        cursor: 'pointer',\n    },\n    linkText: {\n        fontSize: theme.typography.fontSize,\n    },\n});\n\n/**\n * Handle Delete an API from API Overview/Details page\n *\n * @class DeleteApiButton\n * @extends {React.Component}\n */\nclass DeleteApiButton extends React.Component {\n    /**\n     *Creates an instance of DeleteApiButton.\n     * @param {*} props @inheritDoc\n     * @memberof DeleteApiButton\n     */\n    constructor(props) {\n        super(props);\n        this.handleApiDelete = this.handleApiDelete.bind(this);\n        this.handleRequestClose = this.handleRequestClose.bind(this);\n        this.handleRequestOpen = this.handleRequestOpen.bind(this);\n        this.state = { openMenu: false };\n    }\n\n    /**\n     * Handle Delete button close event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestClose() {\n        this.setState({ openMenu: false });\n    }\n\n    /**\n     * Handle Delete button onClick event\n     *\n     * @memberof DeleteApiButton\n     */\n    handleRequestOpen() {\n        this.setState({ openMenu: true });\n    }\n\n    /**\n     *\n     * Send API delete REST API request\n     * @param {*} e\n     * @memberof DeleteApiButton\n     */\n    handleApiDelete() {\n        const { api, history } = this.props;\n        if (api.apiType === API.CONSTS.APIProduct) {\n            API.deleteProduct(api.id).then((response) => {\n                if (response.status !== 200) {\n                    console.log(response);\n                    Alert.error('Something went wrong while deleting the API Product!');\n                    return;\n                }\n                const redirectURL = '/api-products';\n                Alert.success('API Product ' + api.name + ' was deleted successfully!');\n                history.push(redirectURL);\n            }).catch((error) => {\n                if (error.status === 409) {\n                    Alert.error('[ ' + api.name + ' ] : ' + error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while deleting the API Product!');\n                }\n            });\n        } else {\n            api.delete().then((response) => {\n                if (response.status !== 200) {\n                    console.log(response);\n                    Alert.error('Something went wrong while deleting the API!');\n                    return;\n                }\n                const redirectURL = '/apis';\n                Alert.success('API ' + api.name + ' was deleted successfully!');\n                history.push(redirectURL);\n            }).catch((error) => {\n                if (error.status === 409) {\n                    Alert.error('[ ' + api.name + ' ] : ' + error.response.body.description);\n                } else {\n                    Alert.error('Something went wrong while deleting the API!');\n                }\n            });\n        }\n    }\n\n    /**\n     *\n     * @inheritDoc\n     * @returns {React.Component} inherit docs\n     * @memberof DeleteApiButton\n     */\n    render() {\n        const { api, onClick, classes } = this.props;\n        const type = api.apiType === API.CONSTS.APIProduct ? 'API Product ' : 'API ';\n        const version = api.apiType === API.CONSTS.APIProduct ? null : '-' + api.version;\n        const deleteHandler = onClick || this.handleApiDelete;\n\n        let path = resourcePath.SINGLE_API;\n\n        if (api.apiType === API.CONSTS.APIProduct) {\n            path = resourcePath.SINGLE_API_PRODUCT;\n        }\n\n        return (\n            <>\n                {/* allowing delete based on scopes */}\n                <ScopeValidation resourceMethod={resourceMethod.DELETE} resourcePath={path}>\n                    <div className={classes.deleteWrapper}>\n                        <VerticalDivider height={70} />\n                        <a\n                            id='itest-id-deleteapi-icon-button'\n                            onClick={this.handleRequestOpen}\n                            onKeyDown={this.handleRequestOpen}\n                            className={classes.delete}\n                        >\n                            <div>\n                                <DeleteIcon />\n                            </div>\n                            <Typography variant='caption'>\n                                <FormattedMessage\n                                    id='Apis.Details.components.DeleteApiButton.delete'\n                                    defaultMessage='Delete'\n                                />\n                            </Typography>\n                        </a>\n                    </div>\n                </ScopeValidation>\n                <Dialog open={this.state.openMenu} transition={Slide}>\n                    <DialogTitle>\n                        <FormattedMessage\n                            id='Apis.Details.components.DeleteApiButton.title'\n                            defaultMessage='Delete {type}'\n                            values={{ type }}\n                        />\n                    </DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.text.description'\n                                defaultMessage='{type} <b> {name} {version} </b> will be deleted permanently.'\n                                values={{\n                                    b: (msg) => <b>{msg}</b>,\n                                    type,\n                                    name: api.name,\n                                    version,\n                                }}\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button dense onClick={this.handleRequestClose}>\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.cancel'\n                                defaultMessage='Cancel'\n                            />\n                        </Button>\n                        <Button\n                            id='itest-id-deleteconf'\n                            onClick={() => {\n                                deleteHandler();\n                                this.handleRequestClose();\n                            }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Details.components.DeleteApiButton.button.delete'\n                                defaultMessage='Delete'\n                            />\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nDeleteApiButton.defaultProps = {\n    onClick: false,\n};\n\nDeleteApiButton.propTypes = {\n    api: PropTypes.shape({\n        delete: PropTypes.func,\n    }).isRequired,\n    history: PropTypes.shape({ push: PropTypes.func }).isRequired,\n    onClick: PropTypes.func,\n    classes: PropTypes.shape({}).isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(DeleteApiButton));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport MaterialIcons from 'MaterialIcons';\nimport Background from './Background';\n\nconst styles = {\n    icon: {},\n    iconWrapper: {\n        position: 'relative',\n        '& span': {\n            position: 'absolute',\n            left: '50%',\n        },\n    },\n};\n\n/**\n * Generate dynamic API thumbnail image (SVG), Use PureComponent to avoid unnessasary re-rendering when hover ect\n *\n * @class ImageGenerator\n * @extends {PureComponent}\n */\nclass ImageGenerator extends PureComponent {\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.PureComponent} @inheritdoc\n     * @memberof ImageGenerator\n     */\n    render() {\n        const {\n            classes, api, width, height, theme, fixedIcon,\n        } = this.props;\n\n        const {\n            category, key, color, backgroundIndex,\n        } = fixedIcon;\n        let str = api;\n        if (typeof api === 'object') str = api.name;\n        if (!str) str = 'default';\n        let count;\n        let colorPair;\n        let randomBackgroundIndex;\n        let IconElement;\n        const colorPairs = theme.custom.thumbnail.backgrounds;\n\n        // Creating the icon\n        if (key && category) {\n            IconElement = key;\n        } else if (api.type === 'DOC') {\n            IconElement = theme.custom.thumbnail.document.icon;\n        } else {\n            count = MaterialIcons.categories[0].icons.length;\n            const randomIconIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % count;\n            IconElement = MaterialIcons.categories[0].icons[randomIconIndex].id;\n        }\n\n        if (api.type === 'DOC') {\n            colorPair = theme.custom.thumbnail.document.backgrounds;\n        } else if (typeof backgroundIndex === 'number' && colorPairs.length > backgroundIndex) {\n            // Obtain or generate background color pair\n            colorPair = colorPairs[backgroundIndex];\n        } else {\n            randomBackgroundIndex = (str.charCodeAt(0) + str.charCodeAt(str.length - 1)) % colorPairs.length;\n            colorPair = colorPairs[randomBackgroundIndex];\n        }\n        return (\n            <div className={classes.iconWrapper} style={{ width }}>\n                <Icon className={classes.icon} style={{ fontSize: height, marginLeft: -height / 2, color }}>\n                    {IconElement}\n                </Icon>\n                <Background width={width} height={height} colorPair={colorPair} />\n            </div>\n        );\n    }\n}\n\nImageGenerator.defaultProps = {\n    height: 190,\n    width: 250,\n    fixedIcon: {\n        category: null,\n        key: null,\n        color: '',\n        backgroundIndex: null,\n    },\n};\n\nImageGenerator.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    height: PropTypes.number,\n    width: PropTypes.number,\n    fixedIcon: PropTypes.shape({}),\n    api: PropTypes.shape({}).isRequired,\n    iconSettings: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(ImageGenerator);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n    svgImage: {\n        cursor: 'pointer',\n        // ⚠️ object-fit is not supported by IE11.\n        objectFit: 'cover',\n    },\n};\n\nfunction aHexToOpacity(aHex) {\n    const alphaValue = '0x' + aHex.substring(7, 9);\n    return alphaValue / 256;\n}\n\n/**\n *\n * @param {*} aHex\n */\nfunction getColorWithoutAlpha(aHex) {\n    return aHex.substring(0, 7);\n}\n\n/**\n * Generate svg background.\n * @param {*} props\n */\nfunction Background(props) {\n    const {\n        classes, colorPair, width, height,\n    } = props;\n    // Creating the background\n\n    const thumbnailBox = {\n        width: 250,\n        height: 200,\n    };\n\n    const thumbnailBoxChild = {\n        width: 50,\n        height: 50,\n    };\n\n    const rects = [];\n    for (let i = 0; i <= 4; i++) {\n        for (let j = 0; j <= 4; j++) {\n            const color = '#' + (colorPair.sub - ((0x00000025 * i) - (j * 0x00000015))).toString(16);\n            rects.push(<rect\n                key={i + '_' + j}\n                {...thumbnailBoxChild}\n                /* eslint no-mixed-operators: 0 */\n                fill={getColorWithoutAlpha(color)}\n                fillOpacity={aHexToOpacity(color)}\n                x={200 - i * 54}\n                y={54 * j}\n            />);\n        }\n    }\n    const primeColor = '#' + colorPair.prime.toString(16);\n    return (\n        <svg width={width} height={height} className={classes.svgImage}>\n            <rect {...thumbnailBox} fill={getColorWithoutAlpha(primeColor)} fillOpacity={aHexToOpacity(primeColor)} />\n            {rects}\n        </svg>\n    );\n}\n\nBackground.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    width: PropTypes.shape({}).isRequired,\n    height: PropTypes.shape({}).isRequired,\n    colorPair: PropTypes.shape({ sub: PropTypes.number, prime: PropTypes.number }).isRequired,\n};\n\nexport default withStyles(styles)(Background);\n","\"use strict\";\nrequire(\"./warnAboutDeprecatedCJSRequire\")(\"Redirect\");\nmodule.exports = require(\"./index.js\").Redirect;\n","\"use strict\";\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== \"production\") {\n  printWarning = function(format, subs) {\n    var index = 0;\n    var message =\n      \"Warning: \" +\n      (subs.length > 0\n        ? format.replace(/%s/g, function() {\n            return subs[index++];\n          })\n        : format);\n\n    if (typeof console !== \"undefined\") {\n      console.error(message);\n    }\n\n    try {\n      // --- Welcome to debugging React Router ---\n      // This error was thrown as a convenience so that you can use the\n      // stack trace to find the callsite that triggered this warning.\n      throw new Error(message);\n    } catch (e) {}\n  };\n}\n\nmodule.exports = function(member) {\n  printWarning(\n    'Please use `require(\"react-router-dom\").%s` instead of `require(\"react-router-dom/%s\")`. ' +\n      \"Support for the latter will be removed in the next major release.\",\n    [member, member]\n  );\n};\n","\"use strict\";\n\nif (process.env.NODE_ENV === \"production\") {\n  module.exports = require(\"./cjs/react-router-dom.min.js\");\n} else {\n  module.exports = require(\"./cjs/react-router-dom.js\");\n}\n","\"use strict\";function _interopDefault(t){return t&&\"object\"==typeof t&&\"default\"in t?t.default:t}Object.defineProperty(exports,\"__esModule\",{value:!0});var React=_interopDefault(require(\"react\")),reactRouter=require(\"react-router\"),history=require(\"history\");require(\"prop-types\"),require(\"tiny-warning\");var invariant=_interopDefault(require(\"tiny-invariant\"));function _extends(){return(_extends=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t}).apply(this,arguments)}function _inheritsLoose(t,e){t.prototype=Object.create(e.prototype),(t.prototype.constructor=t).__proto__=e}function _objectWithoutPropertiesLoose(t,e){if(null==t)return{};var r,o,n={},i=Object.keys(t);for(o=0;o<i.length;o++)r=i[o],0<=e.indexOf(r)||(n[r]=t[r]);return n}var BrowserRouter=function(n){function t(){for(var t,e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return(t=n.call.apply(n,[this].concat(r))||this).history=history.createBrowserHistory(t.props),t}return _inheritsLoose(t,n),t.prototype.render=function(){return React.createElement(reactRouter.Router,{history:this.history,children:this.props.children})},t}(React.Component),HashRouter=function(n){function t(){for(var t,e=arguments.length,r=new Array(e),o=0;o<e;o++)r[o]=arguments[o];return(t=n.call.apply(n,[this].concat(r))||this).history=history.createHashHistory(t.props),t}return _inheritsLoose(t,n),t.prototype.render=function(){return React.createElement(reactRouter.Router,{history:this.history,children:this.props.children})},t}(React.Component);function isModifiedEvent(t){return!!(t.metaKey||t.altKey||t.ctrlKey||t.shiftKey)}var Link=function(t){function e(){return t.apply(this,arguments)||this}_inheritsLoose(e,t);var r=e.prototype;return r.handleClick=function(e,t){try{this.props.onClick&&this.props.onClick(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||this.props.target&&\"_self\"!==this.props.target||isModifiedEvent(e)||(e.preventDefault(),(this.props.replace?t.replace:t.push)(this.props.to))},r.render=function(){var o=this,t=this.props,n=t.innerRef,i=(t.replace,t.to),a=_objectWithoutPropertiesLoose(t,[\"innerRef\",\"replace\",\"to\"]);return React.createElement(reactRouter.__RouterContext.Consumer,null,function(e){e||invariant(!1);var t=\"string\"==typeof i?history.createLocation(i,null,null,e.location):i,r=t?e.history.createHref(t):\"\";return React.createElement(\"a\",_extends({},a,{onClick:function(t){return o.handleClick(t,e.history)},href:r,ref:n}))})},e}(React.Component);function joinClassnames(){for(var t=arguments.length,e=new Array(t),r=0;r<t;r++)e[r]=arguments[r];return e.filter(function(t){return t}).join(\" \")}function NavLink(t){var e=t[\"aria-current\"],a=void 0===e?\"page\":e,r=t.activeClassName,s=void 0===r?\"active\":r,c=t.activeStyle,u=t.className,l=t.exact,p=t.isActive,h=t.location,f=t.strict,y=t.style,v=t.to,R=_objectWithoutPropertiesLoose(t,[\"aria-current\",\"activeClassName\",\"activeStyle\",\"className\",\"exact\",\"isActive\",\"location\",\"strict\",\"style\",\"to\"]),o=\"object\"==typeof v?v.pathname:v,d=o&&o.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\");return React.createElement(reactRouter.__RouterContext.Consumer,null,function(t){t||invariant(!1);var e=h?h.pathname:t.location.pathname,r=d?reactRouter.matchPath(e,{path:d,exact:l,strict:f}):null,o=!!(p?p(r,t.location):r),n=o?joinClassnames(u,s):u,i=o?_extends({},y,c):y;return React.createElement(Link,_extends({\"aria-current\":o&&a||null,className:n,style:i,to:v},R))})}Object.keys(reactRouter).forEach(function(t){exports[t]=reactRouter[t]}),exports.BrowserRouter=BrowserRouter,exports.HashRouter=HashRouter,exports.Link=Link,exports.NavLink=NavLink;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n}), 'GridOn');\n\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport green from '@material-ui/core/colors/green';\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport DeleteApiButton from 'AppComponents/Apis/Details/components/DeleteApiButton';\n\nimport BaseThumbnail from './BaseThumbnail';\n\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    providerText: {\n        textTransform: 'capitalize',\n    },\n    apiDetails: { padding: theme.spacing(1) },\n    apiActions: { justifyContent: 'space-between', padding: `0px 0px ${theme.spacing(1)}px 8px` },\n    deleteProgress: {\n        color: green[200],\n        position: 'absolute',\n        marginLeft: '200px',\n    },\n    thumbHeader: {\n        width: '90%',\n        whiteSpace: 'nowrap',\n        color: theme.palette.text.secondary,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        'padding-left': '5px',\n    },\n    imageWrapper: {\n        color: theme.palette.text.secondary,\n        backgroundColor: theme.palette.background.paper,\n        width: theme.custom.thumbnail.width + theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    thumbContent: {\n        width: theme.custom.thumbnail.width - theme.spacing(1),\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n    },\n    thumbLeft: {\n        alignSelf: 'flex-start',\n        flex: 1,\n        width: '25%',\n        'padding-left': '5px',\n        'padding-right': '65px',\n    },\n    thumbRight: {\n        alignSelf: 'flex-end',\n    },\n    thumbInfo: {\n        display: 'flex',\n    },\n    contextBox: {\n        width: '110px',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        margin: 0,\n        display: 'inline-block',\n        lineHeight: '1em',\n        'padding-top': 5,\n        'padding-right': 5,\n        'padding-bottom': 1.5,\n        textAlign: 'left',\n    },\n    imageOverlap: {\n        position: 'absolute',\n        bottom: 1,\n        backgroundColor: theme.custom.thumbnail.contentBackgroundColor,\n    },\n    row: {\n        display: 'inline-block',\n    },\n    textWrapper: {\n        color: theme.palette.text.secondary,\n        textDecoration: 'none',\n    },\n    thumbBy: {\n        'padding-left': '5px',\n    },\n    thumbRightBy: {\n        'margin-right': '5px',\n    },\n});\n\n/**\n *\n * Render API Card component in API listing card view,containing essential API information like name , version ect\n * @class APIThumb\n * @extends {Component}\n */\nclass APIThumb extends Component {\n    /**\n     *Creates an instance of APIThumb.\n     * @param {*} props\n     * @memberof APIThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isHover: false, loading: false };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n        this.handleApiDelete = this.handleApiDelete.bind(this);\n    }\n\n    /**\n     *\n     * Delete an API listed in the listing page\n     * @param {React.SyntheticEvent} event OnClick event of delete button\n     * @param {String} [name=''] API Name use for alerting purpose only\n     * @memberof Listing\n     */\n    handleApiDelete() {\n        const { api: { id, name } } = this.props;\n        this.setState({ loading: true });\n        const { updateData, isAPIProduct } = this.props;\n        if (isAPIProduct) {\n            const promisedDelete = API.deleteProduct(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info('Something went wrong while deleting the API Product!');\n                        return;\n                    }\n                    updateData(id);\n                    Alert.info(`API Product ${name} deleted Successfully`);\n                    this.setState({ loading: false });\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                        this.setState({ loading: false });\n                    } else {\n                        Alert.error('Something went wrong while deleting the API Product!');\n                        this.setState({ loading: false });\n                    }\n                });\n        } else {\n            const promisedDelete = API.delete(id);\n            promisedDelete\n                .then((response) => {\n                    if (response.status !== 200) {\n                        Alert.info('Something went wrong while deleting the API!');\n                        return;\n                    }\n                    updateData(id);\n                    Alert.info(`API ${name} deleted Successfully`);\n                    this.setState({ loading: false });\n                })\n                .catch((error) => {\n                    if (error.status === 409) {\n                        Alert.error('[ ' + name + ' ] : ' + error.response.body.description);\n                        this.setState({ loading: false });\n                    } else {\n                        Alert.error('Something went wrong while deleting the API!');\n                        this.setState({ loading: false });\n                    }\n                });\n        }\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof APIThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof APIThumb\n     */\n    render() {\n        const { classes, api, isAPIProduct } = this.props;\n        const { isHover, loading } = this.state;\n        let overviewPath = '';\n        if (api.apiType) {\n            overviewPath = isAPIProduct ? `/api-products/${api.id}/overview` : `/apis/${api.id}/overview`;\n        } else {\n            overviewPath = `/apis/${api.apiUUID}/documents/${api.id}/details`;\n        }\n        if (isAPIProduct) {\n            api.apiType = API.CONSTS.APIProduct;\n        } else {\n            api.apiType = API.CONSTS.API;\n        }\n\n        if (!api.lifeCycleStatus) {\n            api.lifeCycleStatus = api.status;\n        }\n\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classes.card}\n            >\n                <CardMedia src='None' component={BaseThumbnail} height={140} title='Thumbnail' api={api} />\n                <CardContent className={classes.apiDetails}>\n                    <div className={classes.textWrapper}>\n                        <Link to={overviewPath}>\n                            <Typography gutterBottom variant='h4' className={classes.thumbHeader} title={api.name}>\n                                {api.name}\n                            </Typography>\n                        </Link>\n                    </div>\n                    <div className={classes.row}>\n                        <Typography variant='caption' gutterBottom align='left' className={classes.thumbBy}>\n                            <FormattedMessage id='by' defaultMessage='By' />\n                            <FormattedMessage id='colon' defaultMessage=' : ' />\n                            {api.provider}\n                        </Typography>\n                    </div>\n                    <div className={classes.thumbInfo}>\n                        {isAPIProduct ? null : (\n                            <div className={classes.row}>\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='subtitle1'>{api.version}</Typography>\n                                </div>\n\n                                <div className={classes.thumbLeft}>\n                                    <Typography variant='caption' gutterBottom align='left'>\n                                        <FormattedMessage defaultMessage='Version' id='Apis.Listing.ApiThumb.version' />\n                                    </Typography>\n                                </div>\n                            </div>\n                        )}\n                        <div className={classes.row}>\n                            <div className={classes.thumbRight}>\n                                <Typography variant='subtitle1' align='right' className={classes.contextBox}>\n                                    {api.context}\n                                </Typography>\n                            </div>\n\n                            <div className={classes.thumbRight}>\n                                <Typography variant='caption' gutterBottom align='right' className={classes.context}>\n                                    <FormattedMessage defaultMessage='Context' id='Apis.Listing.ApiThumb.context' />\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n                </CardContent>\n                <CardActions className={classes.apiActions}>\n                    <Chip\n                        label={api.apiType === API.CONSTS.APIProduct ? api.state : api.lifeCycleStatus}\n                        color='default'\n                    />\n                    {(api.type === 'GRAPHQL' || api.transportType === 'GRAPHQL') && (\n                        <Chip\n                            className={classes.thumbRightBy}\n                            label={api.transportType === undefined\n                                ? api.type : api.transportType}\n                            color='primary'\n                        />\n                    )}\n                    <DeleteApiButton onClick={this.handleApiDelete} api={api} />\n                    {loading && <CircularProgress className={classes.deleteProgress} />}\n                </CardActions>\n            </Card>\n        );\n    }\n}\n\nAPIThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        apiType: PropTypes.string.isRequired,\n    }).isRequired,\n    updateData: PropTypes.func.isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(APIThumb));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport green from '@material-ui/core/colors/green';\n\nimport BaseThumbnail from './BaseThumbnail';\n\nconst styles = (theme) => ({\n    card: {\n        margin: theme.spacing(3 / 2),\n        maxWidth: theme.spacing(32),\n        transition: 'box-shadow 0.3s ease-in-out',\n    },\n    providerText: {\n        textTransform: 'capitalize',\n    },\n    docDetails: { padding: theme.spacing(1) },\n    docActions: { justifyContent: 'space-between', padding: `0px 0px ${theme.spacing(1)}px 0px` },\n    deleteProgress: {\n        color: green[200],\n        position: 'absolute',\n        marginLeft: '200px',\n    },\n});\n\n/**\n *\n * Render Doc Card component in Search listing card view,containing essential Doc information like doc name ,\n * source type ect\n * @class DocThumb\n * @extends {Component}\n */\nclass DocThumb extends Component {\n    /**\n     *Creates an instance of DocThumb.\n     * @param {*} props\n     * @memberof DocThumb\n     */\n    constructor(props) {\n        super(props);\n        this.state = { isHover: false };\n        this.toggleMouseOver = this.toggleMouseOver.bind(this);\n    }\n\n    /**\n     * Toggle mouse Hover state to set the card `raised` property\n     *\n     * @param {React.SyntheticEvent} event mouseover and mouseout\n     * @memberof DocThumb\n     */\n    toggleMouseOver(event) {\n        this.setState({ isHover: event.type === 'mouseover' });\n    }\n\n    /**\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof DocThumb\n     */\n    render() {\n        const { classes, doc } = this.props;\n        const { isHover } = this.state;\n\n        return (\n            <Card\n                onMouseOver={this.toggleMouseOver}\n                onFocus={this.toggleMouseOver}\n                onMouseOut={this.toggleMouseOver}\n                onBlur={this.toggleMouseOver}\n                raised={isHover}\n                className={classes.card}\n            >\n                <CardMedia src='None' component={BaseThumbnail} height={140} title='Thumbnail' api={doc} />\n                <CardContent className={classes.docDetails}>\n                    <Typography gutterBottom variant='h5' component='h2'>\n                        {doc.name}\n                    </Typography>\n                    <Grid container>\n                        <Grid item md={6}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.sourceType'\n                                defaultMessage='Source Type'\n                            />\n:\n                            <Typography variant='body1'>{doc.sourceType}</Typography>\n                        </Grid>\n                        <Grid item md={6}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiName'\n                                defaultMessage='API Name'\n                            />\n:\n                            <Typography className={classes.providerText} variant='body1' gutterBottom>\n                                {doc.apiName}\n                            </Typography>\n                        </Grid>\n                        <Grid item md={6}>\n                            <FormattedMessage\n                                id='Apis.Listing.components.ImageGenerator.DocThumb.apiVersion'\n                                defaultMessage='API Version'\n                            />\n:\n                            <Typography variant='body1' gutterBottom>\n                                {doc.apiVersion}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </CardContent>\n            </Card>\n        );\n    }\n}\n\nDocThumb.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    doc: PropTypes.shape({\n        id: PropTypes.string,\n        name: PropTypes.string,\n        sourceType: PropTypes.string.isRequired,\n        apiName: PropTypes.string.isRequired,\n        apiVersion: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(DocThumb));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    root: {\n        display: 'flex',\n    },\n    paper: {\n        marginRight: theme.spacing(2),\n    },\n    position: {\n        zIndex: theme.zIndex.apiCreateMenu,\n    },\n});\n\n/**\n * Button with dropdown menu\n *\n * @class MenuButton\n * @extends {React.Component}\n */\nclass MenuButton extends React.Component {\n    /**\n     *Creates an instance of MenuButton.\n     * @param {Object} props @inheritdoc\n     * @memberof MenuButton\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n        };\n        this.handleToggle = this.handleToggle.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof MenuButton\n     */\n    handleToggle() {\n        this.setState((state) => ({ open: !state.open }));\n    }\n\n    /**\n     *\n     *\n     * @param {React.SyntheticEvent} event\n     * @memberof MenuButton\n     */\n    handleClose(event) {\n        if (this.anchorEl.contains(event.target)) {\n            return;\n        }\n        this.setState({ open: false });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof MenuButton\n     */\n    render() {\n        const {\n            classes, children, menuList, buttonProps,\n        } = this.props;\n        const { open } = this.state;\n        return (\n            <>\n                <Button\n                    id='itest-id-createapi'\n                    buttonRef={(node) => {\n                        this.anchorEl = node;\n                    }}\n                    aria-owns={open ? 'menu-list-grow' : null}\n                    aria-haspopup='true'\n                    onClick={this.handleToggle}\n                    {...buttonProps}\n                >\n                    {children}\n                    {' '}\n▼\n                </Button>\n                <Popper\n                    open={open}\n                    placement='bottom-start'\n                    anchorEl={this.anchorEl}\n                    transition\n                    disablePortal\n                    className={classes.position}\n                >\n                    {({ TransitionProps, placement }) => (\n                        <Grow\n                            {...TransitionProps}\n                            id='menu-list-grow'\n                            style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\n                        >\n                            <Paper>\n                                <ClickAwayListener onClickAway={this.handleClose}>{menuList}</ClickAwayListener>\n                            </Paper>\n                        </Grow>\n                    )}\n                </Popper>\n            </>\n        );\n    }\n}\n\nMenuButton.propTypes = {\n    classes: PropTypes.shape({ position: PropTypes.shape({}) }).isRequired,\n    menuList: PropTypes.element.isRequired,\n    children: PropTypes.shape({}).isRequired,\n    buttonProps: PropTypes.shape({}).isRequired,\n};\n\nexport default withStyles(styles)(MenuButton);\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    List, ListItem, ListItemText, Divider,\n} from '@material-ui/core/';\nimport { makeStyles } from '@material-ui/styles';\nimport { Link } from 'react-router-dom';\n\nimport MenuButton from 'AppComponents/Shared/MenuButton';\nimport { FormattedMessage } from 'react-intl';\nimport AuthManager from 'AppData/AuthManager';\n\nconst useStyles = makeStyles((theme) => ({\n    links: {\n        textDecoration: 'none',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n}));\n\nconst APICreateMenu = (props) => {\n    const classes = useStyles();\n\n    const createTypes = (\n        <List>\n            <ListItem>\n                <Link id='itest-id-createdefault' to='/apis/create/rest' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.rest'\n                                defaultMessage='Design a New REST API'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.rest'\n                                defaultMessage='Design and prototype a new REST API'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/openapi' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.swagger'\n                                defaultMessage='I Have an Existing REST API'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.openapi'\n                                defaultMessage='Use an existing OpenAPI definition file or URL'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/wsdl' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.soap'\n                                defaultMessage='I Have a SOAP Endpoint'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.soap'\n                                defaultMessage='Use an existing SOAP or import the WSDL'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/graphQL' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.graphql'\n                                defaultMessage='I Have a GraphQL SDL schema'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.graphql'\n                                defaultMessage='Import a GraphQL SDL schema'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n            <Divider />\n            <ListItem>\n                <Link to='/apis/create/ws' className={classes.links}>\n                    <ListItemText\n                        primary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.primary.ws'\n                                defaultMessage='Design New WebSocket API'\n                            />\n                        )}\n                        secondary={(\n                            <FormattedMessage\n                                id='Apis.Listing.components.APICreateMenu.secondary.ws'\n                                defaultMessage='Design and prototype a new WebSocket API'\n                            />\n                        )}\n                    />\n                </Link>\n            </ListItem>\n        </List>\n    );\n    return !AuthManager.isNotCreator() && <MenuButton {...props} menuList={createTypes} />;\n};\n\nAPICreateMenu.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.array]).isRequired,\n};\nexport default APICreateMenu;\n","const getSwagger = (policyLevel) => ({\n    paths: {\n        '/order': {\n            post: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Create a new Order',\n                parameters: [\n                    {\n                        schema: { $ref: '#/definitions/Order' },\n                        description: 'Order object that needs to be added',\n                        name: 'body',\n                        required: true,\n                        in: 'body',\n                    },\n                ],\n                responses: {\n                    201: {\n                        headers: {\n                            Location: {\n                                description: 'The URL of the newly created resource.',\n                                type: 'string',\n                            },\n                            'Content-Type': {\n                                description: 'The content type of the body.',\n                                type: 'string',\n                            },\n                        },\n                        schema: { $ref: '#/definitions/Order' },\n                        description:\n                            'Created. Successful response with the newly created object as entity in'\n                            + 'the body. Location header contains URL of newly created entity.',\n                    },\n                    400: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Bad Request. Invalid request or validation error.',\n                    },\n                    415: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Unsupported Media Type. The entity of the request was in a not supported format.',\n                    },\n                },\n            },\n        },\n        '/menu': {\n            get: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Return a list of available menu items',\n                parameters: [],\n                responses: {\n                    200: {\n                        headers: {},\n                        schema: {\n                            items: { $ref: '#/definitions/MenuItem' },\n                            type: 'array',\n                        },\n                        description: 'OK. List of APIs is returned.',\n                    },\n                    304: {\n                        description:\n                            'Not Modified. Empty body because the client has already the latest'\n                            + ' version of the requested resource.',\n                    },\n                    406: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Acceptable. The requested media type is not supported',\n                    },\n                },\n            },\n        },\n        '/order/{orderId}': {\n            put: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Update an existing Order',\n                parameters: [\n                    {\n                        description: 'Order Id',\n                        name: 'orderId',\n                        format: 'string',\n                        type: 'string',\n                        required: true,\n                        in: 'path',\n                    },\n                    {\n                        schema: { $ref: '#/definitions/Order' },\n                        description: 'Order object that needs to be added',\n                        name: 'body',\n                        required: true,\n                        in: 'body',\n                    },\n                ],\n                responses: {\n                    200: {\n                        headers: {\n                            Location: {\n                                description: 'The URL of the newly created resource.',\n                                type: 'string',\n                            },\n                            'Content-Type': {\n                                description: 'The content type of the body.',\n                                type: 'string',\n                            },\n                        },\n                        schema: { $ref: '#/definitions/Order' },\n                        description: 'OK. Successful response with updated Order',\n                    },\n                    400: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Bad Request. Invalid request or validation error',\n                    },\n                    404: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Found. The resource to be updated does not exist.',\n                    },\n                    412: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description:\n                            'Precondition Failed. The request has not been performed because one '\n                            + 'of the preconditions is not met.',\n                    },\n                },\n            },\n            get: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Get details of an Order',\n                parameters: [\n                    {\n                        description: 'Order Id',\n                        name: 'orderId',\n                        format: 'string',\n                        type: 'string',\n                        required: true,\n                        in: 'path',\n                    },\n                ],\n                responses: {\n                    200: {\n                        schema: { $ref: '#/definitions/Order' },\n                        headers: {},\n                        description: 'OK Requested Order will be returned',\n                    },\n                    304: {\n                        description:\n                            'Not Modified. Empty body because the client has already the latest'\n                            + ' version of the requested resource.',\n                    },\n                    404: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Found. Requested API does not exist.',\n                    },\n                    406: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Acceptable. The requested media type is not supported',\n                    },\n                },\n            },\n            delete: {\n                'x-auth-type': 'Application & Application User',\n                'x-throttling-tier': policyLevel,\n                description: 'Delete an existing Order',\n                parameters: [\n                    {\n                        description: 'Order Id',\n                        name: 'orderId',\n                        format: 'string',\n                        type: 'string',\n                        required: true,\n                        in: 'path',\n                    },\n                ],\n                responses: {\n                    200: {\n                        description: 'OK. Resource successfully deleted.',\n                    },\n                    404: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description: 'Not Found. Resource to be deleted does not exist.',\n                    },\n                    412: {\n                        schema: { $ref: '#/definitions/Error' },\n                        description:\n                            'Precondition Failed. The request has not been performed because one of the'\n                            + ' preconditions is not met.',\n                    },\n                },\n            },\n        },\n    },\n    schemes: ['https'],\n    produces: ['application/json'],\n    swagger: '2.0',\n    definitions: {\n        ErrorListItem: {\n            title: 'Description of individual errors that may have occurred during a request.',\n            properties: {\n                message: {\n                    description: 'Description about individual errors occurred',\n                    type: 'string',\n                },\n                code: { format: 'int64', type: 'integer' },\n            },\n            required: ['code', 'message'],\n        },\n        MenuItem: {\n            title: 'Pizza menu Item',\n            properties: {\n                price: { type: 'string' },\n                description: { type: 'string' },\n                name: { type: 'string' },\n                image: { type: 'string' },\n            },\n            required: ['name'],\n        },\n        Order: {\n            title: 'Pizza Order',\n            properties: {\n                customerName: { type: 'string' },\n                delivered: { type: 'boolean' },\n                address: { type: 'string' },\n                pizzaType: { type: 'string' },\n                creditCardNumber: { type: 'string' },\n                quantity: { type: 'number' },\n                orderId: { type: 'string' },\n            },\n            required: ['orderId'],\n        },\n        Error: {\n            title: 'Error object returned with 4XX HTTP status',\n            properties: {\n                message: {\n                    description: 'Error message.',\n                    type: 'string',\n                },\n                error: {\n                    items: { $ref: '#/definitions/ErrorListItem' },\n                    description:\n                        'If there are more than one error list them out. Ex. list out validation errors by each field.',\n                    type: 'array',\n                },\n                description: {\n                    description: 'A detail description about the error message.',\n                    type: 'string',\n                },\n                code: { format: 'int64', type: 'integer' },\n                moreInfo: {\n                    description: 'Preferably an url with more details about the error.',\n                    type: 'string',\n                },\n            },\n            required: ['code', 'message'],\n        },\n    },\n    consumes: ['application/json'],\n    info: {\n        title: 'PizzaShackAPI',\n        description: 'This is a RESTFul API for Pizza Shack online pizza delivery store.\\n',\n        license: {\n            name: 'Apache 2.0',\n            url: 'http://www.apache.org/licenses/LICENSE-2.0.html',\n        },\n        contact: {\n            email: 'architecture@pizzashack.com',\n            name: 'John Doe',\n            url: 'http://www.pizzashack.com',\n        },\n        version: '1.0.0',\n    },\n});\n\nexport default getSwagger;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Redirect from 'react-router-dom/Redirect';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport green from '@material-ui/core/colors/green';\nimport Create from '@material-ui/icons/Create';\nimport GetApp from '@material-ui/icons/GetApp';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport API from 'AppData/api';\nimport Alert from 'AppComponents/Shared/Alert';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport AuthManager from 'AppData/AuthManager';\nimport APICreateMenu from '../components/APICreateMenu';\nimport getSampleSwagger from './SamplePetStore.js';\n\nconst styles = (theme) => ({\n    buttonProgress: {\n        color: green[500],\n        position: 'relative',\n    },\n    headline: {\n        paddingTop: theme.spacing(1.25),\n        paddingLeft: theme.spacing(2.5),\n    },\n    head: {\n        paddingBottom: theme.spacing(2),\n        fontWeight: 200,\n    },\n    content: {\n        paddingBottom: theme.spacing(2),\n    },\n    buttonLeft: {\n        marginRight: theme.spacing(1),\n    },\n});\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nclass SampleAPI extends Component {\n    /**\n     *Creates an instance of SampleAPI.\n     * @param {Object} props @inheritdoc\n     * @memberof SampleAPI\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            published: false,\n            api: null,\n            deploying: false,\n        };\n        this.sampleApi = new API();\n        this.handleDeploySample = this.handleDeploySample.bind(this);\n        this.createSampleAPI = this.createSampleAPI.bind(this);\n    }\n\n    /**\n     *Handle onClick event for `Deploy Sample API` Button\n     * @memberof SampleAPI\n     */\n    handleDeploySample() {\n        const { intl } = this.props;\n        this.setState({ deploying: true });\n        const promisedSampleAPI = this.createSampleAPI();\n        const swaggerUpdatePromise = promisedSampleAPI.then((sampleAPI) => {\n            sampleAPI.updateSwagger(getSampleSwagger('Unlimited'));\n            return sampleAPI;\n        });\n        swaggerUpdatePromise.catch((error) => {\n            console.error(error);\n            Alert.error(error);\n        });\n        if (!AuthManager.isNotPublisher()) {\n            swaggerUpdatePromise.then((sampleAPI) => {\n                sampleAPI.publish()\n                    .then(() => {\n                        this.setState({ published: true, api: sampleAPI });\n                        Alert.info(intl.formatMessage({\n                            id: 'Apis.Listing.SampleAPI.SampleAPI.created',\n                            defaultMessage: 'Sample PizzaShackAPI API created successfully',\n                        }));\n                    })\n                    .catch((error) => {\n                        this.setState({ deploying: false });\n                        Alert.error(error);\n                    });\n            });\n        } else {\n            swaggerUpdatePromise.then((sampleApi) => {\n                this.setState({ published: true, api: sampleApi });\n                Alert.info(intl.formatMessage({\n                    id: 'Apis.Listing.SampleAPI.SampleAPI.created',\n                    defaultMessage: 'Sample PizzaShackAPI API created successfully',\n                }));\n            })\n                .catch((error) => {\n                    Alert.error(error);\n                });\n        }\n    }\n\n    /**\n     * Construct the sample API date and invoke API.create method to create API\n     * @returns {Promise} SwaggerJs client promise appending an error handler and mapping response.obj as resolved value\n     * @memberof SampleAPI\n     */\n    createSampleAPI() {\n        const data = {\n            name: 'PizzaShackAPI',\n            description: 'This is a simple API for Pizza Shack online pizza delivery store.',\n            context: '/pizzashack',\n            version: '1.0.0',\n            transport: ['http', 'https'],\n            tags: ['pizza'],\n            policies: ['Unlimited'],\n            securityScheme: ['oauth2'],\n            visibility: 'PUBLIC',\n            gatewayEnvironments: ['Production and Sandbox'],\n            businessInformation: {\n                businessOwner: 'Jane Roe',\n                businessOwnerEmail: 'marketing@pizzashack.com',\n                technicalOwner: 'John Doe',\n                technicalOwnerEmail: 'architecture@pizzashack.com',\n            },\n            endpointConfig: {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: 'https://localhost:9443/am/sample/pizzashack/v1/api/',\n                },\n                production_endpoints: {\n                    url: 'https://localhost:9443/am/sample/pizzashack/v1/api/',\n                },\n            },\n            operations: [\n                {\n                    target: '/order/{orderId}',\n                    verb: 'GET',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/order/{orderId}',\n                    verb: 'DELETE',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/order/{orderId}',\n                    verb: 'PUT',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/menu',\n                    verb: 'GET',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n                {\n                    target: '/order',\n                    verb: 'POST',\n                    throttlingPolicy: 'Unlimited',\n                    authType: 'Application & Application User',\n                },\n            ],\n        };\n\n        const sampleAPI = new API(data);\n        return sampleAPI.save().catch((error) => {\n            console.error(error);\n            this.setState({ deploying: false });\n            const { response } = error;\n            if (response) {\n                const { code, description, message } = response.body;\n                Alert.error(`ERROR[${code}] : ${description} | ${message}`);\n            } else {\n                Alert.error(error);\n            }\n        });\n    }\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof SampleAPI\n     */\n    render() {\n        const { published, api, deploying } = this.state;\n        const { classes } = this.props;\n\n        if (published && api) {\n            const url = '/apis/' + api.id + '/overview';\n            return <Redirect to={url} />;\n        }\n        return (\n            <InlineMessage type='info' height={140}>\n                <div className={classes.contentWrapper}>\n                    <Typography variant='h5' component='h3' className={classes.head}>\n                        <FormattedMessage\n                            id='welcome.to.wso2.api.manager'\n                            defaultMessage='Welcome to WSO2 API Manager'\n                        />\n                    </Typography>\n                    <Typography component='p' className={classes.content}>\n                        <FormattedMessage\n                            id='Apis.Listing.SampleAPI.SampleAPI.description'\n                            defaultMessage={\n                                'WSO2 API Publisher enables API providers to'\n                                + ' publish APIs, share documentation, provision API keys and gather feedback'\n                                + ' on features, quality and usage. To get started, Create an API'\n                                + ' or Publish a sample API.'\n                            }\n                        />\n                    </Typography>\n                    <div className={classes.actions}>\n                        <APICreateMenu buttonProps={{\n                            size: 'small',\n                            color: 'primary',\n                            variant: 'contained',\n                            className: classes.buttonLeft,\n                        }}\n                        >\n                            <Create />\n                            <FormattedMessage id='create.new.api' defaultMessage='Create New API' />\n                        </APICreateMenu>\n                        {!AuthManager.isNotCreator()\n                            && (\n                                <Button\n                                    size='small'\n                                    color='primary'\n                                    disabled={deploying}\n                                    variant='contained'\n                                    onClick={this.handleDeploySample}\n                                >\n                                    <GetApp />\n                                    <FormattedMessage id='deploy.sample.api' defaultMessage='Deploy Sample API' />\n                                    {deploying && <CircularProgress size={24} className={classes.buttonProgress} />}\n                                </Button>\n                            )}\n                    </div>\n                </div>\n            </InlineMessage>\n        );\n    }\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(SampleAPI));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/icons/List';\nimport GridOn from '@material-ui/icons/GridOn';\nimport { withStyles } from '@material-ui/core/styles';\nimport { FormattedMessage } from 'react-intl';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport APICreateMenu from './APICreateMenu';\n\nconst styles = (theme) => ({\n    rightIcon: {\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        margin: theme.spacing(1),\n        marginBottom: 0,\n    },\n    buttonRight: {\n        display: 'flex',\n    },\n    ListingWrapper: {\n        paddingTop: 10,\n        paddingLeft: 35,\n    },\n    root: {\n        height: 70,\n        background: theme.palette.background.paper,\n        borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        display: 'flex',\n    },\n    mainIconWrapper: {\n        paddingTop: 13,\n        paddingLeft: 35,\n        paddingRight: 20,\n    },\n    mainTitleWrapper: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n    APICreateMenu: {\n        flexGrow: 1,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    content: {\n        flexGrow: 1,\n    },\n    createButton: {\n        color: '#000000',\n        background: '#15b8cf',\n    },\n});\n\n/**\n *\n * @param props\n * @returns {*}\n */\nfunction getTitleForArtifactType(props) {\n    const {\n        isAPIProduct, query,\n    } = props;\n    if (query) {\n        return (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.search.results' defaultMessage='Search Result(s)' />\n        );\n    } else if (isAPIProduct) {\n        return (\n            <FormattedMessage\n                id='Apis.Listing.components.TopMenu.apiproduct(s)'\n                defaultMessage='API Product(s)'\n            />\n        );\n    } else {\n        return (\n            <FormattedMessage id='Apis.Listing.components.TopMenu.api(s)' defaultMessage='API(s)' />\n        );\n    }\n}\n\n/**\n *\n * Renders the top menu\n * @param {*} props\n * @returns JSX\n */\nfunction TopMenu(props) {\n    const {\n        classes, data, setListType, theme, count, isAPIProduct, listType, showToggle,\n    } = props;\n    const strokeColorMain = theme.palette.getContrastText(theme.palette.background.paper);\n\n    if (count > 0) {\n        return (\n            <div className={classes.root}>\n                <div className={classes.mainIconWrapper}>\n                    <CustomIcon strokeColor={strokeColorMain} width={42} height={42} icon='api' />\n                </div>\n                <div className={classes.mainTitleWrapper}>\n                    {data && (\n                        <>\n                            <Typography variant='h5' className={classes.mainTitle} component='div'>\n                                {isAPIProduct ? (\n                                    <FormattedMessage\n                                        id='Apis.Listing.components.TopMenu.apiproducts'\n                                        defaultMessage='API Products'\n                                    />\n                                ) : (\n                                    <FormattedMessage id='Apis.Listing.components.TopMenu.apis' defaultMessage='APIs' />\n                                )}\n                            </Typography>\n                            <Typography variant='caption' gutterBottom align='left' component='div'>\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.displaying'\n                                    defaultMessage='Displaying'\n                                />\n                                {' '}\n                                {' '}\n                                {count}\n                                {' '}\n                                {' '}\n                                {getTitleForArtifactType(props)}\n                            </Typography>\n                        </>\n                    )}\n                </div>\n                <VerticalDivider height={70} />\n                <div className={classes.APICreateMenu}>\n                    {isAPIProduct ? (\n                        <Link to='/api-products/create'>\n                            <Button variant='contained' className={classes.createButton}>\n                                <FormattedMessage\n                                    id='Apis.Listing.components.TopMenu.create.an.api.product'\n                                    defaultMessage='Create an API Product'\n                                />\n                            </Button>\n                        </Link>\n                    ) : (\n                        <APICreateMenu buttonProps={{\n                            variant: 'contained',\n                            color: 'primary',\n                            className: classes.button,\n                        }}\n                        >\n                            <FormattedMessage\n                                id='Apis.Listing.components.TopMenu.create.api'\n                                defaultMessage='Create API'\n                            />\n                        </APICreateMenu>\n                    )}\n                </div>\n                {showToggle && (\n                    <div className={classes.buttonRight}>\n                        <IconButton\n                            className={classes.button}\n                            disabled={data.length === 0}\n                            onClick={() => setListType('list')}\n                        >\n                            <List color={listType === 'list' ? 'primary' : 'default'} />\n                        </IconButton>\n                        <IconButton\n                            className={classes.button}\n                            disabled={data.length === 0}\n                            onClick={() => setListType('grid')}\n                        >\n                            <GridOn color={listType === 'grid' ? 'primary' : 'default'} />\n                        </IconButton>\n                    </div>\n                )}\n            </div>\n        );\n    } else {\n        return null;\n    }\n}\n\nTopMenu.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    setListType: PropTypes.func.isRequired,\n    listType: PropTypes.string.isRequired,\n    data: PropTypes.shape({ length: PropTypes.number }).isRequired,\n    count: PropTypes.number.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.string,\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    showToggle: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(TopMenu);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { PropTypes } from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Create from '@material-ui/icons/Create';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport AuthManager from 'AppData/AuthManager';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\n\n\nconst useStyles = makeStyles((theme) => ({\n    head: {\n        paddingBottom: theme.spacing(2),\n        fontWeight: 200,\n    },\n    content: {\n        paddingBottom: theme.spacing(2),\n    },\n}));\n\n/**\n * Show Initial Welcome card if no APIs are available to list\n * Handle deploying a sample API (Create and Publish)\n *\n * @class SampleAPI\n * @extends {Component}\n */\nfunction SampleAPI() {\n    const classes = useStyles();\n\n    /**\n     *\n     * @inheritdoc\n     * @returns {React.Component} @inheritdoc\n     * @memberof SampleAPI\n     */\n\n    return (\n        <InlineMessage type='info' height={140}>\n            <div className={classes.contentWrapper}>\n                <Typography variant='h5' component='h3' className={classes.head}>\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPIProduct.manager'\n                        defaultMessage='Welcome to WSO2 API Manager'\n                    />\n                </Typography>\n                <Typography component='p' className={classes.content}>\n                    <FormattedMessage\n                        id='Apis.Listing.SampleAPIProduct.description'\n                        defaultMessage={\n                            'The API resources in an API product can come from'\n                            + ' one or more APIs, so you can mix and match resources from multiple'\n                            + ' API resources to create specialized feature sets.'\n                        }\n                    />\n                </Typography>\n                {!AuthManager.isNotPublisher() && (\n                    <div className={classes.actions}>\n                        <Link id='itest-id-createdefault' to='/api-products/create' className={classes.links}>\n                            <Button\n                                size='small'\n                                color='primary'\n                                variant='contained'\n                                className='rightAlign'\n                            >\n\n                                <Create />\n                                <FormattedMessage\n                                    id='Apis.Listing.SampleAPI.SampleAPIProduct.create.new.api.product'\n                                    defaultMessage='Create New API Product'\n                                />\n                            </Button>\n                        </Link>\n                    </div>\n                )}\n            </div>\n        </InlineMessage>\n    );\n}\n\nSampleAPI.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default withRouter(injectIntl(SampleAPI));\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { createMuiTheme, MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport queryString from 'query-string';\nimport API from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Icon from '@material-ui/core/Icon';\nimport ApiThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/ApiThumb';\nimport DocThumb from 'AppComponents/Apis/Listing/components/ImageGenerator/DocThumb';\nimport { Progress } from 'AppComponents/Shared';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport SampleAPI from 'AppComponents/Apis/Listing/SampleAPI/SampleAPI';\nimport TopMenu from 'AppComponents/Apis/Listing/components/TopMenu';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport SampleAPIProduct from 'AppComponents/Apis/Listing/SampleAPI/SampleAPIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\n\nconst styles = (theme) => ({\n    contentInside: {\n        padding: theme.spacing(3),\n        paddingTop: theme.spacing(2),\n        '& > div[class^=\"MuiPaper-root-\"]': {\n            boxShadow: 'none',\n            backgroundColor: 'transparent',\n        },\n    },\n    apiNameLink: {\n        display: 'flex',\n        alignItems: 'center',\n        '& span': {\n            marginLeft: theme.spacing(1),\n        },\n    },\n});\n\n/**\n * Table view for api listing\n *\n * @class ApiTableView\n * @extends {React.Component}\n */\nclass TableView extends React.Component {\n    /**\n     * @inheritdoc\n     * @param {*} props properties\n     * @memberof ApiTableView\n     */\n    constructor(props) {\n        super(props);\n        let { defaultApiView } = props.theme.custom;\n        this.showToggle = true;\n        if (typeof defaultApiView === 'object' && defaultApiView.length > 0) {\n            if (defaultApiView.length === 1) { // We will disable toggle buttons\n                this.showToggle = false;\n            }\n            defaultApiView = defaultApiView[defaultApiView.length - 1];\n        }\n        this.state = {\n            apisAndApiProducts: null,\n            notFound: true,\n            displayCount: 0,\n            listType: defaultApiView,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = 10;\n        this.getLocalStorage();\n        this.setListType = this.setListType.bind(this);\n        this.updateData = this.updateData.bind(this);\n    }\n\n    componentDidMount() {\n        this.getLocalStorage();\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { isAPIProduct, query } = this.props;\n        if (isAPIProduct !== prevProps.isAPIProduct || query !== prevProps.query) {\n            this.getLocalStorage();\n            this.getData();\n        }\n    }\n\n    componentWillUnmount() {\n        // The foollowing is resetting the styles for the mui-datatables\n        const { theme } = this.props;\n        const themeAdditions = {\n            overrides: {\n                MUIDataTable: {\n                    tableRoot: {\n                        display: 'table',\n                        '& tbody': {\n                            display: 'table-row-group',\n                        },\n                        '& thead': {\n                            display: 'table-header-group',\n                        },\n                    },\n                },\n            },\n        };\n        Object.assign(theme, themeAdditions);\n    }\n\n    getMuiTheme = () => {\n        const { listType } = this.state;\n        const { theme } = this.props;\n        let themeAdditions = {};\n        let muiTheme = {\n            overrides: {\n                MUIDataTable: {\n                    root: {\n                        backgroundColor: 'transparent',\n                        marginLeft: 40,\n                    },\n                    paper: {\n                        boxShadow: 'none',\n                        backgroundColor: 'transparent',\n                    },\n                    tableRoot: {\n                        '& tbody': {\n                            backgroundColor: '#fff',\n                        },\n                    },\n                },\n                MUIDataTableBodyCell: {\n                    root: {\n                        backgroundColor: 'transparent',\n                    },\n                },\n            },\n        };\n        if (listType === 'grid') {\n            themeAdditions = {\n                overrides: {\n                    MUIDataTable: {\n                        tableRoot: {\n                            display: 'block',\n                            '& tbody': {\n                                display: 'flex',\n                                flexWrap: 'wrap',\n                                backgroundColor: 'transparent',\n                            },\n                            '& thead': {\n                                display: 'none',\n                            },\n                        },\n                    },\n                },\n            };\n        }\n        muiTheme = Object.assign(theme, muiTheme, themeAdditions);\n        return createMuiTheme(muiTheme);\n    };\n\n    // get apisAndApiProducts\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest().then((data) => {\n            const { body } = data;\n            const { list, pagination, count } = body;\n            const { total } = pagination;\n            // When there is a count stored in the localstorage and it's greater than 0\n            // We check if the response in the rest api callls have 0 items.\n            // We remove the local storage and redo the api call\n            if (this.count > 0 && total === 0) {\n                this.page = 0;\n                this.removeLocalStorage();\n                this.getData();\n            }\n            this.count = total;\n            this.setState({ apisAndApiProducts: list, notFound: false, displayCount: count });\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        }).finally(() => {\n            this.setState({ loading: false });\n        });\n    };\n\n    removeLocalStorage = () => {\n        const { isAPIProduct } = this.props;\n        const paginationSufix = isAPIProduct ? 'products' : 'apis';\n        window.localStorage.removeItem('pagination-' + paginationSufix);\n    }\n\n    getLocalStorage = () => {\n        const { isAPIProduct } = this.props;\n        const paginationSufix = isAPIProduct ? 'products' : 'apis';\n        const storedPagination = window.localStorage.getItem('pagination-' + paginationSufix);\n        if (storedPagination) {\n            const pagination = JSON.parse(storedPagination);\n            if (pagination.page && pagination.count && pagination.rowsPerPage) {\n                this.page = pagination.page;\n                this.count = pagination.count;\n                this.rowsPerPage = pagination.rowsPerPage;\n            }\n        }\n    };\n\n    /**\n     *\n     * Switch the view between grid and list view\n     * @param {String} value UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    setListType = (value) => {\n        this.setState({ listType: value });\n    };\n\n    setLocalStorage = () => {\n        // Set the page to the localstorage\n        const { isAPIProduct } = this.props;\n        const paginationSufix = isAPIProduct ? 'products' : 'apis';\n        const pagination = { page: this.page, count: this.count, rowsPerPage: this.rowsPerPage };\n        window.localStorage.setItem('pagination-' + paginationSufix, JSON.stringify(pagination));\n    };\n\n    changePage = (page) => {\n        this.page = page;\n        const { intl } = this.props;\n        this.setState({ loading: true });\n        this.xhrRequest().then((data) => {\n            const { body } = data;\n            const { list, count } = body;\n            this.setState({\n                apisAndApiProducts: list,\n                notFound: false,\n                displayCount: count,\n            });\n            this.setLocalStorage();\n        }).catch(() => {\n            Alert.error(intl.formatMessage({\n                defaultMessage: 'Error While Loading APIs',\n                id: 'Apis.Listing.TableView.TableView.error.loading',\n            }));\n        })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { page, rowsPerPage } = this;\n        const { isAPIProduct, query } = this.props;\n        if (query) {\n            const composeQuery = queryString.parse(query);\n            composeQuery.limit = this.rowsPerPage;\n            composeQuery.offset = page * rowsPerPage;\n            return API.search(composeQuery);\n        }\n        if (isAPIProduct) {\n            return APIProduct.all({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return API.all({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    /**\n     *\n     * Update APIs list if an API get deleted in card or table view\n     * @param {String} apiUUID UUID(ID) of the deleted API\n     * @memberof Listing\n     */\n    updateData() {\n        const { page, rowsPerPage, count } = this;\n        if (count - 1 === rowsPerPage * page && page !== 0) {\n            this.page = page - 1;\n        }\n        this.getData();\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof TableView\n     */\n    render() {\n        const {\n            intl, isAPIProduct, classes, query,\n        } = this.props;\n        const { loading } = this.state;\n        const columns = [\n            {\n                name: 'id',\n                options: {\n                    display: 'excluded',\n                    filter: false,\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.name',\n                    defaultMessage: 'Name',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue, tableViewObj = this) => {\n                        if (tableMeta.rowData) {\n                            const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                            const artifact = tableViewObj.state.apisAndApiProducts[tableMeta.rowIndex];\n                            const apiName = tableMeta.rowData[1];\n                            const apiId = tableMeta.rowData[0];\n                            if (isAPIProduct) {\n                                return (\n                                    <Link to={'/api-products/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api-product' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                            if (artifact) {\n                                if (artifact.type === 'DOC') {\n                                    return (\n                                        <Link\n                                            to={'/apis/' + artifact.apiUUID + '/documents/' + apiId + '/details'}\n                                            className={classes.apiNameLink}\n                                        >\n                                            <Icon>library_books</Icon>\n                                            <FormattedMessage\n                                                id='Apis.Listing.TableView.TableView.doc.flag'\n                                                defaultMessage=' [Doc]'\n                                            />\n                                            <span>{apiName}</span>\n                                        </Link>\n                                    );\n                                }\n                                return (\n                                    <Link to={'/apis/' + apiId + '/overview'} className={classes.apiNameLink}>\n                                        <CustomIcon width={16} height={16} icon='api' strokeColor='#444444' />\n                                        <span>{apiName}</span>\n                                    </Link>\n                                );\n                            }\n                        }\n                        return <span />;\n                    },\n                    sort: false,\n                    filter: false,\n                },\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.version',\n                    defaultMessage: 'Version',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'context',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.context',\n                    defaultMessage: 'Context',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n            {\n                name: 'provider',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.ApiTableView.provider',\n                    defaultMessage: 'Provider',\n                }),\n                options: {\n                    sort: false,\n                },\n            },\n        ];\n        const { page, count, rowsPerPage } = this;\n        const {\n            apisAndApiProducts, notFound, listType, displayCount,\n        } = this.state;\n        const options = {\n            filterType: 'dropdown',\n            responsive: 'stacked',\n            serverSide: true,\n            search: false,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                    default:\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                this.rowsPerPage = numberOfRows;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                } else if (count - 1 === rowsPerPage * page && page !== 0) {\n                    this.page = page - 1;\n                }\n                this.getData();\n                this.setLocalStorage();\n            },\n        };\n        if (listType === 'grid') {\n            options.customRowRender = (data, dataIndex, rowIndex, tableViewObj = this) => {\n                const { isAPIProduct } = tableViewObj.props; // eslint-disable-line no-shadow\n                const artifact = tableViewObj.state.apisAndApiProducts[dataIndex];\n                if (artifact) {\n                    if (artifact.type === 'DOC') {\n                        return <DocThumb doc={artifact} />;\n                    } else if (artifact.type === 'APIPRODUCT') {\n                        artifact.state = 'PUBLISHED';\n                        return <ApiThumb api={artifact} isAPIProduct updateData={tableViewObj.updateData} />;\n                    } else {\n                        return (\n                            <ApiThumb api={artifact} isAPIProduct={isAPIProduct} updateData={tableViewObj.updateData} />\n                        );\n                    }\n                }\n                return <span />;\n            };\n            options.title = false;\n            options.filter = false;\n            options.print = false;\n            options.download = false;\n            options.viewColumns = false;\n            options.customToolbar = false;\n        } else {\n            options.customRowRender = null;\n            options.title = true;\n            options.filter = false;\n            options.print = true;\n            options.download = true;\n            options.viewColumns = true;\n        }\n        if (loading || !apisAndApiProducts) {\n            return <Progress per={90} message='Loading APIs ...' />;\n        }\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        if (apisAndApiProducts.length === 0 && !query) {\n            return (\n                <>\n                    <TopMenu\n                        data={apisAndApiProducts}\n                        count={displayCount}\n                        setListType={this.setListType}\n                        isAPIProduct={isAPIProduct}\n                        listType={listType}\n                        showToggle={this.showToggle}\n                    />\n                    <div className={classes.contentInside}>\n                        {isAPIProduct ? (\n                            <SampleAPIProduct />\n                        ) : (\n                            <SampleAPI />\n                        )}\n                    </div>\n                </>\n            );\n        }\n\n        return (\n            <>\n                <TopMenu\n                    data={apisAndApiProducts}\n                    count={displayCount}\n                    setListType={this.setListType}\n                    isAPIProduct={isAPIProduct}\n                    listType={listType}\n                    showToggle={this.showToggle}\n                    query={query}\n                />\n                <div className={classes.contentInside}>\n                    <MuiThemeProvider theme={this.getMuiTheme()}>\n                        <MUIDataTable title='' data={apisAndApiProducts} columns={columns} options={options} />\n                    </MuiThemeProvider>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default injectIntl(withStyles(styles, { withTheme: true })(TableView));\n\nTableView.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func.isRequired }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.string,\n    }).isRequired,\n    query: PropTypes.string,\n};\n\nTableView.defaultProps = {\n    query: '',\n};\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n// TODO: DO we need this component ? this is a pure proxy just passing the props through this to children ? ~tmkb\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TableView from './TableView/TableView';\n\nconst styles = {\n    content: {\n        flexGrow: 1,\n    },\n};\n/**\n * Render the APIs Listing page, This is the Default Publisher Landing page as well\n *\n * @function Listing\n * @returns {React.Component} @inheritdoc\n */\nfunction Listing(props) {\n    const {\n        classes, isAPIProduct, theme, location: { search },\n    } = props;\n    return (\n        <main className={classes.content}>\n            <TableView isAPIProduct={isAPIProduct} theme={theme} query={search} />\n        </main>\n    );\n}\n\nListing.propTypes = {\n    classes: PropTypes.shape({\n        content: PropTypes.string,\n        contentInside: PropTypes.string,\n    }).isRequired,\n    theme: PropTypes.shape({\n        custom: PropTypes.string,\n    }).isRequired,\n    isAPIProduct: PropTypes.bool.isRequired,\n    location: PropTypes.shape({\n        search: PropTypes.string,\n    }),\n};\n\nListing.defaultProps = {\n    location: PropTypes.shape({\n        search: '',\n    }),\n};\n\nexport default withStyles(styles, { withTheme: true })(Listing);\n","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Suspense, lazy } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Progress from 'AppComponents/Shared/Progress';\nimport AuthManager from 'AppData/AuthManager';\n\nimport Listing from './Listing/Listing';\n\n/* if needs to pre fetch use 'webpackPrefetch: true' */\n\nconst Details = lazy(() => import('./Details/index' /* webpackChunkName: \"DeferredDetails\" */));\nconst DeferredDetails = (props) => (\n    <Suspense fallback={<Progress per={80} message='Loading Details component ...' />}>\n        <Details {...props} />\n    </Suspense>\n);\n\nconst APICreateRoutes = lazy(\n    () => import(/* webpackPrefetch: true */ './Create/APICreateRoutes' /* webpackChunkName: \"APICreateRoutes\" */),\n);\nconst DeferredAPICreateRoutes = (props) => (\n    <Suspense fallback={<Progress message='Loading API Create component ...' />}>\n        <APICreateRoutes {...props} />\n    </Suspense>\n);\n\n/**\n * Have used key={Date.now()} for `Route` element in `/apis` and `/api-products`\n */\nconst Apis = () => {\n    return (\n        <Switch>\n            <Route\n                exact\n                path='/apis'\n                key={Date.now()}\n                render={(props) => <Listing {...props} isAPIProduct={false} />}\n            />\n            <Route\n                exact\n                path='/api-products'\n                key={Date.now()}\n                render={(props) => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <Listing {...props} isAPIProduct />;\n                    }\n                }}\n            />\n            <Route path='/apis/search' render={(props) => <Listing {...props} isAPIProduct={false} />} />\n            <Route path='/apis/create' component={DeferredAPICreateRoutes} />\n            <Route\n                path='/api-products/create'\n                render={() => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <DeferredAPICreateRoutes />;\n                    }\n                }}\n            />\n            <Route path='/apis/:apiUUID/' render={(props) => <DeferredDetails {...props} isAPIProduct={false} />} />\n            <Route\n                path='/api-products/:apiProdUUID/'\n                render={(props) => {\n                    if (AuthManager.isNotPublisher()) {\n                        return <Redirect to='/apis' />;\n                    } else {\n                        return <DeferredDetails {...props} isAPIProduct />;\n                    }\n                }}\n            />\n        </Switch>\n    );\n};\n\nexport default Apis;\n","/**\n * Copyright (c) 2019, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable */\nimport API from 'AppData/api';\nimport APIClientFactory from './APIClientFactory';\nimport Utils from './Utils';\nimport Resource from './Resource';\n\n/**\n * An abstract representation of an API Product\n */\nclass APIProduct extends Resource {\n    constructor(name, context, kwargs) {\n        super();\n        let properties = kwargs;\n        if (name instanceof Object) {\n            properties = name;\n        } else {\n            this.name = name;\n            this.version = '1.0.0';\n            this.context = context;\n            this.isDefaultVersion = false;\n            this.gatewayEnvironments = ['Production and Sandbox'];\n            this.transport = ['http', 'https'];\n            this.visibility = 'PUBLIC';\n            this.endpointConfig = {\n                endpoint_type: 'http',\n                sandbox_endpoints: {\n                    url: '',\n                },\n                production_endpoints: {\n                    url: '',\n                },\n            };\n        }\n        this._data = properties;\n        for (const key in properties) {\n            if (Object.prototype.hasOwnProperty.call(properties, key)) {\n                this[key] = properties[key];\n            }\n        }\n        this.apiType = API.CONSTS.APIProduct;\n        this.getType = this.getType.bind(this);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {object} Metadata for API request\n     * @private\n     */\n    _requestMetaData() {\n        Resource._requestMetaData();\n    }\n\n    getType() {\n        return this.type;\n    }\n\n    getSettings() {\n        const promisedSettings = this.client.then(client => {\n            return client.apis['Settings'].get_settings();\n        });\n        return promisedSettings.then(response => response.body);\n    }\n\n    getMonetization(id, callback = null) {\n        const promiseMonetization = this.client.then(client => {\n            return client.apis['API Monetization'].get_apis__apiId__monetization(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseMonetization.then(response => response.body);\n    }\n\n    configureMonetizationToApiProduct(id, body) {\n        const promised_status = this.client.then(client => {\n            return client.apis['API Monetization'].post_apis__apiId__monetize({\n                apiId: id,\n                body,\n            });\n        });\n        return promised_status;\n    }\n\n    getSubscriptionPolicies(id, callback = null) {\n        const promisePolicies = this.client.then(client => {\n            return client.apis['APIs'].get_apis__apiId__subscription_policies(\n                {\n                    apiId: id,\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promisePolicies.then(response => response.body);\n    }\n\n    getMonetizationInvoice(id, callback = null) {\n        const promiseInvoice = this.client.then(client => {\n            return client.apis['API Monetization'].get_subscriptions__subscriptionId__usage(\n                {\n                    subscriptionId: id\n                },\n                this._requestMetaData(),\n            );\n        });\n        return promiseInvoice.then(response => response.body);\n    }\n\n    /**\n     * Create an API Product with the given parameters in template\n     * @param {Object} api_product_data - APIProduct data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating API Product\n     */\n    saveProduct() {\n        const promisedAPIResponse = this.client.then(client => {\n            const properties = client.spec.definitions.APIProduct.properties;\n            const data = {};\n\n            Object.keys(this).forEach(apiAttribute => {\n                if (apiAttribute in properties) {\n                    if (apiAttribute != 'apiType') {\n                        data[apiAttribute] = this[apiAttribute];\n                    }\n                }\n            });\n            const payload = {\n                body: data,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Products'].post_api_products(payload, this._requestMetaData());\n        });\n        return promisedAPIResponse.then(response => {\n            return new API(response.body);\n        });\n    }\n    /**\n     * Create an API Product with the given parameters in template and call the callback method given optional.\n     * @param {Object} apiData - API data which need to fill the placeholder values in the @get_template\n     * @returns {Promise} Promise after creating and optionally calling the callback method.\n     */\n    create(apiData) {\n        let payload;\n        let promise_create;\n\n        payload = {\n            body: apiData,\n            'Content-Type': 'application/json',\n        };\n        promise_create = this.client.then(client => {\n            return client.apis['API Products'].post_api_products(payload, this._requestMetaData());\n        });\n\n        return promise_create;\n    }\n    /**\n     *\n     * Instance method of the API class to provide raw JSON object\n     * which is API body friendly to use with REST api requests\n     * Use this method instead of accessing the private _data object for\n     * converting to a JSON representation of an API object.\n     * Note: This is shallow coping\n     * Basically this is the revers operation in constructor.\n     * This method simply iterate through all the object properties\n     * and copy their values to new object excluding the properties in excludes list.\n     * So use this method sparingly!!\n     * @memberof API\n     * @param {Array} [userExcludes=[]] List of properties that are need to be excluded from the generated JSON object\n     * @returns {JSON} JSON representation of the API\n     */\n    toJSON(resource = this, userExcludes = []) {\n        var copy = {},\n            excludes = ['_data', 'client', 'type', ...userExcludes];\n        for (var prop in resource) {\n            if (!excludes.includes(prop)) {\n                copy[prop] = resource[prop];\n            }\n        }\n        return copy;\n    }\n\n    /**\n     * Get details of a given APIProduct\n     * @param id {string} UUID of the api-product.\n     * @returns {promise} With given callback attached to the success chain else API invoke promise.\n     */\n    static get(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promisedAPIProduct = apiClient\n            .then(client => {\n                return client.apis['API Products'].get_api_products__apiProductId_(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedAPIProduct.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     *\n     * Static method for get all API Products for current environment user.\n     * @param {Object} params API Products filtering parameters i:e { \"name\": \"MyBank Product\"}\n     * @returns {Promise} promise object return from SwaggerClient-js\n     */\n    static all(params) {\n        let query = '';\n        if (params && 'query' in params) {\n            for (const [key, value] of Object.entries(params.query)) {\n                query += `${key}:${value},`;\n            }\n            params.query = query;\n        }\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        const promisedProducts = apiClient\n            .then(client => {\n                return client.apis['API Products'].get_api_products(params, Resource._requestMetaData());\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedProducts.then(response => {\n            response.obj.apiType = API.CONSTS.APIProduct;\n            return response;\n        });\n    }\n\n    /**\n     * Update an api Product via PUT HTTP method, Need to give the updated API Product object as the argument.\n     * @param apiProduct {Object} Updated API Product object(JSON) which needs to be updated\n     */\n    update(updatedProperties) {\n        const updatedAPI = { ...this.toJSON(), ...this.toJSON(updatedProperties) };\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: updatedAPI.id,\n                body: updatedAPI,\n            };\n            return client.apis['API Products'].put_api_products__apiProductId_(payload);\n        });\n        return promisedUpdate.then(response => {\n            return new APIProduct(response.body);\n        });\n    }\n\n    /**\n     * Get the thumnail of an API Product\n     *\n     * @param id {string} UUID of the api product\n     */\n    getAPIProductThumbnail(id) {\n        const promisedAPIThumbnail = this.client\n            .then(client => {\n                return client.apis['API Products'].get_api_products__apiProductId__thumbnail(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n        return promisedAPIThumbnail;\n    }\n\n    /**\n     * Add new thumbnail image to an API Product\n     *\n     * @param {String} id id of the API Product\n     * @param {File} imageFile thumbnail image to be uploaded\n     */\n    addAPIProductThumbnail(id, imageFile) {\n        const promisedAddAPIThumbnail = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    file: imageFile,\n                    'Content-Type': imageFile.type,\n                };\n                return client.apis['API Products'].put_api_products__apiProductId__thumbnail(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n\n        return promisedAddAPIThumbnail;\n    }\n\n    /**\n     *\n     * Delete an API Product given its UUID\n     * @static\n     * @param {String} id API Product UUID\n     */\n    static delete(id) {\n        const apiClient = new APIClientFactory().getAPIClient(Utils.getCurrentEnvironment()).client;\n        return apiClient\n            .then(client => {\n                return client.apis['API Products'].delete_api_products__apiProductId_(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n    }\n\n    /**\n     * Add document to API Product\n     * @param {*} id API Product ID to which the document should be attached\n     * @param {*} body\n     */\n    addDocument(id, body) {\n        const promisedAddDocument = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId: id,\n                    body,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis['API Product Documents'].post_api_products__apiProductId__documents(\n                    payload,\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedAddDocument;\n    }\n\n    /**\n     * Returns documents attached to a given API Product\n     *\n     * @param {String} id API Product UUID\n     */\n    getDocuments(id) {\n        const promisedDocuments = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].get_api_products__apiProductId__documents(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocuments;\n    }\n\n    /**\n     * Updates a product document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} body\n     */\n    updateDocument(productId, docId, body) {\n        const promisedUpdateDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                body,\n                documentId: docId,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents']\n                .put_api_products__apiProductId__documents__documentId_(payload, this._requestMetaData())\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdateDocument;\n    }\n\n    /**\n     * Get specified document attached to specified product\n     * @param {*} productId\n     * @param {*} docId\n     */\n    getDocument(productId, docId) {\n        const promisedDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].get_api_products__apiProductId__documents__documentId_(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocument;\n    }\n\n    /**\n     * Add inline content to a INLINE type document\n     * @param {*} apiProductId API Product ID\n     * @param {*} documentId Document ID\n     * @param {*} sourceType\n     * @param {*} inlineContent Content to be added to document\n     */\n    addInlineContentToDocument(apiProductId, documentId, sourceType, inlineContent) {\n        const promise = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId,\n                    sourceType,\n                    inlineContent,\n                    'Content-Type': 'application/json',\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].post_api_products__apiProductId__documents__documentId__content(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promise;\n    }\n\n    /**\n     * Get the inline content of a given document\n     * @param {*} apiProductId\n     * @param {*} docId\n     */\n    getInlineContentOfDocument(apiProductId, docId) {\n        const promisedDocContent = this.client\n            .then(client => {\n                const payload = {\n                    apiProductId,\n                    documentId: docId,\n                };\n                return client.apis[\n                    'API Product Documents'\n                ].get_api_products__apiProductId__documents__documentId__content(payload);\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promisedDocContent;\n    }\n\n    /**\n     * Delete specified document\n     * @param {*} productId\n     * @param {*} docId\n     */\n    deleteDocument(productId, docId) {\n        const promiseDeleteDocument = this.client\n            .then(client => {\n                return client.apis['API Product Documents'].delete_api_products__apiProductId__documents__documentId_(\n                    {\n                        apiProductId: productId,\n                        documentId: docId,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseDeleteDocument;\n    }\n\n    /**\n     * Add a File resource to a document\n     * @param {*} productId\n     * @param {*} docId\n     * @param {*} fileToDocument\n     */\n    addFileToDocument(productId, docId, fileToDocument) {\n        const promiseAddFileToDocument = this.client.then(client => {\n            const payload = {\n                apiProductId: productId,\n                documentId: docId,\n                file: fileToDocument,\n                'Content-Type': 'application/json',\n            };\n            return client.apis['API Product Documents'].post_api_products__apiProductId__documents__documentId__content(\n                payload,\n                this._requestMetaData({\n                    'Content-Type': 'multipart/form-data',\n                }),\n            );\n        });\n\n        return promiseAddFileToDocument;\n    }\n\n    /**\n     * Update an api swagger via PUT HTTP method\n     * @param {*} swagger\n     */\n    updateSwagger(swagger) {\n        const promisedUpdate = this.client.then(client => {\n            const payload = {\n                apiProductId: this.id,\n                apiDefinition: JSON.stringify(swagger),\n                'Content-Type': 'multipart/form-data',\n            };\n            return client.apis['API Products']\n                .put_api_products__apiProductId__swagger(\n                    payload,\n                    this._requestMetaData({\n                        'Content-Type': 'multipart/form-data',\n                    }),\n                )\n                .catch(error => {\n                    console.error(error);\n                });\n        });\n        return promisedUpdate.then(response => {\n            return this;\n        });\n    }\n\n    /**\n     * Get the swagger of an API Product\n     * @param id {String} UUID of the API Product in which the swagger is needed\n     */\n    getSwagger(id = this.id) {\n        const promiseGet = this.client\n            .then(client => {\n                return client.apis['API Products'].get_api_products__apiProductId__swagger(\n                    {\n                        apiProductId: id,\n                    },\n                    this._requestMetaData(),\n                );\n            })\n            .catch(error => {\n                console.error(error);\n            });\n        return promiseGet;\n    }\n}\n\nexport default APIProduct;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.9959.9959 0 00-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z\"\n}), 'Edit');\n\nexports.default = _default;","/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n/* TODO: Move this file to components/Shared/ location ~tmkb */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport APIClient from 'AppData/APIClient';\nimport AuthManager from 'AppData/AuthManager';\n\nconst resourcePath = {\n    APIS: '/apis',\n    API_PRODUCTS: '/api-products',\n    SINGLE_API: '/apis/{apiId}',\n    SINGLE_API_PRODUCT: '/api-products/{apiProductId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n};\n\nconst resourceMethod = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nexport default class ScopeValidation extends React.Component {\n    /**\n     *\n     * Get scope for resources\n     * @static\n     * @param {String} resourcePath\n     * @param {String} resourceMethod\n     * @returns Boolean\n     * @memberof AuthManager\n     */\n    static hasScopes(currentResourcePath, currentResourceMethod) {\n        const userScopes = AuthManager.getUser().scopes;\n        const validScope = APIClient.getScopeForResource(currentResourcePath, currentResourceMethod);\n        return validScope.then((scope) => {\n            return userScopes.includes(scope);\n        });\n    }\n\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const { resourcePath: currentResourcePath, resourceMethod: currentResourceMethod } = this.props;\n        const hasScope = ScopeValidation.hasScopes(currentResourcePath, currentResourceMethod);\n        hasScope.then((haveScope) => {\n            this.setState({ haveScope });\n        });\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        const { haveScope } = this.state;\n        if (haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport { ScopeValidation, resourceMethod, resourcePath };\n"],"sourceRoot":""}