{"version":3,"sources":["webpack:///./source/src/app/components/Apis/Details/Documents/TextEditor.jsx"],"names":["Transition","props","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_material_ui_core_Slide__WEBPACK_IMPORTED_MODULE_9__","_extends","direction","TextEditor","intl","apiType","showAtOnce","history","docId","api","isAPIProduct","useContext","APIContext","open","setOpen","useState","editorState","setEditorState","EditorState","createEmpty","isUpdating","setIsUpdating","toggleOpen","updateDoc","listingPath","concat","id","push","APIProduct","Api","getInlineContentOfDocument","then","doc","blocksFromHTML","convertFromHTML","text","state","ContentState","createFromBlockArray","contentBlocks","entityMap","createWithContent","catch","error","status","this","setState","apiNotFound","classes","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_5__","onClick","disabled","isRestricted","_material_ui_core_Icon__WEBPACK_IMPORTED_MODULE_10__","react_intl__WEBPACK_IMPORTED_MODULE_2__","defaultMessage","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_6__","fullScreen","onClose","TransitionComponent","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_11__","square","className","popupHeader","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_7__","color","aria-label","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_8__","variant","docName","button","restAPI","contentToSave","draftToHtml","convertToRaw","getCurrentContent","addInlineContentToDocument","response","Alert","info","obj","name","formatMessage","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_20__","size","splitWrapper","react_draft_wysiwyg__WEBPACK_IMPORTED_MODULE_13__","wrapperClassName","editorClassName","onEditorStateChange","newEditorState","propTypes","PropTypes","shape","isRequired","string","oneOf","CONSTS","API","bool","injectIntl","withRouter","withStyles","appBar","position","flex","display","flexDirection","alignItems","padding","height","marginLeft"],"mappings":"+gBAiEA,SAASA,EAAWC,GAChB,OAAOC,EAAAC,EAAAC,cAACC,EAAA,EAADC,EAAA,CAAOC,UAAU,MAASN,IAGrC,SAASO,EAAWP,GAChB,MAAMQ,KACFA,EADEC,QACIA,EADJC,WACaA,EADbC,QACyBA,EADzBC,MACkCA,GACpCZ,GACEa,IAAEA,EAAFC,aAAOA,GAAiBC,qBAAWC,MAElCC,EAAMC,GAAWC,mBAAST,IAE1BU,EAAaC,GAAkBF,mBAASG,cAAYC,gBACpDC,EAAYC,GAAiBN,oBAAS,GAKvCO,EAAa,KAGf,GAFKT,GAAMU,IAEPV,GAAQP,EAAY,CACpB,MACMkB,EAAW,IAAAC,OADCf,EAAe,eAAiB,OACjC,KAAAe,OAAoBhB,EAAIiB,GAAxB,cACjBnB,EAAQoB,KAAKH,GAEjBV,GAASD,IA2BPU,EAAY,MACEb,EAAe,IAAIkB,IAAe,IAAIC,KAE3BC,2BAA2BrB,EAAIiB,GAAIlB,GAEzDuB,KAAMC,IACH,MAAMC,EAAiBC,0BAAgBF,EAAIG,MACrCC,EAAQC,eAAaC,qBAAqBL,EAAeM,cAAeN,EAAeO,WAE7FvB,EAAeC,cAAYuB,kBAAkBL,MAEhDM,MAAOC,IAIJ,MAAMC,OAAEA,GAAWD,EACJ,MAAXC,GACAC,KAAKC,SAAS,CAAEC,aAAa,QAKvCC,QAAEA,GAAYpD,EACpB,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQC,QAAS5B,EAAY6B,SAAUC,YAAa,CAAC,kBAAmB,oBAAqB3C,IACzFZ,EAAAC,EAAAC,cAACsD,EAAA,EAAD,oBACAxD,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CAAkB5B,GAAG,iDAAiD6B,eAAe,kBAEzF1D,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAQC,YAAU,EAAC5C,KAAMA,EAAM6C,QAASpC,EAAYqC,oBAAqBhE,GACrEE,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAOC,QAAM,EAACC,UAAWd,EAAQe,aAC7BlE,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAYC,MAAM,UAAUf,QAAS5B,EAAY4C,aAAW,SACxDrE,EAAAC,EAAAC,cAACsD,EAAA,EAAD,eAEJxD,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAYC,QAAQ,KAAKN,UAAWd,EAAQqB,SACxCxE,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACI5B,GAAG,oDACH6B,eAAe,oBAChB,IAJP,IAKM3D,EAAMyE,QALZ,KAOAxE,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQa,UAAWd,EAAQsB,OAAQF,QAAQ,YAAYjB,SAAU/B,EAAY6C,MAAM,UAAUf,QAlErF,KACpB,MAAMqB,EAAU7D,EAAe,IAAIkB,IAAe,IAAIC,IACtDR,GAAc,GACd,MAAMmD,EAAgBC,IAAYC,uBAAa1D,EAAY2D,sBACxCJ,EAAQK,2BAA2BnE,EAAIiB,GAAIlB,EAAO,SAAUgE,GAE1EzC,KAAM8C,IACHC,IAAMC,KAAN,GAAAtD,OAAcoD,EAASG,IAAIC,KAA3B,KAAAxD,OAAmCrB,EAAK8E,cAAc,CAClDxD,GAAI,2DACJ6B,eAAgB,4BAEpBjC,IACAD,GAAc,KAEjBqB,MAAOC,IAIJmC,IAAMnC,MAAN,GAAAlB,OAAekB,EAAf,KAAAlB,OAAwBrB,EAAK8E,cAAc,CACvCxD,GAAI,yDACJ6B,eAAgB,qBAEpBlC,GAAc,OA6CNxB,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACI5B,GAAG,0DACH6B,eAAe,mBAElBnC,GAAcvB,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAkBC,KAAM,MAE3CvF,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAQa,UAAWd,EAAQsB,OAAQpB,QAAS5B,GACxCzB,EAAAC,EAAAC,cAACuD,EAAA,EAAD,CACI5B,GAAG,kDACH6B,eAAe,aAI3B1D,EAAAC,EAAAC,cAAA,OAAK+D,UAAWd,EAAQqC,cACpBxF,EAAAC,EAAAC,cAACuF,EAAA,OAAD,CACItE,YAAaA,EACbuE,iBAAiB,kBACjBC,gBAAgB,iBAChBC,oBAlGSC,IACzBzE,EAAeyE,SAyGvBvF,EAAWwF,UAAY,CACnB3C,QAAS4C,IAAUC,MAAM,IAAIC,WAC7BtF,MAAOoF,IAAUG,OAAOD,WACxBzF,QAASuF,IAAUI,MAAM,CAACnE,IAAIoE,OAAOC,IAAKrE,IAAIoE,OAAOrE,aAAakE,WAClE1F,KAAMwF,IAAUC,MAAM,IAAIC,WAC1BxF,WAAYsF,IAAUO,KAAKL,WAC3BrF,IAAKmF,IAAUC,MAAM,CACjBnE,GAAIkE,IAAUG,OACd1F,QAASuF,IAAUI,MAAM,CAACnE,IAAIoE,OAAOC,IAAKrE,IAAIoE,OAAOrE,eACtDkE,YAGQM,sBAAWC,qBAAWC,YA9JtB,CACXC,OAAQ,CACJC,SAAU,YAEdC,KAAM,CACFA,KAAM,GAEV1C,YAAa,CACT2C,QAAS,OACTC,cAAe,MACfC,WAAY,UAEhBvB,aAAc,CACVwB,QAAS,GAEbxC,QAAS,CACLuC,WAAY,SACZF,QAAS,QAEbpC,OAAQ,CACJwC,OAAQ,GACRC,WAAY,KAyIiBT,CAAmBnG","file":"ListingTextEditor.08d14518a7ceca527a10.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState, useContext } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Slide from '@material-ui/core/Slide';\nimport Icon from '@material-ui/core/Icon';\nimport Paper from '@material-ui/core/Paper';\nimport { EditorState, convertToRaw, ContentState, convertFromHTML } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport draftToHtml from 'draftjs-to-html';\nimport Api from 'AppData/api';\nimport APIProduct from 'AppData/APIProduct';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIContext from 'AppComponents/Apis/Details/components/ApiContext';\nimport { isRestricted } from 'AppData/AuthManager';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = {\n    appBar: {\n        position: 'relative',\n    },\n    flex: {\n        flex: 1,\n    },\n    popupHeader: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    splitWrapper: {\n        padding: 0,\n    },\n    docName: {\n        alignItems: 'center',\n        display: 'flex',\n    },\n    button: {\n        height: 30,\n        marginLeft: 30,\n    },\n};\n\nfunction Transition(props) {\n    return <Slide direction='up' {...props} />;\n}\n\nfunction TextEditor(props) {\n    const {\n        intl, apiType, showAtOnce, history, docId,\n    } = props;\n    const { api, isAPIProduct } = useContext(APIContext);\n\n    const [open, setOpen] = useState(showAtOnce);\n\n    const [editorState, setEditorState] = useState(EditorState.createEmpty());\n    const [isUpdating, setIsUpdating] = useState(false);\n\n    const onEditorStateChange = (newEditorState) => {\n        setEditorState(newEditorState);\n    };\n    const toggleOpen = () => {\n        if (!open) updateDoc();\n\n        if (open && showAtOnce) {\n            const urlPrefix = isAPIProduct ? 'api-products' : 'apis';\n            const listingPath = `/${urlPrefix}/${api.id}/documents`;\n            history.push(listingPath);\n        }\n        setOpen(!open);\n    };\n    const addContentToDoc = () => {\n        const restAPI = isAPIProduct ? new APIProduct() : new Api();\n        setIsUpdating(true);\n        const contentToSave = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n        const docPromise = restAPI.addInlineContentToDocument(api.id, docId, 'INLINE', contentToSave);\n        docPromise\n            .then((response) => {\n                Alert.info(`${response.obj.name} ${intl.formatMessage({\n                    id: 'Apis.Details.Documents.TextEditor.update.success.message',\n                    defaultMessage: 'updated successfully.',\n                })}`);\n                toggleOpen();\n                setIsUpdating(false);\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                Alert.error(`${error} ${intl.formatMessage({\n                    id: 'Apis.Details.Documents.TextEditor.update.error.message',\n                    defaultMessage: 'update failed.',\n                })}`);\n                setIsUpdating(false);\n            });\n    };\n    const updateDoc = () => {\n        const restAPI = isAPIProduct ? new APIProduct() : new Api();\n\n        const docPromise = restAPI.getInlineContentOfDocument(api.id, docId);\n        docPromise\n            .then((doc) => {\n                const blocksFromHTML = convertFromHTML(doc.text);\n                const state = ContentState.createFromBlockArray(blocksFromHTML.contentBlocks, blocksFromHTML.entityMap);\n\n                setEditorState(EditorState.createWithContent(state));\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ apiNotFound: true });\n                }\n            });\n    };\n\n    const { classes } = props;\n    return (\n        <div>\n            <Button onClick={toggleOpen} disabled={isRestricted(['apim:api_create', 'apim:api_publish'], api)}>\n                <Icon>description</Icon>\n                <FormattedMessage id='Apis.Details.Documents.TextEditor.edit.content' defaultMessage='Edit Content' />\n            </Button>\n            <Dialog fullScreen open={open} onClose={toggleOpen} TransitionComponent={Transition}>\n                <Paper square className={classes.popupHeader}>\n                    <IconButton color='inherit' onClick={toggleOpen} aria-label='Close'>\n                        <Icon>close</Icon>\n                    </IconButton>\n                    <Typography variant='h4' className={classes.docName}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.TextEditor.edit.content.of'\n                            defaultMessage='Edit Content of'\n                        />{' '}\n                        \"{props.docName}\"\n                    </Typography>\n                    <Button className={classes.button} variant='contained' disabled={isUpdating} color='primary' onClick={addContentToDoc}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.TextEditor.update.content.button'\n                            defaultMessage='Update Content'\n                        />\n                        {isUpdating && <CircularProgress size={24} />}\n                    </Button>\n                    <Button className={classes.button} onClick={toggleOpen}>\n                        <FormattedMessage\n                            id='Apis.Details.Documents.TextEditor.cancel.button'\n                            defaultMessage='Cancel'\n                        />\n                    </Button>\n                </Paper>\n                <div className={classes.splitWrapper}>\n                    <Editor\n                        editorState={editorState}\n                        wrapperClassName='draftjs-wrapper'\n                        editorClassName='draftjs-editor'\n                        onEditorStateChange={onEditorStateChange}\n                    />\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n\nTextEditor.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    docId: PropTypes.string.isRequired,\n    apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n    showAtOnce: PropTypes.bool.isRequired,\n    api: PropTypes.shape({\n        id: PropTypes.string,\n        apiType: PropTypes.oneOf([Api.CONSTS.API, Api.CONSTS.APIProduct]),\n    }).isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles)(TextEditor)));\n"],"sourceRoot":""}