{"version":3,"sources":["webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewToken.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewSecret.jsx","webpack:///./source/src/app/data/Validation.jsx","webpack:///./source/src/app/data/Subscription.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/Tokens.jsx","webpack:///./source/src/app/components/Apis/Listing/NoApi.jsx","webpack:///./source/src/app/components/Shared/LeftMenuItem.jsx","webpack:///./source/src/app/components/Applications/Listing/DeleteConfirmation.jsx","webpack:///./node_modules/@material-ui/icons/PlayForWork.js","webpack:///./source/src/app/components/Shared/AppsAndKeys/ImportExternalApp.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/AppConfiguration.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/KeyConfiguration.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewCurl.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ViewKeys.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/WaitingForApproval.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/TokenManagerSummary.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/TokenManager.jsx","webpack:///./node_modules/@material-ui/icons/Add.js","webpack:///./node_modules/@material-ui/icons/HighlightOff.js","webpack:///./source/src/app/components/Shared/ApiKey.jsx","webpack:///./source/src/app/components/Shared/ApiKeyRestriction.jsx","webpack:///./source/src/app/components/Shared/AppsAndKeys/ApiKeyManager.jsx","webpack:///./source/src/app/components/Apis/Listing/SubscriptionPolicySelect.jsx","webpack:///./source/src/app/components/Apis/Listing/APICardView.jsx","webpack:///./source/src/app/components/Applications/Details/Invoice.jsx","webpack:///./source/src/app/components/Applications/Details/SubscriptionTableData.jsx","webpack:///./source/src/app/components/Applications/Details/Subscriptions.jsx","webpack:///./source/src/app/components/Applications/Details/InfoBar.jsx","webpack:///./source/src/app/components/Applications/Details/Overview.jsx","webpack:///./source/src/app/components/Applications/Details/index.jsx","webpack:///./source/src/app/components/Shared/InlineMessage.jsx","webpack:///./source/src/app/components/Shared/ScopeValidation.jsx"],"names":["ViewToken","React","Component","tokenCopied","name","this","setState","that","elementName","setTimeout","getTokeScopesString","tokenScopes","join","render","classes","token","consumerSecret","props","state","className","root","secretWrapper","secret","type","variant","component","isOauth","id","defaultMessage","epWrapper","for","prodLabel","defaultValue","accessToken","multiline","fullWidth","rows","InputProps","disableUnderline","bootstrapRoot","input","bootstrapInput","InputLabelProps","shrink","bootstrapFormLabel","title","placement","text","onCopy","aria-label","color","validityTime","defaultProps","propTypes","PropTypes","shape","isRequired","string","number","array","withStyles","theme","padding","marginTop","spacing","flex","marginRight","borderRadius","backgroundColor","custom","apiDetailPages","tokenTextBoxBackground","palette","getContrastText","border","height","width","transition","transitions","create","fontFamily","borderColor","boxShadow","display","marginBottom","lineHeight","whiteSpace","contentWrapper","maxWidth","contentAreaWidth","leftMenu","background","paper","ViewSecret","secretCopied","common","white","definition","Joi","integer","url","uri","allow","ipAddress","ip","version","cidr","Subscription","Resource","constructor","super","client","APIClientFactory","getAPIClient","Utils","getEnvironment","label","getSubscriptions","apiId","applicationId","limit","then","apis","get_subscriptions","getSubscription","subscriptionUUID","get_subscriptions__subscriptionId_","subscriptionId","getMonetizationInvoice","get_subscriptions__subscriptionId__usage","deleteSubscription","delete_subscriptions__subscriptionId_","updateSubscription","throttlingPolicy","status","requestedThrottlingPolicy","subscriptionData","payload","body","Subscriptions","put_subscriptions__subscriptionId_","MenuProps","PaperProps","style","maxHeight","tokens","handleChange","field","event","accessTokenRequest","updateAccessTokenRequest","newRequest","target","currentTarget","scopesSelected","value","keyType","subscriptionScopes","margin","FormControlOdd","disabled","length","htmlFor","quotaHelp","multiple","onChange","e","renderValue","selected","chips","map","key","chip","scope","contextTypes","intl","FormControl","position","flexWrap","useStyles","makeStyles","flexGrow","messageWrapper","textAlign","secondary","NoApi","useTheme","container","item","xs","alt","src","app","context","noApiImage","gutterBottom","LeftMenuItem","setSelected","useState","Icon","to","history","route","submenu","open","routeToCheck","strokeColor","iconSize","ditectCurrentMenu","location","window","pathname","test1","RegExp","test2","match","useEffect","listen","activeBackground","leftMenuActive","leftMenuActiveSubmenu","classNames","leftLInk","leftLink_IconLeft","cloneElement","leftLink_Icon","noIcon","icon","iconText","leftLInkText","leftLInkText_IconLeft","leftLInkText_NoText","element","oneOfType","bool","withRouter","textTransform","overflow","textOverflow","paddingLeft","LeftMenu","typography","bottom","left","top","paddingTop","paddingBottom","paddingRight","fontSize","caption","cursor","textDecoration","alignItems","justifyContent","withTheme","DeleteConfirmation","handleAppDelete","isDeleteOpen","toggleDeleteConfirmation","Slide","role","dense","onClick","size","func","_interopRequireDefault","Object","defineProperty","exports","default","_react","_default","createElement","d","ImportExternalApp","consumerKey","isUserOwner","provideOAuthKeySecret","useIntl","setOpen","handleClose","Button","startIcon","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","Grid","direction","TextField","formatMessage","FormHelperText","DialogActions","ScopeValidation","resourcePath","resourcePaths","APPLICATION_GENERATE_KEYS","resourceMethod","resourceMethods","POST","Typography","AppConfiguration","config","previousValue","selectedValue","setSelectedValue","handleAppRequestChange","TableRow","TableCell","leftCol","Box","removeHelperPadding","select","helperText","tooltip","values","MenuItem","formControl","InputLabel","Select","labelId","displayEmpty","Input","Chip","Checkbox","checked","indexOf","ListItemText","primary","notFound","instanceOf","any","injectIntl","button","marginLeft","checkboxWrapper","checkboxWrapperColumn","flexDirection","group","KeyConfiguration","urlCopied","setUrlCopied","keyManagerConfig","validating","updateKeyRequest","keyRequest","selectedGrantTypes","callbackUrl","applicationConfiguration","availableGrantTypes","description","additionalProperties","enableMapOAuthConsumerApps","enableOAuthAppCreation","enableTokenEncryption","enableTokenGeneration","revokeEndpoint","tokenEndpoint","userInfoEndpoint","callBackHasErrors","includes","Validation","validate","error","cloneDeep","newGrantTypes","keyManager","filter","clonedAdditionalProperties","getPreviousValue","isPreviousValueSet","ResourceNotFound","grantTypeDisplayListMap","grantTypes","grantTypeDisplayNameMap","modifiedGrantTypes","forEach","grantType","getGrantTypeDisplayList","Settings","propPrefix","toLowerCase","Table","table","TableBody","Tooltip","iconStyle","IconButton","iconButton","keys","FormControlLabel","control","placeholder","isKeysAvailable","setGenerateEnabled","titleColumn","fontWeight","keyInfoTable","borderCollapse","borderBottom","code","grey","command","encodeVisible","ViewCurl","bas64Encoded","btoa","showReal","setShowReal","setTokenCopied","applyReal","Fragment","ViewKeys","data","preventDefault","showToken","keyMappingId","selectedTab","applicationPromise","application","regenerateSecret","response","console","log","showSecretGen","secretGenResponse","catch","showCurl","isKeyJWT","isUpdating","generateToken","timeout","tokenResponse","tokenValidityTime","Alert1","Alert","message","selectedApp","hashEnabled","keyCopied","showCS","copyWrapper","readOnly","endAdornment","InputAdornment","handleSecretRegenerate","handleShowHidden","onMouseDown","handleMouseDownGeneric","appId","Application","get","componentDidMount","getKeys","componentDidUpdate","prevProps","fullScreen","tokenType","summary","Loading","csCkKeys","accessTokenScopes","validityPeriod","tokenDetails","dialogHead","viewKeyAndSecret","inputWrapper","dialogWrapper","DialogContentText","Tokens","CircularProgress","generateAccessToken","autoFocus","tokenSection","find","a","handleClickOpen","handleClickOpenCurl","keyState","states","REJECTED","noKeysRoot","backgroundImage","overviewPage","keysBackground","backgroundPosition","backgroundRepeat","backgroundSize","minHeight","TokenManagerSummary","keyStates","emptyBox","CREATED","WaitingForApproval","keyGrantTypes","supportedGrantTypes","TabPanel","children","index","other","hidden","p","node","StyledTabs","indicator","flexContainer","borderLeft","Tabs","TabIndicatorProps","StyledTab","fontWeightRegular","pxToRem","opacity","borderRight","Tab","disableRipple","TokenManager","newSelectedTab","keyManagers","selectedKM","x","getDefaultAdditionalProperties","promisedKeyManagers","API","getKeyManagers","promisedGetKeys","Promise","all","responseKeyManagerList","list","enabled","push","selectdKM","selectdKMGrants","str","replace","txt","charAt","toUpperCase","substr","isLoading","scopes","providedConsumerKey","providedConsumerSecret","COMPLETED","APPROVED","bind","generateKeys","updateKeys","cleanUpKeys","handleOnChangeProvidedOAuth","loadApplication","nextProps","nextKeyType","prevKeyType","confItem","updateSubscriptionData","setValidating","newKeys","Map","set","info","finally","applicationKey","provideKeys","getKeyManagerDescription","selectedKMObject","validatingState","mb","keyTitle","toTitleCase","InlineMessage","dialogContainer","username","AuthManager","getUser","owner","Progress","cleanUpInfoText","cleanUpButton","indicatorColor","textColor","handleTabChange","keymanager","displayName","tabPanel","heading","subTitle","ml","m","enableTokenHashing","generateWrapper","warningIcon","kmName","main","keyConfigWrapper","muiFormGroupRoot","infiniteValidity","setInfiniteValidity","invalidTimeout","setInvaildTimeout","undefined","required","inputText","apiKeyRestrictions","invalidIP","setInvalidIP","invalidReferer","setInvalidReferer","newIP","updateNewIp","ipList","updateIpList","restrictSchema","updateRestrictSchema","newReferer","updateNewReferer","refererList","updateRefererList","outterBox","RadioGroup","row","Radio","labelPlacement","justify","md","trim","Fab","List","ListItem","ListItemSecondaryAction","edge","ipItem","splice","deleteIpItem","referer","refererItem","deleteRefererItem","ApiKeyManager","isGenerating","restrictions","permittedIP","permittedReferer","generateApiKey","apikey","ApiKeyRestriction","FormGroup","formGroup","generateKey","formLabel","dialog","dialogTitle","dialogContent","ApiKey","Card","CardContent","cardBody","linebreak","ip1","ip2","ip3","ip4","url1","url2","url3","gridWrapper","SubscriptionPolicySelect","selectedPolicy","policies","handleSubscribe","policy","SUBSCRIPTIONS","buttonGap","object","APICardView","xhrRequest","pagination","total","count","updateUnsubscribedAPIsList","setTenantDomain","loading","searchText","page","rowsPerPage","api","getAllAPIs","query","offset","pageType","getData","subscriptions","getIdsOfSubscribedEntities","sub","Boolean","subscribedIds","i","advertiseInfo","advertised","isSubscriptionAvailable","throttlingPolicies","apisNotFound","columns","options","customBodyRender","tableMeta","updateValue","rowData","search","print","download","viewColumns","customToolbar","responsive","serverSide","onTableChange","action","tableState","changePage","selectableRows","onChangeRowsPerPage","numberOfRows","filterType","sort","selectableRowsHeader","Invoice","isMonetizedAPI","isDynamicUsagePolicy","showPopup","setShowPopup","showErrorPopup","setShowErrorPopup","invoice","setInvoice","handleAlertClose","obj","invoiceData","properties","invoiveItem","insideArray","SubscriptionTableData","openMenu","openMenuEdit","tiers","selectedTier","handleRequestClose","handleRequestOpen","handleRequestDelete","checkIfDynamicUsagePolicy","checkIfMonetizedAPI","populateSubscriptionTiers","handleSubscriptionTierUpdate","handleRequestCloseEditMenu","handleRequestOpenEditMenu","setSelectedTier","handleSubscriptionDelete","currentThrottlingPolicy","handleSubscriptionUpdate","apiUUID","Api","getAPIById","apiTiers","JSON","parse","tierName","policyName","apiData","monetization","getTierByName","policyResponse","policyData","monetizationAttributes","billingType","subscription","apiInfo","link","hover","lifeCycleStatus","tier","SINGLE_SUBSCRIPTION","DELETE","unsubscribedAPIList","subscriptionsNotFound","isAuthorize","openDialog","updateSubscriptions","handleOpenDialog","handleSearchTextChange","handleSearchTextTmpChange","handleClearSearch","handleEnterPress","searchTextTmp","params","prevState","subscriptionLimit","endpointIndex","prototype","hasOwnProperty","call","subscribe","keyCode","titleWrapper","buttonElm","xl","genericMessageWrapper","cardContent","subsTable","TableHead","firstCell","subscribePop","disableTypography","searchWrapper","Paper","searchRoot","clearSearchIcon","InputBase","inputProps","onKeyDown","searchResults","closeButton","divider","cardTitle","listView","tableBodyEvenBackgrund","tableBodyOddBackgrund","tableHeadBackground","InfoBar","showOverview","applicationOwner","toggleOverview","handleDeleteConfimation","getApplication","promisedPolicy","tierDescription","todo","promisedDelete","deleteApp","ok","infoBarMain","linkTitle","align","subscriptionCount","VerticalDivider","editButton","mainBack","infoBar","infoBarHeight","starColor","A200","backIcon","backText","starRate","starRateMy","rateLink","topBar","infoContent","infoContentBottom","sliderBackground","ratingBoxWrapper","ratingBox","userRating","verticalDividerStar","backLink","ratingSummery","buttonView","buttonOverviewText","appNameXSmall","overflowX","overflowY","appNameSmall","appNameMid","appNameBig","minWidth","iconAligner","iconTextWrapper","iconEven","iconOddColor","iconOdd","summaryRoot","actionPanel","setApplication","setTierDescription","setNotFound","promisedTier","tierResponse","TOKEN_TYPES","attributes","attr","attrValue","Details","menuLink","application_uuid","active","secScheme","pathPrefix","redirectUrl","rootIconSize","rootIconTextVisible","rootIconVisible","prefix","sufix","Helmet","leftMenuHorizontal","leftMenuVerticalLeft","leftMenuVerticalRight","leftLInkMain","CustomIcon","leftLInkMainText","content","innerRef","contentLoader","contentLoaderRightMenu","exact","from","path","Overview","renderManager","shiftToLeft","shiftToRight","leftMenuPaddingLeft","right","rootBackground","detailsContent","expanded","messgeType","elevation","iconItem","APIS","SINGLE_API","API_SWAGGER","API_WSDL","API_GW_CONFIG","API_THUMBNAIL","API_COPY","API_LC_HISTORY","API_CHANGE_LC","API_LC","API_LC_PENDING_TASK","API_DEF","API_VALIDATE_DEF","API_DOCS","API_DOC","API_DOC_CONTENT","APPLICATIONS","SINGLE_APPLICATION","APPLICATION_GENERATE_KEY_TYPE","EXPORT_APIS","IMPORT_APIS","SUBSCRIPTION","BLOCK_SUBSCRIPTION","UNBLOCK_SUBSCRIPTION","POLICIES","POLICY","ENDPOINTS","ENDPOINT","LABLES","WORKFLOW","SERVICE_DISCOVERY","PUT","GET","hasScope","hasScopes","haveScope"],"mappings":"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","file":"ApplicationDetails.989e221073c4604f50fc.bundle.js","sourcesContent":["/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\nimport ViewSecret from './ViewSecret';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = (theme) => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n        flex: 1,\n        marginRight: theme.spacing(1),\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.custom.apiDetailPages.tokenTextBoxBackground,\n        color: theme.palette.getContrastText(theme.custom.apiDetailPages.tokenTextBoxBackground),\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        height: 100,\n        width: '100%',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    secretWrapper: {\n        display: 'flex',\n        marginBottom: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n        whiteSpace: 'nowrap',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginTop: 20,\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n\n    },\n});\n/**\n *\n *\n * @class ViewToken\n * @extends {React.Component}\n */\nclass ViewToken extends React.Component {\n    state = {\n        tokenCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewToken\n     */\n    onCopy = (name) => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewToken\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewToken\n     */\n    render() {\n        const {\n            classes, token, consumerSecret,\n        } = this.props;\n        const { tokenCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                {consumerSecret && (\n                    <div className={classes.secretWrapper}>\n                        <ViewSecret secret={{ consumerSecret }} />\n                    </div>\n                )}\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy'\n                                defaultMessage='Please Copy the Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.please.copy.apikey'\n                                defaultMessage='Please Copy the API Key'\n                            />\n                        )}\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.please.copy.help'\n                            defaultMessage={'Please copy this generated token value as it will be displayed only for'\n                            + ' the current browser session. '\n                            + '( The token will not be visible in the UI after the page is refreshed. )'}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <label for='access-token' className={classes.prodLabel}>\n                        {(token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.access.token'\n                                defaultMessage='Access Token'\n                            />\n                        )}\n                        {(!token.isOauth) && (\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewToken.apikey'\n                                defaultMessage='API Key'\n                            />\n                        )}\n                    </label>\n                    <TextField\n                        defaultValue={token.accessToken}\n                        id='access-token'\n                        multiline\n                        fullWidth\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={tokenCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={token.accessToken} onCopy={this.onCopy('tokenCopied')}>\n                            <IconButton aria-label='Copy to clipboard'>\n                                <FileCopy color='secondary'>file_copy</FileCopy>\n                            </IconButton>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n                <FormHelperText>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.first'\n                        defaultMessage='Above token has a validity period of '\n                    />\n                    {token.validityTime}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewToken.info.second'\n                        defaultMessage=' seconds'\n                    />\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.third'\n                            defaultMessage=' and the token has ('\n                        />\n                    )}\n                    {this.getTokeScopesString(token.tokenScopes)}\n                    {token.isOauth && (\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewToken.info.fourth'\n                            defaultMessage=') scopes'\n                        />\n                    )}\n.\n                </FormHelperText>\n            </div>\n        );\n    }\n}\n\nViewToken.defaultProps = {\n    consumerSecret: null,\n};\n\nViewToken.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    token: PropTypes.shape({\n        accessToken: PropTypes.string.isRequired,\n        validityTime: PropTypes.number.isRequired,\n        tokenScopes: PropTypes.array.isRequired,\n    }).isRequired,\n    consumerSecret: PropTypes.string,\n};\n\nexport default withStyles(styles)(ViewToken);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport InlineMessage from '../InlineMessage';\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    bootstrapRoot: {\n        padding: 0,\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    bootstrapInput: {\n        borderRadius: 4,\n        backgroundColor: theme.palette.common.white,\n        border: '1px solid #ced4da',\n        padding: '5px 12px',\n        width: 350,\n        height: 100,\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"',\n            'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n        '&:focus': {\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n    epWrapper: {\n        display: 'flex',\n        marginTop: 20,\n    },\n    prodLabel: {\n        lineHeight: '30px',\n        marginRight: 10,\n        width: 100,\n        'text-align-last': 'center',\n    },\n    contentWrapper: {\n        maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n    },\n    root: {\n        marginBottom: 20,\n    },\n});\n/**\n *\n *\n * @class ViewSecret\n * @extends {React.Component}\n */\nclass ViewSecret extends React.Component {\n    state = {\n        secretCopied: false,\n    };\n\n    /**\n     *\n     *\n     * @memberof ViewSecret\n     */\n    onCopy = name => () => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = function () {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Generate a comma separate string of token scopes\n     *\n     * @param {string} tokenScopes token scopes\n     * @returns {String} scopeString comma separated string of token scopes\n     * @memberof ViewSecret\n     */\n    getTokeScopesString(tokenScopes) {\n        if (tokenScopes) {\n            return tokenScopes.join(', ');\n        }\n        return '';\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof ViewSecret\n     */\n    render() {\n        const { classes, secret } = this.props;\n        const { secretCopied } = this.state;\n        return (\n            <div className={classes.root}>\n                <InlineMessage type='warn'>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret'\n                            defaultMessage='Please Copy the Consumer Secret'\n                        />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.please.copy.secret.help'\n                            defaultMessage={`Please make a note of the regenerated consumer \n                            secret value as it will be displayed only once.`}\n                        />\n                    </Typography>\n                </InlineMessage>\n                <div className={classes.epWrapper}>\n                    <Typography className={classes.prodLabel}>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.ViewSecret.consumer.secret'\n                            defaultMessage='Consumer Secret'\n                        />\n                    </Typography>\n                    <TextField\n                        defaultValue={secret.consumerSecret}\n                        id='bootstrap-input'\n                        multiline\n                        rows={4}\n                        InputProps={{\n                            disableUnderline: true,\n                            classes: {\n                                root: classes.bootstrapRoot,\n                                input: classes.bootstrapInput,\n                            },\n                        }}\n                        InputLabelProps={{\n                            shrink: true,\n                            className: classes.bootstrapFormLabel,\n                        }}\n                    />\n                    <Tooltip title={secretCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard text={secret.consumerSecret} onCopy={this.onCopy('secretCopied')}>\n                            <FileCopy color='secondary'>file_copy</FileCopy>\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nViewSecret.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    secret: PropTypes.shape({\n        consumerSecret: PropTypes.string.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles)(ViewSecret);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport Joi from '@hapi/joi';\n\nconst definition = {\n    number: Joi.number().integer(),\n    url: Joi.string().uri().allow(''),\n    ipAddress: Joi.string().ip({\n      version: [\n        'ipv4',\n        'ipv6'\n      ],\n      cidr: 'optional'\n    }),\n};\n\nexport default definition;\n","/**\n * Copyright (c) 2018, WSO2 Inc. (http://wso2.com) All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\"use strict\";\nimport APIClientFactory from \"./APIClientFactory\";\nimport Resource from \"./Resource\";\nimport Utils from \"./Utils\";\n\n/***\n * Class to expose Subscription {Resource} related operations\n */\n\nexport default class Subscription extends Resource {\n\n    constructor() {\n        super();\n        this.client = new APIClientFactory().getAPIClient(Utils.getEnvironment().label).client;\n    }\n\n    /**\n     * Get all Subscriptions\n     * @param apiId id of the API\n     * @param applicationId id of the application \n     * @param limit subscription count to return\n     * @returns {promise} With all subscription for given applicationId or apiId.\n     */\n    getSubscriptions(apiId, applicationId, limit = 25) {\n        var promise_get = this.client.then((client) => {\n            return client.apis[\"Subscriptions\"].get_subscriptions(\n                { apiId: apiId, applicationId: applicationId, limit });\n        }\n        );\n        return promise_get;\n    }\n\n    /**\n     * Get a single subscription\n     * @param subscriptionUUID subscription UUID\n     */\n    getSubscription(subscriptionUUID) {\n        var promised_subscription = this.client.then((client) => {\n            return client.apis[\"Subscriptions\"].get_subscriptions__subscriptionId_(\n                { subscriptionId: subscriptionUUID });\n        }\n        );\n        return promised_subscription;\n    }\n\n    /**\n    * Get pending invoice if available * @param {*} subscriptionUUID\n    */\n    getMonetizationInvoice(subscriptionUUID) {\n        const promiseInvoice = this.client.then(client => {\n            return client.apis['API Monetization'].get_subscriptions__subscriptionId__usage( \n                {\n                    subscriptionId: subscriptionUUID \n                }\n            );\n        });\n        return promiseInvoice;\n    }\n\n    /**\n    * Delete subscription\n    * @param subscriptionId id of the subscription\n    * @returns {promise} With 200 OK.\n    */\n    deleteSubscription(subscriptionId) {\n        const promised_delete_subscription = this.client.then((client) => {\n            return client.apis[\"Subscriptions\"].delete_subscriptions__subscriptionId_(\n                {\n                    subscriptionId: subscriptionId,\n                }\n            );\n        });\n        return promised_delete_subscription;\n    }\n\n   /**\n    * Update subscription\n    * @param subscriptionId id of the subscription\n    * @param throttlingPolicy throttling tier\n    * @returns {promise} With 200 OK.\n    */\n    updateSubscription(applicationId, apiId, subscriptionId, throttlingPolicy, status, requestedThrottlingPolicy) {\n        const promised_update_subscription = this.client.then((client) => {\n        let subscriptionData = null;\n\n            subscriptionData = {\n                applicationId, apiId, subscriptionId, throttlingPolicy: throttlingPolicy, status, requestedThrottlingPolicy\n            };\n\n            const payload = { \n                subscriptionId: subscriptionId,\n                body: subscriptionData \n            };\n            return client.apis.Subscriptions.put_subscriptions__subscriptionId_(payload, { 'Content-Type': 'application/json' });\n        });\n        return promised_update_subscription;\n    }\n}\n\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Typography from '@material-ui/core/Typography';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        backgroundColor: theme.palette.background.paper,\n        width: '100%',\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing(0.25),\n    },\n});\n\nconst MenuProps = {\n    PaperProps: {\n        style: {\n            maxHeight: 224,\n            width: 250,\n        },\n    },\n};\n\n/**\n * Used to display generate acctoken UI\n */\nconst tokens = (props) => {\n    /**\n    * This method is used to handle the updating of create application\n    * request object.\n    * @param {*} field field that should be updated in appliction request\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'scopesSelected':\n                newRequest.scopesSelected = currentTarget.value;\n                break;\n            case 'keyType':\n                newRequest.keyType = currentTarget.value;\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const {\n        classes, accessTokenRequest, subscriptionScopes,\n    } = props;\n\n    return (\n        <>\n            <FormControl\n                margin='normal'\n                className={classes.FormControlOdd}\n                disabled={subscriptionScopes.length === 0}\n            >\n                <InputLabel htmlFor='quota-helper' className={classes.quotaHelp}>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate.scopes'\n                        defaultMessage='Scopes'\n                    />\n\n                </InputLabel>\n                <Select\n                    name='scopesSelected'\n                    multiple\n                    value={accessTokenRequest.scopesSelected}\n                    onChange={e => handleChange('scopesSelected', e)}\n                    input={<Input id='select-multiple-chip' />}\n                    renderValue={selected => (\n                        <div className={classes.chips}>\n                            {selected.map(value => (\n                                <Chip key={value} label={value} className={classes.chip} />\n                            ))}\n                        </div>\n                    )}\n                    MenuProps={MenuProps}\n                >\n                    {subscriptionScopes.map(scope => (\n                        <MenuItem\n                            key={scope}\n                            value={scope}\n                        >\n                            {scope}\n                        </MenuItem>\n                    ))}\n                </Select>\n                <Typography variant='caption'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.Tokens.when.you.generate'\n                        defaultMessage={'When you generate access tokens to APIs protected by scope/s,'\n                            + ' you can select the scope/s and then generate the token for it. Scopes enable '\n                            + 'fine-grained access control to API resources based on user roles. You define scopes to '\n                            + 'an API resource. When a user invokes the API, his/her OAuth 2 bearer token cannot grant '\n                            + 'access to any API resource beyond its associated scopes.'}\n                    />\n                </Typography>\n            </FormControl>\n        </>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default withStyles(styles)(tokens);\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport { app } from 'Settings';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    messageWrapper: {\n        marginTop: theme.spacing(4),\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n}));\n\nexport default function NoApi() {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12} className={classes.messageWrapper}>\n                    <img alt='API icon' src={app.context + theme.custom.noApiImage} className={classes.messageWrapper} />\n                    <Typography variant='h5' gutterBottom>\n                        <FormattedMessage id='Apis.Listing.NoApi.nodata.title' defaultMessage='No APIs Available' />\n                    </Typography>\n                    <Typography variant='subtitle1' gutterBottom>\n                        <FormattedMessage\n                            id='Apis.Listing.NoApi.nodata.content'\n                            defaultMessage='There are no APIs to display right now.'\n                        />\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport CustomIcon from './CustomIcon';\n\nconst styles = (theme) => ({\n    leftLInkText: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        textTransform: 'capitalize',\n        width: '100%',\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n    },\n    leftLInkText_IconLeft: {\n        paddingLeft: 10,\n    },\n    LeftMenu: {\n        backgroundColor: theme.custom.leftMenu.background,\n        width: theme.custom.leftMenu.width,\n        textAlign: 'center',\n        fontFamily: theme.typography.fontFamily,\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        top: 0,\n    },\n    leftLInk: {\n        paddingTop: theme.spacing(0.6),\n        paddingBottom: theme.spacing(0.6),\n        paddingLeft: theme.spacing(1),\n        paddingRight: 0,\n        fontSize: theme.typography.caption.fontSize,\n        cursor: 'pointer',\n        textDecoration: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    leftLink_Icon: {\n        color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n        fontSize: theme.custom.leftMenu.iconSize + 'px',\n    },\n    leftLink_IconLeft: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    noIcon: {\n        display: 'none',\n    },\n    leftLInkText_NoText: {\n        display: 'none',\n    },\n    submenu: {\n        paddingLeft: theme.spacing(4),\n    },\n});\n/**\n * Renders the left menu section.\n * @param {JSON} props props passed from parent\n * @returns {JSX} Leftmenu element.\n */\nfunction LeftMenuItem(props) {\n    const [selected, setSelected] = useState(false);\n\n    const {\n        classes, theme, Icon, to, history, text, route, submenu, open\n    } = props;\n    const routeToCheck = route || text;\n    const { leftMenu } = theme.custom;\n    const strokeColor = theme.palette.getContrastText(leftMenu.background);\n    const { iconSize } = leftMenu;\n    const ditectCurrentMenu = (location = null) => {\n        if (!location) {\n            location = window.location;\n        }\n        const { pathname } = location;\n\n        const test1 = new RegExp('/' + routeToCheck + '$', 'g');\n        const test2 = new RegExp('/' + routeToCheck + '/', 'g');\n        if (pathname.match(test1) || pathname.match(test2)) {\n            setSelected(true);\n        } else {\n            setSelected(false);\n        }\n\n\n    };\n    useEffect(() => {\n        ditectCurrentMenu();\n    }, []);\n    history.listen((location) => {\n        ditectCurrentMenu(location);\n    });\n    let activeBackground = '';\n    if (selected && !submenu) {\n        activeBackground = leftMenu.leftMenuActive;\n    } else if (selected && submenu) {\n        activeBackground = leftMenu.leftMenuActiveSubmenu;\n    }\n    return (\n        <Link\n            className={classNames(\n                classes.leftLInk,\n                {\n                    [classes.leftLink_IconLeft]: leftMenu === 'icon left',\n                    [classes.submenu]: submenu,\n                },\n                'leftLInk',\n            )}\n            to={to}\n            style={{ backgroundColor: activeBackground }}\n        >\n            {!submenu && (\n                // If the icon pro ( which is comming from the React Material library )\n                // is coming we add css class and render.\n                // If leftMenu='no icon' at the theme object we hide the icon. Also we add static classes to\n                // allow customers theme\n                // the product without compiling.\n                Icon ? (\n                    React.cloneElement(Icon, {\n                        className: classNames(\n                            classes.leftLink_Icon,\n                            {\n                                [classes.noIcon]: leftMenu.style === 'no icon',\n                                [classes.submenu]: submenu,\n                            },\n                            'leftLink_Icon',\n                        ),\n                    })\n                ) : (\n                        // We can also add custom icons\n                        <CustomIcon\n                            strokeColor={strokeColor}\n                            width={iconSize}\n                            height={iconSize}\n                            icon={props.iconText}\n                            className={classNames(\n                                classes.leftLInk,\n                                {\n                                    [classes.noIcon]: leftMenu.style === 'no icon',\n                                },\n                                'leftLink_Icon',\n                            )}\n                        />\n                    ))}\n            {open && (\n                <Typography\n                    className={classNames(\n                        classes.leftLInkText,\n                        {\n                            [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                            [classes.leftLInkText_NoText]: leftMenu.style === 'no text',\n                        },\n                        'leftLInkText',\n                    )}\n                >\n                    {props.text}\n                </Typography>\n            )}\n            {!open && (\n                <Typography\n                    className={classNames(\n                        {\n                            [classes.leftLInkText_IconLeft]: leftMenu.style === 'icon left',\n                        },\n                        'leftLInkText',\n                    )}\n                />\n            )}\n            \n\n        </Link>\n    );\n}\nLeftMenuItem.defaultProps = {\n    route: null,\n    iconText: null,\n    Icon: null,\n    submenu: false,\n};\nLeftMenuItem.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    Icon: PropTypes.element,\n    text: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.shape({}),\n    ]).isRequired,\n    to: PropTypes.string.isRequired,\n    route: PropTypes.string,\n    iconText: PropTypes.string,\n    history: PropTypes.shape({\n        location: PropTypes.shape({}).isRequired,\n    }).isRequired,\n    submenu: PropTypes.bool,\n};\nexport default withRouter(withStyles(styles, { withTheme: true })(LeftMenuItem));\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core/';\nimport Slide from '@material-ui/core/Slide';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\n\nconst DeleteConfirmation = (props) => {\n    const { handleAppDelete, isDeleteOpen, toggleDeleteConfirmation } = props;\n    return (\n        <Dialog open={isDeleteOpen} transition={Slide} role='alertdialog'>\n            <DialogTitle>\n                <FormattedMessage\n                    id='Applications.Listing.DeleteConfirmation.dialog.title'\n                    defaultMessage='Delete Application'\n                />\n            </DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.text.description'\n                        defaultMessage='The application will be removed'\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button dense onClick={toggleDeleteConfirmation}>\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog.cancel'\n                        defaultMessage='Cancel'\n                    />\n                </Button>\n                <Button\n                    size='small'\n                    variant='outlined'\n                    color='primary'\n                    onClick={handleAppDelete}\n                >\n                    <FormattedMessage\n                        id='Applications.Listing.DeleteConfirmation.dialog,delete'\n                        defaultMessage='Delete'\n                    />\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\nDeleteConfirmation.propTypes = {\n    handleAppDelete: PropTypes.func.isRequired,\n    isDeleteOpen: PropTypes.bool.isRequired,\n    toggleDeleteConfirmation: PropTypes.func.isRequired,\n};\nexport default DeleteConfirmation;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M11 5v5.59H7.5l4.5 4.5 4.5-4.5H13V5h-2zm-5 9c0 3.31 2.69 6 6 6s6-2.69 6-6h-2c0 2.21-1.79 4-4 4s-4-1.79-4-4H6z\"\n}), 'PlayForWork');\n\nexports.default = _default;","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Typography from '@material-ui/core/Typography';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PlayForWorkIcon from '@material-ui/icons/PlayForWork';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nfunction ImportExternalApp(props) {\n    const {\n        consumerKey, consumerSecret, onChange, isUserOwner, key, provideOAuthKeySecret,\n    } = props;\n    const intl = useIntl();\n\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n    /**\n     * Handle onChange of provided consumer key and secret\n     *\n     * @param event\n     */\n    function handleChange(event) {\n        if (onChange) {\n            onChange(event);\n        }\n    }\n    return (\n        <>\n            <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                startIcon={<PlayForWorkIcon />}\n                onClick={handleClickOpen}\n            >\n                <FormattedMessage\n                    defaultMessage='Provide Existing OAuth Keys'\n                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth'\n                />\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\"><FormattedMessage\n                    defaultMessage='Provide Existing OAuth Keys'\n                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth'\n                /></DialogTitle>\n                <DialogContent>\n\n                    <Grid container spacing={3} direction='column'>\n                        <Grid item xs={12}>\n                            <TextField\n                                id='provided-consumer-key'\n                                name='providedConsumerKey'\n                                label={intl.formatMessage({\n                                    defaultMessage: 'Consumer Key',\n                                    id: 'Shared.AppsAndKeys.ImportExternalApp.consumer.key',\n                                })}\n                                value={consumerKey}\n                                onChange={e => handleChange(e)}\n                                margin='normal'\n                                fullWidth\n                                disabled={!isUserOwner}\n                                variant='outlined'\n                            />\n                            <FormControl>\n                                <FormHelperText id='consumer-key-helper-text'>\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ImportExternalApp.consumer.key.title'\n                                        defaultMessage='Consumer Key of the OAuth application'\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                id='provided-consumer-secret'\n                                name='providedConsumerSecret'\n                                label={intl.formatMessage({\n                                    defaultMessage: 'Consumer Secret',\n                                    id: 'Shared.AppsAndKeys.ImportExternalApp.consumer.secret',\n                                })}\n                                value={consumerSecret}\n                                onChange={e => handleChange(e)}\n                                margin='normal'\n                                fullWidth\n                                disabled={!isUserOwner}\n                                variant='outlined'\n                            />\n                            <FormControl>\n                                <FormHelperText id='consumer-secret-helper-text'>\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ImportExternalApp.consumer.secret.of.application'\n                                        defaultMessage='Consumer Secret of the OAuth application'\n                                    />\n                                </FormHelperText>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        <FormattedMessage\n                            defaultMessage='Cancel'\n                            id='Shared.AppsAndKeys.ImportExternalApp.cancel'\n                        />\n                    </Button>\n                    <ScopeValidation\n                        resourcePath={resourcePaths.APPLICATION_GENERATE_KEYS}\n                        resourceMethod={resourceMethods.POST}\n                    >\n                        {!isUserOwner ? (\n                            <>\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => provideOAuthKeySecret()}\n                                    disabled={!isUserOwner}\n                                >\n                                    {\n                                        key\n                                            ? (\n                                                <FormattedMessage\n                                                    defaultMessage='Update'\n                                                    id='Shared.AppsAndKeys.ImportExternalApp.provide.\n                                                    oauth.button.update'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    defaultMessage='Provide'\n                                                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth.button.provide'\n                                                />\n                                            )\n                                    }\n                                </Button>\n                                <Typography variant='caption'>\n                                    <FormattedMessage\n                                        defaultMessage='Only owner can provide keys'\n                                        id='Shared.AppsAndKeys.ImportExternalApp.key.provide.user.owner'\n                                    />\n                                </Typography>\n                            </>\n                        ) : (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    onClick={() => provideOAuthKeySecret()}\n                                >\n                                    {\n                                        key\n                                            ? (\n                                                <FormattedMessage\n                                                    defaultMessage='Update'\n                                                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth.button.update'\n                                                />\n                                            )\n                                            : (\n                                                <FormattedMessage\n                                                    defaultMessage='Provide'\n                                                    id='Shared.AppsAndKeys.ImportExternalApp.provide.oauth.button.provide'\n                                                />\n                                            )\n                                    }\n                                </Button>\n                            )}\n                    </ScopeValidation>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n}\nImportExternalApp.propTypes = {\n    intl: PropTypes.shape({}).isRequired,\n    onChange: PropTypes.func.isRequired,\n    consumerKey: PropTypes.string,\n    consumerSecret: PropTypes.string,\n    isUserOwner: PropTypes.string,\n    key: PropTypes.shape({}).isRequired,\n    provideOAuthKeySecret: PropTypes.func.isRequired,\n};\n\nImportExternalApp.defaultProps = {\n    consumerKey: '',\n    consumerSecret: '',\n    isUserOwner: false,\n};\n\nexport default ImportExternalApp;\n\n\n\n\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { injectIntl } from 'react-intl';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport Box from '@material-ui/core/Box';\n\n\nconst styles = theme => ({\n    FormControl: {\n        paddingTop: theme.spacing(2),\n        paddingBottom: theme.spacing(2),\n        paddingLeft: 0,\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    checkboxWrapper: {\n        display: 'flex',\n    },\n    checkboxWrapperColumn: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    removeHelperPadding: {\n        '& p': {\n            margin: '8px 0px',\n        },\n    },\n});\n\n/**\n *\n *\n * @class AppConfiguration\n * @extends {React.Component}\n */\nconst AppConfiguration = (props) => {\n\n    const {\n        classes, config, isUserOwner, previousValue, handleChange,\n    } = props;\n\n    const [selectedValue, setSelectedValue] = useState(previousValue);\n\n    /**\n     * This method is used to handle the updating of key generation\n     * request object.\n     * @param {*} field field that should be updated in key request\n     * @param {*} event event fired\n     */\n    const handleAppRequestChange = (event) => {\n        const { target: currentTarget } = event;\n        setSelectedValue(currentTarget.value);\n        handleChange('additionalProperties', event);\n    }\n\n    return (\n        <>\n            <TableRow>\n                <TableCell component='th' scope='row' className={classes.leftCol}>\n                    {config.label}\n                </TableCell>\n                <TableCell>\n                    <Box maxWidth={600}>\n                    {config.type === 'select' && config.multiple === false ? (\n                        <TextField\n                            classes={{\n                                root: classes.removeHelperPadding,\n                            }}\n                            fullWidth\n                            id={config.name}\n                            select\n                            label={config.label}\n                            value={selectedValue}\n                            name={config.name}\n                            onChange={e => handleAppRequestChange(e)}\n                            helperText={\n                                <Typography variant='caption'>\n                                    {config.tooltip}\n                                </Typography>\n                            }\n                            margin='dense'\n                            variant='outlined'\n                            disabled={!isUserOwner}\n                        >\n                            {config.values.map(key => (\n                                <MenuItem key={key} value={key}>\n                                    {key}\n                                </MenuItem>\n                            ))}\n                        </TextField>\n                    ) : (config.type === 'select' && config.multiple === true) ? (\n                        <>\n                            <FormControl variant=\"outlined\" className={classes.formControl} fullWidth>\n                                <InputLabel id=\"multi-select-label\">{config.label}</InputLabel>\n                                <Select\n                                    labelId=\"multi-select-label\"\n                                    id=\"multi-select-outlined\"\n                                    margin='dense'\n                                    displayEmpty\n                                    name={config.name}\n                                    multiple\n                                    value={selectedValue}\n                                    onChange={e => handleAppRequestChange(e)}\n                                    input={<Input id='multi-select-outlined' />}\n                                    renderValue={selected => (\n                                        <div className={classes.chips}>\n                                            {selected.map(value => (\n                                                <Chip key={value} label={value} className={classes.chip} />\n                                            ))}\n                                        </div>\n                                    )}\n                                    helperText={\n                                        <Typography variant='caption'>\n                                            {config.tooltip}\n                                        </Typography>\n                                    }\n                                    label={config.label}\n                                >\n                                    {config.values.map(key => (\n                                        <MenuItem key={key} value={key}>\n                                            <Checkbox checked={selectedValue.indexOf(key) > -1} />\n                                            <ListItemText primary={key} />\n                                        </MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n\n\n                            <Typography variant='caption'>\n                                {config.tooltip}\n                            </Typography>\n                        </>\n                    ) : (config.type === 'input') ? (\n                        <TextField\n                            classes={{\n                                root: classes.removeHelperPadding,\n                            }}\n                            fullWidth\n                            id={config.name}\n                            label={config.label}\n                            value={selectedValue}\n                            name={config.name}\n                            onChange={e => handleAppRequestChange(e)}\n                            helperText={\n                                <Typography variant='caption'>\n                                    {config.tooltip}\n                                </Typography>\n                            }\n                            margin='dense'\n                            variant='outlined'\n                            disabled={!isUserOwner}\n                        />\n                    ) : (\n                                    <TextField\n                                        classes={{\n                                            root: classes.removeHelperPadding,\n                                        }}\n                                        fullWidth\n                                        id={config.name}\n                                        label={config.label}\n                                        value={selectedValue}\n                                        name={config.name}\n                                        onChange={e => handleAppRequestChange(e)}\n                                        helperText={\n                                            <Typography variant='caption'>\n                                                {config.tooltip}\n                                            </Typography>\n                                        }\n                                        margin='dense'\n                                        variant='outlined'\n                                        disabled={!isUserOwner}\n                                    />\n                                )}\n                            </Box>\n                </TableCell>\n            </TableRow>\n        </>\n    );\n};\n\nAppConfiguration.defaultProps = {\n    notFound: false,\n};\n\nAppConfiguration.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    previousValue: PropTypes.any.isRequired,\n    isUserOwner: PropTypes.bool.isRequired,\n    handleChange: PropTypes.func.isRequired,\n    config: PropTypes.any.isRequired,\n    notFound: PropTypes.bool,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(AppConfiguration));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport cloneDeep from 'lodash.clonedeep';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport Settings from 'Settings';\nimport PropTypes from 'prop-types';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Validation from 'AppData/Validation';\nimport AppConfiguration from './AppConfiguration';\n\nconst styles = theme => ({\n    FormControl: {\n        paddingTop: 0,\n        paddingBottom: theme.spacing(2),\n        paddingLeft: 0,\n        width: '100%',\n    },\n    FormControlOdd: {\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n    },\n    quotaHelp: {\n        position: 'relative',\n    },\n    checkboxWrapper: {\n        display: 'flex',\n    },\n    checkboxWrapperColumn: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        flexDirection: 'row',\n        whiteSpace: 'nowrap',\n    },\n    group: {\n        flexDirection: 'row',\n    },\n    removeHelperPadding: {\n        '& p': {\n            margin: '8px 0px',\n        },\n    },\n    iconStyle: {\n        cursor: 'pointer',\n        padding: '0 0 0 10px',\n    },\n    iconButton: {\n        padding: '0 0 0 10px',\n        '& .material-icons': {\n            fontSize: 16,\n        },\n    },\n    titleColumn: {\n        width: 150,\n        fontWeight: 500,\n    },\n    keyInfoTable: {\n        marginBottom: 20,\n        borderCollapse: 'collapse',\n        '& td': {\n            paddingBottom: 5,\n            borderBottom: 'solid 1px #cccc',\n        }\n    },\n    leftCol: {\n        width: 180,\n    },\n});\n/**\n *\n *\n * @class KeyConfiguration\n * @extends {React.Component}\n */\nconst KeyConfiguration = (props) => {\n    const [urlCopied, setUrlCopied] = useState(false);\n    const intl = useIntl();\n    let {\n        classes, notFound, isUserOwner, keyManagerConfig, validating, updateKeyRequest, keyRequest,\n    } = props;\n    const {\n        selectedGrantTypes, callbackUrl,\n    } = keyRequest;\n    let {\n        applicationConfiguration, availableGrantTypes, description, additionalProperties,\n        enableMapOAuthConsumerApps, enableOAuthAppCreation, enableTokenEncryption, enableTokenGeneration,\n        id, name, revokeEndpoint, tokenEndpoint, type, userInfoEndpoint,\n    } = keyManagerConfig;\n\n    /**\n     * Get the display names for the supported grant types\n     * @param grantTypes\n     * @param grantTypeDisplayNameMap\n     */\n    const getGrantTypeDisplayList = (grantTypes, grantTypeDisplayNameMap) => {\n        const modifiedGrantTypes = {};\n        grantTypes.forEach((grantType) => {\n            modifiedGrantTypes[grantType] = grantTypeDisplayNameMap[grantType];\n            if (!grantTypeDisplayNameMap[grantType]) {\n                modifiedGrantTypes[grantType] = grantType;\n            }\n        });\n        return modifiedGrantTypes;\n    };\n    const callBackHasErrors = () => {\n        if (!(selectedGrantTypes.includes('implicit') || selectedGrantTypes.includes('authorization_code'))) {\n            return false;\n        }\n        if (callbackUrl === '' && validating) {\n            return intl.formatMessage({\n                defaultMessage: 'Call back URL can not be empty when Implicit or Authorization Code grants are selected.',\n                id: 'Shared.AppsAndKeys.KeyConfCiguration.Invalid.callback.empty.error.text'\n            });\n        } else if (Validation.url.validate(callbackUrl).error && validating) {\n            return intl.formatMessage({\n                defaultMessage: 'Invalid URL. Please enter a valid URL.',\n                id: 'Shared.AppsAndKeys.KeyConfCiguration.Invalid.callback.url.error.text'\n            });\n        } else {\n            return false;\n        }\n    }\n    /**\n     * This method is used to handle the updating of key generation\n     * request object.\n     * @param {*} field field that should be updated in key request\n     * @param {*} event event fired\n     */\n    const handleChange = (field, event) => {\n        const newRequest = cloneDeep(keyRequest);\n        const { target: currentTarget } = event;\n        //newRequest.serverSupportedGrantTypes = availableGrantTypes;\n        //newRequest.selectedGrantTypes = availableGrantTypes;\n        let newGrantTypes = [...newRequest.selectedGrantTypes];\n        newRequest.keyManager = name;\n\n        switch (field) {\n            case 'callbackUrl':\n                newRequest.callbackUrl = currentTarget.value;\n                break;\n            case 'grantType':\n                if (currentTarget.checked) {\n                    newGrantTypes = [...newGrantTypes, currentTarget.id];\n                } else {\n                    newGrantTypes = newRequest.selectedGrantTypes.filter(item => item !== currentTarget.id);\n                }\n                newRequest.selectedGrantTypes = newGrantTypes;\n                break;\n            case 'additionalProperties':\n                let clonedAdditionalProperties = newRequest.additionalProperties;\n                clonedAdditionalProperties[currentTarget.name] = currentTarget.value;\n                newRequest.additionalProperties = clonedAdditionalProperties;\n                break;\n            default:\n                break;\n        }\n        updateKeyRequest(newRequest);\n    };\n\n    const onCopy = () => {\n        setUrlCopied(true);\n\n        const caller = function () {\n            setUrlCopied(false);\n        };\n        setTimeout(caller, 2000);\n    }\n\n    const getPreviousValue = (config) => {\n        const { additionalProperties } = keyRequest;\n        const isPreviousValueSet =  !!(additionalProperties && additionalProperties[config.name]);\n        let defaultValue = config.default;\n        if (config.multiple && typeof defaultValue === 'string' && defaultValue === '' ) {\n            defaultValue = [];\n        }\n        return  isPreviousValueSet ? additionalProperties[config.name] : defaultValue;\n    }\n    /**\n     *\n     *\n     * @returns {Component}\n     * @memberof KeyConfiguration\n     */\n\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    const grantTypeDisplayListMap = getGrantTypeDisplayList(\n        availableGrantTypes,\n        Settings.grantTypes,\n    );\n\n    // Check for additional properties for token endpoint and revoke endpoints.\n    const propPrefix = keyRequest.keyType.toLowerCase();\n    tokenEndpoint = additionalProperties[`${propPrefix}_token_endpoint`] || tokenEndpoint;\n    revokeEndpoint = additionalProperties[`${propPrefix}_revoke_endpoint`] || revokeEndpoint;\n\n    return (\n        <>\n            <Box display='flex' alignItems='center'>\n                <Table className={classes.table}>\n                    <TableBody>\n                        {(tokenEndpoint && tokenEndpoint !== '') && (<TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <FormattedMessage\n                                    defaultMessage='Token Endpoint'\n                                    id='Shared.AppsAndKeys.KeyConfiguration.token.endpoint.label'\n                                />\n                            </TableCell>\n                            <TableCell>\n                                {tokenEndpoint}\n                                <Tooltip\n                                    title={\n                                        urlCopied\n                                            ? intl.formatMessage({\n                                                defaultMessage: 'Copied',\n                                                id: 'Shared.AppsAndKeys.KeyConfiguration.copied',\n                                            })\n                                            : intl.formatMessage({\n                                                defaultMessage: 'Copy to clipboard',\n                                                id: 'Shared.AppsAndKeys.KeyConfiguration.copy.to.clipboard',\n                                            })\n                                    }\n                                    placement='right'\n                                    className={classes.iconStyle}\n                                >\n                                    <CopyToClipboard\n                                        text={tokenEndpoint}\n                                        onCopy={onCopy}\n                                    >\n                                        <IconButton aria-label='Copy to clipboard'\n                                            classes={{ root: classes.iconButton }}>\n                                            <Icon color='secondary'>file_copy</Icon>\n                                        </IconButton>\n                                    </CopyToClipboard>\n                                </Tooltip>\n                            </TableCell>\n                        </TableRow>)}\n                        {(revokeEndpoint && revokeEndpoint !== '') && (<TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <FormattedMessage\n                                    defaultMessage='Revoke Endpoint'\n                                    id='Shared.AppsAndKeys.KeyConfiguration.revoke.endpoint.label'\n                                />\n                            </TableCell>\n                            <TableCell>\n                                {revokeEndpoint}\n                                <Tooltip\n                                    title={\n                                        urlCopied\n                                            ? intl.formatMessage({\n                                                defaultMessage: 'Copied',\n                                                id: 'Shared.AppsAndKeys.KeyConfiguration.copied',\n                                            })\n                                            : intl.formatMessage({\n                                                defaultMessage: 'Copy to clipboard',\n                                                id: 'Shared.AppsAndKeys.KeyConfiguration.copy.to.clipboard',\n                                            })\n                                    }\n                                    placement='right'\n                                    className={classes.iconStyle}\n                                >\n                                    <CopyToClipboard\n                                        text={revokeEndpoint}\n                                        onCopy={onCopy}\n                                    >\n                                        <IconButton aria-label='Copy to clipboard'\n                                            classes={{ root: classes.iconButton }}>\n                                            <Icon color='secondary'>file_copy</Icon>\n                                        </IconButton>\n                                    </CopyToClipboard>\n                                </Tooltip>\n                            </TableCell>\n                        </TableRow>)}\n                        {(userInfoEndpoint && userInfoEndpoint !== '') && (<TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <FormattedMessage\n                                    defaultMessage='User Info Endpoint'\n                                    id='Shared.AppsAndKeys.KeyConfiguration.userinfo.endpoint.label'\n                                />\n                            </TableCell>\n                            <TableCell>\n                                {userInfoEndpoint}\n                                <Tooltip\n                                    title={\n                                        urlCopied\n                                            ? intl.formatMessage({\n                                                defaultMessage: 'Copied',\n                                                id: 'Shared.AppsAndKeys.KeyConfiguration.copied',\n                                            })\n                                            : intl.formatMessage({\n                                                defaultMessage: 'Copy to clipboard',\n                                                id: 'Shared.AppsAndKeys.KeyConfiguration.copy.to.clipboard',\n                                            })\n                                    }\n                                    placement='right'\n                                    className={classes.iconStyle}\n                                >\n                                    <CopyToClipboard\n                                        text={userInfoEndpoint}\n                                        onCopy={onCopy}\n                                    >\n                                        <IconButton aria-label='Copy to clipboard'\n                                            classes={{ root: classes.iconButton }}>\n                                            <Icon color='secondary'>file_copy</Icon>\n                                        </IconButton>\n                                    </CopyToClipboard>\n                                </Tooltip>\n                            </TableCell>\n                        </TableRow>)}\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.KeyConfiguration.grant.types'\n                                    defaultMessage='Grant Types' />\n\n                            </TableCell>\n                            <TableCell>\n                                    <div className={classes.checkboxWrapperColumn}>\n                                        {Object.keys(grantTypeDisplayListMap).map((key) => {\n                                            const value = grantTypeDisplayListMap[key];\n                                            return (\n                                                <FormControlLabel\n                                                    control={(\n                                                        <Checkbox\n                                                            id={key}\n                                                            checked={!!(selectedGrantTypes\n                                                                && selectedGrantTypes.includes(key))}\n                                                            onChange={e => handleChange('grantType', e)}\n                                                            value={value}\n                                                            disabled={!isUserOwner}\n                                                            color='primary'\n                                                        />\n                                                    )}\n                                                    label={value}\n                                                    key={key}\n                                                />\n                                            );\n                                        })}\n                                    </div>\n                                <FormHelperText>\n                                    <FormattedMessage\n                                        defaultMessage={`The application can use the following grant types to generate \n                            Access Tokens. Based on the application requirement,you can enable or disable \n                            grant types for this application.`}\n                                        id='Shared.AppsAndKeys.KeyConfiguration.the.application.can'\n                                    />\n                                </FormHelperText>\n                                        \n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <FormattedMessage\n                                    defaultMessage='Callback URL'\n                                    id='Shared.AppsAndKeys.KeyConfiguration.callback.url.label'\n                                />\n\n                            </TableCell>\n                            <TableCell>\n                                <Box maxWidth={600}>\n                                    <TextField\n                                        margin='dense'\n                                        id='callbackURL'\n                                        label={<FormattedMessage\n                                            defaultMessage='Callback URL'\n                                            id='Shared.AppsAndKeys.KeyConfiguration.callback.url.label'\n                                        />}\n                                        value={callbackUrl}\n                                        name='callbackURL'\n                                        onChange={e => handleChange('callbackUrl', e)}\n                                        helperText={callBackHasErrors() || <FormattedMessage\n                                            defaultMessage={`Callback URL is a redirection URI in the client\n                            application which is used by the authorization server to send the\n                            client's user-agent (usually web browser) back after granting access.`}\n                                            id='Shared.AppsAndKeys.KeyConfCiguration.callback.url.helper.text'\n                                        />}\n                                        variant='outlined'\n                                        disabled={!isUserOwner ||\n                                            (selectedGrantTypes && !selectedGrantTypes.includes('authorization_code')\n                                                && !selectedGrantTypes.includes('implicit'))\n                                        }\n                                        error={callBackHasErrors()}\n                                        placeholder={intl.formatMessage({\n                                            defaultMessage: 'http://url-to-webapp',\n                                            id: 'Shared.AppsAndKeys.KeyConfiguration.url.to.webapp',\n                                        })}\n                                    />\n                                </Box>\n                            </TableCell>\n                        </TableRow>\n                        {applicationConfiguration.length > 0 && applicationConfiguration.map(config => (\n                            <AppConfiguration\n                                config={config}\n                                previousValue={getPreviousValue(config)}\n                                isUserOwner={isUserOwner}\n                                handleChange={handleChange}\n                            />\n                        ))}\n                    </TableBody>\n                </Table>\n            </Box>\n        </>\n    );\n};\nKeyConfiguration.defaultProps = {\n    notFound: false,\n    validating: false,\n};\nKeyConfiguration.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    keyRequest: PropTypes.shape({\n        callbackUrl: PropTypes.string,\n        selectedGrantTypes: PropTypes.array,\n    }).isRequired,\n    isUserOwner: PropTypes.bool.isRequired,\n    isKeysAvailable: PropTypes.bool.isRequired,\n    keyManagerConfig: PropTypes.any.isRequired,\n    notFound: PropTypes.bool,\n    setGenerateEnabled: PropTypes.func.isRequired,\n    updateKeyRequest: PropTypes.func.isRequired,\n    validating: PropTypes.bool,\n};\n\n\nexport default withStyles(styles)(KeyConfiguration);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport FileCopy from '@material-ui/icons/FileCopy';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst useStyles = makeStyles(theme => ({\n    code: {\n        padding: theme.spacing(1),\n        marginBottom: theme.spacing(2),\n        background: theme.palette.grey[200],\n        color: '#da2316',\n        flex: 1,\n    },\n    command: {\n        color: '#2b62b0',\n    },\n    encodeVisible: {\n        cursor: 'pointer',\n        textDecoration: 'underline',\n    },\n    contentWrapper: {\n        display: 'flex',\n    },\n}));\n\n/**\n *\n * @param {*} props\n */\nfunction ViewCurl(props) {\n    const classes = useStyles();\n\n    const {\n        keys: { consumerKey, consumerSecret },\n        intl,\n        keyType,\n        keyManagerConfig,\n    } = props;\n    const bas64Encoded = window.btoa(consumerKey + ':' + consumerSecret);\n    const [showReal, setShowReal] = useState(false);\n    const [tokenCopied, setTokenCopied] = useState(false);\n    const onCopy = () => {\n        setTokenCopied(true);\n        const caller = function () {\n            setTokenCopied(false);\n        };\n        setTimeout(caller, 4000);\n    };\n\n    const applyReal = () => {\n        setShowReal(!showReal);\n    };\n\n\n    // Check for additional properties for token endpoint and revoke endpoints.\n    const { additionalProperties } = keyManagerConfig;\n    let { tokenEndpoint } = keyManagerConfig;\n    const propPrefix = keyType.toLowerCase();\n    tokenEndpoint = additionalProperties[`${propPrefix}_token_endpoint`] || tokenEndpoint;\n\n    return (\n        <React.Fragment>\n            <Typography>\n                <FormattedMessage\n                    id='Shared.AppsAndKeys.ViewCurl.help'\n                    defaultMessage='The following cURL command shows how to generate an access token using\n                            the Password Grant type.'\n                />\n            </Typography>\n\n            <div className={classes.contentWrapper}>\n                <div className={classes.code}>\n                    <div>\n                        <span className={classes.command}>curl -k -X POST </span> {tokenEndpoint}\n                        <span className={classes.command}> -d </span>{' '}\n                        {'\"grant_type=password&username=Username&password=Password\"'}\n                    </div>\n                    <div>\n                        <span className={classes.command}> -H </span>\n                        {'\"Authorization: Basic'}\n                        <a onClick={applyReal} className={classes.encodeVisible}>\n                            {showReal ? ' ' + bas64Encoded : ' Base64(consumer-key:consumer-secret)'}\n                        </a>\n                        {'\"'}\n                    </div>\n                </div>\n                <div>\n                    <Tooltip\n                        title={\n                            tokenCopied\n                                ? intl.formatMessage({\n                                    defaultMessage: 'Copied',\n                                    id: 'Shared.AppsAndKeys.ViewCurl.copied',\n                                })\n                                : intl.formatMessage({\n                                    defaultMessage: 'Copy to clipboard',\n                                    id: 'Shared.AppsAndKeys.ViewCurl.copy.to.clipboard',\n                                })\n                        }\n                        placement='right'\n                    >\n                        <CopyToClipboard\n                            text={`curl -k -X POST ${tokenEndpoint} -d ` +\n                                '\"grant_type=password&username=Username&password=Password\" -H ' +\n                                `\"Authorization: Basic ${bas64Encoded}\"`}\n                            onCopy={onCopy}\n                        >\n                            <FileCopy color='secondary' />\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n            <Typography>\n                <FormattedMessage\n                    id='Shared.AppsAndKeys.ViewCurl.help.in.a.similar'\n                    defaultMessage={`In a similar manner, you can generate an access token using the\n                    Client Credentials grant type with the following cURL command.`}\n                />\n            </Typography>\n            <div className={classes.contentWrapper}>\n                <div className={classes.code}>\n                    <div>\n                        <span className={classes.command}>curl -k -X POST </span> {tokenEndpoint}\n                        <span className={classes.command}> -d </span>{' '}\n                        {'\"grant_type=client_credentials\"'}\n                    </div>\n                    <div>\n                        <span className={classes.command}> -H </span>\n                        {'\"Authorization: Basic'}\n                        <a onClick={applyReal} className={classes.encodeVisible}>\n                            {showReal ? ' ' + bas64Encoded : ' Base64(consumer-key:consumer-secret)'}\n                        </a>\n                        {'\"'}\n                    </div>\n                </div>\n                <div>\n                    <Tooltip title={tokenCopied ? 'Copied' : 'Copy to clipboard'} placement='right'>\n                        <CopyToClipboard\n                            text={`curl -k -X POST ${tokenEndpoint} -d ` +\n                                '\"grant_type=client_credentials\" -H' +\n                                `\"Authorization: Basic ${bas64Encoded}\"`}\n                            onCopy={onCopy}\n                        >\n                            <FileCopy color='secondary' />\n                        </CopyToClipboard>\n                    </Tooltip>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nViewCurl.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    keys: PropTypes.shape({}).isRequired,\n    apis: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(ViewCurl);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Alert1 from 'AppComponents/Shared/Alert';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Alert from 'AppComponents/Shared/Alert';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport Loading from '../../Base/Loading/Loading';\nimport Application from '../../../data/Application';\nimport Tokens from './Tokens';\nimport ViewToken from './ViewToken';\nimport ViewSecret from './ViewSecret';\nimport ViewCurl from './ViewCurl';\n\nconst styles = (theme) => ({\n    button: {\n        margin: theme.spacing(3),\n        color: theme.palette.getContrastText(theme.palette.background.default),\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '11px',\n        cursor: 'pointer',\n        '& span': {\n            paddingLeft: 6,\n            display: 'inline-block',\n        },\n    },\n    inputWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n        '& span, & h5, & label, & td, & li, & div, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    copyWrapper: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center',\n    },\n    tokenSection: {\n        marginTop: 0,\n        marginBottom: theme.spacing(0.5),\n    },\n    margin: {\n        marginRight: theme.spacing(2),\n    },\n    dialogWrapper: {\n        '& label,& h5, & label, & td, & li, & input, & h2, & p.MuiTypography-root,& p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    iconButton: {\n        padding: '0 0 0 10px',\n        '& .material-icons': {\n            fontSize: 16,\n        },\n    },\n});\n\n/**\n * Class used to displays in key generation UI\n */\nclass ViewKeys extends React.Component {\n    /**\n     * @param {*} props properties\n     */\n    constructor(props) {\n        super(props);\n        const { selectedApp } = this.props;\n        let appId;\n        if (selectedApp) {\n            appId = selectedApp.appId || selectedApp.value;\n        }\n        this.applicationPromise = Application.get(appId);\n        this.state = {\n            showCS: false,\n            open: false,\n            showToken: false,\n            showCurl: false,\n            showSecretGen: false,\n            accessTokenRequest: {\n                timeout: 3600,\n                scopesSelected: [],\n                keyType: '',\n            },\n            subscriptionScopes: [],\n            isUpdating: false,\n        };\n    }\n\n    /**\n     * Fetch Application object by ID coming from URL path params and fetch related keys to display\n     */\n    componentDidMount() {\n        const { accessTokenRequest } = this.state;\n        const { keyType } = this.props;\n        this.applicationPromise\n            .then((application) => {\n                application.getKeys().then(() => {\n                    const newRequest = { ...accessTokenRequest, keyType };\n                    const subscriptionScopes = application.subscriptionScopes\n                        .map((scope) => { return scope.key; });\n                    this.setState({ accessTokenRequest: newRequest, subscriptionScopes });\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n            });\n    }\n\n    /**\n     * Adding this here becasue it is not possible to add in the render method becasue isKeyJWT in state is used\n     * to close the dialog box and render method will casue this to be always true and cannot close the box.\n     * Rule is ignored becasue according to react docs its ok to setstate as long as we are checking a condition\n     * This is an ani pattern to be fixed later.\n     *  wso2/product-apim#5293\n     * https://reactjs.org/docs/react-component.html#componentdidupdate\n     * @param {*} prevProps previous props\n     * @memberof ViewKeys\n     */\n    componentDidUpdate(prevProps) {\n        const { isKeyJWT } = this.props;\n        if (isKeyJWT && !prevProps.isKeyJWT) {\n            // eslint-disable-next-line react/no-did-update-set-state\n            this.setState({ isKeyJWT: true });\n        }\n    }\n\n    /**\n     * Set accesstoken request in state\n     * @param {*} accessTokenRequest access token request object\n     * @memberof ViewKeys\n     */\n    updateAccessTokenRequest = (accessTokenRequest) => {\n        this.setState({ accessTokenRequest });\n    }\n\n    /**\n     * Handle onClick of the copy icon\n     * @param {*} name name of what is copied\n     * */\n    onCopy = (name) => {\n        this.setState({\n            [name]: true,\n        });\n        const that = this;\n        const elementName = name;\n        const caller = () => {\n            that.setState({\n                [elementName]: false,\n            });\n        };\n        setTimeout(caller, 4000);\n    };\n\n    /**\n     * Handle onClick of the show consumer secret icon\n     * @param data\n     * */\n    handleShowHidden = (data) => {\n        this.setState({ [data]: !this.state[data] });\n    };\n\n    /**\n     * Avoid conflict with `onClick`\n     * @param event\n     */\n    handleMouseDownGeneric = (event) => {\n        event.preventDefault();\n    };\n\n    /**\n     * Handle onCLick of generate access token\n     * */\n    handleClickOpen = () => {\n        this.setState({ open: true, showToken: false });\n    };\n\n    /**\n     * Handle onCLick of regenerate consumer secret\n     * */\n    handleSecretRegenerate = (consumerKey, keyType, keyMappingId, selectedTab) => {\n        this.applicationPromise\n            .then((application) => application.regenerateSecret(consumerKey, keyType, keyMappingId, selectedTab))\n            .then((response) => {\n                console.log('consumer secret regenerated successfully ' + response);\n                this.setState({\n                    open: true,\n                    showSecretGen: true,\n                    secretGenResponse: response,\n                });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n            });\n    };\n\n    /**\n     * Handle onClick of get curl\n     * */\n    handleClickOpenCurl = () => {\n        this.setState({ open: true, showCurl: true });\n    };\n\n    /**\n     * Handle on close of dialog for generating access token and get curl\n     * */\n    handleClose = () => {\n        this.setState({\n            open: false, showCurl: false, isKeyJWT: false, showSecretGen: false,\n        });\n    };\n\n    /**\n     * Generate access token\n     * */\n    generateAccessToken = () => {\n        const { accessTokenRequest, isUpdating } = this.state;\n        const { selectedTab, intl } = this.props;\n        this.setState({ isUpdating: true });\n        this.applicationPromise\n            .then((application) => application.generateToken(\n                selectedTab,\n                accessTokenRequest.keyType,\n                accessTokenRequest.timeout,\n                accessTokenRequest.scopesSelected,\n            ))\n            .then((response) => {\n                console.log('token generated successfully ' + response);\n                this.setState({\n                    showToken: true,\n                    tokenResponse: response,\n                    token: response.accessToken,\n                    tokenScopes: response.tokenScopes,\n                    tokenValidityTime: response.validityTime,\n                });\n                this.setState({ isUpdating: false });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 400) {\n                     Alert1.error(error.description ||\n                         intl.formatMessage({\n                             id: 'Shared.AppsAndKeys.TokenManager.key.generate.bad.request.error',\n                              defaultMessage: 'Error occurred when generating Access Token',\n                         })\n                     );\n                }\n                this.setState({ isUpdating: false });\n                const { response } = error;\n                if (response && response.body) {\n                    Alert.error(response.body.message);\n                }\n            });\n    };\n\n    viewKeyAndSecret = (consumerKey, consumerSecret, keyMappingId, selectedTab, isUserOwner) => {\n        const { classes, intl, selectedApp: { hashEnabled }, keyType } = this.props;\n        const { keyCopied, secretCopied, showCS } = this.state;\n        return (\n            <>\n                <Grid item xs={6}>\n                    <div className={classes.copyWrapper}>\n                        <TextField\n                            id='consumer-key'\n                            value={consumerKey}\n                            margin='dense'\n                            label={(\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.ViewKeys.consumer.key'\n                                    defaultMessage='Consumer Key'\n                                />\n                            )}\n                            fullWidth\n                            variant='outlined'\n                            InputProps={{\n                                readOnly: true,\n                                endAdornment: (\n                                    <InputAdornment position='end'>\n                                        <Tooltip\n                                            title={\n                                                keyCopied\n                                                    ? intl.formatMessage({\n                                                        defaultMessage: 'Copied',\n                                                        id: 'Shared.AppsAndKeys.ViewKeys.copied',\n                                                    })\n                                                    : intl.formatMessage({\n                                                        defaultMessage: 'Copy to clipboard',\n                                                        id: 'Shared.AppsAndKeys.ViewKeys.copy.to',\n                                                    })\n                                            }\n                                            placement='right'\n                                        >\n                                            <CopyToClipboard\n                                                text={consumerKey}\n                                                onCopy={() => this.onCopy('keyCopied')}\n                                                classes={{ root: classes.iconButton }}\n                                            >\n                                                <IconButton aria-label='Copy to clipboard' classes={{ root: classes.iconButton }}>\n                                                    <Icon color='secondary'>\n                                                        file_copy\n                                                    </Icon>\n                                                </IconButton>\n                                            </CopyToClipboard>\n                                        </Tooltip>\n                                    </InputAdornment>\n                                ),\n                            }}\n                        />\n                    </div>\n                    <FormControl>\n                        <FormHelperText id='consumer-key-helper-text'>\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.ViewKeys.consumer.key.title'\n                                defaultMessage='Consumer Key of the application'\n                            />\n                        </FormHelperText>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={6}>\n                    <div className={classes.copyWrapper}>\n                        {!hashEnabled ? (\n                            <TextField\n                                id='consumer-secret'\n                                label={(\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ViewKeys.consumer.secret'\n                                        defaultMessage='Consumer Secret'\n                                    />\n                                )}\n                                type={showCS || !consumerSecret ? 'text' : 'password'}\n                                value={consumerSecret}\n                                margin='dense'\n                                fullWidth\n                                variant='outlined'\n                                InputProps={{\n                                    readOnly: true,\n                                    endAdornment: (\n                                        <InputAdornment position='end'>\n                                            <IconButton\n                                                classes={{ root: classes.iconButton }}\n                                                onClick={() => this.handleShowHidden('showCS')}\n                                                onMouseDown={this.handleMouseDownGeneric}\n                                            >\n                                                {showCS ? <Icon>visibility_off</Icon> : <Icon>visibility</Icon>}\n                                            </IconButton>\n                                            <Tooltip\n                                                title={secretCopied ? 'Copied' : 'Copy to clipboard'}\n                                                placement='right'\n                                            >\n                                                <CopyToClipboard\n                                                    text={consumerSecret}\n                                                    onCopy={() => this.onCopy('secretCopied')}\n                                                    classes={{ root: classes.iconButton }}\n                                                >\n                                                    <IconButton aria-label='Copy to clipboard' classes={{ root: classes.iconButton }}>\n                                                        <Icon color='secondary'>file_copy</Icon>\n                                                    </IconButton>\n                                                </CopyToClipboard>\n                                            </Tooltip>\n                                        </InputAdornment>\n                                    ),\n                                }}\n                            />\n                        ) : (\n                                <Button\n                                    variant='contained'\n                                    color='primary'\n                                    className={classes.button}\n                                    onClick={() => this.handleSecretRegenerate(consumerKey, keyType, keyMappingId, selectedTab)}\n                                    disabled={!isUserOwner}\n                                >\n                                    <FormattedMessage\n                                        defaultMessage='Regenerate Consumer Secret'\n                                        id='Shared.AppsAndKeys.ViewKeys.consumer.secret.button.regenerate'\n                                    />\n                                </Button>\n                            )}\n                    </div>\n                    {!hashEnabled && (\n                        <FormControl>\n                            <FormHelperText id='consumer-secret-helper-text'>\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.ViewKeys.consumer.secret.of.application'\n                                    defaultMessage='Consumer Secret of the application'\n                                />\n                            </FormHelperText>\n                        </FormControl>\n                    )}\n                </Grid>\n            </>\n        );\n    }\n\n    /**\n     * @inheritdoc\n     */\n    render() {\n        const {\n            notFound, showToken, showCurl, showSecretGen, tokenCopied, open,\n            token, tokenScopes, tokenValidityTime, accessTokenRequest, subscriptionScopes,\n            isKeyJWT, tokenResponse, secretGenResponse, isUpdating,\n        } = this.state;\n        const {\n            intl, keyType, classes, fullScreen, keys, selectedApp: { tokenType }, selectedGrantTypes, isUserOwner, summary,\n            selectedTab, hashEnabled, keyManagerConfig\n        } = this.props;\n\n        if (notFound) {\n            return <ResourceNotFound />;\n        }\n        if (!keys) {\n            return <Loading />;\n        }\n\n        const csCkKeys = keys.size > 0 && keys.get(selectedTab) && (keys.get(selectedTab).keyType === keyType) && keys.get(selectedTab);\n        const consumerKey = csCkKeys && csCkKeys.consumerKey;\n        const consumerSecret = csCkKeys && csCkKeys.consumerSecret;\n        const keyMappingId = csCkKeys && csCkKeys.keyMappingId;\n\n        let accessToken;\n        let accessTokenScopes;\n        let validityPeriod;\n        let tokenDetails;\n\n        if (token) {\n            accessToken = token;\n            accessTokenScopes = tokenScopes;\n            validityPeriod = tokenValidityTime;\n        } else if (keys.get(selectedTab) && keys.get(selectedTab).keyType === keyType && keys.get(selectedTab).token) {\n            ({ accessToken } = keys.get(selectedTab).token);\n            accessTokenScopes = keys.get(selectedTab).token.tokenScopes;\n            validityPeriod = keys.get(selectedTab).token.validityTime;\n            tokenDetails = keys.get(selectedTab).token;\n        }\n\n        let dialogHead = 'Undefined';\n        if (showCurl) {\n            dialogHead = 'Get CURL to Generate Access Token';\n        } else if (showSecretGen) {\n            dialogHead = 'Generate Consumer Secret';\n        } else {\n            dialogHead = 'Generate Access Token';\n        }\n        if (!consumerKey) {\n            return (\n                <Typography variant='caption' gutterBottom>\n                    {keyType === 'PRODUCTION' ? 'Production ' : 'Sandbox '}\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.ViewKeys.key.secret.title'\n                        defaultMessage='Key and Secret is not generated for this application'\n                    />\n                </Typography>\n            );\n        }\n        if (summary) {\n            return (\n                <Grid container spacing={3}>\n                    {this.viewKeyAndSecret(consumerKey, consumerSecret, keyMappingId, selectedTab, isUserOwner)}\n                </Grid>\n            );\n        }\n        return consumerKey && (\n            <div className={classes.inputWrapper}>\n                <Grid container spacing={3}>\n                    {this.viewKeyAndSecret(consumerKey, consumerSecret, keyMappingId, selectedTab, isUserOwner)}\n                    <Grid item xs={12}>\n                        <Dialog\n                            fullScreen={fullScreen}\n                            open={(open || isKeyJWT) && selectedGrantTypes.includes('client_credentials')}\n                            onClose={this.handleClose}\n                            aria-labelledby='responsive-dialog-title'\n                            className={classes.dialogWrapper}\n                        >\n                            <DialogTitle id='responsive-dialog-title'>\n                                {dialogHead}\n                            </DialogTitle>\n                            <DialogContent>\n                                {!showCurl && !isKeyJWT && !showSecretGen && (\n                                    <DialogContentText>\n                                        {!showToken && (\n                                            <Tokens\n                                                updateAccessTokenRequest={this.updateAccessTokenRequest}\n                                                accessTokenRequest={accessTokenRequest}\n                                                subscriptionScopes={subscriptionScopes}\n                                            />\n                                        )}\n                                        {showToken && <ViewToken token={{ ...tokenResponse, isOauth: true }} />}\n                                    </DialogContentText>\n                                )}\n                                {showCurl && (\n                                    <DialogContentText>\n                                        <ViewCurl \n                                            keys={{ consumerKey, consumerSecret }} \n                                            keyType={keyType} \n                                            keyManagerConfig={keyManagerConfig} \n                                        />\n                                    </DialogContentText>\n                                )}\n                                {showSecretGen && (\n                                    <DialogContentText>\n                                        <ViewSecret secret={{ ...secretGenResponse }} />\n                                    </DialogContentText>\n                                )}\n                                {(isKeyJWT && tokenDetails && hashEnabled) && (\n                                    <DialogContentText>\n                                        <ViewToken token={{ ...tokenDetails, isOauth: true }} consumerSecret={consumerSecret} />\n                                    </DialogContentText>\n                                )}\n                                {(isKeyJWT && tokenDetails && !hashEnabled) && (\n                                    <DialogContentText>\n                                        <ViewToken token={{ ...tokenDetails, isOauth: true }} />\n                                    </DialogContentText>\n                                )}\n                            </DialogContent>\n                            <DialogActions>\n                                {isUpdating && <CircularProgress size={24} />}\n                                {!showToken && !showCurl && !isKeyJWT && !showSecretGen && (\n                                    <Button onClick={this.generateAccessToken} color='primary' disabled={isUpdating}>\n                                        <FormattedMessage\n                                            id='Shared.AppsAndKeys.ViewKeys.consumer.generate.btn'\n                                            defaultMessage='Generate'\n                                        />\n                                    </Button>\n                                )}\n                                <Button onClick={this.handleClose} color='primary' autoFocus>\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ViewKeys.consumer.close.btn'\n                                        defaultMessage='Close'\n                                    />\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                        {!hashEnabled && (\n                            <div className={classes.tokenSection}>\n                                {keyManagerConfig.enableTokenGeneration &&\n                                    selectedGrantTypes.find(a => a.includes('client_credentials')) &&\n                                    (<Button\n                                        variant='outlined'\n                                        size='small'\n                                        color='primary'\n                                        className={classes.margin}\n                                        onClick={this.handleClickOpen}\n                                        disabled={!selectedGrantTypes.includes('client_credentials')}\n                                    >\n                                        <FormattedMessage\n                                            id='Shared.AppsAndKeys.ViewKeys.generate.access.token'\n                                            defaultMessage='Generate Access Token'\n                                        />\n                                    </Button>)}\n                                <Button\n                                    variant='outlined'\n                                    size='small'\n                                    color='primary'\n                                    className={classes.margin}\n                                    onClick={this.handleClickOpenCurl}\n                                >\n                                    <FormattedMessage\n                                        id='Shared.AppsAndKeys.ViewKeys.curl.to.generate'\n                                        defaultMessage='CURL to Generate Access Token'\n                                    />\n                                </Button>\n                            </div>\n                        )}\n                        {!selectedGrantTypes.includes('client_credentials') && !hashEnabled && (\n                            <Typography variant='caption' gutterBottom>\n                                <FormattedMessage\n                                    id='Shared.AppsAndKeys.ViewKeys.client.enable.client.credentials'\n                                    defaultMessage={'Enable Client Credentials grant '\n                                        + 'type to generate test access tokens'}\n                                />\n                            </Typography>\n                        )}\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\nViewKeys.defaultProps = {\n    fullScreen: false,\n    summary: false,\n};\nViewKeys.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    fullScreen: PropTypes.bool,\n    isKeyJWT: PropTypes.bool.isRequired,\n    isUserOwner: PropTypes.bool.isRequired,\n    summary: PropTypes.bool,\n};\n\nexport default injectIntl(withStyles(styles)(ViewKeys));\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { injectIntl } from 'react-intl';\n\nconst styles = theme => ({\n    root: {\n        padding: theme.spacing(3),\n    },\n});\n\nconst waitingForApproval = (props) => {\n    const {\n        classes, keyState, states, intl,\n    } = props;\n    let message = intl.formatMessage({\n        defaultMessage: 'A request to register this application has been sent and is pending approval.',\n        id: 'Shared.AppsAndKeys.WaitingForApproval.msg.ok',\n    });\n    if (keyState === states.REJECTED) {\n        message = intl.formatMessage({\n            defaultMessage: 'This application has been rejected from generating keys',\n            id: 'Shared.AppsAndKeys.WaitingForApproval.msg.reject',\n        });\n    }\n    return <div className={classes.root}>{message}</div>;\n};\n\nexport default injectIntl(withStyles(styles)(waitingForApproval));\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport WaitingForApproval from './WaitingForApproval';\nimport ViewKeys from './ViewKeys';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(3, 2),\n    },\n    noKeysRoot: {\n        backgroundImage: `url(${app.context + theme.custom.overviewPage.keysBackground})`,\n        height: '100%',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: 192,\n        display: 'flex',\n        alignItems: 'center',\n    },\n}));\n\n/**\n * Render a compressed view of the key gneration view.\n * @param {JSON} props Input params.\n * @returns {JSX} Rendered output.\n */\nexport default function TokenManagerSummary(props) {\n    const classes = useStyles();\n    const { keys, keyStates, key, selectedApp, keyType, isKeyJWT, isUserOwner, selectedTab } = props;\n    if (keys.size > 0 && key && key.keyState === 'APPROVED' && !key.consumerKey) {\n        return (\n            <div className={classes.emptyBox}>\n                <Typography variant=\"h5\" component=\"h3\">\n                    Error\n                </Typography>\n                <Typography variant='body2'>\n                    <FormattedMessage\n                        id='Shared.AppsAndKeys.TokenManagerSummary'\n                        defaultMessage='Error! You have partially-created keys. Use `Clean Up` option.'\n                    />\n                </Typography>\n            </div>\n        );\n    }\n    if (key && (key.keyState === keyStates.CREATED || key.keyState === keyStates.REJECTED)) {\n        return (\n            <div className={classes.emptyBox}>\n                <Typography variant='body2'>\n                    <WaitingForApproval keyState={key.keyState} states={keyStates} />\n                </Typography>\n            </div>\n        );\n    }\n    const keyGrantTypes = key ? key.supportedGrantTypes : [];\n\n    return (\n        <ViewKeys\n            selectedApp={selectedApp}\n            selectedTab={selectedTab}\n            keyType={keyType}\n            keys={keys}\n            isKeyJWT={isKeyJWT}\n            selectedGrantTypes={keyGrantTypes}\n            isUserOwner={isUserOwner}\n            summary\n        />\n    );\n}\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Alert from 'AppComponents/Shared/Alert';\nimport ImportExternalApp from 'AppComponents/Shared/AppsAndKeys/ImportExternalApp';\nimport Application from 'AppData/Application';\nimport AuthManager from 'AppData/AuthManager';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport API from 'AppData/api';\nimport KeyConfiguration from './KeyConfiguration';\nimport ViewKeys from './ViewKeys';\nimport WaitingForApproval from './WaitingForApproval';\nimport { ScopeValidation, resourceMethods, resourcePaths } from '../ScopeValidation';\nimport TokenMangerSummary from './TokenManagerSummary';\nimport Progress from '../Progress';\n\nconst styles = (theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        '& span, & h6, & label, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n        '& input:disabled': {\n            backgroundColor: '#f8f8f8',\n            color: '#9d9d9d',\n        },\n        position: 'relative',\n    },\n    button: {\n        marginLeft: 0,\n        '& span': {\n            color: theme.palette.getContrastText(theme.palette.primary.main),\n        },\n    },\n    cleanUpButton: {\n        marginLeft: 15,\n    },\n    cleanUpInfoText: {\n        padding: '10px 0px 10px 15px',\n    },\n    tokenSection: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n    },\n    margin: {\n        marginRight: theme.spacing(2),\n    },\n    keyConfigWrapper: {\n        flexDirection: 'column',\n        marginBottom: 0,\n    },\n    generateWrapper: {\n        padding: '10px 0px',\n        marginLeft: theme.spacing(1.25),\n    },\n    paper: {\n        background: 'none',\n        marginBottom: theme.spacing(2),\n        marginTop: theme.spacing(2),\n    },\n    muiFormGroupRoot: {\n        flexDirection: 'row',\n    },\n    formControl: {\n    },\n    subTitle: {\n        fontWeight: 400,\n    },\n    tabPanel: {\n        paddingLeft: theme.spacing(2),\n        '& .MuiBox-root': {\n            padding: 0,\n        }\n    },\n    warningIcon: {\n        color: '#ff9a00',\n        fontSize: 20,\n        marginRight: 10,\n    },\n});\n\nfunction TabPanel(props) {\n    const {\n        children, value, index, ...other\n    } = props;\n\n    return (\n        <div\n            role='tabpanel'\n            hidden={value !== index}\n            id={`nav-tabpanel-${index}`}\n            aria-labelledby={`nav-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    {children}\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nconst StyledTabs = withStyles({\n    indicator: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundColor: 'transparent',\n        '& > span': {\n            width: '98%',\n            backgroundColor: '#ffffff',\n        },\n        transition: 'none',\n    },\n    flexContainer: {\n        borderBottom: 'solid 1px #666',\n        backgroundColor: '#efefef',\n        '& button:first-child': {\n            borderLeft: 'none',\n        }\n    },\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\n\n\nconst StyledTab = withStyles((theme) => ({\n    root: {\n        textTransform: 'none',\n        color: '#666',\n        fontWeight: theme.typography.fontWeightRegular,\n        fontSize: theme.typography.pxToRem(15),\n        marginRight: theme.spacing(1),\n        '&:focus': {\n            opacity: 1,\n        },\n    },\n    selected: {\n        backgroundColor: '#fff',\n        borderLeft: 'solid 1px #666',\n        borderRight: 'solid 1px #666',\n    },\n}))((props) => <Tab disableRipple {...props} />);\n\n/**\n *  @param {event} event event\n *  @param {String} value description\n */\nclass TokenManager extends React.Component {\n    static contextType = Settings;\n\n    /**\n     *\n     * @param {*} props props\n     */\n    constructor(props) {\n        super(props);\n        const { selectedApp, keyType } = this.props;\n        this.state = {\n            isLoading: false,\n            keys: null,\n            isKeyJWT: false,\n            keyRequest: {\n                keyType,\n                selectedGrantTypes: null,\n                callbackUrl: '',\n                additionalProperties: {},\n                keyManager: '',\n                validityTime: 3600,\n                scopes: ['default'],\n            },\n            keyManagers: null,\n            selectedTab: null,\n            providedConsumerKey: '',\n            providedConsumerSecret: '',\n            validating: false,\n        };\n        this.keyStates = {\n            COMPLETED: 'COMPLETED',\n            APPROVED: 'APPROVED',\n            CREATED: 'CREATED',\n            REJECTED: 'REJECTED',\n        };\n        if (selectedApp) {\n            this.appId = selectedApp.appId || selectedApp.value;\n            this.application = Application.get(this.appId);\n        }\n        this.updateKeyRequest = this.updateKeyRequest.bind(this);\n        this.generateKeys = this.generateKeys.bind(this);\n        this.updateKeys = this.updateKeys.bind(this);\n        this.cleanUpKeys = this.cleanUpKeys.bind(this);\n        this.handleOnChangeProvidedOAuth = this.handleOnChangeProvidedOAuth.bind(this);\n        this.provideOAuthKeySecret = this.provideOAuthKeySecret.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof TokenManager\n     */\n    componentDidMount() {\n        this.loadApplication();\n    }\n    componentDidUpdate(nextProps) {\n        const { keyType: nextKeyType } = nextProps;\n        const { keyType: prevKeyType } = this.props;\n        if(nextKeyType !== prevKeyType) {\n            this.loadApplication();\n        }\n    }\n    getDefaultAdditionalProperties(selectedKM) {\n        const { availableGrantTypes, applicationConfiguration } = selectedKM;\n        // Fill the keyRequest.additionalProperties from the selectedKM.applicationConfiguration defaultValues.\n        const additionalProperties = {};\n\n        applicationConfiguration.forEach(confItem => {\n            additionalProperties[confItem.name] = confItem.default || '';\n        });\n        return additionalProperties;\n    }\n    handleTabChange = (event, newSelectedTab) => {\n        const { keys, keyManagers, keyRequest } = this.state;\n        const { keyType } = this.props;\n        const selectedKM = keyManagers.find(x => x.name === newSelectedTab);\n        const { availableGrantTypes } = selectedKM;\n\n        if (keys.size > 0 && keys.get(newSelectedTab) && keys.get(newSelectedTab).keyType === keyType) {\n            const { callbackUrl, supportedGrantTypes, additionalProperties } = keys.get(newSelectedTab);\n            const newRequest = {\n                ...keyRequest,\n                callbackUrl,\n                selectedGrantTypes: supportedGrantTypes || availableGrantTypes.filter(type => (type !== 'authorization_code' && type !== 'implicit')),\n                additionalProperties: additionalProperties || this.getDefaultAdditionalProperties(selectedKM),\n            };\n            this.setState({ keyRequest: newRequest, selectedTab: newSelectedTab });\n        } else {\n            // Fill the keyRequest.additionalProperties from the selectedKM.applicationConfiguration defaultValues.\n            this.setState({\n                keyRequest: {\n                    ...keyRequest,\n                    selectedGrantTypes: availableGrantTypes.filter(type => (type !== 'authorization_code' && type !== 'implicit')),\n                    additionalProperties: this.getDefaultAdditionalProperties(selectedKM)\n                },\n                selectedTab: newSelectedTab,\n            });\n        }\n    };\n\n    /**\n     * load application key generation ui\n     */\n    loadApplication = () => {\n        const { keyType } = this.props;\n        if (this.appId) {\n            const api = new API();\n            const promisedKeyManagers = api.getKeyManagers();\n            const promisedGetKeys = this.application\n                .then((application) => application.getKeys(keyType));\n            Promise.all([promisedKeyManagers, promisedGetKeys])\n                .then((response) => {\n                    // processing promisedKeyManagers response\n                    const responseKeyManagerList = [];\n                    response[0].body.list.map((item) => {\n                        if (item.enabled) responseKeyManagerList.push(item);\n                    });\n\n                    if (responseKeyManagerList.length === 0) {\n                        this.setState({ keyManagers: [] });\n                        return;\n                    }\n                    // Selecting a key manager from the list of key managers.\n                    let { selectedTab } = this.state;\n                    if (!selectedTab && responseKeyManagerList.length > 0) {\n                        selectedTab = !!responseKeyManagerList.find(x => x.name === 'Resident Key Manager') ? 'Resident Key Manager'\n                            : responseKeyManagerList[0].name;\n                    }\n                    const selectdKM = responseKeyManagerList.find(x => x.name === selectedTab);\n                    // processing promisedGetKeys response\n                    const keys = response[1];\n                    const { keyRequest } = this.state;\n\n                    if (keys.size > 0 && keys.get(selectedTab) && keys.get(selectedTab).keyType === keyType) {\n                        const { callbackUrl, supportedGrantTypes, additionalProperties } = keys.get(selectedTab);\n                        const newRequest = {\n                            ...keyRequest,\n                            callbackUrl: callbackUrl || '',\n                            selectedGrantTypes: supportedGrantTypes || [],\n                            additionalProperties: additionalProperties || this.getDefaultAdditionalProperties(selectdKM),\n                        };\n                        this.setState({ keys, keyRequest: newRequest, keyManagers: responseKeyManagerList, selectedTab });\n                    } else {\n                        const selectdKMGrants = selectdKM.availableGrantTypes || [];\n\n                        this.setState({\n                            keys,\n                            keyRequest: {\n                                ...keyRequest,\n                                selectedGrantTypes: selectdKMGrants.filter(type => (type !== 'authorization_code' && type !== 'implicit')),\n                                additionalProperties: this.getDefaultAdditionalProperties(selectdKM),\n                            },\n                            keyManagers: responseKeyManagerList,\n                            selectedTab\n                        });\n                    }\n                })\n                .catch((error) => {\n                    if (process.env.NODE_ENV !== 'production') {\n                        console.error(error);\n                    }\n                    if (error.status === 404) {\n                        this.setState({ notFound: true });\n                    }\n                });\n        }\n    }\n\n    /**\n     * Update keyRequest state\n     * @param {Object} keyRequest parameters requried for key generation request\n     */\n    updateKeyRequest(keyRequest) {\n        this.setState({ keyRequest });\n    }\n\n    /**\n     * Generate keys for application,\n     *\n     * @memberof KeyConfiguration\n     */\n    generateKeys() {\n        const { keyRequest, keys, selectedTab } = this.state;\n        const {\n            keyType, updateSubscriptionData, selectedApp: { tokenType, hashEnabled }, intl,\n        } = this.props;\n\n        if ((keyRequest.selectedGrantTypes.includes('implicit')\n            || keyRequest.selectedGrantTypes.includes('authorization_code')) && keyRequest.callbackUrl === '') {\n            Alert.error(intl.formatMessage({\n                id: 'Shared.AppsAndKeys.TokenManager.key.generate.error.callbackempty',\n                defaultMessage: 'Callback URL can not be empty when the Implicit or Application Code grant types selected',\n            }));\n            this.setValidating(true);\n            return;\n        }\n        this.setState({ isLoading: true });\n\n        this.application\n            .then((application) => {\n                return application.generateKeys(\n                    keyType, keyRequest.selectedGrantTypes,\n                    keyRequest.callbackUrl,\n                    keyRequest.additionalProperties, selectedTab,\n                );\n            })\n            .then((response) => {\n                if (updateSubscriptionData) {\n                    updateSubscriptionData();\n                }\n                const newKeys = new Map([...keys]);\n                // in case token hashing is enabled, isKeyJWT is set to true even if the token type is JWT.\n                // This is to mimic the behavior of JWT tokens (by showing the token in a dialog)\n                const isKeyJWT = (tokenType === 'JWT') || hashEnabled;\n                newKeys.set(selectedTab, response);\n                this.setState({ keys: newKeys, isKeyJWT });\n                if (response.keyState === this.keyStates.CREATED || response.keyState === this.keyStates.REJECTED) {\n                    Alert.info(intl.formatMessage({\n                        id: 'Shared.AppsAndKeys.TokenManager.key.generate.success.blocked',\n                        defaultMessage: 'Application keys generate request is currently pending approval by the site administrator.',\n                    }));\n                } else {\n                    Alert.info(intl.formatMessage({\n                        id: 'Shared.AppsAndKeys.TokenManager.key.generate.success',\n                        defaultMessage: 'Application keys generated successfully',\n                    }));\n                }\n                \n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 500) {\n                    this.loadApplication();\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.generate.error',\n                    defaultMessage: 'Error occurred when generating application keys',\n                }));\n            }).finally(() => this.setState({ isLoading: false }));\n    }\n\n    /**\n     *\n     * @memberof KeyConfiguration\n     */\n    updateKeys() {\n        this.setState({ isLoading: true });\n        const { keys, keyRequest, selectedTab } = this.state;\n        const { keyType, intl } = this.props;\n        const applicationKey = (keys.get(selectedTab).keyType === keyType) && keys.get(selectedTab);\n        this.application\n            .then((application) => {\n                return application.updateKeys(\n                    applicationKey.tokenType,\n                    keyType,\n                    keyRequest.selectedGrantTypes,\n                    keyRequest.callbackUrl,\n                    applicationKey.consumerKey,\n                    applicationKey.consumerSecret,\n                    keyRequest.additionalProperties,\n                    selectedTab,\n                    applicationKey.keyMappingId,\n                );\n            })\n            .then((response) => {\n                const newKeys = new Map([...keys]);\n                newKeys.set(selectedTab, response);\n                this.setState({ keys: newKeys });\n                Alert.info(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.update.success',\n                    defaultMessage: 'Application keys updated successfully',\n                }));\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                } else if (status === 500) {\n                    this.loadApplication();\n                }\n                const { response } = error;\n                if (response && response.body) {\n                    Alert.error(response.body.message);\n                }\n            }).finally(() => this.setState({ isLoading: false }));\n    }\n\n    /**\n     * Cleanup application keys\n     */\n    cleanUpKeys(selectedTab, keyMappingId) {\n        const { keyType, intl } = this.props;\n        this.application\n            .then((application) => {\n                return application.cleanUpKeys(keyType, selectedTab, keyMappingId);\n            })\n            .then(() => {\n                this.loadApplication();\n                Alert.info(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.cleanup.success',\n                    defaultMessage: 'Application keys cleaned successfully',\n                }));\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.cleanup.error',\n                    defaultMessage: 'Error occurred while cleaning up application keys',\n                }));\n            });\n    }\n\n    /**\n     * Handle on change of provided consumer key and consumer secret\n     *\n     * @param event onChange event\n     */\n    handleOnChangeProvidedOAuth(event) {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    /**\n     * Provide consumer key and secret of an existing OAuth app to an application\n     */\n    provideOAuthKeySecret() {\n        const { keyType, intl } = this.props;\n        const { providedConsumerKey, providedConsumerSecret, selectedTab } = this.state;\n\n        this.application\n            .then((application) => {\n                return application.provideKeys(keyType, providedConsumerKey, providedConsumerSecret, selectedTab);\n            })\n            .then(() => {\n                this.setState({ providedConsumerKey: '', providedConsumerSecret: '' });\n                Alert.info(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.provide.success',\n                    defaultMessage: 'Application keys provided successfully',\n                }));\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Shared.AppsAndKeys.TokenManager.key.provide.error',\n                    defaultMessage: 'Error occurred when providing application keys',\n                }));\n            });\n    }\n    getKeyManagerDescription() {\n        const { keyManagers, selectedTab } = this.state;\n        const selectedKMObject = keyManagers.filter(item => item.name === selectedTab);\n        if (selectedKMObject && selectedKMObject.length === 1) {\n            return selectedKMObject[0].description;\n        }\n        return '';\n    }\n    setValidating(validatingState) {\n        this.setState({ validating: validatingState });\n    }\n    toTitleCase = (str) => {\n        return str.replace(\n            /\\w\\S*/g,\n            function (txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }\n        );\n    };\n    /**\n     *  @returns {Component}\n     * @memberof Tokenemanager\n     */\n    render() {\n        const {\n            classes, selectedApp, keyType, summary, selectedApp: { hashEnabled },\n        } = this.props;\n        const {\n            keys, keyRequest, isLoading, isKeyJWT, providedConsumerKey,\n            providedConsumerSecret, selectedTab, keyManagers, validating,\n        } = this.state;\n        if (keyManagers && keyManagers.length === 0) {\n            return <div className={classes.root}>\n                <Box mb={1}>\n                    <Typography variant='h5' className={classes.keyTitle}>\n                        {this.toTitleCase(keyType)}\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.TokenManager.oauth2.keys.main.title'\n                            defaultMessage=' OAuth2 Keys'\n                        />\n                    </Typography>\n                </Box>\n                <InlineMessage type='info' className={classes.dialogContainer}>\n                    <Typography variant='h5' component='h3'>\n                        <FormattedMessage id='Shared.AppsAndKeys.TokenManager.no.km' defaultMessage='No Key Managers' />\n                    </Typography>\n                    <Typography component='p'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.TokenManager.no.km.content'\n                            defaultMessage='No Key Managers active to generate keys.'\n                        />\n                    </Typography>\n                </InlineMessage>\n            </div>\n        }\n        if (!keys || !selectedTab || !keyRequest.selectedGrantTypes) {\n            return <Loading />;\n        }\n        const username = AuthManager.getUser().name;\n        let isUserOwner = false;\n\n        if (selectedApp.owner && username.toLowerCase() === selectedApp.owner.toLowerCase()) {\n            isUserOwner = true;\n        }\n        const key = keys.size > 0 && keys.get(selectedTab) && (keys.get(selectedTab).keyType === keyType) ? keys.get(selectedTab) : null;\n\n        if (summary) {\n            if (keys) {\n                return (\n                    <TokenMangerSummary\n                        keys={keys}\n                        key={key}\n                        keyStates={this.keyStates}\n                        selectedApp={selectedApp}\n                        selectedTab={selectedTab}\n                        keyType={keyType}\n                        isKeyJWT={isKeyJWT}\n                        isUserOwner={isUserOwner}\n                    />\n                );\n            } else {\n                return (<Progress />);\n            }\n        }\n        if (key && key.keyState === 'APPROVED' && !key.consumerKey) {\n            return (\n                <>\n                    <Typography className={classes.cleanUpInfoText} variant='subtitle1'>\n                        <FormattedMessage\n                            id='Shared.AppsAndKeys.TokenManager.cleanup.text'\n                            defaultMessage='Error! You have partially-created keys.\n                            Please click `Clean Up` button and try again.'\n                        />\n                    </Typography>\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        className={classes.cleanUpButton}\n                        onClick={this.cleanUpKeys(selectedTab, keys.get(selectedTab).keyMappingId)}\n                    >\n                        <FormattedMessage\n                            defaultMessage='Clean up'\n                            id='Shared.AppsAndKeys.TokenManager.cleanup'\n                        />\n                    </Button>\n                </>\n            );\n        }\n        if (key && (key.keyState === this.keyStates.CREATED || key.keyState === this.keyStates.REJECTED)) {\n            return <WaitingForApproval keyState={key.keyState} states={this.keyStates} />;\n        }\n        return (\n            <>\n                {(keyManagers && keyManagers.length > 1) && (<StyledTabs\n                    value={selectedTab}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    onChange={this.handleTabChange}\n                    aria-label='key manager tabs'\n                >\n                    {keyManagers.map((keymanager) => (\n                        <StyledTab label={keymanager.displayName || keymanager.name} value={keymanager.name} disabled={!keymanager.enabled} />\n                    ))}\n                </StyledTabs>)}\n                <div className={classes.root}>\n                    <Box mb={1}>\n                        <Typography variant='h5' className={classes.keyTitle}>\n                            {this.toTitleCase(keyType)}\n                            <FormattedMessage\n                                id='Shared.AppsAndKeys.TokenManager.oauth2.keys.main.title'\n                                defaultMessage=' OAuth2 Keys'\n                            />\n                        </Typography>\n                    </Box>\n                    {(keyManagers && keyManagers.length > 0) && keyManagers.map(keymanager => (\n                        <TabPanel value={selectedTab} index={keymanager.name} className={classes.tabPanel}>\n                            <Box display='flex' flexDirection='row'>\n                                <Typography className={classes.heading} variant='h6' component='h6' className={classes.subTitle}>\n                                    <FormattedMessage\n                                        defaultMessage='Key and Secret'\n                                        id='Shared.AppsAndKeys.TokenManager.key.and.secret'\n                                    />\n                                </Typography>\n                                {\n                                    keymanager.enableMapOAuthConsumerApps && (\n                                        <Box ml={2}>\n                                            <ImportExternalApp\n                                                onChange={this.handleOnChangeProvidedOAuth}\n                                                consumerKey={providedConsumerKey}\n                                                consumerSecret={providedConsumerSecret}\n                                                isUserOwner={isUserOwner}\n                                                key={key}\n                                                provideOAuthKeySecret={this.provideOAuthKeySecret}\n                                            />\n                                        </Box>\n                                    )\n                                }\n                            </Box>\n                            <Box m={2}>\n                                <ViewKeys\n                                    selectedApp={selectedApp}\n                                    selectedTab={selectedTab}\n                                    keyType={keyType}\n                                    keys={keys}\n                                    isKeyJWT={isKeyJWT}\n                                    selectedGrantTypes={keyRequest.selectedGrantTypes}\n                                    isUserOwner={isUserOwner}\n                                    hashEnabled={keymanager.enableTokenHashing || hashEnabled}\n                                    keyManagerConfig={keymanager}\n                                />\n                            </Box>\n                            <Typography className={classes.heading} variant='h6' component='h6' className={classes.subTitle}>\n                                {\n                                    key\n                                        ? (\n                                            <FormattedMessage\n                                                defaultMessage='Key Configurations'\n                                                id='Shared.AppsAndKeys.TokenManager.update.configuration'\n                                            />\n                                        )\n                                        : (\n                                            <FormattedMessage\n                                                defaultMessage='Key Configuration'\n                                                id='Shared.AppsAndKeys.TokenManager.key.configuration'\n                                            />\n                                        )\n                                }\n                            </Typography>\n                            <Box m={2}>\n                                <KeyConfiguration\n                                    keys={keys}\n                                    key={key}\n                                    selectedApp={selectedApp}\n                                    selectedTab={selectedTab}\n                                    keyType={keyType}\n                                    updateKeyRequest={this.updateKeyRequest}\n                                    keyRequest={keyRequest}\n                                    isUserOwner={isUserOwner}\n                                    isKeysAvailable={key}\n                                    keyManagerConfig={keymanager}\n                                    validating={validating}\n                                />\n                                <div className={classes.generateWrapper}>\n                                    <ScopeValidation\n                                        resourcePath={resourcePaths.APPLICATION_GENERATE_KEYS}\n                                        resourceMethod={resourceMethods.POST}\n                                    >\n                                        {!isUserOwner ? (\n                                            <>\n                                                <Button\n                                                    variant='contained'\n                                                    color='primary'\n                                                    className={classes.button}\n                                                    onClick={\n                                                        key ? this.updateKeys : this.generateKeys\n                                                    }\n                                                    disabled={!isUserOwner || isLoading || !keymanager.enableOAuthAppCreation}\n                                                >\n                                                    {key ? 'Update keys' : 'Generate Keys'}\n                                                    {isLoading && <CircularProgress size={20} />}\n                                                </Button>\n                                                <Typography variant='caption'>\n                                                    <FormattedMessage\n                                                        defaultMessage='Only owner can generate or update keys'\n                                                        id='Shared.AppsAndKeys.TokenManager.key.and.user.owner'\n                                                    />\n                                                </Typography>\n                                            </>\n                                        ) : (\n                                                <Box display='flex'>  \n                                                    <Button\n                                                        variant='contained'\n                                                        color='primary'\n                                                        className={classes.button}\n                                                        onClick={key ? this.updateKeys : this.generateKeys}\n                                                        disabled={isLoading || !keymanager.enableOAuthAppCreation}\n                                                    >\n                                                        {key ? 'Update' : 'Generate Keys'}\n                                                        {isLoading && <CircularProgress size={20} />}\n                                                    </Button>\n                                                    {!keymanager.enableOAuthAppCreation && (<Box m={2} display='flex'>\n                                                        <WarningIcon className={classes.warningIcon} />\n                                                        <Typography variant=\"body1\">\n                                                            <FormattedMessage\n                                                                defaultMessage='Oauth app creation disabled for {kmName} key manager'\n                                                                id='Shared.AppsAndKeys.TokenManager.app.creation.disable.warn'\n                                                                values={{ kmName: keymanager.displayName || keymanager.name }}\n                                                            />\n                                                        </Typography>\n                                                    </Box>)}\n                                                </Box>\n                                            )}\n                                    </ScopeValidation>\n                                </div>\n\n                            </Box>\n                        </TabPanel>\n                    ))}\n                </div>\n            </>\n        );\n    }\n}\nTokenManager.defaultProps = {\n    updateSubscriptionData: () => { },\n    summary: false,\n};\nTokenManager.propTypes = {\n    classes: PropTypes.instanceOf(Object).isRequired,\n    selectedApp: PropTypes.shape({\n        tokenType: PropTypes.string.isRequired,\n        appId: PropTypes.string,\n        value: PropTypes.string,\n        owner: PropTypes.string,\n        hashEnabled: PropTypes.bool,\n    }).isRequired,\n    keyType: PropTypes.string.isRequired,\n    updateSubscriptionData: PropTypes.func,\n    intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n    summary: PropTypes.bool,\n};\n\nexport default injectIntl(withStyles(styles)(TokenManager));\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\n\nexports.default = _default;","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from 'react';\nimport { injectIntl } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Validation from 'AppData/Validation';\n\n// Styles for Grid and Paper elements\nconst styles = theme => ({\n    FormControl: {\n        'margin-bottom': '8px',\n        width: '100%',\n        padding: '0px 10px',\n    },\n});\n\n/**\n * Used to display generate api key in UI\n */\nconst tokens = (props) => {\n    const [infiniteValidity, setInfiniteValidity] = useState(true);\n    const [invalidTimeout, setInvaildTimeout] = useState(false);\n\n    /**\n    * This method is used to handle the updating of create api key\n    * request object.\n    * @param {*} field\n    * @param {*} event event fired\n    */\n    const handleChange = (field, event) => {\n        const { accessTokenRequest, updateAccessTokenRequest } = props;\n        const newRequest = { ...accessTokenRequest };\n\n        const { target: currentTarget } = event;\n\n        switch (field) {\n            case 'infiniteValidity':\n                setInfiniteValidity(currentTarget.checked);\n                if (currentTarget.checked) {\n                    newRequest.timeout = -1;\n                } else {\n                    newRequest.timeout = null;\n                }\n                break;\n            case 'timeout':\n                if (Validation.number.validate(currentTarget.value).error === undefined) {\n                    newRequest.timeout = currentTarget.value;\n                    setInvaildTimeout(false);\n                } else {\n                    newRequest.timeout = null;\n                    setInvaildTimeout(true);\n                }\n                break;\n            default:\n                break;\n        }\n        updateAccessTokenRequest(newRequest);\n    };\n    const { classes, intl, accessTokenRequest } = props;\n\n    return (\n        <React.Fragment>\n            <FormControl margin='normal' className={classes.FormControl}>\n                <FormControlLabel\n                    control={<Checkbox\n                        checked={infiniteValidity}\n                        onChange={e => handleChange('infiniteValidity', e)}\n                        value={accessTokenRequest.timeout}\n                        color='primary'\n                    />}\n                    label='API Key with infinite validity period'\n                />\n                {!infiniteValidity && <TextField\n                    required\n                    label={intl.formatMessage({\n                        defaultMessage: 'API Key validity period',\n                        id: 'Shared.AppsAndKeys.Tokens.apikey',\n                    })}\n                    InputLabelProps={{\n                        shrink: true,\n                    }}\n                    helperText={\n                        invalidTimeout ? (\n                            intl.formatMessage({\n                                defaultMessage: 'Please use a valid number for API Key expiry time',\n                                id: 'Shared.AppsAndKeys.Tokens.apikey.set.validity.error',\n                            })\n                        ) : (\n                            intl.formatMessage({\n                                defaultMessage: 'You can set an expiration period to determine the validity period of '\n                                + 'the token after generation. Set this as -1 to ensure that the '\n                                + 'apikey never expires.',\n                                id: 'Shared.AppsAndKeys.Tokens.apikey.set.validity.help',\n                            })\n                        )\n                    }\n                    fullWidth\n                    name='timeout'\n                    onChange={e => handleChange('timeout', e)}\n                    placeholder={intl.formatMessage({\n                        defaultMessage: 'Enter time in seconds',\n                        id: 'Shared.AppsAndKeys.Tokens.apikey.enter.time',\n                    })}\n                    value={accessTokenRequest.timeout}\n                    autoFocus\n                    className={classes.inputText}\n                    error={invalidTimeout}\n                />\n                }\n            </FormControl>\n        </React.Fragment>\n    );\n};\ntokens.contextTypes = {\n    intl: PropTypes.shape({}).isRequired,\n};\nexport default injectIntl(withStyles(styles)(tokens));\n","/*\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React, { useState } from \"react\";\nimport { injectIntl, FormattedMessage } from \"react-intl\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Box from \"@material-ui/core/Box\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Validation from 'AppData/Validation';\n\nconst styles = (theme) => ({\n  FormControl: {\n    \"margin-bottom\": theme.spacing(1),\n    width: \"100%\",\n    padding: theme.spacing(0, 1),\n  },\n  outterBox: {\n    margin: theme.spacing(1),\n    padding: theme.spacing(1),\n    borderColor: theme.palette.text.secondary,\n    marginLeft: 20,\n    borderColor: '#cccccc',\n  },\n  Fab: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n});\n\n/**\n * Used to display IP address and Http Referer restrictions in generate api key UI\n */\nconst apiKeyRestrictions = (props) => {\n  const [invalidIP, setInvalidIP] = useState(false);\n  const [invalidReferer, setInvalidReferer] = useState(false);\n\n  const {\n    intl,\n    classes,\n    newIP,\n    updateNewIp,\n    ipList,\n    updateIpList,\n    restrictSchema,\n    updateRestrictSchema,\n    newReferer,\n    updateNewReferer,\n    refererList,\n    updateRefererList,\n  } = props;\n\n  const onRefererTextUpdate = (e) => {\n    updateNewReferer(e.target.value.trim());\n    if (e.target.value.trim() === \"\") {\n      setInvalidReferer(false);\n    }\n  };\n\n  const addRefererItem = () => {\n    if (newReferer !== null && newReferer !== \"\") {\n      setInvalidReferer(false);\n      refererList.push(newReferer.trim());\n      updateRefererList(refererList);\n      updateNewReferer(\"\");\n    } else {\n      setInvalidReferer(true);\n    }\n  };\n\n  const deleteRefererItem = (refererItem) => {\n    refererList.splice(refererList.indexOf(refererItem), 1);\n    updateRefererList(refererList);\n  };\n\n  const onIpTextUpdate = (e) => {\n    updateNewIp(e.target.value.trim());\n    if (e.target.value.trim() === \"\") {\n      setInvalidIP(false);\n    }\n  };\n\n  const addIpItem = () => {\n    if (newIP !== null && newIP !== \"\") {\n      if (Validation.ipAddress.validate(newIP).error) {\n        setInvalidIP(true);\n      } else {\n        setInvalidIP(false);\n        ipList.push(newIP);\n        updateIpList(ipList);\n        updateNewIp(\"\");\n      }\n    }\n  };\n\n  const deleteIpItem = (ipItem) => {\n    ipList.splice(ipList.indexOf(ipItem), 1);\n    updateIpList(ipList);\n  };\n\n  const onRestrictSchemaChange = (e) => {\n    updateRestrictSchema(e.target.value);\n    updateIpList([]);\n    updateRefererList([]);\n    updateNewIp(\"\");\n    updateNewReferer(\"\");\n    setInvalidIP(false);\n    setInvalidReferer(false);\n  };\n\n  return (\n    <React.Fragment>\n      <Box border={1} borderRadius={5} className={classes.outterBox}>\n        <Typography variant=\"body1\">\n          <FormattedMessage\n              defaultMessage='Key Restrictions'\n              id='Shared.ApiKeyRestriction.key.restrictions'\n          />\n        </Typography>\n        <FormControl component=\"fieldset\">\n          <RadioGroup\n            aria-label=\"API Key Restrictions\"\n            value={restrictSchema}\n            row\n            onChange={onRestrictSchemaChange}\n          >\n            <FormControlLabel\n              value=\"none\"\n              control={<Radio color=\"primary\" />}\n              label=\"None\"\n              labelPlacement=\"end\"\n            />\n            <FormControlLabel\n              value=\"ip\"\n              control={<Radio color=\"primary\" />}\n              label=\"IP Addresses\"\n              labelPlacement=\"end\"\n            />\n            <FormControlLabel\n              value=\"referer\"\n              control={<Radio color=\"primary\" />}\n              label=\"HTTP Referrers (Web Sites)\"\n              labelPlacement=\"end\"\n            />\n          </RadioGroup>\n        </FormControl>\n\n        {restrictSchema === \"ip\" && (\n          <Box component=\"div\" id=\"ipPanel\">\n            <Grid\n              container\n              direction=\"row\"\n              spacing={0}\n              justify=\"left\"\n              alignItems=\"left\"\n            >\n              <Grid item md={10} xs={10}>\n                <TextField\n                  label=\"IP Address\"\n                  value={newIP}\n                  onChange={onIpTextUpdate}\n                  className={classes.inputText}\n                  helperText={\n                    invalidIP\n                      ? intl.formatMessage({\n                          defaultMessage: \"Invalid IP Address\",\n                          id:\n                            \"Shared.AppsAndKeys.Tokens.apiKeyRestriction.ip.validity.error\",\n                        })\n                      : \"\"\n                  }\n                  error={invalidIP}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  placeholder={intl.formatMessage({\n                    defaultMessage: \"Enter IP Address\",\n                    id: \"Shared.AppsAndKeys.Tokens.apiKeyRestriction.enter.ip\",\n                  })}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item md={2} xs={2}>\n                <span>\n                  <Fab\n                    className={classes.Fab}\n                    size=\"small\"\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    onClick={addIpItem}\n                  >\n                    <AddIcon />\n                  </Fab>\n                </span>\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              direction=\"row\"\n              spacing={0}\n              justify=\"left\"\n              alignItems=\"left\"\n              md={10}\n              xs={10}\n            >\n              {ipList.length > 0 && (\n                <List>\n                  {ipList.map((ip, index) => (\n                    <ListItem>\n                      <ListItemText primary={ip} />\n                      <ListItemSecondaryAction>\n                        <Tooltip title=\"Delete task\" placement=\"top\">\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            onClick={() => deleteIpItem(ip)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  ))}\n                </List>\n              )}\n            </Grid>\n          </Box>\n        )}\n\n        {restrictSchema === \"referer\" && (\n          <Box component=\"div\" id=\"refererPanel\">\n            <Grid\n              container\n              direction=\"row\"\n              spacing={0}\n              justify=\"left\"\n              alignItems=\"left\"\n            >\n              <Grid item md={10} xs={10}>\n                <TextField\n                  label=\"Referer\"\n                  value={newReferer}\n                  onChange={onRefererTextUpdate}\n                  className={classes.inputText}\n                  helperText={\n                    invalidReferer\n                      ? intl.formatMessage({\n                          defaultMessage: \"Invalid Http Referer\",\n                          id: \"Shared.AppsAndKeys.Tokens.apiKeyRestriction.referer.validity.error\",\n                        })\n                      : \"\"\n                  }\n                  error={invalidReferer}\n                  margin=\"dense\"\n                  variant=\"outlined\"\n                  placeholder={intl.formatMessage({\n                    defaultMessage: \"Enter Http Referer\",\n                    id: \"Shared.AppsAndKeys.Tokens.apiKeyRestriction.enter.referer\",\n                  })}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item md={2} xs={2}>\n                <span>\n                  <Fab\n                  size=\"small\"\n                    className={classes.Fab}\n                    color=\"primary\"\n                    aria-label=\"add\"\n                    onClick={addRefererItem}\n                  >\n                    <AddIcon />\n                  </Fab>\n                </span>\n              </Grid>\n            </Grid>\n            <Grid\n              container\n              direction=\"row\"\n              spacing={0}\n              justify=\"left\"\n              alignItems=\"left\"\n              md={10}\n              xs={10}\n            >\n              {refererList.length > 0 && (\n                <List>\n                  {refererList.map((referer, index) => (\n                    <ListItem>\n                      <ListItemText primary={referer} />\n                      <ListItemSecondaryAction>\n                        <Tooltip title=\"Delete task\" placement=\"top\">\n                          <IconButton\n                            edge=\"end\"\n                            aria-label=\"delete\"\n                            onClick={() => deleteRefererItem(referer)}\n                          >\n                            <DeleteIcon />\n                          </IconButton>\n                        </Tooltip>\n                      </ListItemSecondaryAction>\n                    </ListItem>\n                  ))}\n                </List>\n              )}\n            </Grid>\n          </Box>\n        )}\n      </Box>\n    </React.Fragment>\n  );\n};\napiKeyRestrictions.contextTypes = {\n  intl: PropTypes.shape({}).isRequired,\n};\nexport default injectIntl(withStyles(styles)(apiKeyRestrictions));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport ViewToken from './ViewToken';\nimport ApiKey from '../ApiKey';\nimport ApiKeyRestriction from '../ApiKeyRestriction';\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = (theme) => ({\n  root: {\n    padding: theme.spacing(3),\n    '& span, & h5, & label, & input': {\n      color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n  },\n  dialog: {\n    '& span, & h2, & label': {\n      color: theme.palette.getContrastText(theme.palette.background.paper),\n    },\n  },\n  button: {\n    '& span': {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n    }\n  },\n  tokenSection: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  margin: {\n    marginRight: theme.spacing(2),\n  },\n  keyConfigWrapper: {\n    flexDirection: 'column',\n    marginBottom: 0,\n  },\n  generateWrapper: {\n    padding: '10px',\n    'margin-inline-end': 'auto',\n  },\n  paper: {\n    display: 'flex',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    marginLeft: theme.spacing(10),\n  },\n  dialogTitle: {\n    padding: '24px 24px 0px',\n  },\n  dialogContent: {\n    padding: '0 24px 0px',\n  },\n  formGroup: {\n    padding: '20px',\n  },\n  gridWrapper: {\n    'align-self': 'center',\n  },\n  keyTitle: {\n    textTransform: 'capitalize',\n  },\n  cardBody: {\n    padding: theme.spacing(1),\n    lineHeight: 2,\n  },\n  generateKey: {\n    '& span': {\n      color: theme.palette.getContrastText(theme.palette.primary.main),\n    }\n  },\n});\n\nclass ApiKeyManager extends React.Component {\n  constructor(props) {\n    super(props);\n    const { classes, selectedApp, keyType } = this.props;\n    this.state = {\n      apikey: null,\n      open: false,\n      showToken: false,\n      accessTokenRequest: {\n        timeout: -1,\n      },\n      ipList: [],\n      newIP: null,\n      restrictSchema: 'none',\n      refererList: [],\n      newReferer: null,\n      isGenerating: false,\n    };\n  }\n\n  updateIpList = (ipList) => {\n    this.setState(() => ({ ipList }));\n  };\n\n  updateNewIp = (newIP) => {\n    this.setState(() => ({ newIP }));\n  };\n\n  updateRefererList = (refererList) => {\n    this.setState(() => ({ refererList }));\n  };\n\n  updateNewReferer = (newReferer) => {\n    this.setState(() => ({ newReferer }));\n  };\n\n  updateRestrictSchema = (restrictSchema) => {\n    this.setState(() => ({ restrictSchema }));\n  }\n\n  handleClose = () => {\n    this.setState(() => ({ open: false, accessTokenRequest: { timeout: -1 } }));\n  }\n\n  handleClickOpen = () => {\n    this.setState(() => ({ open: true, showToken: false }));\n  }\n\n  updateAccessTokenRequest = (accessTokenRequest) => {\n    this.setState(() => ({ accessTokenRequest }));\n  }\n\n  generateKeys = () => {\n    const { selectedApp, keyType } = this.props;\n    this.setState({isGenerating: true});\n    const client = new API();\n    const restrictions = {\n      permittedIP: this.state.ipList.join(\",\"),\n      permittedReferer: this.state.refererList.join(\",\"),\n    };\n    const promisedKey = client.generateApiKey(selectedApp.appId, keyType,\n      this.state.accessTokenRequest.timeout, restrictions);\n\n    promisedKey\n      .then((response) => {\n        console.log('Non empty response received');\n        const apikey = { accessToken: response.body.apikey, validityTime: response.body.validityTime, isOauth: false };\n        this.setState(() => ({\n          apikey, open: true, showToken: true,\n          ipList: [], refererList: []\n        }));\n        this.setState({isGenerating: false});\n      })\n      .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n          console.log(error);\n        }\n        const { status } = error;\n        if (status === 404) {\n          this.setState({\n            notFound: true, ipList: [],\n            refererList: []\n          });\n        }\n        this.setState({isGenerating: false});\n      });\n  }\n\n  render() {\n    const { classes, keyType } = this.props;\n    const {\n      showToken, accessTokenRequest, open, apikey, newIP, ipList,\n      newReferer, refererList, restrictSchema, isGenerating,\n    } = this.state;\n    return (\n      <Grid container direction=\"row\" spacing={0} justify=\"left\" alignItems=\"left\">\n        <Grid item md={5} xs={12}>\n          <ApiKeyRestriction\n            updateNewIp={this.updateNewIp}\n            newIP={newIP}\n            updateIpList={this.updateIpList}\n            ipList={ipList}\n            restrictSchema={restrictSchema}\n            updateRestrictSchema={this.updateRestrictSchema}\n            refererList={refererList}\n            newReferer={newReferer}\n            updateNewReferer={this.updateNewReferer}\n            updateRefererList={this.updateRefererList}\n          />\n          <FormGroup row className={classes.formGroup}>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={this.handleClickOpen}\n              className={classes.generateKey}\n            >\n              {\"Generate Key\"}\n            </Button>\n            <Typography\n              component=\"div\"\n              variant=\"body2\"\n              className={classes.formLabel}\n            >\n              <FormattedMessage\n                id=\"Shared.AppsAndKeys.ApiKeyManager.generate.key.help\"\n                defaultMessage=\"Use the Generate Key button to generate a self-contained JWT token.\"\n              />\n            </Typography>\n          </FormGroup>\n          <Dialog\n            open={open}\n            onClose={this.handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.dialog}\n          >\n            <DialogTitle id=\"responsive-dialog-title\" className={classes.dialogTitle}>\n              {\"Generate API Key\"}\n            </DialogTitle>\n            <DialogContent className={classes.dialogContent}>\n              <DialogContentText>\n                {!showToken && (\n                  <ApiKey\n                    updateAccessTokenRequest={this.updateAccessTokenRequest}\n                    accessTokenRequest={accessTokenRequest}\n                  />\n                )}\n                {showToken && <ViewToken token={apikey} />}\n              </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n              {!showToken && (\n                <Button\n                  onClick={this.generateKeys}\n                  disabled={!accessTokenRequest.timeout || isGenerating}\n                  color=\"primary\"\n                  variant='contained'\n                  className={classes.button}\n                >\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.consumer.generate.btn\"\n                    defaultMessage=\"Generate\"\n                  />\n                   {isGenerating && <CircularProgress size={24} />}\n                </Button>\n              )}\n              <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                <FormattedMessage\n                  id=\"Shared.AppsAndKeys.ViewKeys.consumer.close.btn\"\n                  defaultMessage=\"Close\"\n                />\n              </Button>\n            </DialogActions>\n          </Dialog>\n        </Grid>\n        {restrictSchema === \"ip\" && (\n          <Grid item md={5} xs={12}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.apiKeyRestriction.ip.example.heading\"\n                    defaultMessage=\"Examples of IP Addresses allowed\"\n                  />\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" className={classes.cardBody}>\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.apiKeyRestriction.ip.example.content\"\n                    defaultMessage={\n                      \"Specify one IPv4 or IPv6 or a subnet using CIDR notation{linebreak}Examples: {ip1}, {ip2}, {ip3} or {ip4}\"\n                    }\n                    values={{\n                      linebreak: <br />,\n                      ip1: <b>192.168.1.2</b>,\n                      ip2: <b>152.12.0.0/13</b>,\n                      ip3: <b>2002:eb8::2</b>,\n                      ip4: <b>1001:ab8::/44</b>,\n                    }}\n                  />\n                </Typography>\n\n              </CardContent>\n            </Card>\n          </Grid>\n        )}\n        {restrictSchema === \"referer\" && (\n          <Grid item md={5} xs={12}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h5\" component=\"h2\">\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.apiKeyRestriction.referer.example.heading\"\n                    defaultMessage=\"Examples of URLs allowed to restrict websites\"\n                  />\n                </Typography>\n                <Typography variant=\"body1\" component=\"p\" className={classes.cardBody}>\n                  <FormattedMessage\n                    id=\"Shared.AppsAndKeys.ViewKeys.apiKeyRestriction.ip.example.content.message\"\n                    defaultMessage={\n                      \"A specific URL with an exact path: {url1}{linebreak}Any URL in a single subdomain, using a wildcard asterisk (*): {url2}{linebreak}Any subdomain or path URLs in a single domain, using wildcard asterisks (*): {url3}\"\n                    }\n                    values={{\n                      linebreak: <br />,\n                      url1: <b>www.example.com/path</b>,\n                      url2: <b>sub.example.com/*</b>,\n                      url3: <b>*.example.com/*</b>,\n                    }}\n                  />\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        )}\n      </Grid>\n    );\n  }\n}\n\nApiKeyManager.propTypes = {\n  classes: PropTypes.shape({}).isRequired,\n  selectedApp: PropTypes.shape({\n    tokenType: PropTypes.string.isRequired,\n  }).isRequired,\n  keyType: PropTypes.string.isRequired,\n  intl: PropTypes.shape({ formatMessage: PropTypes.func }).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(ApiKeyManager));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage } from 'react-intl';\nimport { ScopeValidation, resourceMethods, resourcePaths } from '../../Shared/ScopeValidation';\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    buttonGap: {\n        marginLeft: 20,\n    },\n    select: {\n        width: 100,\n    },\n});\n\n/**\n *\n *\n * @class SubscriptionPolicySelect\n * @extends {React.Component}\n */\nclass SubscriptionPolicySelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedPolicy: null,\n        };\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SubscriptionPolicySelect\n     */\n    componentDidMount() {\n        const { policies } = this.props;\n\n        this.setState({ selectedPolicy: policies[0] });\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof SubscriptionPolicySelect\n     */\n    render() {\n        const {\n            classes, policies, apiId, handleSubscribe, applicationId,\n        } = this.props;\n        const { selectedPolicy } = this.state;\n\n        return (\n            policies\n            && (\n                <div className={classes.root}>\n                    <Select\n                        className={classes.select}\n                        value={selectedPolicy}\n                        onChange={(e) => {\n                            this.setState({ selectedPolicy: e.target.value });\n                        }}\n                    >\n                        {policies.map(policy => (\n                            <MenuItem value={policy} key={policy}>\n                                {policy}\n                            </MenuItem>\n                        ))}\n\n                    </Select>\n                    <ScopeValidation\n                        resourcePath={resourcePaths.SUBSCRIPTIONS}\n                        resourceMethod={resourceMethods.POST}\n                    >\n                        <Button\n                            variant='contained'\n                            size='small'\n                            className={classes.buttonGap}\n                            onClick={() => {\n                                handleSubscribe(applicationId, apiId, selectedPolicy);\n                            }}\n                        >\n                            <FormattedMessage defaultMessage='Subscribe' id='Apis.Listing.SubscriptionPolicySelect.subscribe' />\n                        </Button>\n                    </ScopeValidation>\n                </div>\n            )\n        );\n    }\n}\n\nSubscriptionPolicySelect.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SubscriptionPolicySelect);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport MUIDataTable from 'mui-datatables';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport API from 'AppData/api';\nimport NoApi from 'AppComponents/Apis/Listing/NoApi';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport ResourceNotFound from '../../Base/Errors/ResourceNotFound';\nimport SubscriptionPolicySelect from './SubscriptionPolicySelect';\n\n\n/**\n *\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n    },\n    buttonGap: {\n        marginRight: 10,\n    },\n});\n\n/**\n *\n *\n * @class APICardView\n * @extends {React.Component}\n */\nclass APICardView extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null,\n            loading: true,\n        };\n        this.page = 0;\n        this.count = 100;\n        this.rowsPerPage = 10;\n        this.pageType = null;\n    }\n    componentDidMount() {\n        this.getData();\n    }\n\n    componentDidUpdate(prevProps) {\n        const { subscriptions, searchText } = this.props;\n        if ( subscriptions.length !== prevProps.subscriptions.length ) {\n            this.getData();\n        } else if (searchText !== prevProps.searchText) {\n            this.page = 0;\n            this.getData();\n        }\n    }\n\n    // get data\n    getData = () => {\n        const { intl } = this.props;\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list, pagination } = body;\n                const { total } = pagination;\n                this.count = total;\n                this.setState({ data: this.updateUnsubscribedAPIsList(list) });\n            })\n            .catch((error) => {\n                const { response } = error;\n                const { setTenantDomain } = this.props;\n                if (response && response.body.code === 901300) {\n                    setTenantDomain('INVALID');\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Invalid tenant domain',\n                        id: 'Apis.Listing.ApiTableView.invalid.tenant.domain',\n                    }));\n                } else {\n                    Alert.error(intl.formatMessage({\n                        defaultMessage: 'Error While Loading APIs',\n                        id: 'Apis.Listing.ApiTableView.error.loading',\n                    }));\n                }\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    xhrRequest = () => {\n        const { searchText } = this.props;\n        const { page, rowsPerPage } = this;\n        const api = new API();\n\n        if (searchText && searchText !== '') {\n            return api.getAllAPIs({ query: searchText, limit: this.rowsPerPage, offset: page * rowsPerPage });\n        } else {\n            return api.getAllAPIs({ limit: this.rowsPerPage, offset: page * rowsPerPage });\n        }\n    };\n\n    changePage = (page) => {\n        const { intl } = this.props;\n        this.page = page;\n        this.setState({ loading: true });\n        this.xhrRequest()\n            .then((data) => {\n                const { body } = data;\n                const { list } = body;\n                this.setState({\n                    data: this.updateUnsubscribedAPIsList(list),\n                });\n            })\n            .catch((e) => {\n                Alert.error(intl.formatMessage({\n                    defaultMessage: 'Error While Loading APIs',\n                    id: 'Apis.Listing.ApiTableView.error.loading',\n                }));\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    /**\n        *\n        * Get List of the Ids of all APIs that have been already subscribed\n        *\n        * @returns {*} Ids of respective APIs\n        * @memberof APICardView\n        */\n    getIdsOfSubscribedEntities() {\n        const { subscriptions } = this.props;\n\n        // Get arrays of the API Ids and remove all null/empty references by executing 'fliter(Boolean)'\n        const subscribedAPIIds = subscriptions.map((sub) => sub.apiId).filter(Boolean);\n\n        return subscribedAPIIds;\n    }\n\n    /**\n    *\n    * Update list of unsubscribed APIs\n    * @memberof APICardView\n    */\n    updateUnsubscribedAPIsList(list) {\n\n        const subscribedIds = this.getIdsOfSubscribedEntities();\n        for (let i = 0; i < list.length; i++) {\n            if ((!subscribedIds.includes(list[i].id) && !list[i].advertiseInfo.advertised)\n                && list[i].isSubscriptionAvailable) {\n            } else {\n                list[i].throttlingPolicies = null;\n            }\n        }\n        return list;\n        //return unsubscribedAPIList;\n\n    }\n\n    /**\n     *\n     *\n     * @returns\n     * @memberof APICardView\n     */\n    render() {\n        const { apisNotFound } = this.props;\n        const { loading, data } = this.state;\n        const { page, count, rowsPerPage } = this;\n\n        if (apisNotFound) {\n            return <ResourceNotFound />;\n        }\n\n        const {\n            theme, handleSubscribe, applicationId, intl,\n        } = this.props;\n        const columns = [\n            {\n                name: 'id',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.id',\n                    defaultMessage: 'Id',\n                }),\n                options: {\n                    display: 'excluded',\n                },\n            },\n            {\n                name: 'name',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.name',\n                    defaultMessage: 'Name',\n                }),\n            },\n            {\n                name: 'version',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.version',\n                    defaultMessage: 'Version',\n                }),\n            },\n            {\n                name: 'throttlingPolicies',\n                label: intl.formatMessage({\n                    id: 'Apis.Listing.APIList.policy',\n                    defaultMessage: 'Policy',\n                }),\n                options: {\n                    customBodyRender: (value, tableMeta, updateValue) => {\n                        if (tableMeta.rowData) {\n                            const apiId = tableMeta.rowData[0];\n                            const policies = value;\n                            if (!policies) {\n                                return (intl.formatMessage({\n                                    id: 'Apis.Listing.APICardView.already.subscribed',\n                                    defaultMessage: 'Subscribed',\n                                }))\n                            }\n                            return (\n                                <SubscriptionPolicySelect\n                                    key={apiId}\n                                    policies={policies}\n                                    apiId={apiId}\n                                    handleSubscribe={(app, api, policy) => handleSubscribe(app, api, policy)}\n                                    applicationId={applicationId}\n                                />\n                            );\n                        }\n                    },\n                },\n            },\n        ];\n        const options = {\n            search: false,\n            title: false,\n            filter: false,\n            print: false,\n            download: false,\n            viewColumns: false,\n            customToolbar: false,\n            responsive: 'stacked',\n            serverSide: true,\n            count,\n            page,\n            onTableChange: (action, tableState) => {\n                switch (action) {\n                    case 'changePage':\n                        this.changePage(tableState.page);\n                        break;\n                }\n            },\n            selectableRows: 'none',\n            rowsPerPage,\n            onChangeRowsPerPage: (numberOfRows) => {\n                const { page, count } = this;\n                if (page * numberOfRows > count) {\n                    this.page = 0;\n                }\n                this.rowsPerPage = numberOfRows;\n                this.getData();\n            },\n        };\n        if (loading) {\n            return <Loading />;\n        }\n        if ((data && data.length === 0) || !data) {\n            return <NoApi />;\n        }\n        return (\n            <MUIDataTable\n                title={''}\n                data={data}\n                columns={columns}\n                options={options}\n            />\n        );\n    }\n}\n\nAPICardView.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired,\n    intl: PropTypes.shape({\n        formatMessage: PropTypes.func,\n    }).isRequired,\n};\nexport default injectIntl(withStyles(styles, { withTheme: true })(APICardView));\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MUIDataTable from 'mui-datatables';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage } from 'react-intl';\nimport Subscription from 'AppData/Subscription';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = (theme) => ({\n    dialogWrapper: {\n        '& span,& p , & h5, & label, & td, & li, & div, & input, & p.MuiFormHelperText-root': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        }\n    },\n});\n\nconst columns = ['Name', 'Value'];\n\nconst options = {\n    filterType: 'checkbox',\n    sort: false,\n    search: false,\n    viewColumns: false,\n    filter: false,\n    selectableRowsHeader: false,\n    selectableRows: 'none',\n    pagination: false,\n    download: false,\n};\n\nfunction Invoice(props) {\n    const { subscriptionId, isMonetizedAPI, isDynamicUsagePolicy, classes } = props;\n    const [showPopup, setShowPopup] = useState(false);\n    const [showErrorPopup, setShowErrorPopup] = useState(false);\n    const [invoice, setInvoice] = useState(null);\n\n    /**\n     * Handle the popup for invoice\n     */\n    const handlePopup = () => {\n        setShowPopup(true);\n        setInvoice(null);\n        const client = new Subscription();\n        const promiseInvoice = client.getMonetizationInvoice(subscriptionId);\n        promiseInvoice.then((response) => {\n            if (response && response.obj) {\n                const invoiceData = [];\n                const { obj: { properties } } = response;\n                Object.keys(properties).map((invoiveItem) => {\n                    const insideArray = [];\n                    insideArray.push(invoiveItem);\n                    insideArray.push(properties[invoiveItem]);\n                    invoiceData.push(insideArray);\n                });\n                setInvoice(invoiceData);\n            }\n        }).catch((error) => {\n            console.error(error);\n            setShowErrorPopup(true);\n        });\n    };\n\n    /**\n     * Handle closing the popup for invoice\n     */\n    const handleClose = () => {\n        setShowPopup(false);\n    };\n\n    const handleAlertClose = () => {\n        setShowErrorPopup(false);\n    };\n\n    return (\n        <React.Fragment>\n            <Button\n                color=\"default\"\n                onClick={handlePopup}\n                startIcon={<Icon>receipt</Icon>}\n            >\n                <FormattedMessage\n                    id='Applications.Details.Invoice.view.btn'\n                    defaultMessage='View Invoice'\n                />\n            </Button>\n            {invoice ? (\n                <Dialog open={showPopup} onClose={handleClose} fullWidth='true' className={classes.dialogWrapper}>\n                    {invoice && (<MUIDataTable\n                        title='Upcoming Invoice'\n                        data={invoice}\n                        columns={columns}\n                        options={options}\n                    />)}\n                </Dialog>\n            ) : (\n                    <Dialog open={showErrorPopup} onClose={handleAlertClose} fullWidth='true' className={classes.dialogWrapper}>\n                        <DialogTitle>\n                            <FormattedMessage\n                                id='Applications.Details.Invoice.no.data.available'\n                                defaultMessage='No Data Available'\n                            /></DialogTitle>\n                        <DialogContent>\n                            <DialogContentText id='invoice-dialog-description'>\n                                <FormattedMessage\n                                    id='Applications.Details.Invoice.pending.invoice.data'\n                                    defaultMessage='Pending invoice data not found for this subscription.'\n                                />\n\n                            </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={handleAlertClose} color='primary'>\n                                <FormattedMessage\n                                    id='Applications.Details.Invoice.close'\n                                    defaultMessage='Close'\n                                />\n\n                            </Button>\n                        </DialogActions>\n                    </Dialog>)}\n        </React.Fragment>\n    );\n}\n\nInvoice.propTypes = {\n    subscriptionId: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(Invoice);\n","/*\n * Copyright (c), WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport Select from '@material-ui/core/Select';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport { FormattedMessage } from 'react-intl';\nimport { ScopeValidation, resourceMethods, resourcePaths } from 'AppComponents/Shared/ScopeValidation';\nimport PropTypes from 'prop-types';\nimport Api from 'AppData/api';\nimport Subscription from 'AppData/Subscription';\nimport Invoice from './Invoice';\n\n/**\n *\n *\n * @class SubscriptionTableData\n * @extends {React.Component}\n */\nclass SubscriptionTableData extends React.Component {\n    /**\n     *Creates an instance of SubscriptionTableData.\n     * @param {*} props properties\n     * @memberof SubscriptionTableData\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            openMenu: false,\n            openMenuEdit: false,\n            isMonetizedAPI: false,\n            isDynamicUsagePolicy: false,\n            tiers: [],\n            selectedTier: \"\",\n        };\n        this.handleRequestClose = this.handleRequestClose.bind(this);\n        this.handleRequestOpen = this.handleRequestOpen.bind(this);\n        this.handleRequestDelete = this.handleRequestDelete.bind(this);\n        this.checkIfDynamicUsagePolicy = this.checkIfDynamicUsagePolicy.bind(this);\n        this.checkIfMonetizedAPI = this.checkIfMonetizedAPI.bind(this);\n        this.populateSubscriptionTiers = this.populateSubscriptionTiers.bind(this);\n        this.handleSubscriptionTierUpdate = this.handleSubscriptionTierUpdate.bind(this);\n        this.handleRequestCloseEditMenu = this.handleRequestCloseEditMenu.bind(this);\n        this.handleRequestOpenEditMenu = this.handleRequestOpenEditMenu.bind(this);\n        this.setSelectedTier = this.setSelectedTier.bind(this);\n    }\n\n    /**\n     *\n     *\n     * @memberof SubscriptionTableData\n     */\n    handleRequestClose() {\n        this.setState({ openMenu: false });\n    }\n\n    /**\n    *\n    *\n    * @memberof SubscriptionTableData\n    */\n    handleRequestOpen() {\n        this.setState({ openMenu: true });\n    }\n\n    /**\n     *\n     * Handle onclick for subscription delete\n     * @param {*} subscriptionId subscription id\n     * @memberof SubscriptionTableData\n     */\n    handleRequestDelete(subscriptionId) {\n        const { handleSubscriptionDelete } = this.props;\n        this.setState({ openMenu: false });\n        if (handleSubscriptionDelete) {\n            handleSubscriptionDelete(subscriptionId);\n        }\n    }\n\n    /**\n     *\n     *\n     * @memberof SubscriptionTableData\n     */\n    handleRequestCloseEditMenu() {\n        this.setState({ openMenuEdit: false });\n    }\n\n    /**\n    *\n    *\n    * @memberof SubscriptionTableData\n    */\n    handleRequestOpenEditMenu() {\n        this.setState({ openMenuEdit: true });\n    }\n\n    /**\n    *\n    *\n    * @memberof SubscriptionTableData\n    */\n    setSelectedTier (e) {\n    this.setState({ selectedTier: e });\n    }\n\n/**\n     *\n     * Handle onclick for subscription update\n     * @param {*} apiId subscription id\n     * @param {*} subscriptionId subscription id\n     * @param {*} throttlingPolicy throttling tier\n     * @param {*} status subscription status\n     * @memberof SubscriptionTableData\n     */\n    handleSubscriptionTierUpdate(apiId, subscriptionId, requestedThrottlingPolicy, status, currentThrottlingPolicy) {\n        const { handleSubscriptionUpdate } = this.props;\n        this.setState({ openMenuEdit: false });\n        if (handleSubscriptionUpdate) {\n            handleSubscriptionUpdate(apiId, subscriptionId, currentThrottlingPolicy, status, requestedThrottlingPolicy);\n        }\n    }\n\n    /**\n     * Getting the policies from api details\n     *\n     */\n    populateSubscriptionTiers(apiUUID){\n        const apiClient = new Api();\n        const promisedApi = apiClient.getAPIById(apiUUID);\n        promisedApi.then((response) => {\n            if (response && response.data) {\n                const api = JSON.parse(response.data);\n                const apiTiers = api.tiers;\n                const tiers = [];\n                for (let i = 0; i < apiTiers.length; i++) {\n                    const tierName = apiTiers[i].tierName;\n                    tiers.push({ value: tierName, label: tierName });\n                }\n                this.setState({ tiers });\n                if (tiers.length > 0) {\n                    this.setState({ policyName: tiers[0].value });\n                }\n            }\n        });\n    }\n\n    /**\n     * Check if the API is monetized\n     * @param apiUUID API UUID\n     */\n    checkIfMonetizedAPI(apiUUID) {\n        const apiClient = new Api();\n        const promisedApi = apiClient.getAPIById(apiUUID);\n        promisedApi.then((response) => {\n            if (response && response.data) {\n                const apiData = JSON.parse(response.data);\n                this.setState({ isMonetizedAPI: apiData.monetization.enabled });\n            }\n        });\n    }\n\n    /**\n     * Check if the policy is dynamic usage type\n     * @param subscriptionUUID subscription UUID\n     */\n    checkIfDynamicUsagePolicy(subscriptionUUID) {\n        const client = new Subscription();\n        const promisedSubscription = client.getSubscription(subscriptionUUID);\n        promisedSubscription.then((response) => {\n            if (response && response.body) {\n                const subscriptionData = JSON.parse(response.data);\n                if (subscriptionData.throttlingPolicy) {\n                    const apiClient = new Api();\n                    const promisedPolicy = apiClient.getTierByName(subscriptionData.throttlingPolicy, 'subscription');\n                    promisedPolicy.then((policyResponse) => {\n                        const policyData = JSON.parse(policyResponse.data);\n                        if (policyData.monetizationAttributes.billingType && (policyData.monetizationAttributes.billingType === 'DYNAMICRATE')) {\n                            this.setState({ isDynamicUsagePolicy: true });\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    componentDidMount() {\n        this.checkIfMonetizedAPI(this.props.subscription.apiId);\n        this.checkIfDynamicUsagePolicy(this.props.subscription.subscriptionId);\n        this.populateSubscriptionTiers(this.props.subscription.apiId);\n    }\n\n    /**\n    * @inheritdoc\n    * @memberof SubscriptionTableData\n    */\n    render() {\n        const {\n            subscription: {\n                apiInfo, status, throttlingPolicy, subscriptionId, apiId, requestedThrottlingPolicy\n            },\n        } = this.props;\n        const { openMenu, isMonetizedAPI, isDynamicUsagePolicy, openMenuEdit, selectedTier } = this.state;\n        const link = <Link to={'/apis/' + apiId}>{apiInfo.name + ' - ' + apiInfo.version}</Link>;\n\n        return (\n            <TableRow hover>\n                <TableCell>\n                    { link }\n                </TableCell>\n                <TableCell>{apiInfo.lifeCycleStatus}</TableCell>\n                <TableCell>{throttlingPolicy}</TableCell>\n                <TableCell>{status}</TableCell>\n                <TableCell>    \n                        <Button\n                            color=\"default\"\n                            onClick={this.handleRequestOpenEditMenu}\n                            startIcon={<Icon>edit</Icon>}\n                        >\n                            <FormattedMessage\n                                id='Applications.Details.SubscriptionTableData.edit.text'\n                                defaultMessage='Edit'\n                            />\n                        </Button>               \n                        <Dialog open={openMenuEdit} transition={Slide}>\n                            <DialogTitle><FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.update.subscription'\n                                        defaultMessage='Update Subscription'\n                                    /></DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.update.throttling.policy'\n                                        defaultMessage='Current Subscription Tier : '\n                                    />\n                                        {throttlingPolicy}\n                                    <div>\n                                        {   (status === 'BLOCKED')\n                                            ? (\n                                                <FormattedMessage\n                                                    id='Applications.Details.SubscriptionTableData.update.throttling.policy.blocked'\n                                                    defaultMessage='Subscription is in BLOCKED state. You need to unblock the subscription inorder to edit the tier'\n                                                />\n                                            )\n                                             : (status === 'ON_HOLD')\n                                            ? (\n                                                <FormattedMessage\n                                                    id='Applications.Details.SubscriptionTableData.update.throttling.policy.onHold'\n                                                    defaultMessage='Subscription is currently ON_HOLD state. You need to get approval to the subscription before editing the tier'\n                                                />\n                                            )\n                                             : (status === 'REJECTED')\n                                            ? (\n                                                <FormattedMessage\n                                                    id='Applications.Details.SubscriptionTableData.update.throttling.policy.rejected'\n                                                    defaultMessage='Subscription is currently REJECTED state. You need to get approval to the subscription before editing the tier'\n                                                />\n                                            )\n                                             :(   \n                                                <div>\n                                                    <TextField\n                                                        required\n                                                        fullWidth\n                                                        id='outlined-select-currency'\n                                                        select\n                                                        label={(\n                                                            <FormattedMessage\n                                                                defaultMessage='Throttling Tier'\n                                                                id='Applications.Details.SubscriptionTableData.update.throttling.policy.name'\n                                                            />\n                                                        )}\n                                                        value={selectedTier}\n                                                        name='throttlingPolicy'\n                                                        onChange={e => this.setSelectedTier(e.target.value)}\n                                                        helperText={(\n                                                            <FormattedMessage\n                                                                defaultMessage={`Assign a new Throttling policy tier to the existing subscription`}\n                                                                id='Applications.Details.SubscriptionTableData.update.throttling.policy.helper'\n                                                            />\n                                                        )}\n                                                        margin='normal'\n                                                        variant='outlined'\n                                                    >\n                                                        {this.state.tiers.map((tier) => (\n                                                            <MenuItem key={tier.value} value={tier.value}>\n                                                                {tier.label}\n                                                            </MenuItem>\n                                                        ))}\n                                                    </TextField>\n                                                    { (status === 'TIER_UPDATE_PENDING')\n                                                    &&  (\n                                                        <div>\n                                                            <FormattedMessage\n                                                                id='Applications.Details.SubscriptionTableData.update.throttling.policy.tier.update'\n                                                                defaultMessage='Pending Tier Update : '\n                                                            />\n                                                            {requestedThrottlingPolicy}\n                                                        </div>     \n                                                    )}\n                                                </div>\n                                            )}\n                                    </div>\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button dense onClick={this.handleRequestCloseEditMenu}>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                                <Button variant=\"contained\" disabled={(status === 'BLOCKED' || status === 'ON_HOLD' || status === 'REJECTED')} dense color='primary' onClick={() => this.handleSubscriptionTierUpdate(apiId,\n                                    subscriptionId, selectedTier, status, throttlingPolicy)}>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.update'\n                                        defaultMessage='Update'\n                                    />\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                        <ScopeValidation\n                            resourcePath={resourcePaths.SINGLE_SUBSCRIPTION}\n                            resourceMethod={resourceMethods.DELETE}\n                        >\n                            <Button\n                                color=\"default\"\n                                onClick={this.handleRequestOpen}\n                                startIcon={<Icon>delete</Icon>}\n                            >\n                                <FormattedMessage\n                                    id='Applications.Details.SubscriptionTableData.delete.text'\n                                    defaultMessage='Delete'\n                                />\n                            </Button>\n                        </ScopeValidation>\n\n                        <Dialog open={openMenu} transition={Slide}>\n                            <DialogTitle>Confirm</DialogTitle>\n                            <DialogContent>\n                                <DialogContentText>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.delete.subscription.confirmation'\n                                        defaultMessage='Are you sure you want to delete the Subscription?'\n                                    />\n                                </DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                                <Button dense onClick={this.handleRequestClose}>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.cancel'\n                                        defaultMessage='Cancel'\n                                    />\n                                </Button>\n                                <Button dense variant=\"contained\" color='primary' onClick={() => this.handleRequestDelete(subscriptionId)}>\n                                    <FormattedMessage\n                                        id='Applications.Details.SubscriptionTableData.delete'\n                                        defaultMessage='Delete'\n                                    />\n                                </Button>\n                            </DialogActions>\n                        </Dialog>\n                    <Invoice subscriptionId={subscriptionId} isMonetizedAPI={isMonetizedAPI} isDynamicUsagePolicy={isDynamicUsagePolicy} />\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\nSubscriptionTableData.propTypes = {\n    subscription: PropTypes.shape({\n        apiInfo: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            version: PropTypes.string.isRequired,\n            lifeCycleStatus: PropTypes.string.isRequired,\n        }).isRequired,\n        throttlingPolicy: PropTypes.string.isRequired,\n        subscriptionId: PropTypes.string.isRequired,\n        apiId: PropTypes.string.isRequired,\n        status: PropTypes.string.isRequired,\n        requestedThrottlingPolicy: PropTypes.string.isRequired,\n    }).isRequired,\n    handleSubscriptionDelete: PropTypes.func.isRequired,\n    handleSubscriptionUpdate: PropTypes.func.isRequired,\n};\nexport default SubscriptionTableData;\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport Dialog from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Progress from 'AppComponents/Shared/Progress';\nimport Alert from 'AppComponents/Shared/Alert';\nimport APIList from 'AppComponents/Apis/Listing/APICardView';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Subscription from 'AppData/Subscription';\nimport Api from 'AppData/api';\nimport { app } from 'Settings';\nimport InlineMessage from 'AppComponents/Shared/InlineMessage';\nimport SubscriptionTableData from './SubscriptionTableData';\n\n/**\n *\n * @inheritdoc\n * @param {*} theme theme\n */\nconst styles = (theme) => ({\n    searchRoot: {\n        padding: '2px 4px',\n        display: 'flex',\n        alignItems: 'center',\n        width: 400,\n        flex: 1,\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2),\n    },\n    input: {\n        marginLeft: theme.spacing(1),\n        flex: 1,\n    },\n    iconButton: {\n        padding: 10,\n    },\n    divider: {\n        height: 28,\n        margin: 4,\n    },\n    root: {\n        padding: theme.spacing(3),\n        '& h5': {\n            color: theme.palette.getContrastText(theme.palette.background.default),\n        },\n    },\n    subscribePop: {\n        '& span, & h5, & label, & input, & td, & li': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    firstCell: {\n        paddingLeft: 0,\n    },\n    cardTitle: {\n        paddingLeft: theme.spacing(2),\n    },\n    cardContent: {\n        '& table tr td':{\n            paddingLeft: theme.spacing(1),\n        },\n        '& table tr:nth-child(even)': {\n            backgroundColor: theme.custom.listView.tableBodyEvenBackgrund,\n            '& td, & a': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyEvenBackgrund),\n            },\n        },\n        '& table tr:nth-child(odd)': {\n            backgroundColor: theme.custom.listView.tableBodyOddBackgrund,\n            '& td, & a': {\n                color: theme.palette.getContrastText(theme.custom.listView.tableBodyOddBackgrund),\n            },\n        },\n        '& table th': {\n            backgroundColor: theme.custom.listView.tableHeadBackground,\n            color: theme.palette.getContrastText(theme.custom.listView.tableHeadBackground),\n            paddingLeft: theme.spacing(1),\n        },\n\n    },\n    titleWrapper: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingBottom: theme.spacing(2),\n        '& h5': {\n            marginRight: theme.spacing(1),\n        },\n    },\n    dialogTitle: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: theme.spacing(1),\n    },\n    genericMessageWrapper: {\n        margin: theme.spacing(2),\n    },\n    searchWrapper: {\n        flex: 1,\n    },\n    searchResults: {\n        height: 30,\n        display: 'flex',\n        paddingTop: theme.spacing(1),\n        paddingRight: 0,\n        paddingBottom: 0,\n        paddingLeft: theme.spacing(2),\n    },\n    clearSearchIcon: {\n        cursor: 'pointer',\n    },\n    subsTable: {\n        '& td': {\n            padding: '4px 8px',\n        },\n    },\n});\n/**\n *\n *\n * @class Subscriptions\n * @extends {React.Component}\n */\nclass Subscriptions extends React.Component {\n    /**\n     *Creates an instance of Subscriptions.\n     * @param {*} props properties\n     * @memberof Subscriptions\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            subscriptions: null,\n            unsubscribedAPIList: [],\n            apisNotFound: false,\n            subscriptionsNotFound: false,\n            isAuthorize: true,\n            openDialog: false,\n            searchText: '',\n        };\n        this.handleSubscriptionDelete = this.handleSubscriptionDelete.bind(this);\n        this.handleSubscriptionUpdate = this.handleSubscriptionUpdate.bind(this);\n        this.updateSubscriptions = this.updateSubscriptions.bind(this);\n        this.handleSubscribe = this.handleSubscribe.bind(this);\n        this.handleOpenDialog = this.handleOpenDialog.bind(this);\n        this.handleSearchTextChange = this.handleSearchTextChange.bind(this);\n        this.handleSearchTextTmpChange = this.handleSearchTextTmpChange.bind(this);\n        this.handleClearSearch = this.handleClearSearch.bind(this);\n        this.handleEnterPress = this.handleEnterPress.bind(this);\n        this.searchTextTmp = '';\n    }\n\n    /**\n     *\n     *\n     * @memberof Subscriptions\n     */\n    componentDidMount() {\n        const {\n            match: {\n                params: { applicationId },\n            },\n        } = this.props;\n        this.updateSubscriptions(applicationId);\n    }\n\n    handleOpenDialog() {\n        this.setState((prevState) => ({ openDialog: !prevState.openDialog }));\n    }\n\n    /**\n     *\n     * Update subscriptions list of Application\n     * @param {*} applicationId application id\n     * @memberof Subscriptions\n     */\n    updateSubscriptions(applicationId) {\n        const client = new Subscription();\n        const subscriptionLimit = app.subscriptionLimit || 1000;\n        const promisedSubscriptions = client.getSubscriptions(null, applicationId, subscriptionLimit);\n        promisedSubscriptions\n            .then((response) => {\n                this.setState({ subscriptions: response.body.list });\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ subscriptionsNotFound: true });\n                } else if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n            });\n    }\n\n    /**\n     *\n     * Handle subscription deletion of application\n     * @param {*} subscriptionId subscription id\n     * @memberof Subscriptions\n     */\n    handleSubscriptionDelete(subscriptionId) {\n        const client = new Subscription();\n        const promisedDelete = client.deleteSubscription(subscriptionId);\n\n        promisedDelete\n            .then((response) => {\n                if (response.status !== 200) {\n                    console.log(response);\n                    Alert.info('Something went wrong while deleting the Subscription!');\n                    return;\n                }\n                Alert.info('Subscription deleted successfully!');\n                const { subscriptions } = this.state;\n                for (const endpointIndex in subscriptions) {\n                    if (\n                        Object.prototype.hasOwnProperty.call(subscriptions, endpointIndex)\n                        && subscriptions[endpointIndex].subscriptionId === subscriptionId\n                    ) {\n                        subscriptions.splice(endpointIndex, 1);\n                        break;\n                    }\n                }\n                this.setState({ subscriptions });\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n                Alert.error('Error occurred when deleting subscription');\n            });\n    }\n\n    /**\n     *\n     * Handle subscription update of application\n     *\n     * @param {*} apiId API id\n     * @param {*} subscriptionId subscription id\n     * @param {*} throttlingPolicy throttling tier\n     * @param {*} status subscription status\n     * @memberof Subscriptions\n     */\n    handleSubscriptionUpdate(apiId, subscriptionId, currentThrottlingPolicy, status, requestedThrottlingPolicy) {\n        const {\n            match: {\n                params: { applicationId },\n            },\n        } = this.props;\n        const client = new Subscription();\n        const promisedUpdate = client.updateSubscription(applicationId, apiId, subscriptionId, currentThrottlingPolicy, status, requestedThrottlingPolicy);\n\n        promisedUpdate\n            .then((response) => {\n                if (response.status !== 200 && response.status !== 201) {\n                    console.log(response);\n                    Alert.info('Something went wrong while updating the Subscription!');\n                    return;\n                }\n                Alert.info('Subscription Tier updated successfully!');\n                this.updateSubscriptions(applicationId);\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n                Alert.error('Error occurred when updating subscription');\n            });\n    }\n\n    /**\n     * Handle onClick of subscribing to an API\n     * @param {*} applicationId application id\n     * @param {*} apiId api id\n     * @param {*} policy policy\n     * @memberof Subscriptions\n     */\n    handleSubscribe(applicationId, apiId, policy) {\n        const api = new Api();\n        const { intl } = this.props;\n        if (!policy) {\n            Alert.error(intl.formatMessage({\n                id: 'Applications.Details.Subscriptions.select.a.subscription.policy',\n                defaultMessage: 'Select a subscription policy',\n            }));\n            return;\n        }\n\n        const promisedSubscribe = api.subscribe(apiId, applicationId, policy);\n        promisedSubscribe\n            .then((response) => {\n                if (response.status !== 201) {\n                    Alert.error(intl.formatMessage({\n                        id: 'Applications.Details.Subscriptions.error.occurred.during.subscription.not.201',\n                        defaultMessage: 'Error occurred during subscription',\n                    }));\n                } else {\n                    if (response.body.status === 'ON_HOLD') {\n                        Alert.info(intl.formatMessage({\n                            defaultMessage: 'Your subscription request has been submitted and is now awaiting '\n                                + 'approval.',\n                            id: 'subscription.pending',\n                        }));\n                    } else {\n                        Alert.info(intl.formatMessage({\n                            id: 'Applications.Details.Subscriptions.subscription.successful',\n                            defaultMessage: 'Subscription successful',\n                        }));\n                    }\n                    this.updateSubscriptions(applicationId);\n                }\n            })\n            .catch((error) => {\n                const { status } = error;\n                if (status === 401) {\n                    this.setState({ isAuthorize: false });\n                }\n                Alert.error(intl.formatMessage({\n                    id: 'Applications.Details.Subscriptions.error.occurred.during.subscription',\n                    defaultMessage: 'Error occurred during subscription',\n                }));\n            });\n    }\n    handleSearchTextChange() {\n        this.setState({ searchText: this.searchTextTmp });\n    };\n    handleSearchTextTmpChange(event) {\n        this.searchTextTmp = event.target.value;\n    };\n    handleClearSearch() {\n        this.setState({ searchText: '' });\n    };\n    handleEnterPress(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n            this.handleSearchTextChange();\n        }\n    }\n    /**\n     * @inheritdoc\n     * @memberof Subscriptions\n     */\n    render() {\n        const { isAuthorize, openDialog, searchText } = this.state;\n\n        if (!isAuthorize) {\n            window.location = app.context + '/services/configs';\n        }\n\n        const {\n            subscriptions, apisNotFound, subscriptionsNotFound,\n        } = this.state;\n        const {\n            match: {\n                params: { applicationId },\n            },\n        } = this.props;\n        const { classes, intl } = this.props;\n\n        if (subscriptions) {\n            return (\n                <div className={classes.root}>\n                    <div className={classes.titleWrapper}>\n                        <Typography variant='h5' className={classes.keyTitle}>\n                            <FormattedMessage\n                                id='Applications.Details.Subscriptions.subscription.management'\n                                defaultMessage='Subscription Management'\n                            />\n                        </Typography>\n                        <Button\n                            color='secondary'\n                            className={classes.buttonElm}\n                            size='small'\n                            onClick={this.handleOpenDialog}\n                        >\n                            <Icon>add_circle_outline</Icon>\n                            <FormattedMessage\n                                id='Applications.Details.Subscriptions.subscription.management.add'\n                                defaultMessage='Subscribe APIs'\n                            />\n                        </Button>\n                    </div>\n                    <Grid container className='tab-grid' spacing={2}>\n                        <Grid item xs={12} xl={11}>\n                            {(subscriptions && subscriptions.length === 0)\n                                ? (\n                                    <div className={classes.genericMessageWrapper}>\n                                        <InlineMessage type='info' className={classes.dialogContainer}>\n                                            <Typography variant='h5' component='h3'>\n                                                <FormattedMessage\n                                                    id='Applications.Details.Subscriptions.no.subscriptions'\n                                                    defaultMessage='No Subscriptions Available'\n                                                />\n                                            </Typography>\n                                            <Typography component='p'>\n                                                <FormattedMessage\n                                                    id='Applications.Details.Subscriptions.no.subscriptions.content'\n                                                    defaultMessage='No subscriptions are available for this Application'\n                                                />\n                                            </Typography>\n                                        </InlineMessage>\n                                    </div>\n                                )\n                                : (\n                                    <div className={classes.cardContent}>\n                                            {subscriptionsNotFound ? (\n                                                <ResourceNotFound />\n                                            ) : (\n                                                    <Table className={classes.subsTable}>\n                                                        <TableHead>\n                                                            <TableRow>\n                                                                <TableCell className={classes.firstCell}>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.api.name'\n                                                                        defaultMessage='API'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id={`Applications.Details.Subscriptions\n                                                                        .subscription.state`}\n                                                                        defaultMessage='Lifecycle State'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id={`Applications.Details.Subscriptions\n                                                                        .subscription.tier`}\n                                                                        defaultMessage='Subscription Tier'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.Status'\n                                                                        defaultMessage='Subscription Status'\n                                                                    />\n                                                                </TableCell>\n                                                                <TableCell>\n                                                                    <FormattedMessage\n                                                                        id='Applications.Details.Subscriptions.action'\n                                                                        defaultMessage='Action'\n                                                                    />\n                                                                </TableCell>\n                                                            </TableRow>\n                                                        </TableHead>\n                                                        <TableBody>\n                                                            {subscriptions\n                                                                && subscriptions.map((subscription) => {\n                                                                    return (\n                                                                        <SubscriptionTableData\n                                                                            key={subscription.subscriptionId}\n                                                                            subscription={subscription}\n                                                                            handleSubscriptionDelete={this.handleSubscriptionDelete}\n                                                                            handleSubscriptionUpdate={this.handleSubscriptionUpdate}\n                                                                        />\n                                                                    );\n                                                                })}\n                                                        </TableBody>\n                                                    </Table>\n                                                )}\n                                        </div>\n                                )}\n                        </Grid>\n                    </Grid>\n                    <Dialog\n                        onClose={this.handleOpenDialog}\n                        aria-labelledby='simple-dialog-title'\n                        open={openDialog}\n                        maxWidth='lg'\n                        className={classes.subscribePop}\n                    >\n                        <MuiDialogTitle disableTypography className={classes.dialogTitle}>\n                            <Typography variant='h6'>\n                                <FormattedMessage\n                                    id='Applications.Details.Subscriptions.subscription.management.add'\n                                    defaultMessage='Subscribe APIs'\n                                />\n                            </Typography>\n                            <Box className={classes.searchWrapper}>\n                                <Paper component=\"form\" className={classes.searchRoot}>\n                                    {searchText && <HighlightOffIcon className={classes.clearSearchIcon}\n                                        onClick={this.handleClearSearch}\n                                    />}\n                                    <InputBase\n                                        className={classes.input}\n                                        placeholder={intl.formatMessage({ defaultMessage: 'Search APIs', id: 'Applications.Details.Subscriptions.search' })}\n                                        inputProps={{ 'aria-label': intl.formatMessage({ defaultMessage: 'Search APIs', id: 'Applications.Details.Subscriptions.search' }) }}\n                                        onChange={this.handleSearchTextTmpChange}\n                                        onKeyDown={this.handleEnterPress}\n                                    />\n                                    <IconButton className={classes.iconButton} aria-label=\"search\" onClick={this.handleSearchTextChange}>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </Paper>\n                                <Box className={classes.searchResults}>\n                                    {(searchText && searchText !== '') ? <>\n                                        <Typography variant='caption'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Subscriptions.filter.msg'\n                                                defaultMessage='Filtered APIs for '\n                                            />{searchText}</Typography>\n                                    </> : (<Typography variant='caption'>\n                                        <FormattedMessage\n                                            id='Applications.Details.Subscriptions.filter.msg.all.apis'\n                                            defaultMessage='Displaying all APIs'\n                                        /></Typography>)}\n                                </Box>\n\n                            </Box>\n\n                            <IconButton aria-label='close' className={classes.closeButton} onClick={this.handleOpenDialog}>\n                                <Icon>cancel</Icon>\n                            </IconButton>\n                        </MuiDialogTitle>\n                        <Box padding={2}>\n                            <APIList\n                                apisNotFound={apisNotFound}\n                                subscriptions={subscriptions}\n                                applicationId={applicationId}\n                                handleSubscribe={(app, api, policy) => this.handleSubscribe(app, api, policy)}\n                                searchText={searchText}\n                            />\n                        </Box>\n                    </Dialog>\n                </div>\n            );\n        } else {\n            return (\n              <Progress />  \n            );\n        }\n    }\n}\nSubscriptions.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            applicationId: PropTypes.string,\n        }).isRequired,\n    }).isRequired,\n    intl: PropTypes.shape({}).isRequired,\n};\n\nexport default injectIntl(withStyles(styles)(Subscriptions));\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Icon from '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport VerticalDivider from 'AppComponents/Shared/VerticalDivider';\nimport Grid from '@material-ui/core/Grid';\nimport API from 'AppData/api';\nimport Application from 'AppData/Application';\nimport Alert from 'AppComponents/Shared/Alert';\nimport DeleteConfirmation from '../Listing/DeleteConfirmation';\nimport AuthManager from 'AppData/AuthManager';\n\n/**\n * @param {*} theme theme details\n * @returns {Object}\n */\nconst styles = (theme) => {\n    const mainBack = theme.custom.infoBar.background || '#ffffff';\n    const infoBarHeight = theme.custom.infoBar.height || 70;\n    const starColor = theme.custom.infoBar.starColor || theme.palette.getContrastText(mainBack);\n\n    return {\n        root: {\n            height: infoBarHeight,\n            background: mainBack,\n            color: theme.palette.getContrastText(mainBack),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n            display: 'flex',\n            alignItems: 'center',\n            paddingLeft: theme.spacing(2),\n        },\n        backIcon: {\n            color: theme.palette.primary.main,\n            fontSize: 56,\n            cursor: 'pointer',\n        },\n        backText: {\n            color: theme.palette.primary.main,\n            cursor: 'pointer',\n            fontFamily: theme.typography.fontFamily,\n        },\n        starRate: {\n            fontSize: 40,\n            color: starColor,\n        },\n        starRateMy: {\n            fontSize: 70,\n            color: theme.palette.primary.main,\n        },\n        rateLink: {\n            cursor: 'pointer',\n            lineHeight: '70px',\n        },\n        topBar: {\n            display: 'flex',\n            paddingBottom: theme.spacing(2),\n        },\n        infoContent: {\n            color: theme.palette.getContrastText(mainBack),\n            background: mainBack,\n            padding: theme.spacing(3),\n            '& td, & th': {\n                color: theme.palette.getContrastText(mainBack),\n            },\n        },\n        infoContentBottom: {\n            background: theme.custom.infoBar.sliderBackground,\n            color: theme.palette.getContrastText(theme.custom.infoBar.sliderBackground),\n            borderBottom: 'solid 1px ' + theme.palette.grey.A200,\n        },\n        bootstrapRoot: {\n            padding: 0,\n            'label + &': {\n                marginTop: theme.spacing(3),\n            },\n        },\n        bootstrapInput: {\n            borderRadius: 4,\n            backgroundColor: theme.palette.common.white,\n            border: '1px solid #ced4da',\n            padding: '5px 12px',\n            width: 350,\n            transition: theme.transitions.create(['border-color', 'box-shadow']),\n            fontFamily: [\n                '-apple-system',\n                'BlinkMacSystemFont',\n                '\"Segoe UI\"',\n                'Roboto',\n                '\"Helvetica Neue\"',\n                'Arial',\n                'sans-serif',\n                '\"Apple Color Emoji\"',\n                '\"Segoe UI Emoji\"',\n                '\"Segoe UI Symbol\"',\n            ].join(','),\n            '&:focus': {\n                borderColor: '#80bdff',\n                boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n            },\n        },\n        epWrapper: {\n            display: 'flex',\n        },\n        prodLabel: {\n            lineHeight: '30px',\n            marginRight: 10,\n            width: 100,\n        },\n        contentWrapper: {\n            maxWidth: theme.custom.contentAreaWidth - theme.custom.leftMenu.width,\n            alignItems: 'center',\n        },\n        ratingBoxWrapper: {\n            position: 'relative',\n            display: 'flex',\n            alignItems: 'center',\n        },\n        ratingBox: {\n            backgroundColor: theme.custom.leftMenu.background,\n            border: '1px solid rgb(71, 211, 244)',\n            borderRadius: '5px',\n            display: 'flex',\n            position: 'absolute',\n            top: 14,\n            height: '40px',\n            color: theme.palette.getContrastText(theme.custom.leftMenu.background),\n            alignItems: 'center',\n            left: '0',\n            paddingLeft: '5px',\n            paddingRight: '5px',\n        },\n        userRating: {\n            display: 'flex',\n            alignItems: 'flex-end',\n        },\n        verticalDividerStar: {\n            borderLeft: 'solid 1px ' + theme.palette.grey.A200,\n            height: 40,\n            marginRight: theme.spacing(1),\n            marginLeft: theme.spacing(1),\n        },\n        backLink: {\n            alignItems: 'center',\n            textDecoration: 'none',\n            display: 'flex',\n        },\n        ratingSummery: {\n            alignItems: 'center',\n            flexDirection: 'column',\n            display: 'flex',\n        },\n        infoBarMain: {\n            width: '100%',\n        },\n        buttonView: {\n            textAlign: 'left',\n            justifyContent: 'left',\n            display: 'flex',\n            paddingLeft: theme.spacing(2),\n            cursor: 'pointer',\n        },\n        buttonOverviewText: {\n            display: 'inline-block',\n            paddingTop: 3,\n        },\n        button: {\n            display: 'inline-grid',\n            cursor: 'pointer',\n            '& .material-icons, & span': {\n                color: theme.palette.getContrastText(theme.custom.infoBar.background),\n            },\n        },\n        editButton: {\n            display: 'inline-grid',\n            cursor: 'pointer',\n            '& .material-icons, & span': {\n                color: theme.palette.getContrastText(theme.custom.infoBar.background),\n            },\n        },\n        iconButton: {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            flexDirection: 'column',\n        },\n        appNameXSmall: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 200,\n            lineHeight: 1.3,\n        },\n        appNameSmall: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 310,\n            lineHeight: 1.3,\n        },\n        appNameMid: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 640,\n            lineHeight: 1.3,\n        },\n        appNameBig: {\n            whiteSpace: 'nowrap',\n            overflowX: 'auto',\n            overflowY: 'hidden',\n            maxWidth: 980,\n            lineHeight: 1.3,\n        },\n        linkTitle: {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n    };\n};\n/**\n *\n *\n * @class InfoBar\n * @extends {React.Component}\n */\nclass InfoBar extends React.Component {\n    /**\n     * @param {Object} props props passed from above\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            notFound: false,\n            showOverview: true,\n            isDeleteOpen: false,\n            applicationOwner: '',\n        };\n        this.toggleOverview = this.toggleOverview.bind(this);\n        this.handleAppDelete = this.handleAppDelete.bind(this);\n        this.handleDeleteConfimation = this.handleDeleteConfimation.bind(this);\n        this.toggleDeleteConfirmation = this.toggleDeleteConfirmation.bind(this);\n    }\n\n    /**\n     * @memberof InfoBar\n     */\n    componentDidMount() {\n        const client = new API();\n        const { applicationId } = this.props;\n        // Get application\n        const promisedApplication = client.getApplication(applicationId);\n\n        promisedApplication\n            .then((response) => {\n                this.setState({ applicationOwner: response.obj.owner });\n                const promisedPolicy = client.getTierByName(response.obj.throttlingPolicy, 'application');\n                return Promise.all([response, promisedPolicy]);\n            })\n            .then((response) => {\n                const [application, tier] = response.map(data => data.obj);\n                this.setState({ application, tierDescription: tier.description });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.error(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n            });\n    }\n\n    /**\n     * Toggles the showOverview state\n     * @param {boolean} todo toggle state\n     * @memberof InfoBar\n     */\n    toggleOverview(todo) {\n        if (typeof todo === 'boolean') {\n            this.setState({ showOverview: todo });\n        } else {\n            this.setState(prevState => ({ showOverview: !prevState.showOverview }));\n        }\n    }\n\n    /**\n     * Handles delete confimation\n     * @memberof InfoBar\n     */\n    handleDeleteConfimation() {\n        const { isDeleteOpen } = this.state;\n        this.setState({ isDeleteOpen: !isDeleteOpen });\n    }\n\n    /**\n     * Handles application deletion\n     * @memberof InfoBar\n     */\n    handleAppDelete() {\n        const { applicationId, intl } = this.props;\n        const { application } = this.state;\n        const promisedDelete = Application.deleteApp(applicationId);\n        let message = intl.formatMessage({\n            defaultMessage: 'Application {name} deleted successfully!',\n            id: 'Applications.Details.InfoBar.application.deleted.successfully',\n        }, {name: application.name});\n        promisedDelete.then((ok) => {\n            if (ok) {\n                Alert.info(message);\n                this.toggleDeleteConfirmation();\n            }\n            this.props.history.push('/applications');\n        }).catch((error) => {\n            console.log(error);\n            message = intl.formatMessage({\n                defaultMessage: 'Error while deleting application {name}',\n                id: 'Applications.Details.InfoBar.application.deleting.error',\n            }, {name: application.name});\n            Alert.error(message);\n        });\n    }\n\n    toggleDeleteConfirmation = () => {\n        this.setState(({ isDeleteOpen }) => ({ isDeleteOpen: !isDeleteOpen }));\n    }\n\n\n    /**\n     * @returns {div}\n     * @memberof InfoBar\n     */\n    render() {\n        const {\n            classes, theme, applicationId,\n        } = this.props;\n        const {\n            application, tierDescription, showOverview, notFound, isDeleteOpen, applicationOwner,\n        } = this.state;\n        const {\n            custom: {\n                leftMenu: { position },\n            },\n        } = theme;\n\n        if (notFound) {\n            return (\n              <ResourceNotFound\n                message={\n                  <FormattedMessage\n                    id=\"Applications.Details.InfoBar.listing.resource.not.found\"\n                    defaultMessage=\"Resource Not Fount\"\n                  />\n                }\n              />\n            );\n        }\n\n        if (!application) {\n            return <Loading />;\n        }\n        const isUserOwner = AuthManager.getUser().name === applicationOwner;\n\n        return (\n            <div className={classes.infoBarMain}>\n                <div className={classes.root}>\n                    <Grid item xs={10}>\n                        <div style={{ marginLeft: theme.spacing(1) }}>\n                            <Link to={'/applications/' + applicationId + '/overview'} className={classes.linkTitle}>\n                                <Typography variant='h4'>{application.name}</Typography>\n                            </Link>\n                        </div>\n                        <div style={{ marginLeft: theme.spacing(1) }}>\n                            <Typography variant='caption' gutterBottom align='left'>\n                                {application.subscriptionCount}{' '}\n                                <FormattedMessage\n                                    id='Applications.Details.InfoBar.subscriptions'\n                                    defaultMessage='Subscriptions'\n                                />\n                            </Typography>\n                        </div>\n                    </Grid>\n                    {isUserOwner && (\n                    <>\n                    <VerticalDivider height={70} />\n                    <Grid item xs={1} m={1} className={classes.editButton}>\n                            <Link to={`/applications/${applicationId}/edit/fromView`} className={classes.editButton}>\n                                <Button\n                                    style={{ padding: '4px' }}\n                                    color='default'\n                                    classes={{ label: classes.iconButton }}\n                                    aria-label={(\n                                        <FormattedMessage\n                                            id='Applications.Details.InfoBar.edit'\n                                            defaultMessage='Edit'\n                                        />\n                                    )}\n                                >\n                                    <Icon>edit</Icon>\n                                    <Typography variant='caption' style={{ marginTop: '2px' }} >\n                                        <FormattedMessage\n                                            id='Applications.Details.InfoBar.edit.text'\n                                            defaultMessage='Edit'\n                                        />\n                                    </Typography>\n                                </Button>\n                            </Link>\n                    </Grid>\n                    <VerticalDivider height={70} />\n                    <Grid item xs={1} m={1} className={classes.button}>\n                        <Button\n                            onClick={this.handleDeleteConfimation}\n                            disabled={AuthManager.getUser().name !== applicationOwner}\n                            color='default'\n                            classes={{ label: classes.iconButton }}\n                            aria-label={(\n                                <FormattedMessage\n                                    id='Applications.Details.InfoBar.delete'\n                                    defaultMessage='Delete'\n                                />\n                            )}\n                        >\n                            <Icon>delete</Icon>\n                            <Typography variant='caption' style={{ marginTop: '2px' }} >\n                                <FormattedMessage\n                                    id='Applications.Details.InfoBar.text'\n                                    defaultMessage='Delete'\n                                />\n                            </Typography>\n                        </Button>\n                        <DeleteConfirmation\n                            handleAppDelete={this.handleAppDelete}\n                            isDeleteOpen={isDeleteOpen}\n                            toggleDeleteConfirmation={this.toggleDeleteConfirmation}\n                        />\n                    </Grid>\n                    </>\n                     )}\n                </div>\n            </div>\n        );\n    }\n}\nInfoBar.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    applicationId: PropTypes.string.isRequired,\n};\n\nexport default injectIntl(withRouter(withStyles(styles, { withTheme: true })(InfoBar)));\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Icon from '@material-ui/core/Icon';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { app } from 'Settings';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport API from 'AppData/api';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport Application from 'AppData/Application';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3, 2),\n        '& td, & th': {\n            color: theme.palette.getContrastText(theme.custom.infoBar.background),\n        },\n        background: theme.custom.infoBar.background,\n    },\n    table: {\n        minWidth: '100%',\n    },\n    leftCol: {\n        width: 200,\n    },\n    iconAligner: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        alignItems: 'center',\n    },\n    iconTextWrapper: {\n        display: 'inline-block',\n        paddingLeft: 20,\n    },\n    iconEven: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n    iconOdd: {\n        color: theme.custom.infoBar.iconOddColor,\n        width: theme.spacing(3),\n    },\n    noKeysRoot: {\n        backgroundImage: `url(${app.context + theme.custom.overviewPage.keysBackground})`,\n        height: '100%',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover',\n        minHeight: 192,\n        display: 'flex',\n        alignItems: 'center',\n    },\n    heading: {\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        paddingLeft: theme.spacing(1),\n    },\n    emptyBox: {\n        background: '#ffffff55',\n        color: theme.palette.getContrastText(theme.palette.background.paper),\n        border: 'solid 1px #fff',\n        padding: theme.spacing(2),\n        width: '100%',\n    },\n    summaryRoot: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    actionPanel: {\n        justifyContent: 'flex-start',\n    },\n}));\n\n/**\n * Render application overview page.\n * @param {JSON} props Props passed down from parent.\n * @returns {JSX} jsx output from render.\n */\nfunction Overview(props) {\n    const classes = useStyles();\n    const [application, setApplication] = useState(null);\n    const [tierDescription, setTierDescription] = useState(null);\n    const [notFound, setNotFound] = useState(false);\n    const { match: { params: { applicationId } } } = props;\n    useEffect(() => {\n        const client = new API();\n        // Get application\n        const promisedApplication = client.getApplication(applicationId);\n        promisedApplication\n            .then((response) => {\n                const promisedTier = client.getTierByName(response.obj.throttlingPolicy, 'application');\n                const app = response.obj;\n                promisedTier.then((tierResponse) => {\n                    setTierDescription(tierResponse.obj.description);\n                    setApplication(app);\n                });\n            }).catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    setNotFound(true);\n                } else {\n                    setNotFound(false);\n                }\n            });\n    }, []);\n    if (notFound) {\n        return <ResourceNotFound />;\n    }\n    if (!application) {\n        return <Loading />;\n    }\n    const pathPrefix = '/applications/' + applicationId;\n    return (\n        <>\n            <div className={classes.root}>\n                <Table className={classes.table}>\n                    <TableBody>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconEven}>description</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.description'\n                                                defaultMessage='Description'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {application.description}\n                            </TableCell>\n                        </TableRow>\n                        {tierDescription\n                            && (\n                                <TableRow>\n                                    <TableCell component='th' scope='row' className={classes.leftCol}>\n                                        <div className={classes.iconAligner}>\n                                            <Icon className={classes.iconOdd}>settings_input_component</Icon>\n                                            <span className={classes.iconTextWrapper}>\n                                                <Typography variant='caption' gutterBottom align='left'>\n                                                    <FormattedMessage\n                                                        id='Applications.Details.InfoBar.throttling.tier'\n                                                        defaultMessage='Throttling Tier'\n                                                    />\n                                                </Typography>\n                                            </span>\n                                        </div>\n                                    </TableCell>\n                                    {application\n                                        && (\n                                            <TableCell>\n                                                {application.throttlingPolicy}\n                                                {' '}\n                                                {`(${tierDescription})`}\n                                            </TableCell>\n                                        )}\n                                </TableRow>\n                            )}\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconEven}>vpn_key</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.token.type'\n                                                defaultMessage='Token Type'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {Application.TOKEN_TYPES[application.tokenType].displayName}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconOdd}>assignment_turned_in</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.workflow.status'\n                                                defaultMessage='Workflow Status'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {application.status}\n                            </TableCell>\n                        </TableRow>\n                        <TableRow>\n                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                <div className={classes.iconAligner}>\n                                    <Icon className={classes.iconEven}>account_box</Icon>\n                                    <span className={classes.iconTextWrapper}>\n                                        <Typography variant='caption' gutterBottom align='left'>\n                                            <FormattedMessage\n                                                id='Applications.Details.Overview.application.owner'\n                                                defaultMessage='Application Owner'\n                                            />\n                                        </Typography>\n                                    </span>\n                                </div>\n                            </TableCell>\n                            <TableCell>\n                                {application.owner}\n                            </TableCell>\n                        </TableRow>\n                        {application.attributes\n                            && (\n                                Object.keys(application.attributes).map((attr, index) => {\n                                    const attrValue = application.attributes[attr];\n                                    return (\n                                        <TableRow key={attr}>\n                                            <TableCell component='th' scope='row' className={classes.leftCol}>\n                                                <div className={classes.iconAligner}>\n                                                    <Icon className={classNames(\n                                                        { [classes.iconEven]: index % 2 !== 0 },\n                                                        { [classes.iconOdd]: index % 2 === 0 },\n                                                    )}\n                                                    >\n                                                        web_asset\n                                                    </Icon>\n                                                    <span className={classes.iconTextWrapper}>\n                                                        <Typography variant='caption' gutterBottom align='left'>\n                                                            {attr}\n                                                        </Typography>\n                                                    </span>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                {attrValue}\n                                            </TableCell>\n                                        </TableRow>\n                                    );\n                                }))}\n\n                    </TableBody>\n                </Table>\n            </div>\n        </>\n    );\n}\nexport default injectIntl(Overview);\n","/* eslint-disable react/prop-types */\n/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Route, Switch, Redirect, Link,\n} from 'react-router-dom';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FormattedMessage } from 'react-intl';\nimport API from 'AppData/api';\nimport { app } from 'Settings';\nimport Loading from 'AppComponents/Base/Loading/Loading';\nimport ResourceNotFound from 'AppComponents/Base/Errors/ResourceNotFound';\nimport CustomIcon from 'AppComponents/Shared/CustomIcon';\nimport LeftMenuItem from 'AppComponents/Shared/LeftMenuItem';\nimport TokenManager from 'AppComponents/Shared/AppsAndKeys/TokenManager';\nimport ApiKeyManager from 'AppComponents/Shared/AppsAndKeys/ApiKeyManager';\nimport classNames from 'classnames';\nimport Paper from '@material-ui/core/Paper';\nimport { Helmet } from 'react-helmet';\nimport Subscriptions from './Subscriptions';\nimport InfoBar from './InfoBar';\nimport Overview from './Overview';\n\n/**\n *\n *\n * @param {*} theme theme details\n * @returns {Object}\n */\nconst styles = (theme) => {\n    const {\n        custom: {\n            leftMenu: { width, position },\n        },\n    } = theme;\n    const shiftToLeft = position === 'vertical-left' ? (width - 4) : 0;\n    const shiftToRight = position === 'vertical-right' ? width : 0;\n    const leftMenuPaddingLeft = position === 'horizontal' ? theme.spacing(3) : 0;\n\n    return {\n        LeftMenu: {\n            backgroundColor: theme.custom.leftMenu.background,\n            backgroundImage: `url(${app.context}${theme.custom.leftMenu.backgroundImage})`,\n            textAlign: 'left',\n            fontFamily: theme.typography.fontFamily,\n            position: 'absolute',\n            bottom: 0,\n            paddingLeft: leftMenuPaddingLeft,\n        },\n        leftMenuHorizontal: {\n            top: theme.custom.infoBar.height,\n            width: '100%',\n            overflowX: 'auto',\n            height: 60,\n            display: 'flex',\n            left: 0,\n        },\n        leftMenuVerticalLeft: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            left: 0,\n            overflowY: 'auto',\n        },\n        leftMenuVerticalRight: {\n            width: theme.custom.leftMenu.width,\n            top: 0,\n            right: 0,\n            overflowY: 'auto',\n        },\n        leftLInkMain: {\n            borderRight: 'solid 1px ' + theme.custom.leftMenu.background,\n            cursor: 'pointer',\n            background: theme.custom.leftMenu.rootBackground,\n            color: theme.palette.getContrastText(theme.custom.leftMenu.rootBackground),\n            textDecoration: 'none',\n            alignItems: 'center',\n            justifyContent: 'center',\n            display: 'flex',\n            height: theme.custom.infoBar.height,\n            textDecoration: 'none',\n        },\n        leftLInkMainText: {\n            fontSize: 18,\n            color: theme.palette.grey[500],\n            textDecoration: 'none',\n            paddingLeft: theme.spacing(2),\n        },\n        detailsContent: {\n            display: 'flex',\n            flex: 1,\n        },\n        content: {\n            display: 'flex',\n            flex: 1,\n            flexDirection: 'column',\n            marginLeft: shiftToLeft,\n            marginRight: shiftToRight,\n            paddingBottom: theme.spacing(3),\n            overflowX: 'hidden',\n        },\n        contentLoader: {\n            paddingTop: theme.spacing(3),\n        },\n        contentLoaderRightMenu: {\n            paddingRight: theme.custom.leftMenu.width,\n        },\n        titleWrapper: {\n            paddingLeft: 25,\n            paddingTop: 28,\n            textTransform: 'capitalize',\n        },\n        contentWrapper: {\n            paddingLeft: 25,\n        },\n        keyTitle: {\n            textTransform: 'capitalize',\n        },\n    };\n};\n/**\n *\n *\n * @class Details\n * @extends {Component}\n */\nclass Details extends Component {\n    /**\n     *\n     * @param {Object} props props passed from above\n     */\n    constructor(props) {\n        super(props);\n        this.state = {\n            application: null,\n            active: 'overview',\n            open: true,\n        };\n    }\n\n    /**\n     *\n     *\n     * @memberof Details\n     */\n    componentDidMount() {\n        const { match } = this.props;\n        const client = new API();\n        const promisedApplication = client.getApplication(match.params.application_uuid);\n        promisedApplication\n            .then((response) => {\n                this.setState({ application: response.obj });\n            })\n            .catch((error) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    console.log(error);\n                }\n                const { status } = error;\n                if (status === 404) {\n                    this.setState({ notFound: true });\n                }\n            });\n    }\n\n    /**\n     *\n     * @param {String} menuLink selected menu name\n     * @memberof Details\n     */\n    handleMenuSelect = (menuLink) => {\n        const { history, match } = this.props;\n        history.push({ pathname: '/applications/' + match.params.application_uuid + '/' + menuLink });\n        this.setState({ active: menuLink });\n    };\n    toTitleCase = (str) => {\n        return str.replace(\n            /\\w\\S*/g,\n            function(txt) {\n                return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n            }\n        );\n    };\n    renderManager = (application, keyType, secScheme) => {\n        const { classes } = this.props;\n        return (\n            <Paper>\n                {secScheme === 'oauth' && (\n                    <TokenManager\n                        keyType={keyType}\n                        selectedApp={{\n                            appId: application.applicationId,\n                            label: application.name,\n                            tokenType: application.tokenType,\n                            owner: application.owner,\n                            hashEnabled: application.hashEnabled,\n                        }}\n                    />\n                       \n                )}\n                {secScheme === 'apikey' && (\n                    <div className={classes.root}>\n                        <div className={classes.titleWrapper}>\n                            <Typography variant='h5' className={classes.keyTitle}>\n                                {this.toTitleCase(keyType)}\n                                <FormattedMessage\n                                    id='Applications.Details.api.keys.title'\n                                    defaultMessage=' API Key'\n                                />\n                            </Typography>\n                        </div>\n                        <div className={classes.contentWrapper}>\n                            <ApiKeyManager\n                                keyType={keyType}\n                                selectedApp={{\n                                    appId: application.applicationId,\n                                    label: application.name,\n                                    tokenType: application.tokenType,\n                                    owner: application.owner,\n                                }}\n                            />\n                        </div>\n                    </div>\n                )}\n            </Paper>\n        );\n    }\n\n    /**\n     *\n     *\n     * @returns {Component}\n     * @memberof Details\n     */\n    render() {\n        const { classes, match, theme } = this.props;\n        const { notFound, application } = this.state;\n        const pathPrefix = '/applications/' + match.params.application_uuid;\n        const redirectUrl = pathPrefix + '/overview';\n        const {\n            custom: {\n                leftMenu: {\n                    rootIconSize, rootIconTextVisible, rootIconVisible, position,\n                },\n                title: {\n                    prefix, sufix,\n                },\n            },\n        } = theme;\n        if (notFound) {\n            return <ResourceNotFound />;\n        } else if (!application) {\n            return <Loading />;\n        }\n        return (\n            <>\n                <Helmet>\n                    <title>{`${prefix} ${application.name}${sufix}`}</title>\n                </Helmet>\n                <div\n                    className={classNames(\n                        classes.LeftMenu,\n                        {\n                            [classes.leftMenuHorizontal]: position === 'horizontal',\n                        },\n                        {\n                            [classes.leftMenuVerticalLeft]: position === 'vertical-left',\n                        },\n                        {\n                            [classes.leftMenuVerticalRight]: position === 'vertical-right',\n                        },\n                        'left-menu',\n                    )}\n                >\n                    {rootIconVisible && (\n                        <Link to='/applications' className={classes.leftLInkMain}>\n                            <CustomIcon width={rootIconSize} height={rootIconSize} icon='applications' />\n                            {rootIconTextVisible && (\n                                <Typography className={classes.leftLInkMainText}>\n                                    <FormattedMessage id='Applications.Details.applications.all' defaultMessage='ALL APPs' />\n                                </Typography>\n                            )}\n                        </Link>\n                    )}\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.overview' defaultMessage='Overview' />} iconText='overview' route='overview' to={pathPrefix + '/overview'} open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.prod.keys' defaultMessage='Production Keys' />} iconText='productionkeys' route='productionkeys' to={pathPrefix + '/productionkeys/oauth'} open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.oauth.tokens' defaultMessage='OAuth2 Tokens' />} route='productionkeys/oauth' to={pathPrefix + '/productionkeys/oauth'} submenu open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.api.key' defaultMessage='Api Key' />} route='productionkeys/apikey' to={pathPrefix + '/productionkeys/apikey'} submenu open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.sandbox.keys' defaultMessage='Sandbox Keys' />} iconText='productionkeys' route='sandboxkeys' to={pathPrefix + '/sandboxkeys/oauth'} open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.oauth.tokens' defaultMessage='OAuth2 Tokens' />} route='sandboxkeys/oauth' to={pathPrefix + '/sandboxkeys/oauth'} submenu open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.api.key' defaultMessage='Api Key' />} route='sandboxkeys/apikey' to={pathPrefix + '/sandboxkeys/apikey'} submenu open={open} />\n                    <LeftMenuItem text={<FormattedMessage id='Applications.Details.menu.subscriptions' defaultMessage='Subscriptions' />} iconText='subscriptions' route='subscriptions' to={pathPrefix + '/subscriptions'} open={open} />\n                </div>\n                <div className={classes.content}>\n                    <InfoBar applicationId={match.params.application_uuid} innerRef={node => (this.infoBar = node)} />\n                    <div\n                        className={classNames(\n                            { [classes.contentLoader]: position === 'horizontal' },\n                            { [classes.contentLoaderRightMenu]: position === 'vertical-right' },\n                        )}\n                    >\n                        <Switch>\n                            <Redirect exact from='/applications/:applicationId' to={redirectUrl} />\n                            <Route\n                                path='/applications/:applicationId/overview'\n                                component={Overview}\n                            />\n                            <Route\n                                path='/applications/:applicationId/productionkeys/oauth'\n                                component={() => (this.renderManager(application, 'PRODUCTION', 'oauth'))}\n                            />\n                            <Route\n                                path='/applications/:applicationId/productionkeys/apikey'\n                                component={() => (this.renderManager(application, 'PRODUCTION', 'apikey'))}\n                            />\n                            <Route\n                                path='/applications/:applicationId/sandboxkeys/oauth'\n                                component={() => (this.renderManager(application, 'SANDBOX', 'oauth'))}\n                            />\n                            <Route\n                                path='/applications/:applicationId/sandboxkeys/apikey'\n                                component={() => (this.renderManager(application, 'SANDBOX', 'apikey'))}\n                            />\n                            <Route path='/applications/:applicationId/subscriptions' component={Subscriptions} />\n                            <Route component={ResourceNotFound} />\n                        </Switch>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nDetails.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    theme: PropTypes.shape({}).isRequired,\n    match: PropTypes.shape({\n        params: PropTypes.shape({\n            application_uuid: PropTypes.string.isRequired,\n        }).isRequired,\n    }).isRequired,\n    history: PropTypes.shape({\n        push: PropTypes.func.isRequired,\n    }).isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Details);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport VerticalDivider from './VerticalDivider';\n/**\n * Main style object\n *\n * @param {*} theme\n */\nconst styles = theme => ({\n    root: {\n        display: 'flex',\n        minHeight: 100,\n        alignItems: 'center',\n        paddingLeft: theme.spacing(2),\n        borderRadius: theme.shape.borderRadius,\n        border: 'solid 1px #ddd',\n        '& span.material-icons': {\n            fontSize: 60,\n            color: theme.custom.info.color,\n        },\n        '& span, & h5, & label, & input': {\n            color: theme.palette.getContrastText(theme.palette.background.paper),\n        },\n    },\n    iconItem: {\n        paddingRight: theme.spacing(2),\n        fontSize: 60,\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingTop: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n});\n/**\n *  Renders a inline massage\n *\n * @class InlineMessage\n * @extends {React.Component}\n */\nclass InlineMessage extends React.Component {\n    state = {\n        value: 0,\n    };\n\n    handleExpandClick = () => {\n        this.setState(state => ({ expanded: !state.expanded }));\n    };\n\n    render() {\n        const { classes, type } = this.props;\n        const messgeType = type || 'info';\n        return (\n            <Paper className={classes.root} elevation={1}>\n                {messgeType === 'info' && <Icon className={classes.iconItem}>info</Icon>}\n                {messgeType === 'warn' && <Icon className={classes.iconItem}>warning</Icon>}\n                <VerticalDivider height={100} />\n                <div className={classes.content}>{this.props.children}</div>\n            </Paper>\n        );\n    }\n}\nInlineMessage.propTypes = {\n    classes: PropTypes.shape({}).isRequired,\n    type: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(InlineMessage);\n","/*\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AuthManager from '../../data/AuthManager';\n\nconst resourcePaths = {\n    APIS: '/apis',\n    SINGLE_API: '/apis/{apiId}',\n    API_SWAGGER: '/apis/{apiId}/swagger',\n    API_WSDL: '/apis/{apiId}/wsdl',\n    API_GW_CONFIG: '/apis/{apiId}/gateway-config',\n    API_THUMBNAIL: '/apis/{apiId}/thumbnail',\n    API_COPY: '/apis/copy-api',\n    API_LC_HISTORY: '/apis/{apiId}/lifecycle-history',\n    API_CHANGE_LC: '/apis/change-lifecycle',\n    API_LC: '/apis/{apiId}/lifecycle',\n    API_LC_PENDING_TASK: '/apis/{apiId}/lifecycle/lifecycle-pending-task',\n    API_DEF: '/apis/import-definition',\n    API_VALIDATE_DEF: '/apis/validate-definition',\n    API_DOCS: '/apis/{apiId}/documents',\n    API_DOC: \"'/apis/{apiId}/documents/{documentId}'\",\n    API_DOC_CONTENT: \"'/apis/{apiId}/documents/{documentId}/content'\",\n    APPLICATIONS: '/applications',\n    SINGLE_APPLICATION: '/applications/{applicationId}',\n    APPLICATION_GENERATE_KEYS: '/applications/{applicationId}/generate-keys',\n    APPLICATION_GENERATE_KEY_TYPE: '/applications/{applicationId}/keys/{keyType}',\n    EXPORT_APIS: '/export/apis',\n    IMPORT_APIS: '/import/apis',\n    SUBSCRIPTION: '/subscriptions',\n    SINGLE_SUBSCRIPTION: '/subscriptions/{subscriptionId}',\n    SUBSCRIPTIONS: '/subscriptions',\n    BLOCK_SUBSCRIPTION: '/subscriptions/block-subscription:',\n    UNBLOCK_SUBSCRIPTION: '/subscriptions/unblock-subscription',\n    POLICIES: \"'/policies/{tierLevel}'\",\n    POLICY: \"'/policies/{tierLevel}/{tierName}'\",\n    ENDPOINTS: '/endpoints',\n    ENDPOINT: '/endpoints/{endpointId}',\n    LABLES: '/labels',\n    WORKFLOW: '/workflows/{workflowReferenceId}',\n    SERVICE_DISCOVERY: '/external-resources/services',\n};\n\nconst resourceMethods = {\n    POST: 'post',\n    PUT: 'put',\n    GET: 'get',\n    DELETE: 'delete',\n};\n\n/**\n * Show element iff user has proper scope for the view/action\n * @class ScopeValidation\n * @extends {React.Component}\n */\nclass ScopeValidation extends React.Component {\n    /**\n     * Creates an instance of ScopeValidation.\n     * @param {any} props @inheritDoc\n     * @memberof ScopeValidation\n     */\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    /**\n     * @inheritDoc\n     * @memberof ScopeValidation\n     */\n    componentDidMount() {\n        const { resourcePath, resourceMethod } = this.props;\n        const hasScope = AuthManager.hasScopes(resourcePath, resourceMethod);\n        if (hasScope) {\n            hasScope.then((haveScope) => {\n                this.setState({ haveScope });\n            });\n        }\n    }\n\n    /**\n     * @inheritDoc\n     * @returns {React.Component} Return react component\n     * @memberof ScopeValidation\n     */\n    render() {\n        const { children } = this.props;\n        if (this.state.haveScope) {\n            return children || null;\n        }\n        return null;\n    }\n}\n\nScopeValidation.propTypes = {\n    children: PropTypes.node.isRequired,\n    resourcePath: PropTypes.string.isRequired,\n    resourceMethod: PropTypes.string.isRequired,\n};\n\nexport {\n    ScopeValidation,\n    resourceMethods,\n    resourcePaths,\n};\n"],"sourceRoot":""}